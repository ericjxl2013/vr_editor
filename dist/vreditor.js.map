{"version":3,"sources":["node_modules/_browser-pack@6.1.0@browser-pack/_prelude.js","src/editor/editor.ts","src/editor/hierarchy/hierarchy.ts","src/editor/hierarchy/index.ts","src/editor/hotkeys.ts","src/editor/index.ts","src/editor/layout.ts","src/editor/viewport/index.ts","src/editor/viewport/viewport.ts","src/engine/babylon-engine.ts","src/engine/index.ts","src/engine/very-engine.ts","src/index.ts","src/lib/events.ts","src/lib/index.ts","src/main.ts","src/ui/button.ts","src/ui/canvas.ts","src/ui/container-element.ts","src/ui/element.ts","src/ui/index.ts","src/ui/label.ts","src/ui/link.ts","src/ui/panel.ts","src/ui/text-field.ts","src/ui/tree-item.ts","src/ui/tree.ts"],"names":[],"mappings":"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","file":"vreditor.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { Events } from '../lib';\r\n\r\nexport class Editor extends Events {\r\n\r\n  // 某个name对应的某个事件，name与Function是1对1的关系；\r\n  private _hooks: { [key: string]: Function } = {};\r\n\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * 添加全局函数，函数名与函数本体一一对象，不能重名；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public method(name: string, fn: Function): void {\r\n    if (this._hooks[name] !== undefined) {\r\n      throw new Error(\"can't override hook: \" + name);\r\n    }\r\n    this._hooks[name] = fn;\r\n  };\r\n\r\n  /**\r\n   * 移除某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public methodRemove(name: string): void {\r\n    delete this._hooks[name];\r\n  };\r\n\r\n  /**\r\n   * 执行某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public call(name: string, ...args: any[]): any {\r\n    if (this._hooks[name]) {\r\n      var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n      try {\r\n        return this._hooks[name].apply(null, args);\r\n      } catch (ex) {\r\n        console.error(\r\n          \"%c%s %c(editor.method error)\",\r\n          \"color: #06f\",\r\n          name,\r\n          \"color: #f00\"\r\n        );\r\n        console.error(ex.stack);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n}","import { Panel } from '../../ui';\r\nimport { VeryEngine } from '../../engine';\r\n\r\nexport class Hierarchy {\r\n\r\n  public controls: Panel;\r\n\r\n  public constructor() {\r\n    this.controls = new Panel();\r\n    this.controls.class!.add('hierarchy-controls');\r\n    this.controls.parent = VeryEngine.hierarchyPanel;\r\n    VeryEngine.hierarchyPanel.headerAppend(this.controls);\r\n    console.log('hierarchy-controls');\r\n  }\r\n\r\n  public init(): void {\r\n    // left control\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}","export * from './hierarchy';","export class Hotkeys {\r\n\r\n  public static ctrl: boolean = false;\r\n  public static shift: boolean = false;\r\n  public static alt: boolean = false;\r\n\r\n\r\n\r\n}","export * from './editor';\r\nexport * from './layout';\r\nexport * from './viewport';\r\nexport * from './hierarchy';\r\nexport * from './hotkeys';","import { Panel } from '../ui';\r\nimport { VeryEngine } from '../engine';\r\n\r\nexport class Layout {\r\n\r\n  private ignoreClasses: RegExp = /(ui-list-item)|(ui-button)|(ui-text-field)|(ui-number-field)/i;\r\n  private ignoreElements: RegExp = /(input)|(textarea)/i;\r\n\r\n\r\n  public constructor() {\r\n    let self = this;\r\n    // prevent drag'n'select\r\n    window.addEventListener('mousedown', function (evt) {\r\n      // don't prevent for certain cases\r\n      if (evt.target) {\r\n        if (self.ignoreClasses.test((<HTMLElement>evt.target).className)) {\r\n          return;\r\n        } else if (self.ignoreElements.test((<HTMLElement>evt.target).tagName)) {\r\n          return;\r\n        } else if ((<HTMLElement>evt.target).classList.contains('selectable')) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      // blur inputs\r\n      if (window.getSelection) {\r\n        var focusNode = window.getSelection()!.focusNode;\r\n        if (focusNode) {\r\n          if ((<HTMLElement>focusNode).tagName === 'INPUT') {\r\n            (<HTMLElement>focusNode).blur();\r\n          } else if (focusNode.firstChild && (<HTMLElement>focusNode.firstChild).tagName === 'INPUT') {\r\n            (<HTMLElement>focusNode.firstChild).blur();\r\n          }\r\n        }\r\n      }\r\n\r\n      // prevent default will prevent blur, dragstart and selection\r\n      evt.preventDefault();\r\n    }, false);\r\n  }\r\n\r\n  public init(): void {\r\n    // main container\r\n    let root: Panel = new Panel();\r\n    root.element!.id = 'ui-root';\r\n    root.flex = true;\r\n    root.flexDirection = 'column';\r\n    root.flexWrap = 'nowrap';\r\n    root.scroll = true;\r\n    document.body.appendChild(root.element!);\r\n    // expose\r\n    editor.method('layout.root', function () { return root; });\r\n    VeryEngine.rootPanel = root;\r\n\r\n    // top panel TODO: top干嘛用？\r\n    let top = new Panel();\r\n    top.style!.backgroundColor = '#5f6f72';\r\n    top.style!.cursor = 'pointer';\r\n    top.element!.id = 'ui-top';\r\n    top.flexShrink = '0';\r\n    top.once('click', function () {\r\n      top.destroy();\r\n      // TODO\r\n      top.style!.marginTop = '';\r\n    });\r\n    root.append(top);\r\n\r\n    // middle panel\r\n    var middle = new Panel();\r\n    middle.element!.id = 'ui-middle';\r\n    middle.flexible = true;\r\n    middle.flexGrow = '1';\r\n    root.append(middle);\r\n\r\n    // bottom panel (status)\r\n    var bottom = new Panel();\r\n    bottom.element!.id = 'ui-bottom';\r\n    bottom.flexShrink = '0';\r\n    root.append(bottom);\r\n    // expose\r\n    editor.method('layout.bottom', function () { return bottom; });\r\n\r\n    // toolbar panel (left)\r\n    var toolbar = new Panel();\r\n    toolbar.element!.id = 'ui-toolbar';\r\n    toolbar.flexShrink = '0';\r\n    toolbar.style!.width = '45px';\r\n    middle.append(toolbar);\r\n    // expose\r\n    editor.method('layout.toolbar', function () { return toolbar; });\r\n    VeryEngine.toolbarPanel = toolbar;\r\n\r\n    // hierarchy\r\n    var hierarchyPanel = new Panel('层级窗口');\r\n    hierarchyPanel.enabled = false;\r\n    hierarchyPanel.class!.add('hierarchy');\r\n    hierarchyPanel.flexShrink = '0';\r\n    var hierarchyPanelSize = editor.call('localStorage:get', 'editor:layout:hierarchy:width') || '256px';\r\n    hierarchyPanel.style!.width = hierarchyPanelSize;\r\n    hierarchyPanel.innerElement!.style.width = hierarchyPanelSize;\r\n    hierarchyPanel.foldable = true;\r\n    hierarchyPanel.folded = editor.call('localStorage:get', 'editor:layout:hierarchy:fold') || false;\r\n    hierarchyPanel.horizontal = true;\r\n    hierarchyPanel.scroll = true;\r\n    hierarchyPanel.resizable = 'right';\r\n    hierarchyPanel.resizeMin = 196;\r\n    hierarchyPanel.resizeMax = 512;\r\n\r\n    hierarchyPanel.on('resize', function () {\r\n      editor.call('localStorage:set', 'editor:layout:hierarchy:width', hierarchyPanel.style!.width);\r\n    });\r\n    hierarchyPanel.on('fold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:hierarchy:fold', true);\r\n    });\r\n    hierarchyPanel.on('unfold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:hierarchy:fold', false);\r\n    });\r\n\r\n    middle.append(hierarchyPanel);\r\n    // expose\r\n    editor.method('layout.left', function () { return hierarchyPanel; });\r\n    editor.on('permissions:writeState', function (state: boolean) {\r\n      hierarchyPanel.enabled = state;\r\n    });\r\n    if (window.innerWidth <= 480) {\r\n      hierarchyPanel.folded = true;\r\n    }\r\n    VeryEngine.hierarchyPanel = hierarchyPanel;\r\n\r\n    // center panel\r\n    var center = new Panel();\r\n    center.flexible = true;\r\n    center.flexGrow = '1';\r\n    center.flexDirection = 'column';\r\n    middle.append(center);\r\n\r\n    // viewport panel\r\n    var viewport = new Panel();\r\n    viewport.flexible = true;\r\n    viewport.flexGrow = '1';\r\n    viewport.class!.add('viewport');\r\n    center.append(viewport);\r\n    // expose\r\n    editor.method('layout.viewport', function () { return viewport; });\r\n    VeryEngine.viewPanel = viewport;\r\n\r\n    // assets panel\r\n    var assetsPanel = new Panel('资源窗口');\r\n    assetsPanel.class!.add('assets');\r\n    assetsPanel.foldable = true;\r\n    assetsPanel.folded = editor.call('localStorage:get', 'editor:layout:assets:fold') || false;\r\n    assetsPanel.flexShrink = '0';\r\n    assetsPanel.innerElement!.style.height = editor.call('localStorage:get', 'editor:layout:assets:height') || '212px';\r\n    assetsPanel.scroll = true;\r\n    assetsPanel.resizable = 'top';\r\n    assetsPanel.resizeMin = 106;\r\n    assetsPanel.resizeMax = 106 * 6;\r\n    assetsPanel.headerSize = -1;\r\n\r\n    assetsPanel.on('resize', function () {\r\n      editor.call('localStorage:set', 'editor:layout:assets:height', assetsPanel.innerElement!.style.height);\r\n    });\r\n    assetsPanel.on('fold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:assets:fold', true);\r\n    });\r\n    assetsPanel.on('unfold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:assets:fold', false);\r\n    });\r\n\r\n    center.append(assetsPanel);\r\n    // expose\r\n    editor.method('layout.assets', function () { return assetsPanel; });\r\n    if (window.innerHeight <= 480) {\r\n      assetsPanel.folded = true;\r\n    }\r\n    VeryEngine.assetPanel = assetsPanel;\r\n\r\n\r\n    // attributes panel\r\n    var attributesPanel = new Panel('属性窗口');\r\n    attributesPanel.enabled = false;\r\n    attributesPanel.class!.add('attributes');\r\n    attributesPanel.flexShrink = '0';\r\n    var attributesPanelWidth = editor.call('localStorage:get', 'editor:layout:attributes:width') || '320px';\r\n    attributesPanel.style!.width = attributesPanelWidth;\r\n    attributesPanel.innerElement!.style.width = attributesPanelWidth;\r\n    attributesPanel.horizontal = true;\r\n    attributesPanel.foldable = true;\r\n    attributesPanel.folded = editor.call('localStorage:get', 'editor:layout:attributes:fold') || false;\r\n    attributesPanel.scroll = true;\r\n    attributesPanel.resizable = 'left';\r\n    attributesPanel.resizeMin = 256;\r\n    attributesPanel.resizeMax = 512;\r\n\r\n    attributesPanel.on('resize', function () {\r\n      editor.call('localStorage:set', 'editor:layout:attributes:width', attributesPanel.innerElement!.style.width);\r\n    });\r\n    attributesPanel.on('fold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:attributes:fold', true);\r\n    });\r\n    attributesPanel.on('unfold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:attributes:fold', false);\r\n    });\r\n\r\n    middle.append(attributesPanel);\r\n    // expose\r\n    editor.method('layout.right', function () { return attributesPanel; });\r\n    editor.on('permissions:writeState', function (state: boolean) {\r\n      attributesPanel.enabled = state;\r\n    });\r\n    if (window.innerWidth <= 720) {\r\n      attributesPanel.folded = true;\r\n    }\r\n    VeryEngine.attributesPanel = attributesPanel;\r\n  }\r\n\r\n\r\n}","export * from './viewport';","import { Canvas } from '../../ui';\r\nimport { VeryEngine } from '../../engine';\r\n\r\nexport class Viewport {\r\n\r\n  public canvas: Canvas;\r\n\r\n  private _engine: BABYLON.Engine;\r\n  private _scene: BABYLON.Scene;\r\n  private _canvas: HTMLCanvasElement;\r\n\r\n\r\n  public constructor() {\r\n\r\n    let self = this;\r\n\r\n    this.canvas = new Canvas('canvas-3d');\r\n    VeryEngine.viewCanvas = this.canvas;\r\n\r\n    this._canvas = <HTMLCanvasElement>this.canvas.element;\r\n    // add canvas\r\n    editor.call('layout.viewport').prepend(this.canvas);\r\n\r\n    // get canvas\r\n    editor.method('viewport:canvas', function () {\r\n      return self.canvas;\r\n    });\r\n\r\n    // update viewpot 视窗大小\r\n    setInterval(function () {\r\n      let rect = VeryEngine.viewPanel.element!.getBoundingClientRect();\r\n      self.canvas.resize(Math.floor(rect.width), Math.floor(rect.height));\r\n    }, 1000 / 60);\r\n\r\n    this._engine = new BABYLON.Engine(this._canvas, true);\r\n    let engine = this._engine;\r\n    window.addEventListener(\"resize\", function () {\r\n      engine.resize();\r\n    });\r\n    this._scene = new BABYLON.Scene(this._engine);\r\n\r\n    // TODO: 设定相机\r\n    var camera = new BABYLON.ArcRotateCamera(\"MainCamera\", 0, 0, 10, new BABYLON.Vector3(0, 0, 0), this._scene);\r\n    camera.setPosition(new BABYLON.Vector3(20, 200, 400));\r\n    camera.attachControl(this._canvas, true);\r\n    camera.lowerBetaLimit = 0.1;\r\n    camera.upperBetaLimit = (Math.PI / 2) * 0.99;\r\n    camera.lowerRadiusLimit = 150;\r\n\r\n    // 加载过度动画开\r\n    engine.displayLoadingUI();\r\n\r\n    let inputMap: { [key: string]: boolean } = {};\r\n\r\n    // TODO: 加载scene.babylon场景文件，当前为默认\r\n    BABYLON.SceneLoader.Append(\"./scene/\", \"scene.babylon\", this._scene, function (scene) {\r\n      // do something with the scene\r\n      // 加载过度动画关\r\n      engine.hideLoadingUI();\r\n\r\n      // Keyboard events\r\n      var blue = scene.getMeshByName('blue')!;\r\n\r\n      scene.actionManager = new BABYLON.ActionManager(scene);\r\n      scene.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyDownTrigger, function (evt) {\r\n        inputMap[evt.sourceEvent.key] = evt.sourceEvent.type == \"keydown\";\r\n      }));\r\n      scene.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyUpTrigger, function (evt) {\r\n        inputMap[evt.sourceEvent.key] = evt.sourceEvent.type == \"keydown\";\r\n      }));\r\n\r\n\r\n      // // Game/Render loop\r\n      scene.onBeforeRenderObservable.add(() => {\r\n\r\n        if (inputMap[\"w\"] || inputMap[\"ArrowUp\"]) {\r\n          blue.position.z -= 100 * engine.getDeltaTime() / 1000;\r\n        }\r\n        if (inputMap[\"a\"] || inputMap[\"ArrowLeft\"]) {\r\n          blue.position.x += 100 * engine.getDeltaTime() / 1000;\r\n        }\r\n        if (inputMap[\"s\"] || inputMap[\"ArrowDown\"]) {\r\n          blue.position.z += 100 * engine.getDeltaTime() / 1000;\r\n        }\r\n        if (inputMap[\"d\"] || inputMap[\"ArrowRight\"]) {\r\n          blue.position.x -= 100 * engine.getDeltaTime() / 1000;\r\n        }\r\n      })\r\n\r\n      // // sphere\r\n      var sphere = scene.getMeshByName('sphere')!;\r\n      sphere.actionManager = new BABYLON.ActionManager(scene);\r\n\r\n      sphere.actionManager.registerAction(new BABYLON.SetValueAction(\r\n        { trigger: BABYLON.ActionManager.OnIntersectionEnterTrigger, parameter: blue },\r\n        sphere, \"scaling\", new BABYLON.Vector3(2, 2, 2)));\r\n\r\n      sphere.actionManager.registerAction(new BABYLON.SetValueAction(\r\n        { trigger: BABYLON.ActionManager.OnIntersectionExitTrigger, parameter: blue }\r\n        , sphere, \"scaling\", new BABYLON.Vector3(1, 1, 1)));\r\n\r\n    });\r\n\r\n    this._engine.runRenderLoop(() => {\r\n      if (this._canvas.width !== this._canvas.clientWidth) {\r\n        this._engine.resize();\r\n      }\r\n\r\n      if (this._scene) {\r\n        this._scene.render();\r\n      }\r\n\r\n      // if (this._showFps) {\r\n      // \tthis.updateFpsPos();\r\n      // }\r\n\r\n\r\n    });\r\n    // return this;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}","export class BabylonEngine {\r\n  public static Canvas: HTMLCanvasElement;\r\n  public static Engine: BABYLON.Engine;\r\n  public static Scene: BABYLON.Scene;\r\n}","export * from './babylon-engine';\r\nexport * from './very-engine';","import { Viewport } from \"../editor\";\r\nimport { Canvas, Panel } from \"../ui\";\r\n\r\nexport class VeryEngine {\r\n\r\n  public static viewPanel: Panel;\r\n  public static rootPanel: Panel;\r\n  public static toolbarPanel: Panel;\r\n  public static hierarchyPanel: Panel;\r\n  public static assetPanel: Panel;\r\n  public static attributesPanel: Panel;\r\n\r\n  public static viewport: Viewport;\r\n\r\n  public static viewCanvas: Canvas;\r\n\r\n\r\n\r\n  public constructor() {\r\n\r\n  }\r\n\r\n\r\n}","export * from './lib';\r\nexport * from './editor';\r\nexport * from './ui';\r\n\r\n\r\nexport * from './engine';\r\n","export class Events {\r\n\r\n  public get suspendEvents(): boolean {\r\n    return this._suspendEvents;\r\n  }\r\n  public set suspendEvents(val: boolean) {\r\n    this._suspendEvents = val;\r\n  }\r\n  private _suspendEvents: boolean = false;\r\n\r\n  // 某个name对应的事件数组，name与Function是1对多的关系；\r\n  private _events: { [key: string]: Function[] } = {};\r\n\r\n  public constructor() {\r\n\r\n  }\r\n\r\n  /**\r\n   * 添加事件数组，若name相同，则在数组末尾继续添加；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public on(name: string, fn: Function): EventHandle {\r\n    let events: Function[] = this._events[name];\r\n    if (events === undefined) {\r\n      this._events[name] = [fn];\r\n    } else {\r\n      if (events.indexOf(fn) == -1) {\r\n        events.push(fn);\r\n      }\r\n    }\r\n    return new EventHandle(this, name, fn);\r\n  }\r\n\r\n  /**\r\n   * emit后只执行一次；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public once(name: string, fn: Function): EventHandle {\r\n    let self = this;\r\n    let evt: EventHandle = this.on(name, function (\r\n      arg0: any,\r\n      arg1: any,\r\n      arg2: any,\r\n      arg3: any,\r\n      arg4: any,\r\n      arg5: any,\r\n      arg6: any,\r\n      arg7: any\r\n    ) {\r\n      fn.call(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n      evt.unbind();\r\n    });\r\n    return evt;\r\n  }\r\n\r\n  /**\r\n   * 执行事件；\r\n   * @param name 函数名；\r\n   * @param arg0 函数参数1，可选；\r\n   * @param arg1 函数参数2，可选；\r\n   * @param arg2 函数参数3，可选；\r\n   * @param arg3 函数参数4，可选；\r\n   * @param arg4 函数参数5，可选；\r\n   * @param arg5 函数参数6，可选；\r\n   * @param arg6 函数参数7，可选；\r\n   * @param arg7 函数参数8，可选；\r\n   */\r\n  public emit(name: string,\r\n    arg0?: any,\r\n    arg1?: any,\r\n    arg2?: any,\r\n    arg3?: any,\r\n    arg4?: any,\r\n    arg5?: any,\r\n    arg6?: any,\r\n    arg7?: any\r\n  ): Events {\r\n    if (this._suspendEvents) return this;\r\n\r\n    let events: Function[] = this._events[name];\r\n    if (!events) return this;\r\n\r\n    // 返回新数组\r\n    events = events.slice(0);\r\n\r\n    for (let i: number = 0; i < events.length; i++) {\r\n      if (!events[i]) continue;\r\n      try {\r\n        events[i].call(this, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n      } catch (ex) {\r\n        console.info(\"%c%s %c(event error)\", \"color: #06f\", name, \"color: #f00\");\r\n        console.log(ex.stack);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 取消Events事件绑定，若name为空，则清空events；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public unbind(name?: string, fn?: Function): Events {\r\n    if (name) {\r\n      let events: Function[] = this._events[name];\r\n      if (!events) return this;\r\n\r\n      if (fn) {\r\n        let i: number = events.indexOf(fn);\r\n        if (i !== -1) {\r\n          if (events.length === 1) {\r\n            delete this._events[name];\r\n          } else {\r\n            events.splice(i, 1);\r\n          }\r\n        }\r\n      } else {\r\n        delete this._events[name];\r\n      }\r\n    } else {\r\n      this._events = {};\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n}\r\n\r\n\r\nexport class EventHandle {\r\n\r\n  public name: Nullable<string>;\r\n\r\n  public owner: Nullable<Events>;\r\n\r\n  public fn: Nullable<Function>;\r\n\r\n  public constructor(owner: Events, name: string, fn: Function) {\r\n    this.owner = owner;\r\n    this.name = name;\r\n    this.fn = fn;\r\n  }\r\n\r\n  public unbind(): void {\r\n    if (!this.owner) return;\r\n\r\n    this.owner.unbind(this.name!, this.fn!);\r\n\r\n    this.owner = null;\r\n    this.name = null;\r\n    this.fn = null;\r\n  }\r\n\r\n  public call(): void {\r\n    if (!this.fn) return;\r\n\r\n    this.fn.call(\r\n      this.owner!,\r\n      arguments[0],\r\n      arguments[1],\r\n      arguments[2],\r\n      arguments[3],\r\n      arguments[4],\r\n      arguments[5],\r\n      arguments[6],\r\n      arguments[7]\r\n    );\r\n  }\r\n\r\n  public on(name: string, fn: Function): EventHandle {\r\n    return this.owner!.on(name, fn);\r\n  }\r\n\r\n}","export * from './events';","import { Editor, Layout, Viewport, Hierarchy } from './editor';\r\n\r\nimport { Element, Canvas } from './ui';\r\nimport { VeryEngine } from './engine';\r\n\r\nexport * from './index';\r\n\r\n// 添加到全局变量\r\nwindow.editor = new Editor();\r\n\r\n// 整体布局\r\nlet layout = new Layout();\r\nlayout.init();\r\n\r\n// 编辑视窗\r\nlet viewport = new Viewport();\r\nVeryEngine.viewport = viewport;\r\n\r\n// 层级菜单\r\nlet hierarchy = new Hierarchy();\r\n\r\n/* TEST\r\neditor.once('load', () => {\r\n  console.log('once');\r\n});\r\n\r\neditor.on('array', () => {\r\n  console.log('1');\r\n});\r\neditor.on('array', () => {\r\n  console.log('2');\r\n});\r\neditor.on('array', () => {\r\n  console.log('3');\r\n});\r\n\r\neditor.on('array', (args0: any, args1: any) => {\r\n  console.log(args0 + ' +++ ' +  args1);\r\n});\r\n\r\neditor.method('method', (a: any) => {\r\n  console.log(a);\r\n});\r\n\r\n\r\neditor.emit('load');\r\neditor.emit('load');\r\n\r\neditor.emit('array', 'abc', 'dfg');\r\neditor.emit('array');\r\n\r\neditor.call('method', 123);\r\n*/\r\n\r\n// let parent: HTMLElement = document.getElementById('test')!;\r\n\r\n// console.log('children');\r\n\r\n// console.log(parent);\r\n// console.log(parent.childNodes);\r\n\r\n// for(let i: number = 0; i < parent.children.length; i++) {\r\n//   (<HTMLElement>(parent.children[i])).ui = new Element();\r\n//   console.warn((<HTMLElement>(parent.children[i])).ui === undefined);\r\n//   console.log((<HTMLElement>(parent.children[i])).ui);\r\n//   (<HTMLElement>(parent.children[i])).ui.destroy();\r\n//   console.log(parent.children[i] instanceof HTMLElement);\r\n// }\r\n\r\n// console.log('childNodes');\r\n\r\n// for(let i: number = 0; i < parent.childNodes.length; i++) {\r\n//   console.log(parent.childNodes[i] instanceof HTMLElement);\r\n// }\r\n","import { Element } from \"./element\";\r\n\r\nexport class Button extends Element {\r\n\r\n\r\n  private _text: string;\r\n  public get text(): string {\r\n    return this._text;\r\n  }\r\n  public set text(val: string) {\r\n    if (this._text === val) return;\r\n    this._text = val;\r\n    this.element!.innerHTML = this._text;\r\n  }\r\n\r\n\r\n  public constructor(text?: string) {\r\n    super();\r\n\r\n    this._text = text ? text : '';\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-button');\r\n    this.element.innerHTML = this._text;\r\n    this.element.ui = this;\r\n    this.element.tabIndex = 0;\r\n\r\n    // space > click\r\n    this.element.addEventListener('keydown', this._onKeyDown, false);\r\n    this.on('click', this._onClick);\r\n\r\n  }\r\n\r\n\r\n  private _onKeyDown(evt: KeyboardEvent): void {\r\n    if (evt.keyCode === 27)\r\n      return (<HTMLElement>evt.target).blur();\r\n\r\n    if (evt.keyCode !== 32 || this.disabled)\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    this.emit('click');\r\n  }\r\n\r\n  private _onClick(): void {\r\n    this.element!.blur();\r\n  };\r\n\r\n  // TODO\r\n  public _onLinkChange(value: any): void {\r\n    (<HTMLButtonElement>this.element).value = value;\r\n  };\r\n\r\n\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class Canvas extends Element {\r\n\r\n  public get width(): number {\r\n    return this.element ? (<HTMLCanvasElement>this.element).width : 0;\r\n  }\r\n  public set width(val: number) {\r\n    if (!this.element) return;\r\n    if ((<HTMLCanvasElement>this.element).width === val) return;\r\n\r\n    (<HTMLCanvasElement>this.element).width = val;\r\n    this.emit(\"resize\", (<HTMLCanvasElement>this.element).width, (<HTMLCanvasElement>this.element).height);\r\n  }\r\n\r\n  public get height(): number {\r\n    return this.element ? (<HTMLCanvasElement>this.element).height : 0;\r\n  }\r\n  public set height(val: number) {\r\n    if (!this.element) return;\r\n    if ((<HTMLCanvasElement>this.element).height === val) return;\r\n\r\n    (<HTMLCanvasElement>this.element).height = val;\r\n    this.emit(\"resize\", (<HTMLCanvasElement>this.element).width, (<HTMLCanvasElement>this.element).height);\r\n  }\r\n\r\n  public constructor(id?: string) {\r\n    super();\r\n\r\n    this.element = document.createElement('canvas');\r\n    this.element.classList.add('ui-canvas');\r\n\r\n    if (id !== undefined) this.element.id = id;\r\n\r\n    this.element.onselectstart = this.onselectstart;\r\n\r\n  }\r\n\r\n  private onselectstart(): boolean {\r\n    return false;\r\n  };\r\n\r\n  public resize(width: number, height: number): void {\r\n    if ((<HTMLCanvasElement>this.element).width === width && (<HTMLCanvasElement>this.element).height === height) return;\r\n\r\n    (<HTMLCanvasElement>this.element).width = width;\r\n    (<HTMLCanvasElement>this.element).height = height;\r\n    this.emit(\"resize\", (<HTMLCanvasElement>this.element).width, (<HTMLCanvasElement>this.element).height);\r\n  };\r\n\r\n}","import { Element } from './element';\r\n\r\nexport class ContainerElement extends Element {\r\n\r\n\r\n  private _innerElement: Nullable<HTMLElement> = null;\r\n  public get innerElement(): Nullable<HTMLElement> {\r\n    return this._innerElement;\r\n  }\r\n  public set innerElement(val: Nullable<HTMLElement>) {\r\n    if (this._innerElement) {\r\n      this._observer.disconnect();\r\n    }\r\n\r\n    this._innerElement = val;\r\n\r\n    this._observer.observe(this._innerElement!, this._observerOptions);\r\n  }\r\n\r\n  private _observerChanged: boolean = false;\r\n\r\n  private _observer: MutationObserver;\r\n\r\n  private _observerOptions: {} = {\r\n    childList: true,\r\n    attributes: true,\r\n    characterData: false,\r\n    subtree: true,\r\n    attributeOldValue: false,\r\n    characterDataOldValue: false\r\n  };\r\n\r\n\r\n  public get flexible(): boolean {\r\n    return this.element ? this.element.classList.contains('flexible') : false;\r\n  }\r\n  public set flexible(val: boolean) {\r\n    if (!this.element || this.element.classList.contains('flexible') === val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.element.classList.add('flexible');\r\n    } else {\r\n      this.element.classList.remove('flexible');\r\n    }\r\n  }\r\n\r\n  public get flex(): boolean {\r\n    return this.element ? this.element.classList.contains('flex') : false;\r\n  }\r\n  public set flex(val: boolean) {\r\n    if (!this.element || this.element.classList.contains('flex') === val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.element.classList.add('flex');\r\n    } else {\r\n      this.element.classList.remove('flex');\r\n    }\r\n  }\r\n\r\n  public get flexDirection(): string {\r\n    return this._innerElement ? (this._innerElement!.style.flexDirection || '') : '';\r\n  }\r\n  public set flexDirection(val: string) {\r\n    if (this._innerElement) {\r\n      this._innerElement.style.flexDirection = val;\r\n      this._innerElement.style.webkitFlexDirection = val!;\r\n    }\r\n  }\r\n\r\n  public get flexWrap(): string {\r\n    return this._innerElement ? (this._innerElement!.style.flexWrap || '') : '';\r\n  }\r\n  public set flexWrap(val: string) {\r\n    if (this._innerElement) {\r\n      this._innerElement.style.flexWrap = val;\r\n      this._innerElement.style.webkitFlexWrap = val!;\r\n    }\r\n  }\r\n\r\n  public get flexGrow(): string {\r\n    return this.element ? (this.element.style.flexGrow || '') : '';\r\n  }\r\n  public set flexGrow(val: string) {\r\n    if (!!val) this.flex = true;\r\n\r\n    if (this.element) {\r\n      this.element.style.flexGrow = val;\r\n      this.element.style.webkitFlexGrow = val!;\r\n    }\r\n\r\n    if (this._innerElement) {\r\n      this._innerElement.style.flexGrow = val;\r\n      this._innerElement.style.webkitFlexGrow = val!;\r\n    }\r\n  }\r\n\r\n  public get flexShrink(): string {\r\n    return this.element ? (this.element.style.flexShrink || '') : '';\r\n  }\r\n  public set flexShrink(val: string) {\r\n    if (!!val) this.flex = true;\r\n\r\n    if (this.element) {\r\n      this.element.style.flexShrink = val;\r\n      this.element.style.webkitFlexShrink = val!;\r\n    }\r\n\r\n    if (this._innerElement) {\r\n      this._innerElement.style.flexShrink = val;\r\n      this._innerElement.style.webkitFlexShrink = val!;\r\n    }\r\n  }\r\n\r\n  public get scroll(): boolean {\r\n    return this.class ? this.class.contains('scrollable') : false;\r\n  }\r\n  public set scroll(val: boolean) {\r\n    if (this.class) this.class.add('scrollable');\r\n  }\r\n\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    let self = this;\r\n\r\n    let observerTimeout = function() {\r\n      self._observerChanged = false;\r\n      self.emit('nodesChanged');\r\n      // console.warn('nodesChanged');\r\n    };\r\n\r\n    this._observer = new MutationObserver(function () {\r\n      if (self._observerChanged)\r\n        return;\r\n      self._observerChanged = true;\r\n      setTimeout(observerTimeout, 0);\r\n    });\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n  public append(element: HTMLElement | Element): void {\r\n    let html: boolean = element instanceof HTMLElement;\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n    this._innerElement!.appendChild(node);\r\n\r\n    if (!html) {\r\n      (<Element>element).parent = this;\r\n      this.emit('append', element);\r\n    }\r\n  }\r\n\r\n\r\n  public appendBefore(element: HTMLElement | Element, reference: HTMLElement | Element | null): void {\r\n    let html: boolean = (element instanceof HTMLElement);\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n\r\n    if (reference instanceof Element) reference = reference.element;\r\n\r\n    this._innerElement!.insertBefore(node, reference);\r\n\r\n    if (!html) {\r\n      (<Element>element).parent = this;\r\n      this.emit('append', element);\r\n    }\r\n  };\r\n\r\n  public appendAfter(element: HTMLElement | Element, reference: HTMLElement | Element | null): void {\r\n    let html: boolean = (element instanceof HTMLElement);\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n\r\n    if (reference instanceof Element) reference = reference.element;\r\n\r\n    if (reference) {\r\n      this._innerElement!.insertBefore(node, reference.nextSibling);\r\n    } else {\r\n      this._innerElement!.appendChild(node);\r\n    }\r\n\r\n    if (!html) {\r\n      (<Element>element).parent = this;\r\n      this.emit('append', element);\r\n    }\r\n  };\r\n\r\n\r\n  public prepend(element: HTMLElement | Element): void {\r\n    let first = this._innerElement!.firstChild;\r\n    let html: boolean = (element instanceof HTMLElement);\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n\r\n    if (first) {\r\n      this._innerElement!.insertBefore(node, first);\r\n    } else {\r\n      this._innerElement!.appendChild(node);\r\n    }\r\n\r\n    if (!html) {\r\n      (<Element>element).parent = this;\r\n      this.emit('append', element);\r\n    }\r\n  };\r\n\r\n  public remove(element: HTMLElement | Element): void {\r\n    let html: boolean = (element instanceof HTMLElement);\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n\r\n    if (!node.parentElement || node.parentElement !== this._innerElement)\r\n      return;\r\n\r\n    this._innerElement.removeChild(node);\r\n\r\n    if (!html) {\r\n      (<Element>element).parent = null;\r\n      this.emit('remove', element);\r\n    }\r\n  };\r\n\r\n  // TODO：怕不对\r\n  public clear(): void {\r\n    let node: HTMLElement;\r\n\r\n    this._observer.disconnect();\r\n\r\n    let i: number = this._innerElement!.children.length;\r\n    while (i--) {\r\n      node = <HTMLElement>(this._innerElement!.children[i]);\r\n\r\n      if (!node.ui)\r\n        continue;\r\n\r\n      node.ui.destroy();\r\n    }\r\n    this._innerElement!.innerHTML = '';\r\n\r\n    this._observer.observe(this._innerElement!, this._observerOptions);\r\n  };\r\n\r\n\r\n}","import { Events, EventHandle } from \"../lib\";\r\nimport { Link } from \"./link\";\r\n\r\nexport class Element extends Events {\r\n\r\n  private _parent: Nullable<Element> = null;\r\n  private _destroyed: boolean = false;\r\n\r\n  // TODO\r\n  public _link: Nullable<Link> = null;\r\n  /*\r\n    on get set .schema.has .schema.get .history .history.combine .entity\r\n  */\r\n  private _linkOnSet: Nullable<EventHandle> = null;\r\n  private _linkOnUnset: Nullable<EventHandle> = null;\r\n  public path: string = '';\r\n\r\n  public renderChanges = false;\r\n  // TODO\r\n  // // render changes only from next ticks\r\n  // setTimeout(function() {\r\n  //   if (self.renderChanges === null) self.renderChanges = true;\r\n  // }, 0);\r\n\r\n  public disabledClick = false;\r\n  private _disabled = false;\r\n  private _disabledParent = false;\r\n\r\n  private _evtParentDestroy: Nullable<EventHandle> = null;\r\n  private _evtParentDisable: Nullable<EventHandle> = null;\r\n  private _evtParentEnable: Nullable<EventHandle> = null;\r\n\r\n  // HTMLElement \r\n  private _element: Nullable<HTMLElement> = null;\r\n  // public innerElement: Nullable<HTMLElement> = null;\r\n  public get element(): Nullable<HTMLElement> {\r\n    return this._element;\r\n  }\r\n  public set element(val: Nullable<HTMLElement>) {\r\n    if (this._element) return;\r\n\r\n    this._element = val;\r\n    this._element!.ui = this;\r\n\r\n    if (!this._element) return;\r\n\r\n    let self = this;\r\n    // click 事件\r\n    this._element.addEventListener('click', (evt) => {\r\n      if (self.disabled && !self.disabledClick) return;\r\n      self.emit(\"click\", evt);\r\n    }, false);\r\n    // hover 事件\r\n    this._element.addEventListener('mouseover', (evt) => {\r\n      self.emit('hover', evt);\r\n    }, false);\r\n    // blur 事件，mouse out\r\n    this._element.addEventListener('mouseout', (evt) => {\r\n      self.emit('blur', evt);\r\n    }, false);\r\n\r\n    // if (!this.innerElement) this.innerElement = this._element;\r\n  }\r\n\r\n  public get parent(): Nullable<Element> {\r\n    return this._parent;\r\n  }\r\n  public set parent(val: Nullable<Element>) {\r\n    if (this._parent) {\r\n      this._parent = null;\r\n      this._evtParentDestroy!.unbind();\r\n      this._evtParentDisable!.unbind();\r\n      this._evtParentEnable!.unbind();\r\n    }\r\n\r\n    if (val) {\r\n      this._parent = val;\r\n      this._evtParentDestroy = this._parent.once(\r\n        \"destroy\",\r\n        this._parentDestroy\r\n      );\r\n      this._evtParentDisable = this._parent.on(\"disable\", this._parentDisable);\r\n      this._evtParentEnable = this._parent.on(\"enable\", this._parentEnable);\r\n\r\n      if (this._disabledParent !== this._parent.disabled) {\r\n        this._disabledParent = this._parent.disabled;\r\n\r\n        if (this._disabledParent) {\r\n          this.class!.add(\"disabled\");\r\n          this.emit(\"disable\");\r\n        } else {\r\n          this.class!.remove(\"disabled\");\r\n          this.emit(\"enable\");\r\n        }\r\n      }\r\n    }\r\n\r\n    this.emit(\"parent\");\r\n  }\r\n\r\n  public get disabled(): boolean {\r\n    return this._disabled || this._disabledParent;\r\n  }\r\n  public set disabled(val: boolean) {\r\n    if (this._disabled === val) return;\r\n\r\n    this._disabled = !!val;\r\n    this.emit(this._disabled || this._disabledParent ? 'disable' : 'enable');\r\n\r\n    if (this._disabled || this._disabledParent) {\r\n      if (this.class) this.class.add('disabled');\r\n    } else {\r\n      if (this.class) this.class.remove('disabled');\r\n    }\r\n  }\r\n\r\n  public get disabledSelf(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  public get enabled(): boolean {\r\n    return !this._disabled;\r\n  }\r\n  public set enabled(val: boolean) {\r\n    this.disabled = !val;\r\n  }\r\n\r\n  public get hidden(): boolean {\r\n    return this._element ? this._element.classList.contains('hidden') : false;\r\n  }\r\n  public set hidden(val: boolean) {\r\n    if (!this._element) return;\r\n\r\n    if (this._element.classList.contains('hidden') === !!val) return;\r\n\r\n    if (val) {\r\n      this._element.classList.add('hidden');\r\n      this.emit('hide');\r\n    } else {\r\n      this._element.classList.remove('hidden');\r\n      this.emit('show');\r\n\r\n    }\r\n  }\r\n\r\n  // TODO\r\n  public get value(): any {\r\n    if (!this._link) return null;\r\n    return this._link.get(this.path);\r\n  }\r\n  public set value(val: any) {\r\n    if (!this._link) return;\r\n    this._link.set(this.path, val);\r\n  }\r\n\r\n  /* DOM Element */\r\n\r\n  public get class(): Nullable<DOMTokenList> {\r\n    if (this._element) {\r\n      return this._element.classList;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public get style(): Nullable<CSSStyleDeclaration> {\r\n    if (this._element) {\r\n      return this._element.style;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // flex-grow 属性用于设置或检索弹性盒子的扩展比率，用作css动画效果\r\n  public get flexGrow(): string {\r\n    return this._element ? (this._element.style.flexGrow || '') : '';\r\n  }\r\n  public set flexGrow(val: string) {\r\n    if (this._element) {\r\n      this._element.style.flexGrow = val;\r\n      this._element.style.webkitFlexGrow = val!;\r\n    }\r\n  }\r\n\r\n  // flex-shrink 属性规定项目将相对于同一容器内其他灵活的项目进行收缩的量，用作css动画效果\r\n  public get flexShrink(): string {\r\n    return this._element ? (this._element.style.flexShrink || '') : '';\r\n  }\r\n  public set flexShrink(val: string) {\r\n    if (this._element) {\r\n      this._element.style.flexShrink = val;\r\n      this._element.style.webkitFlexShrink = val!;\r\n    }\r\n  }\r\n\r\n\r\n  public constructor() {\r\n    super();\r\n    // this._element!.addEventListener('click', )\r\n\r\n  }\r\n\r\n  // 设置元素闪烁效果\r\n  public flash(): void {\r\n    if (this.class) {\r\n      this.class.add('flash');\r\n      setTimeout(this._onFlashDelay, 200);\r\n    }\r\n  }\r\n\r\n\r\n  private _onFlashDelay(): void {\r\n    if (this.class) {\r\n      this.class.remove('flash');\r\n    }\r\n  }\r\n\r\n  public link(link: Link, path: string): void {\r\n    let self = this;\r\n\r\n    if (this._link) this.unlink();\r\n    this._link = link;\r\n    this.path = path;\r\n\r\n    this.emit(\"link\", path);\r\n\r\n    // add :set link\r\n    if (this._onLinkChange) {\r\n      let renderChanges = this.renderChanges;\r\n      this.renderChanges = false;\r\n      this._linkOnSet = this._link.on(this.path + \":set\", function (value: any) {\r\n        self._onLinkChange(value);\r\n      });\r\n      this._linkOnUnset = this._link.on(this.path + \":unset\", function (value: any) {\r\n        self._onLinkChange(value);\r\n      });\r\n      this._onLinkChange(this._link.get(this.path));\r\n      this.renderChanges = renderChanges;\r\n    }\r\n  };\r\n\r\n\r\n  public unlink(): void {\r\n    if (!this._link) return;\r\n\r\n    this.emit(\"unlink\", this.path);\r\n\r\n    // remove :set link\r\n    if (this._linkOnSet) {\r\n      this._linkOnSet.unbind();\r\n      this._linkOnSet = null;\r\n\r\n      this._linkOnUnset!.unbind();\r\n      this._linkOnUnset = null;\r\n    }\r\n\r\n    this._link = null;\r\n    this.path = \"\";\r\n  };\r\n\r\n  public _onLinkChange(value: any): void {\r\n\r\n  }\r\n\r\n\r\n  public destroy(): void {\r\n    if (this._destroyed) return;\r\n\r\n    this._destroyed = true;\r\n\r\n    if (this._parent) {\r\n      this._evtParentDestroy!.unbind();\r\n      this._evtParentDisable!.unbind();\r\n      this._evtParentEnable!.unbind();\r\n      this._parent = null;\r\n    }\r\n\r\n    if (this._element && this._element.parentNode) {\r\n      this._element.parentNode.removeChild(this._element);\r\n    }\r\n\r\n    this.unlink();\r\n\r\n    this.emit('destroy');\r\n\r\n    this.unbind();\r\n\r\n    console.error('destroy');\r\n  };\r\n\r\n  private _parentDestroy(): void {\r\n    this.destroy();\r\n  };\r\n\r\n  private _parentDisable(): void {\r\n    if (this._disabledParent) return;\r\n\r\n    this._disabledParent = true;\r\n\r\n    if (!this._disabled) {\r\n      this.emit(\"disable\");\r\n      this.class!.add(\"disabled\");\r\n    }\r\n  };\r\n\r\n  private _parentEnable(): void {\r\n    if (!this._disabledParent) return;\r\n\r\n    this._disabledParent = false;\r\n\r\n    if (!this._disabled) {\r\n      this.emit(\"enable\");\r\n      this.class!.remove(\"disabled\");\r\n    }\r\n  };\r\n\r\n\r\n}","export * from './link';\r\nexport * from './element';\r\nexport * from './container-element';\r\nexport * from './panel';\r\nexport * from './canvas';\r\nexport * from './button';\r\nexport * from './label';\r\nexport * from './text-field';\r\nexport * from './tree';\r\nexport * from './tree-item';","import { Element } from \"./element\";\r\n\r\nexport class Label extends Element {\r\n\r\n  private _text: string;\r\n  public get text(): string {\r\n    if (this._link) {\r\n      return this._link.get(this.path);\r\n    } else {\r\n      return this._text;\r\n    }\r\n  }\r\n  public set text(val: string) {\r\n    if (this._link) {\r\n      // TODO \r\n      this._link.set(this.path, val)\r\n      val = this._link.get(this.path);\r\n      this._setText(val);\r\n    } else {\r\n      if (this._text === val) return;\r\n\r\n      if (val === undefined || val === null) {\r\n        this._text = '';\r\n      } else {\r\n        this._text = val;\r\n      }\r\n\r\n      this._setText(this._text);\r\n      this.emit('change', val);\r\n    }\r\n  }\r\n\r\n  // if unsafe is true then use innerHTML for the\r\n  // contents\r\n  private _unsafe: boolean;\r\n\r\n  public get placeholder(): string {\r\n    return this.element!.getAttribute('placeholder') || '';\r\n  }\r\n  public set placeholder(val: string) {\r\n    this.element!.setAttribute('placeholder', val);\r\n  }\r\n\r\n  public get value(): string {\r\n    return this.text;\r\n  }\r\n  public set value(val: string) {\r\n    this.text = val;\r\n  }\r\n\r\n\r\n  public constructor(text?: string, placeholder?: string, unsafe?: boolean) {\r\n    super();\r\n\r\n    this._text = text ? text : '';\r\n    this._unsafe = unsafe ? unsafe : false;\r\n\r\n    this.element = document.createElement('span');\r\n    this.element.classList.add('ui-label');\r\n\r\n    if (this._text)\r\n      this._setText(this._text);\r\n\r\n    this.on('change', this._onChange);\r\n\r\n    if (placeholder) {\r\n      this.placeholder = placeholder;\r\n    }\r\n  }\r\n\r\n  private _setText(text: string): void {\r\n    if (this._unsafe) {\r\n      this.element!.innerHTML = text;\r\n    } else {\r\n      this.element!.textContent = text;\r\n    }\r\n  }\r\n\r\n  private _onChange(): void {\r\n    if (!this.renderChanges)\r\n      return;\r\n\r\n    this.flash();\r\n  };\r\n\r\n  public _onLinkChange(value: any) {\r\n    this.text = value;\r\n    this.emit('change', value);\r\n  };\r\n\r\n\r\n\r\n}","import { Element } from '../ui';\r\nimport { EventHandle } from '../lib';\r\n\r\n// TODO\r\nexport class Link {\r\n\r\n  private _element: Element;\r\n\r\n  private _value: { [key: string]: any } = {};\r\n\r\n  public constructor(ele: Element) {\r\n    this._element = ele;\r\n  }\r\n\r\n  public get(path: string): any {\r\n    return this._value[path];\r\n  }\r\n\r\n  // TODO\r\n  public set(path: string, value: any): void {\r\n    this._value[path] = value;\r\n  }\r\n\r\n  public on(name: string, fn: Function): EventHandle {\r\n    return this._element.on(name, fn);\r\n  }\r\n}","import { ContainerElement } from './container-element';\r\nimport { Element } from './element';\r\n\r\nexport class Panel extends ContainerElement {\r\n\r\n  private headerElement: Nullable<HTMLElement> = null;\r\n  private headerElementTitle: Nullable<HTMLElement> = null;\r\n  private _handleElement: Nullable<HTMLElement> = null;\r\n\r\n  private _resizeEvtMove: any;\r\n  private _resizeEvtEnd: any;\r\n  private _resizeEvtTouchMove: any;\r\n  private _resizeEvtTouchEnd: any;\r\n\r\n  private _resizeData: { [key: string]: number } = { end: 0 };\r\n  private _resizeLimits: { [key: string]: number } = {\r\n    min: 0,\r\n    max: Infinity\r\n  };\r\n  private _handle: string = '';\r\n  public headerSize: number = 0;\r\n  private _resizeTouchId: number = -100;\r\n\r\n  public title: string = '';\r\n\r\n  public get folded(): boolean {\r\n    return this.class ? this.class.contains('foldable') && this.class.contains('folded') : false;\r\n  }\r\n  public set folded(val: boolean) {\r\n    if (this.hidden)\r\n      return;\r\n\r\n    if (this.class!.contains('folded') === !!val)\r\n      return;\r\n\r\n    if (this.headerElement && this.headerSize === 0)\r\n      this.headerSize = this.headerElement.clientHeight;\r\n\r\n    if (val) {\r\n      this.class!.add('folded');\r\n\r\n      if (this.class!.contains('foldable'))\r\n        this.emit('fold');\r\n    } else {\r\n      this.class!.remove('folded');\r\n\r\n      if (this.class!.contains('foldable'))\r\n        this.emit('unfold');\r\n    }\r\n\r\n    this._reflow();\r\n  }\r\n\r\n  public get horizontal(): boolean {\r\n    return this.class ? this.class.contains('horizontal') : false;\r\n  }\r\n  public set horizontal(val: boolean) {\r\n    if (val) {\r\n      this.class!.add('horizontal');\r\n    } else {\r\n      this.class!.remove('horizontal');\r\n    }\r\n    this._reflow();\r\n  }\r\n\r\n  public get resizable(): string {\r\n    return this._handle;\r\n  }\r\n  public set resizable(val: string) {\r\n    if (this._handle === val)\r\n      return;\r\n\r\n    var oldHandle = this._handle;\r\n    this._handle = val;\r\n\r\n    if (this._handle !== '') {\r\n      if (!this._handleElement) {\r\n        this._handleElement = document.createElement('div');\r\n        this._handleElement.ui = this;\r\n        this._handleElement.classList.add('handle');\r\n        this._handleElement.addEventListener('mousedown', this._resizeStart.bind(this), false);\r\n        this._handleElement.addEventListener('touchstart', this._resizeStart.bind(this), false);\r\n      }\r\n\r\n      if (this._handleElement.parentNode)\r\n        this.element!.removeChild(this._handleElement);\r\n      // TODO\r\n      // append in right place\r\n      this.element!.appendChild(this._handleElement);\r\n      this.class!.add('resizable', 'resizable-' + this._handle);\r\n    } else {\r\n      if (this._handleElement) this.element!.removeChild(this._handleElement);\r\n\r\n      this.class!.remove('resizable', 'resizable-' + oldHandle);\r\n    }\r\n\r\n    this._reflow();\r\n  }\r\n\r\n  public get resizeMin(): number {\r\n    return this._resizeLimits.min;\r\n  }\r\n  public set resizeMin(val: number) {\r\n    this._resizeLimits.min = Math.max(0, Math.min(this._resizeLimits.max, val));\r\n  }\r\n\r\n  public get resizeMax(): number {\r\n    return this._resizeLimits.max;\r\n  }\r\n  public set resizeMax(val: number) {\r\n    this._resizeLimits.max = Math.max(this._resizeLimits.min, val);\r\n  }\r\n\r\n  public get foldable(): boolean {\r\n    return this.class ? this.class.contains('foldable') : false;\r\n  }\r\n  public set foldable(val: boolean) {\r\n    if (val) {\r\n      this.class!.add('foldable');\r\n\r\n      if (this.class!.contains('folded'))\r\n        this.emit('fold');\r\n    } else {\r\n      this.class!.remove('foldable');\r\n\r\n      if (this.class!.contains('folded'))\r\n        this.emit('unfold');\r\n    }\r\n\r\n    this._reflow();\r\n  }\r\n\r\n  public get header(): string {\r\n    return this.headerElementTitle ? (this.headerElementTitle.textContent || '') : '';\r\n  }\r\n  public set header(val: string) {\r\n    if (!this.headerElement && val) {\r\n      this.headerElement = document.createElement('header');\r\n      this.headerElement.classList.add('ui-header');\r\n\r\n      this.headerElementTitle = document.createElement('span');\r\n      this.headerElementTitle.classList.add('title');\r\n      this.headerElementTitle.textContent = val;\r\n      this.headerElement.appendChild(this.headerElementTitle);\r\n\r\n      let first = this.element!.firstChild;\r\n      if (first) {\r\n        this.element!.insertBefore(this.headerElement, first);\r\n      } else {\r\n        this.element!.appendChild(this.headerElement);\r\n      }\r\n\r\n      this.class!.remove('noHeader');\r\n\r\n      let self = this;\r\n\r\n      // folding\r\n      this.headerElement.addEventListener('click', function (evt) {\r\n        if (!self.foldable || (evt.target !== self.headerElement && evt.target !== self.headerElementTitle))\r\n          return;\r\n\r\n        self.folded = !self.folded;\r\n      }, false);\r\n    } else if (this.headerElement && !val) {\r\n      if (this.headerElement.parentNode) {\r\n        this.headerElement.parentNode.removeChild(this.headerElement);\r\n      }\r\n      this.headerElement = null;\r\n      this.headerElementTitle = null;\r\n      this.class!.add('noHeader');\r\n    } else {\r\n      this.headerElementTitle!.textContent = val || '';\r\n      this.class!.remove('noHeader');\r\n    }\r\n  }\r\n\r\n  public constructor(title?: string) {\r\n    super();\r\n\r\n    let self = this;\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-panel', 'noHeader', 'noAnimation');\r\n\r\n    // this.on('nodesChanged', this._onNodesChanged);\r\n\r\n    // content\r\n    this.innerElement = document.createElement('div');\r\n    this.innerElement.ui = this;\r\n    this.innerElement.classList.add('content');\r\n    this.element.appendChild(this.innerElement);\r\n\r\n    if (title) {\r\n      this.title = title;\r\n      this.header = title;\r\n    }\r\n\r\n    // this.innerElement.addEventListener('scroll', this._onScroll, false);\r\n\r\n    this._resizeEvtMove = function (evt: MouseEvent) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      self._resizeMove(evt.clientX, evt.clientY);\r\n    };\r\n\r\n    this._resizeEvtEnd = function (evt: MouseEvent) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      self._resizeEnd();\r\n    };\r\n\r\n    this._resizeEvtTouchMove = function (evt: TouchEvent) {\r\n      for (let i = 0; i < evt.changedTouches.length; i++) {\r\n        let touch = evt.changedTouches[i];\r\n\r\n        if (touch.identifier !== self._resizeTouchId)\r\n          continue;\r\n\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        self._resizeMove(touch.clientX, touch.clientY);\r\n\r\n        return;\r\n      }\r\n    };\r\n\r\n    this._resizeEvtTouchEnd = function (evt: TouchEvent) {\r\n      for (let i = 0; i < evt.changedTouches.length; i++) {\r\n        let touch = evt.changedTouches[i];\r\n\r\n        if (touch.identifier !== self._resizeTouchId)\r\n          continue;\r\n\r\n        self._resizeTouchId = -100;\r\n\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        self._resizeEnd();\r\n\r\n        return;\r\n      }\r\n    };\r\n\r\n    // HACK\r\n    // skip 2 frames before enabling transitions\r\n    requestAnimationFrame(function () {\r\n      requestAnimationFrame(function () {\r\n        self.class!.remove('noAnimation');\r\n      });\r\n    });\r\n\r\n    // on parent change\r\n    this.on('parent', this._onParent);\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  private _resizeMove(x: number, y: number): void {\r\n    if (this._resizeData.end === 0) {\r\n      this._resizeData = {\r\n        x: x,\r\n        y: y,\r\n        width: this.innerElement!.clientWidth,\r\n        height: this.innerElement!.clientHeight,\r\n        end: 1\r\n      };\r\n    } else {\r\n      if (this._handle === 'left' || this._handle === 'right') {\r\n        // horizontal\r\n        let offsetX = this._resizeData.x - x;\r\n\r\n        if (this._handle === 'right')\r\n          offsetX = -offsetX;\r\n\r\n        let width = Math.max(this._resizeLimits.min, Math.min(this._resizeLimits.max, (this._resizeData.width + offsetX)));\r\n\r\n        this.style!.width = (width + 4) + 'px';\r\n        this.innerElement!.style.width = (width + 4) + 'px';\r\n      } else {\r\n        // vertical\r\n        let offsetY = this._resizeData.y - y;\r\n\r\n        if (this._handle === 'bottom')\r\n          offsetY = -offsetY;\r\n\r\n        let height = Math.max(this._resizeLimits.min, Math.min(this._resizeLimits.max, (this._resizeData.height + offsetY)));\r\n\r\n        this.style!.height = (height + (this.headerSize === -1 ? 0 : this.headerSize || 32)) + 'px';\r\n        this.innerElement!.style.height = height + 'px';\r\n      }\r\n    }\r\n\r\n    this.emit('resize');\r\n  };\r\n\r\n  private _resizeEnd(): void {\r\n    window.removeEventListener('mousemove', this._resizeEvtMove, false);\r\n    window.removeEventListener('mouseup', this._resizeEvtEnd, false);\r\n\r\n    // window.removeEventListener('touchmove', this._resizeEvtTouchMove, false);\r\n    // window.removeEventListener('touchend', this._resizeEvtTouchEnd, false);\r\n\r\n    this.class!.remove('noAnimation', 'resizing');\r\n    this._resizeData.end = 0;\r\n  };\r\n\r\n  private _resizeStart(evt: Event): void {\r\n    if (this._handle === '')\r\n      return;\r\n    if ((<TouchEvent>evt).changedTouches) {\r\n      for (let i = 0; i < (<TouchEvent>evt).changedTouches.length; i++) {\r\n        let touch = (<TouchEvent>evt).changedTouches[i];\r\n        if (<HTMLElement>touch.target !== this.element)\r\n          continue;\r\n\r\n        this._resizeTouchId = touch.identifier;\r\n      }\r\n    }\r\n\r\n    this.class!.add('noAnimation', 'resizing');\r\n    this._resizeData.end = 0;\r\n\r\n    window.addEventListener('mousemove', this._resizeEvtMove, false);\r\n    window.addEventListener('mouseup', this._resizeEvtEnd, false);\r\n\r\n    window.addEventListener('touchmove', this._resizeEvtTouchMove, false);\r\n    window.addEventListener('touchend', this._resizeEvtTouchEnd, false);\r\n\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  };\r\n\r\n  private _onParent(): void {\r\n    // HACK\r\n    // wait till DOM parses, then reflow\r\n    requestAnimationFrame(this._reflow.bind(this));\r\n  };\r\n\r\n  private _reflow(): void {\r\n    if (this.hidden)\r\n      return;\r\n\r\n    if (this.folded) {\r\n      if (this.horizontal) {\r\n        this.style!.height = '';\r\n        this.style!.width = (this.headerSize || 32) + 'px';\r\n      } else {\r\n        this.style!.height = (this.headerSize || 32) + 'px';\r\n      }\r\n    } else if (this.foldable) {\r\n      if (this.horizontal) {\r\n        this.style!.height = '';\r\n        this.style!.width = this.innerElement!.clientWidth + 'px';\r\n      } else {\r\n        this.style!.height = ((this.headerSize || 32) + this.innerElement!.clientHeight) + 'px';\r\n      }\r\n    }\r\n  };\r\n\r\n  private _onNodesChanged(): void {\r\n    if (!this.foldable || this.folded || this.horizontal || this.hidden)\r\n      return;\r\n\r\n    this.style!.height = (Math.max(0, (this.headerSize || 32)) + this.innerElement!.clientHeight) + 'px';\r\n  };\r\n\r\n  public headerAppend(element: HTMLElement | Element): void {\r\n    if (!this.headerElement)\r\n      return;\r\n\r\n    let html: boolean = (element instanceof HTMLElement);\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n\r\n    this.headerElement.insertBefore(node, this.headerElementTitle);\r\n\r\n    if (!html)\r\n      (<Element>element).parent = this;\r\n  };\r\n\r\n  // TODO\r\n  private _onScroll(evt: any) {\r\n    this.emit('scroll', evt);\r\n  };\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class TextField extends Element {\r\n\r\n  public elementInput: HTMLInputElement;\r\n\r\n  public evtKeyChange: boolean;\r\n  public ignoreChange: boolean;\r\n  public blurOnEnter: boolean;\r\n  public refocusable: boolean;\r\n\r\n\r\n  public get value(): string {\r\n    if (this._link) {\r\n      return this._link.get(this.path);\r\n    } else {\r\n      return this.elementInput.value;\r\n    }\r\n  }\r\n  public set value(val: string) {\r\n    if (this._link) {\r\n      // TODO\r\n      // if (!this._link.set(this.path, value)) {\r\n      //   this.elementInput.value = this._link.get(this.path);\r\n      // }\r\n    } else {\r\n      if (this.elementInput.value === val)\r\n        return;\r\n\r\n      this.elementInput.value = val || '';\r\n      this.emit('change', val);\r\n    }\r\n  }\r\n\r\n\r\n  public get placeholder(): string {\r\n    return this.element!.getAttribute('placeholder') || '';\r\n  }\r\n  public set placeholder(val: string) {\r\n    if (!val) {\r\n      this.element!.removeAttribute('placeholder');\r\n    } else {\r\n      this.element!.setAttribute('placeholder', val);\r\n    }\r\n  }\r\n\r\n  public get proxy(): string {\r\n    return this.element!.getAttribute('proxy') || '';\r\n  }\r\n  public set proxy(val: string) {\r\n    if (!val) {\r\n      this.element!.removeAttribute('proxy');\r\n    } else {\r\n      this.element!.setAttribute('proxy', val);\r\n    }\r\n  }\r\n\r\n  public get keyChange(): boolean {\r\n    return this.evtKeyChange;\r\n  }\r\n  public set keyChange(val: boolean) {\r\n    if (this.evtKeyChange === !!val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.elementInput.addEventListener('keyup', this._onChange, false);\r\n    } else {\r\n      this.elementInput.removeEventListener('keyup', this._onChange);\r\n    }\r\n  }\r\n\r\n\r\n  public constructor(placeholder?: string, value?: string) {\r\n    super();\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-text-field');\r\n\r\n    this.elementInput = document.createElement('input');\r\n    this.elementInput.ui = this;\r\n    this.elementInput.classList.add('field');\r\n    this.elementInput.type = 'text';\r\n    this.elementInput.tabIndex = 0;\r\n    this.elementInput.addEventListener('focus', this._onInputFocus.bind(this), false);\r\n    this.elementInput.addEventListener('blur', this._onInputBlur.bind(this), false);\r\n    this.element.appendChild(this.elementInput);\r\n\r\n    if (value !== undefined)\r\n      this.value = value;\r\n\r\n    this.elementInput.addEventListener('change', this._onChange.bind(this), false);\r\n    this.elementInput.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n    this.elementInput.addEventListener('contextmenu', this._onFullSelect.bind(this), false);\r\n    this.evtKeyChange = false;\r\n    this.ignoreChange = false;\r\n\r\n    this.blurOnEnter = true;\r\n    this.refocusable = true;\r\n\r\n    this.on('disable', this._onDisable);\r\n    this.on('enable', this._onEnable);\r\n    this.on('change', this._onChangeField);\r\n\r\n    if (placeholder)\r\n      this.placeholder = placeholder;\r\n\r\n  }\r\n\r\n  public _onLinkChange(value: string): void {\r\n    this.elementInput.value = value;\r\n    this.emit('change', value);\r\n  }\r\n\r\n  private _onChange(): void {\r\n    if (this.ignoreChange) return;\r\n\r\n    this.value = this.value || '';\r\n\r\n    if (!this._link)\r\n      this.emit('change', this.value);\r\n  }\r\n\r\n  private _onKeyDown(evt: KeyboardEvent) {\r\n    if (evt.keyCode === 27) {\r\n      (<HTMLInputElement>evt.target).blur();\r\n    } else if (this.blurOnEnter && evt.keyCode === 13) {\r\n      let focused: boolean = false;\r\n\r\n      let parent: Nullable<Element> = this.parent;\r\n      while (parent) {\r\n        if (parent.element && parent.element.focus) {\r\n          parent.element.focus();\r\n          focused = true;\r\n          break;\r\n        }\r\n        parent = parent.parent;\r\n      }\r\n\r\n      if (!focused)\r\n        (<HTMLElement>evt.target).blur();\r\n    }\r\n  }\r\n\r\n  private _onFullSelect(): void {\r\n    this.elementInput.select();\r\n  }\r\n\r\n  public focus(select: boolean): void {\r\n    this.elementInput.focus();\r\n    if (select) this.elementInput.select();\r\n  }\r\n\r\n  private _onInputFocus(): void {\r\n    this.class!.add('focus');\r\n    this.emit('input:focus');\r\n  }\r\n\r\n  private _onInputBlur(): void {\r\n    this.class!.remove('focus');\r\n    this.emit('input:blur');\r\n  }\r\n\r\n  private _onDisable(): void {\r\n    this.elementInput.readOnly = true;\r\n  }\r\n\r\n  private _onEnable(): void {\r\n    this.elementInput.readOnly = false;\r\n  }\r\n\r\n  private _onChangeField(): void {\r\n    if (!this.renderChanges)\r\n      return;\r\n\r\n    this.flash();\r\n  }\r\n\r\n}","import { Element } from \"./element\";\r\nimport { Tree } from \"./tree\";\r\nimport { TextField } from \"./text-field\";\r\n\r\nexport class TreeItem extends Element {\r\n\r\n  public tree: Nullable<Tree>;\r\n\r\n  public elementTitle: HTMLElement;\r\n  public elementIcon: HTMLElement;\r\n  public elementText: HTMLElement;\r\n\r\n  public _children: number;\r\n  public selectable: boolean;\r\n\r\n  public _onMouseUp: any;\r\n  private _dragRelease: any;\r\n\r\n  private _dragging: boolean;\r\n  private _allowDrop: boolean;\r\n\r\n  public _dragId: number = -1;\r\n\r\n  public get selected(): boolean {\r\n    return this.class!.contains('selected');\r\n  }\r\n  public set selected(val: boolean) {\r\n    if (this.class!.contains('selected') === !!val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.class!.add('selected');\r\n\r\n      this.emit('select');\r\n      if (this.tree)\r\n        this.tree.emit('select', this);\r\n\r\n    } else {\r\n      this.class!.remove('selected');\r\n\r\n      this.emit('deselect');\r\n      if (this.tree)\r\n        this.tree.emit('deselect', this);\r\n    }\r\n  }\r\n\r\n  public get text(): string {\r\n    return this.elementText.textContent || '';\r\n  }\r\n  public set text(val: string) {\r\n    if (this.elementText.textContent === val)\r\n      return;\r\n    this.elementText.textContent = val;\r\n  }\r\n\r\n  public get open(): boolean {\r\n    return this.class!.contains('open');\r\n  }\r\n  public set open(val: boolean) {\r\n    if (this.class!.contains('open') === !!val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.class!.add('open');\r\n      this.emit('open');\r\n      this.tree!.emit('open', this);\r\n    } else {\r\n      this.class!.remove('open');\r\n      this.emit('close');\r\n      this.tree!.emit('close', this);\r\n    }\r\n  }\r\n\r\n  public get prev(): Nullable<TreeItem> {\r\n    if ((<HTMLElement>this.element).previousElementSibling && (<HTMLElement>(<HTMLElement>this.element).previousElementSibling).ui && (<HTMLElement>(<HTMLElement>this.element).previousElementSibling).ui instanceof TreeItem) {\r\n      return (<TreeItem>(<HTMLElement>(<HTMLElement>this.element).previousElementSibling).ui);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public get next(): Nullable<TreeItem> {\r\n    if ((<HTMLElement>this.element).nextElementSibling && (<HTMLElement>(<HTMLElement>this.element).nextElementSibling).ui && (<HTMLElement>(<HTMLElement>this.element).nextElementSibling).ui instanceof TreeItem) {\r\n      return (<TreeItem>(<HTMLElement>(<HTMLElement>this.element).nextElementSibling).ui);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  public get allowDrop(): boolean {\r\n    return this._allowDrop;\r\n  }\r\n  public set allowDrop(val: boolean) {\r\n    this._allowDrop = val;\r\n  }\r\n\r\n\r\n  public constructor(args: TreeItemArgs) {\r\n    super();\r\n\r\n    let self = this;\r\n    args = args || {};\r\n\r\n    this.tree = null;\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-tree-item');\r\n\r\n    if (args.classList) {\r\n      args.classList.forEach(function (className: string): void {\r\n        self.element!.classList.add(className);\r\n      }, this);\r\n    }\r\n\r\n    this.elementTitle = document.createElement('div');\r\n    this.elementTitle.classList.add('title');\r\n    this.elementTitle.draggable = true;\r\n    this.elementTitle.tabIndex = 0;\r\n    this.elementTitle.ui = this;\r\n    this.element.appendChild(this.elementTitle);\r\n\r\n    this.elementIcon = document.createElement('span');\r\n    this.elementIcon.classList.add('icon');\r\n    this.elementTitle.appendChild(this.elementIcon);\r\n\r\n    this.elementText = document.createElement('span');\r\n    this.elementText.textContent = args.text || '';\r\n    this.elementText.classList.add('text');\r\n    this.elementTitle.appendChild(this.elementText);\r\n\r\n    this._children = 0;\r\n    this.selectable = true;\r\n\r\n    this._onMouseUp = function (evt: MouseEvent) {\r\n      window.removeEventListener('mouseup', self._dragRelease);\r\n      self._dragRelease = null;\r\n\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n\r\n      self._dragging = false;\r\n      self.emit('dragend');\r\n    };\r\n\r\n    this.elementTitle.addEventListener('click', this._onClick, false);\r\n    this.elementTitle.addEventListener('dblclick', this._onDblClick, false);\r\n\r\n    this._dragRelease = null;\r\n    this._dragging = false;\r\n    this._allowDrop = (args.allowDrop !== undefined ? !!args.allowDrop : true);\r\n\r\n    this.elementTitle.addEventListener('mousedown', this._onMouseDown, false);\r\n    this.elementTitle.addEventListener('dragstart', this._onDragStart, false);\r\n    this.elementTitle.addEventListener('mouseover', this._onMouseOver, false);\r\n\r\n    this.on('destroy', this._onDestroy);\r\n    this.on('append', this._onAppend);\r\n    this.on('remove', this._onRemove);\r\n    this.on('select', this._onSelect);\r\n    this.on('deselect', this._onDeselect);\r\n\r\n    this.elementTitle.addEventListener('keydown', this._onKeyDown, false);\r\n\r\n\r\n  }\r\n\r\n  // TODO\r\n  public child(index: number): HTMLElement {\r\n    return <HTMLElement>this.element!.children[index + 1];\r\n  };\r\n\r\n  private _onClick(evt: MouseEvent): void {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n\r\n    if (evt.button !== 0 || !(<TreeItem>htmlEle.ui).selectable)\r\n      return;\r\n\r\n    let rect = htmlEle.getBoundingClientRect();\r\n\r\n    if ((<TreeItem>htmlEle.ui)._children && (evt.clientX - rect.left) < 0) {\r\n      (<TreeItem>htmlEle.ui).open = !(<TreeItem>htmlEle.ui).open;\r\n    } else {\r\n      (<TreeItem>htmlEle.ui).tree!._onItemClick((<TreeItem>htmlEle.ui));\r\n      evt.stopPropagation();\r\n    }\r\n  };\r\n\r\n  private _onDblClick(evt: MouseEvent): void {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n\r\n    if (!(<TreeItem>htmlEle.ui).tree!.allowRenaming || evt.button !== 0)\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n    let rect = htmlEle.getBoundingClientRect();\r\n\r\n    if ((<TreeItem>htmlEle.ui)._children && (evt.clientX - rect.left) < 0) {\r\n      return;\r\n    } else {\r\n      (<TreeItem>htmlEle.ui)._onRename(true);\r\n    }\r\n  };\r\n\r\n  private _onMouseDown(evt: MouseEvent): void {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n\r\n    if (!(<TreeItem>htmlEle.ui).tree!.draggable)\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n  };\r\n\r\n  private _onDragStart = function (evt: MouseEvent): void {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n\r\n    if (!(<TreeItem>htmlEle.ui).tree!.draggable) {\r\n      evt.stopPropagation();\r\n      evt.preventDefault();\r\n      return;\r\n    }\r\n\r\n    (<TreeItem>htmlEle.ui)._dragging = true;\r\n\r\n    if ((<TreeItem>htmlEle.ui)._dragRelease)\r\n      window.removeEventListener('mouseup', (<TreeItem>htmlEle.ui)._dragRelease);\r\n\r\n    (<TreeItem>htmlEle.ui)._dragRelease = (<TreeItem>htmlEle.ui)._onMouseUp;\r\n    window.addEventListener('mouseup', (<TreeItem>htmlEle.ui)._dragRelease, false);\r\n\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    (<TreeItem>htmlEle.ui).emit('dragstart');\r\n  };\r\n\r\n  private _onMouseOver(evt: MouseEvent): void {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n\r\n    evt.stopPropagation();\r\n    (<TreeItem>htmlEle.ui).emit('mouseover', evt);\r\n  };\r\n\r\n\r\n  private _onSelect(): void {\r\n    this.elementTitle.focus();\r\n  };\r\n\r\n  private _onDeselect(): void {\r\n    this.elementTitle.blur();\r\n  };\r\n\r\n\r\n  private _onKeyDown(evt: KeyboardEvent) {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n    let currentItem: TreeItem = <TreeItem>htmlEle.ui;\r\n\r\n    if ((evt.target && htmlEle.tagName.toLowerCase() === 'input'))\r\n      return;\r\n\r\n    if ([9, 38, 40, 37, 39].indexOf(evt.keyCode) === -1)\r\n      return;\r\n\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n\r\n    let selectedItem: Nullable<TreeItem> = null;\r\n    let item: Nullable<TreeItem> = null;\r\n    switch (evt.keyCode) {\r\n      case 9: // tab\r\n        break;\r\n      case 40: // down\r\n        let downItem = currentItem.element!.nextElementSibling;\r\n        if (downItem)\r\n          item = <TreeItem>(<HTMLElement>downItem).ui;\r\n\r\n        if (currentItem._children && currentItem.open) {\r\n          let first = currentItem.element!.firstElementChild!.nextElementSibling;\r\n          if (first && (<HTMLElement>first).ui) {\r\n            selectedItem = <TreeItem>(<HTMLElement>first).ui;\r\n            // first.ui.selected = true;\r\n          } else if (item) {\r\n            selectedItem = item;\r\n            // item.selected = true;\r\n          }\r\n        } else if (item) {\r\n          selectedItem = item;\r\n          // item.selected = true;\r\n        } else if (currentItem.parent && currentItem.parent instanceof TreeItem) {\r\n          let parent: Nullable<TreeItem> = currentItem.parent;\r\n\r\n          let findNext = function (from: TreeItem): Nullable<TreeItem> {\r\n            let next = from.next;\r\n            if (next) {\r\n              selectedItem = next;\r\n              // next.selected = true;\r\n            } else if (from.parent instanceof TreeItem) {\r\n              return from.parent;\r\n            }\r\n            return null;\r\n          };\r\n          parent = findNext(parent);\r\n          while (parent) {\r\n            parent = findNext(parent);\r\n          }\r\n        }\r\n        break;\r\n      case 38: // up\r\n        let itemUp = currentItem.element!.previousElementSibling;\r\n        if (itemUp)\r\n          item = <TreeItem>(<HTMLElement>itemUp).ui;\r\n\r\n        if (item) {\r\n          if (item._children && item.open && item !== currentItem.parent) {\r\n            let lastItem = item.element!.lastElementChild;\r\n            let last: Nullable<TreeItem> = null;\r\n            if (lastItem && (<HTMLElement>lastItem).ui)\r\n              last = <TreeItem>(<HTMLElement>lastItem).ui;\r\n\r\n            if (last) {\r\n              let findLast = function (inside: TreeItem): Nullable<TreeItem> {\r\n                if (inside._children && inside.open) {\r\n                  if (inside.element!.lastElementChild && (<HTMLElement>inside.element!.lastElementChild).ui) {\r\n                    return <TreeItem>(<HTMLElement>inside.element!.lastElementChild).ui;\r\n                  }\r\n                  return null;\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n\r\n              let found: boolean = false;\r\n              while (!found) {\r\n                let deeper: Nullable<TreeItem> = findLast(last);\r\n                if (deeper) {\r\n                  last = deeper\r\n                } else {\r\n                  found = true;\r\n                }\r\n              }\r\n\r\n              selectedItem = last;\r\n              // last.selected = true;\r\n            } else {\r\n              selectedItem = item;\r\n              // item.selected = true;\r\n            }\r\n          } else {\r\n            selectedItem = item;\r\n            // item.selected = true;\r\n          }\r\n        } else if (currentItem.parent && currentItem.parent instanceof TreeItem) {\r\n          selectedItem = currentItem.parent;\r\n          // this.ui.parent.selected = true;\r\n        }\r\n\r\n        break;\r\n      case 37: // left (close)\r\n        if (currentItem.parent !== currentItem.tree && currentItem.open)\r\n          currentItem.open = false;\r\n        break;\r\n      case 39: // right (open)\r\n        if (currentItem._children && !currentItem.open)\r\n          currentItem.open = true;\r\n        break;\r\n    }\r\n\r\n    if (selectedItem) {\r\n      if (!(Tree._ctrl && Tree._ctrl()) && !(Tree._shift && Tree._shift()))\r\n        currentItem.tree!.clear();\r\n      selectedItem.selected = true;\r\n    }\r\n  }\r\n\r\n  // TODO,关联En\r\n  private _onRename(select: boolean): void {\r\n    if (select) {\r\n      this.tree!.clear();\r\n      this.tree!._onItemClick(this);\r\n    }\r\n\r\n    var self = this;\r\n    this.class!.add('rename');\r\n\r\n    // add remaning field\r\n    var field = new TextField();\r\n    field.parent = this;\r\n    field.renderChanges = false;\r\n    field.value = this.text;\r\n    field.elementInput.readOnly = !this.tree!.allowRenaming;\r\n    field.elementInput.addEventListener('blur', function () {\r\n      field.destroy();\r\n      self.class!.remove('rename');\r\n    }, false);\r\n    field.on('click', function (evt: MouseEvent) {\r\n      evt.stopPropagation();\r\n    });\r\n    field.element!.addEventListener('dblclick', function (evt) {\r\n      evt.stopPropagation();\r\n    });\r\n    field.on('change', function (value: string) {\r\n      value = value.trim();\r\n      if (value) {\r\n        // TODO\r\n        // if (self.entity) {\r\n        //   self.entity.set('name', value);\r\n        // }\r\n\r\n        self.emit('rename', value);\r\n      }\r\n\r\n      field.destroy();\r\n      self.class!.remove('rename');\r\n    });\r\n    this.elementTitle.appendChild(field.element!);\r\n    field.elementInput.focus();\r\n    field.elementInput.select();\r\n  }\r\n\r\n  private _onDestroy(): void {\r\n    this.elementTitle.removeEventListener('click', this._onClick);\r\n    this.elementTitle.removeEventListener('dblclick', this._onDblClick);\r\n    this.elementTitle.removeEventListener('mousedown', this._onMouseDown);\r\n    this.elementTitle.removeEventListener('dragstart', this._onDragStart);\r\n    this.elementTitle.removeEventListener('mouseover', this._onMouseOver);\r\n    this.elementTitle.removeEventListener('keydown', this._onKeyDown);\r\n  }\r\n\r\n  private _onAppend(item: TreeItem): void {\r\n    if (this.parent)\r\n      this.parent.emit('append', item);\r\n  }\r\n\r\n  private _onRemove(item: TreeItem): void {\r\n    if (this.parent)\r\n      this.parent.emit('remove', item);\r\n  }\r\n\r\n\r\n  public focus(): void {\r\n    this.elementTitle.focus();\r\n  }\r\n\r\n  public append(item: TreeItem): void {\r\n    if (this._children === 1) {\r\n      this.element!.children[1].classList.remove('single');\r\n    }\r\n\r\n    item.parent = this;\r\n    this.element!.appendChild(item.element!);\r\n    this._children++;\r\n\r\n    if (this._children === 1) {\r\n      item.class!.add('single');\r\n      this.class!.add('container');\r\n    } else if (this._children > 1) {\r\n      item.class!.remove('single');\r\n    }\r\n\r\n    let appendChildren = function (treeItem: TreeItem): void {\r\n      treeItem.emit('append', treeItem);\r\n\r\n      if (treeItem._children) {\r\n        for (let i = 1; i < treeItem.element!.children.length; i++) {\r\n          appendChildren(<TreeItem>(<HTMLElement>treeItem.element!.children[i]).ui);\r\n        }\r\n      }\r\n    };\r\n    appendChildren(item);\r\n  }\r\n\r\n  public appendBefore(item: TreeItem, referenceItem: TreeItem): void {\r\n    if (this._children === 1) {\r\n      this.element!.children[1].classList.remove('single');\r\n    }\r\n\r\n    item.parent = this;\r\n    this.element!.insertBefore(item.element!, referenceItem.element);\r\n    this._children++;\r\n\r\n    if (this._children === 1) {\r\n      item.class!.add('single');\r\n      this.class!.add('container');\r\n    } else if (this._children > 1) {\r\n      item.class!.remove('single');\r\n    }\r\n\r\n    var appendChildren = function (treeItem: TreeItem): void {\r\n      treeItem.emit('append', treeItem);\r\n\r\n      if (treeItem._children) {\r\n        for (var i = 1; i < treeItem.element!.children.length; i++) {\r\n          appendChildren(<TreeItem>(<HTMLElement>treeItem.element!.children[i]).ui);\r\n        }\r\n      }\r\n    };\r\n    appendChildren(item);\r\n  }\r\n\r\n  public appendAfter(item: TreeItem, referenceItem: TreeItem): void {\r\n    item.parent = this;\r\n\r\n    // might be last\r\n    if (!referenceItem)\r\n      this.append(item);\r\n\r\n    this.element!.insertBefore(item.element!, referenceItem.element!.nextElementSibling);\r\n    this._children++;\r\n\r\n    if (this._children === 1) {\r\n      item.class!.add('single');\r\n      this.class!.add('container');\r\n    } else if (this._children === 2) {\r\n      this.element!.children[1].classList.remove('single');\r\n    }\r\n\r\n    var appendChildren = function (treeItem: TreeItem): void {\r\n      treeItem.emit('append', treeItem);\r\n\r\n      if (treeItem._children) {\r\n        for (var i = 1; i < treeItem.element!.children.length; i++) {\r\n          appendChildren(<TreeItem>(<HTMLElement>treeItem.element!.children[i]).ui);\r\n        }\r\n      }\r\n    };\r\n    appendChildren(item);\r\n  }\r\n\r\n\r\n  public remove(item: TreeItem): void {\r\n    if (!this._children || !this.element!.contains(item.element))\r\n      return;\r\n\r\n    this.element!.removeChild(item.element!);\r\n    this._children--;\r\n\r\n    if (this._children === 0) {\r\n      this.class!.remove('container');\r\n    } else if (this._children === 1 && this.element!.children.length > 2) {\r\n      this.element!.children[1].classList.add('single');\r\n    }\r\n\r\n    let removeChildren = function (treeItem: TreeItem): void {\r\n      treeItem.emit('remove', treeItem);\r\n\r\n      if (treeItem._children) {\r\n        for (let i: number = 1; i < treeItem.element!.children.length; i++) {\r\n          if ((<HTMLElement>treeItem.element!.children[i]).ui && (<HTMLElement>treeItem.element!.children[i]).ui instanceof TreeItem) {\r\n            removeChildren(<TreeItem>(<HTMLElement>treeItem.element!.children[i]).ui);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    removeChildren(item);\r\n  }\r\n}","import { ContainerElement } from \"./container-element\";\r\nimport { TreeItem } from \"./tree-item\";\r\nimport { Hotkeys } from \"../editor\";\r\nimport { Element } from \"./element\";\r\n\r\nexport class Tree extends ContainerElement {\r\n\r\n  private elementDrag: HTMLElement;\r\n  public draggable: boolean;\r\n  private _dragging: boolean;\r\n  private _dragItems: TreeItem[] = [];\r\n  private _dragOver: Nullable<TreeItem>;\r\n  private _dragArea: string;\r\n  private _evtDragMove: any;\r\n  public reordering: boolean;\r\n  public dragInstant: boolean;\r\n  private _selected: TreeItem[] = [];\r\n\r\n  public allowRenaming: boolean = true;\r\n\r\n  public get selected(): TreeItem[] {\r\n    return this._selected.slice(0);\r\n  }\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-tree');\r\n\r\n\r\n    this.elementDrag = document.createElement('div');\r\n    this.elementDrag.classList.add('drag-handle');\r\n    this.element.appendChild(this.elementDrag);\r\n\r\n    let self = this;\r\n    this.elementDrag.addEventListener('mousemove', function (evt: MouseEvent): void {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n\r\n      self._onDragMove(evt);\r\n    });\r\n    this.element.addEventListener('mouseleave', function (evt: MouseEvent): void {\r\n      self._onDragOut();\r\n    });\r\n\r\n\r\n    this.draggable = true;\r\n    this._dragging = false;\r\n    this._dragItems = [];\r\n    this._dragOver = null;\r\n    this._dragArea = 'inside';\r\n    this._evtDragMove = null;\r\n    this.reordering = true;\r\n    this.dragInstant = true;\r\n\r\n    this._selected = [];\r\n\r\n  }\r\n\r\n  public static _ctrl(): boolean {\r\n    return Hotkeys.ctrl;\r\n  }\r\n\r\n  public static _shift(): boolean {\r\n    return Hotkeys.shift;\r\n  }\r\n\r\n\r\n  private _onDragMove(evt: MouseEvent): void {\r\n    if (!this.draggable)\r\n      return;\r\n\r\n    this._hoverCalculate(evt);\r\n    this.emit('dragmove', evt);\r\n  }\r\n\r\n  private _hoverCalculate(evt: MouseEvent): void {\r\n    if (!this.draggable || !this._dragOver)\r\n      return;\r\n\r\n    let rect = this.elementDrag.getBoundingClientRect();\r\n    let area: number = Math.floor((evt.clientY - rect.top) / rect.height * 5);\r\n\r\n    let oldArea = this._dragArea;\r\n    let oldDragOver = this._dragOver;\r\n\r\n    if (this._dragOver.parent === this) {\r\n      let parent = false;\r\n      for (let i = 0; i < this._dragItems.length; i++) {\r\n        if (this._dragItems[i].parent === this._dragOver) {\r\n          parent = true;\r\n          this._dragOver = null;\r\n          break;\r\n        }\r\n      }\r\n      if (!parent)\r\n        this._dragArea = 'inside';\r\n    } else {\r\n      // check if we are trying to drag item inside any of its children\r\n      let invalid = false;\r\n      for (let i = 0; i < this._dragItems.length; i++) {\r\n        let parent = this._dragOver.parent;\r\n        while (parent) {\r\n          if (parent === this._dragItems[i]) {\r\n            invalid = true;\r\n            break;\r\n          }\r\n\r\n          parent = parent.parent;\r\n        }\r\n      }\r\n\r\n      if (invalid) {\r\n        this._dragOver = null;\r\n      } else if (this.reordering && area <= 1 && this._dragItems.indexOf(this._dragOver.prev!) === -1) {\r\n        this._dragArea = 'before';\r\n      } else if (this.reordering && area >= 4 && this._dragItems.indexOf(this._dragOver.next!) === -1 && (this._dragOver._children === 0 || !this._dragOver.open)) {\r\n        this._dragArea = 'after';\r\n      } else {\r\n        let parent = false;\r\n        if (this.reordering && this._dragOver.open) {\r\n          for (let i = 0; i < this._dragItems.length; i++) {\r\n            if (this._dragItems[i].parent === this._dragOver) {\r\n              parent = true;\r\n              this._dragArea = 'before';\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (!parent)\r\n          this._dragArea = 'inside';\r\n      }\r\n    }\r\n\r\n    if (oldArea !== this._dragArea || oldDragOver !== this._dragOver)\r\n      this._updateDragHandle();\r\n  }\r\n\r\n\r\n  public _onItemClick(item: TreeItem): void {\r\n    if (Tree._ctrl && Tree._ctrl()) {\r\n      // 按住ctrl键，针对某个item，按第1次选中，按第2次取消选中\r\n      item.selected = !item.selected;\r\n    } else if (Tree._shift && Tree._shift() && this._selected.length) {\r\n      // shift按住以后，往上往下都可进行选择，不断添加选择项，不减少\r\n      let from: TreeItem = this._selected[this._selected.length - 1];\r\n      let to: TreeItem = item;\r\n\r\n      let up: TreeItem[] = [];\r\n      let down: TreeItem[] = [];\r\n\r\n      let prev = function (refItem: TreeItem): Nullable<TreeItem> {\r\n        if (!refItem) return null;\r\n        let result: Nullable<TreeItem> = null;\r\n        let prevItem = refItem.element!.previousElementSibling;\r\n        let item: Nullable<TreeItem> = null;\r\n        if (prevItem) item = <TreeItem>(<HTMLElement>prevItem).ui;\r\n\r\n        if (item) {\r\n          if (refItem.parent && refItem.parent === item && refItem.parent instanceof TreeItem) {\r\n            result = refItem.parent;\r\n          } else if (item.open && item._children) {  // 没有open貌似就没有选中\r\n            // element above is open, find last available element\r\n            let lastItem = item.element!.lastElementChild;\r\n            let last: Nullable<TreeItem> = null;\r\n            if (lastItem && (<HTMLElement>lastItem).ui)\r\n              last = <TreeItem>(<HTMLElement>lastItem).ui;\r\n\r\n            if (last) {\r\n              let findLast = function (inside: Nullable<TreeItem>) {\r\n                if (inside && inside.open && inside._children) {\r\n                  if (inside.element!.lastElementChild && (<HTMLElement>inside.element!.lastChild).ui) {\r\n                    return <TreeItem>(<HTMLElement>inside.element!.lastChild).ui;\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n\r\n              let found: boolean = false;\r\n              while (!found) {\r\n                let deeper: Nullable<TreeItem> = findLast(last);\r\n                if (deeper) {\r\n                  last = deeper;\r\n                } else {\r\n                  found = true;\r\n                }\r\n              }\r\n\r\n              result = last;\r\n            } else {\r\n              result = item;\r\n            }\r\n          } else {\r\n            result = item;\r\n          }\r\n        }\r\n\r\n        return result;\r\n      };\r\n\r\n      let next = function (refItem: TreeItem): Nullable<TreeItem> {\r\n        let result: Nullable<TreeItem> = null;\r\n        let nextItem = refItem.element!.nextElementSibling;\r\n        let item: Nullable<TreeItem> = null;\r\n        if (nextItem) item = <TreeItem>(<HTMLElement>nextItem).ui;\r\n\r\n        if (refItem.open && refItem._children) {\r\n          // select a child\r\n          let first = refItem.element!.firstElementChild!.nextElementSibling;\r\n          if (first && (<HTMLElement>first).ui) {\r\n            result = <TreeItem>(<HTMLElement>first).ui;\r\n          } else if (item) {\r\n            result = item;\r\n          }\r\n        } else if (item) {\r\n          // select next item\r\n          result = item;\r\n        } else if (refItem.parent && refItem.parent instanceof TreeItem) {\r\n          // no next element, go to parent\r\n          let parent: Nullable<TreeItem> = refItem.parent;\r\n\r\n          let findNext = function (from: TreeItem): Nullable<TreeItem> {\r\n            let next: Nullable<TreeItem> = from.next;\r\n            if (next) {\r\n              result = next;\r\n            } else if (from.parent instanceof TreeItem) {\r\n              return from.parent;\r\n            }\r\n            return null;\r\n          }\r\n          parent = findNext(parent);\r\n          while (parent) {\r\n            parent = findNext(parent);\r\n          }\r\n        }\r\n\r\n        return result;\r\n      };\r\n\r\n      let done: boolean = false;\r\n      let path: TreeItem[] = [];\r\n      let lookUp: boolean = true;\r\n      let lookDown: boolean = true;\r\n      let lookingUp: boolean = true;\r\n      // TODO\r\n      while (!done && !path) {\r\n        lookingUp = !lookingUp;\r\n\r\n        let item: Nullable<TreeItem> = null;\r\n        let lookFrom: TreeItem = from;\r\n        if ((!lookDown || lookingUp) && lookUp) {\r\n          // up\r\n          if (up.length)\r\n            lookFrom = up[up.length - 1];\r\n\r\n          item = prev(lookFrom);\r\n          if (item) {\r\n            up.push(item);\r\n\r\n            if (item === to) {\r\n              done = true;\r\n              path = up;\r\n              break;\r\n            }\r\n          } else {\r\n            lookUp = false;\r\n          }\r\n        } else if (lookDown) {\r\n          // down\r\n          if (down.length)\r\n            lookFrom = down[down.length - 1];\r\n\r\n          item = next(lookFrom);\r\n          if (item) {\r\n            down.push(item);\r\n\r\n            if (item === to) {\r\n              done = true;\r\n              path = down;\r\n              break;\r\n            }\r\n          } else {\r\n            lookDown = false;\r\n          }\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n\r\n      if (path) {\r\n        for (let i = 0; i < path.length; i++) {\r\n          path[i].selected = true;\r\n        }\r\n      }\r\n\r\n\r\n    } else {\r\n      let selected: boolean = item.selected && ((this._selected.indexOf(item) === -1) || (this._selected.length === 1 && this._selected[0] === item));\r\n      this.clear();\r\n\r\n      if (!selected)\r\n        item.selected = true;\r\n    }\r\n  }\r\n\r\n  private _onSelect(item: TreeItem): void {\r\n    this._selected.push(item);\r\n  }\r\n\r\n  private _onDeselect(item: TreeItem): void {\r\n    let index: number = this._selected.indexOf(item);\r\n    if (index === -1)\r\n      return;\r\n\r\n    this._selected.splice(index, 1);\r\n  }\r\n\r\n\r\n  private _onDragStart(item: TreeItem): void {\r\n    if (!this.draggable || this._dragging)\r\n      return;\r\n\r\n    this._dragItems = [];\r\n\r\n    if (this._selected && this._selected.length > 1 && this._selected.indexOf(item) !== -1) {\r\n      let items: TreeItem[] = [];\r\n      let index: { [key: number]: TreeItem } = {};\r\n      let defaultLevel = -1;\r\n\r\n      // build index\r\n      for (let i: number = 0; i < this._selected.length; i++) {\r\n        // cant drag parent\r\n        if (this._selected[i].parent === this)\r\n          return;\r\n\r\n        this._selected[i]._dragId = i + 1;\r\n        index[this._selected[i]._dragId] = this._selected[i];\r\n      }\r\n\r\n      for (let i: number = 0; i < this._selected.length; i++) {\r\n        let s: TreeItem = this._selected[i];\r\n        let level: number = 0;\r\n        let child: boolean = false;\r\n        let parent: Nullable<Element> = this._selected[i].parent;\r\n        if (!parent || !(parent instanceof TreeItem))\r\n          parent = null;\r\n\r\n        while (parent) {\r\n          if (parent._dragId && index[parent._dragId]) {\r\n            // child, to be ignored\r\n            child = true;\r\n            break;\r\n          }\r\n\r\n          parent = parent.parent;\r\n          if (!(parent instanceof TreeItem)) {\r\n            parent = null;\r\n            break;\r\n          }\r\n\r\n          level++;\r\n        }\r\n\r\n        if (!child) {\r\n          if (defaultLevel === -1) {\r\n            defaultLevel = level;\r\n          } else if (defaultLevel !== level) {\r\n            // multi-level drag no allowed\r\n            return;\r\n          }\r\n\r\n          items.push(this._selected[i]);\r\n        }\r\n      }\r\n\r\n      // clean ids\r\n      for (let i: number = 0; i < this._selected.length; i++)\r\n        this._selected[i]._dragId = -1;\r\n\r\n      this._dragItems = items;\r\n\r\n      // sort items by their number of apperance in hierarchy\r\n      if (items.length > 1) {\r\n        let commonParent: Nullable<TreeItem> = null;\r\n\r\n        // find common parent\r\n        let findCommonParent = function (items: TreeItem[]): TreeItem[] {\r\n          let parents: TreeItem[] = [];\r\n          for (let i: number = 0; i < items.length; i++) {\r\n            if (items[i].parent && items[i].parent instanceof TreeItem) {\r\n              if (parents.indexOf(<TreeItem>items[i].parent) === -1)\r\n                parents.push(<TreeItem>items[i].parent);\r\n            }\r\n          }\r\n          if (parents.length === 1) {\r\n            commonParent = parents[0];\r\n          }\r\n          return parents;\r\n        };\r\n        let parents: TreeItem[] = items;\r\n        while (!commonParent && parents)\r\n          parents = findCommonParent(parents);\r\n\r\n        // calculate ind number\r\n        for (let i: number = 0; i < items.length; i++) {\r\n          let ind: number = 0;\r\n\r\n          let countChildren = function (item: TreeItem): number {\r\n            if (!item._children) {\r\n              return 0;\r\n            } else {\r\n              let count: number = 0;\r\n              let children = item.element!.children;\r\n              for (let i: number = 0; i < children.length; i++) {\r\n                if ((<HTMLElement>children[i]).ui && (<HTMLElement>children[i]).ui instanceof TreeItem)\r\n                  count += countChildren(<TreeItem>(<HTMLElement>children[i]).ui) + 1;\r\n              }\r\n              return count;\r\n            }\r\n          };\r\n\r\n          let scanUpForIndex = function (item: TreeItem): Nullable<TreeItem> {\r\n            ind++;\r\n            let sibling = item.element!.previousElementSibling;\r\n            let siblingItem: Nullable<TreeItem> = null;\r\n            if (sibling && (<HTMLElement>sibling).ui && (<HTMLElement>sibling).ui instanceof TreeItem) {\r\n              siblingItem = <TreeItem>(<HTMLElement>sibling).ui;\r\n            }\r\n\r\n            if (siblingItem) {\r\n              ind += countChildren(siblingItem);\r\n              return siblingItem;\r\n            } else if (item.parent === commonParent) {\r\n              return null;\r\n            } else {\r\n              if (item.parent instanceof TreeItem) {\r\n                return <TreeItem>item.parent;\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          };\r\n\r\n          let prev: Nullable<TreeItem> = scanUpForIndex(items[i]);\r\n          while (prev)\r\n            prev = scanUpForIndex(prev);\r\n\r\n          items[i]._dragId = ind;\r\n        }\r\n\r\n        items.sort(function (a, b) {\r\n          return a._dragId - b._dragId;\r\n        });\r\n      }\r\n    } else {\r\n      // single drag\r\n      this._dragItems = [item];\r\n    }\r\n\r\n    if (this._dragItems.length) {\r\n      this._dragging = true;\r\n\r\n      this.class!.add('dragging');\r\n      for (let i: number = 0; i < this._dragItems.length; i++) {\r\n        this._dragItems[i].class!.add('dragged');\r\n      }\r\n\r\n      this._updateDragHandle();\r\n      this.emit('dragstart');\r\n    }\r\n  }\r\n\r\n  private _onDragOver(item: TreeItem, evt: MouseEvent): void {\r\n    if (!this.draggable || !this._dragging || (this._dragItems.indexOf(item) !== -1 && !this._dragOver) || this._dragOver === item)\r\n      return;\r\n\r\n    let dragOver = null;\r\n\r\n    if (item.allowDrop) {\r\n      if (this._dragItems.indexOf(item) === -1)\r\n        dragOver = item;\r\n\r\n      if (this._dragOver === null && dragOver)\r\n        this.emit('dragin');\r\n    }\r\n\r\n\r\n\r\n    this._dragOver = dragOver;\r\n\r\n    this._updateDragHandle();\r\n    this._onDragMove(evt);\r\n  }\r\n\r\n  private _onDragEnd(): void {\r\n    if (!this.draggable || !this._dragging)\r\n      return;\r\n\r\n    // TODO\r\n    let reparentedItems: ReparentDragItems[] = [];\r\n    this._dragging = false;\r\n    this.class!.remove('dragging');\r\n\r\n    let lastDraggedItem: Nullable<TreeItem> = this._dragOver;\r\n\r\n    for (let i: number = 0; i < this._dragItems.length; i++) {\r\n      this._dragItems[i].class!.remove('dragged');\r\n\r\n      if (this._dragOver && this._dragOver !== this._dragItems[i]) {\r\n\r\n        let oldParent: Nullable<Element> = this._dragItems[i].parent;\r\n\r\n        if (oldParent !== this._dragOver || this._dragArea !== 'inside') {\r\n          let newParent: Nullable<Element> = null;\r\n\r\n          if (this.dragInstant) {\r\n            if (this._dragItems[i].parent)\r\n              (<TreeItem>(this._dragItems[i].parent!)).remove(this._dragItems[i]);\r\n          }\r\n\r\n          if (this._dragArea === 'before') {\r\n            newParent = this._dragOver.parent;\r\n            if (this.dragInstant)\r\n              (<TreeItem>this._dragOver.parent).appendBefore(this._dragItems[i], this._dragOver);\r\n          } else if (this._dragArea === 'inside') {\r\n            newParent = this._dragOver;\r\n            if (this.dragInstant) {\r\n              this._dragOver.open = true;\r\n              this._dragOver.append(this._dragItems[i]);\r\n            }\r\n          } else if (this._dragArea === 'after') {\r\n            newParent = this._dragOver.parent;\r\n            if (this.dragInstant) {\r\n              (<TreeItem>this._dragOver.parent).appendAfter(this._dragItems[i], lastDraggedItem!);\r\n              lastDraggedItem = this._dragItems[i];\r\n            }\r\n          }\r\n\r\n          reparentedItems.push({\r\n            item: this._dragItems[i],\r\n            old: oldParent,\r\n            new: newParent\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.emit('reparent', reparentedItems);\r\n\r\n    this._dragItems = [];\r\n\r\n    if (this._dragOver)\r\n      this._dragOver = null;\r\n\r\n    this.emit('dragend');\r\n  }\r\n\r\n  private _onDragOut(): void {\r\n    if (!this.draggable || !this._dragging || !this._dragOver)\r\n      return;\r\n\r\n    this._dragOver = null;\r\n    this._updateDragHandle();\r\n    this.emit('dragout');\r\n  }\r\n\r\n  private _updateDragHandle(): void {\r\n    if (!this.draggable || !this._dragging)\r\n      return;\r\n\r\n    if (!this._dragOver) {\r\n      this.elementDrag.classList.add('hidden');\r\n    } else {\r\n      let rect = this._dragOver.elementTitle.getBoundingClientRect();\r\n\r\n      this.elementDrag.classList.remove('before', 'inside', 'after', 'hidden')\r\n      this.elementDrag.classList.add(this._dragArea);\r\n\r\n      this.elementDrag.style.top = rect.top + 'px';\r\n      this.elementDrag.style.left = rect.left + 'px';\r\n      this.elementDrag.style.width = (rect.width - 4) + 'px';\r\n    }\r\n  }\r\n\r\n  private _onAppend(item: TreeItem): void {\r\n    item.tree = this;\r\n\r\n    let self = this;\r\n\r\n    item.on('dragstart', function () {\r\n      // can't drag root  TODO\r\n      if (item.parent === self)\r\n        return;\r\n\r\n      self._onDragStart(item);\r\n    });\r\n\r\n    item.on('mouseover', function (evt: MouseEvent) {\r\n      self._onDragOver(item, evt);\r\n    });\r\n\r\n    item.on('dragend', function () {\r\n      self._onDragEnd();\r\n    });\r\n  }\r\n\r\n  private _onRemove(item: TreeItem): void {\r\n    item.tree = null;\r\n    item.unbind('dragstart');\r\n    item.unbind('mouseover');\r\n    item.unbind('dragend');\r\n  }\r\n\r\n\r\n  public clear(): void {\r\n    if (!this._selected.length)\r\n      return;\r\n\r\n    let i: number = this._selected.length;\r\n    while (i--) {\r\n      this._selected[i].selected = false;\r\n    }\r\n    this._selected = [];\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport interface ReparentDragItems {\r\n  item: TreeItem;\r\n  old: Nullable<Element>;\r\n  new: Nullable<Element>;\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}