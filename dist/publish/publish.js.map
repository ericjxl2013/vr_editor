{"version":3,"sources":["node_modules/_browser-pack@6.1.0@browser-pack/_prelude.js","src/game/babylonloader.ts","src/game/config.ts","src/game/game.ts","src/game/index.ts","src/game/loader.ts","src/game/scenes.ts","src/index.ts","src/lib/ajax.ts","src/lib/editor.ts","src/lib/events.ts","src/lib/guid.ts","src/lib/index.ts","src/lib/observer.ts","src/lib/tools.ts","src/main.ts"],"names":[],"mappings":"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","file":"publish.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// import { Tools, AjaxRequest, Ajax, GUID } from \"../../../editor/utility\";\r\nimport { Ajax, AjaxRequest, GUID, Observer, Tools } from \"../lib\";\r\n// import { VeryEngine } from \"../../../engine\";\r\n// import { Config } from \"../../../editor/global\";\r\n\r\nexport class BabylonLoader {\r\n\r\n\r\n    public static prefix: string = '/assets/';\r\n\r\n    public static assetsData: any = {};\r\n    public static projectData: any = {};\r\n    public static scenesData: any = {};\r\n    public static sceneIndex: number = 0;\r\n\r\n\r\n    public static babylonCacheData: { [key: string]: any } = {};\r\n    public static babylonParsedData: { [key: string]: any } = {};\r\n\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public static loadFromBabylonAsset() {\r\n\r\n    }\r\n\r\n\r\n    public static loadBabylon(asset: Observer) {\r\n        let assetID: string = asset.get('id');\r\n        let dataBabylon: any = null;\r\n        if (BabylonLoader.babylonCacheData[assetID]) {\r\n            dataBabylon = BabylonLoader.babylonCacheData[assetID];\r\n            BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n            BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n        } else {\r\n            var data1 = {\r\n                url: BabylonLoader.prefix + asset.get('id') + '/' + asset.get('name'),\r\n                method: 'GET',\r\n                // auth: true,\r\n                data: null,\r\n                ignoreContentType: true,\r\n                // headers: {\r\n                //     Accept: 'application/json'\r\n                // }\r\n            };\r\n\r\n            // 直接返回babylon json格式内容数据\r\n            (<AjaxRequest>new Ajax(data1))\r\n                .on('load', (status: any, data: any) => {\r\n\r\n                    dataBabylon = data;\r\n                    BabylonLoader.babylonCacheData[assetID] = dataBabylon;\r\n                    BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n                    BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n                }).on('error', (evt: any) => {\r\n                    console.error(evt);\r\n                });;\r\n        }\r\n    }\r\n\r\n\r\n    public static assembleBabylon(assetID: string, dataBabylon: any) {\r\n        if (dataBabylon !== null) {\r\n            console.warn(dataBabylon);\r\n            console.log(dataBabylon.meshes);\r\n            console.log(dataBabylon.materials);\r\n            console.log(dataBabylon.lights);\r\n\r\n            // if (dataBabylon.lights) {\r\n            //     dataBabylon.lights.forEach((element: any) => {\r\n            //         BabylonLoader.loadLight(element, VeryEngine.viewScene);\r\n            //     });\r\n            // }\r\n\r\n            // material assemble\r\n            if (BabylonLoader.assetsData.babylon[assetID]) {\r\n                let mats = BabylonLoader.assetsData.babylon[assetID]['materials'];\r\n                let newMats = [];\r\n                for (let key in mats) {\r\n                    if (mats[key].asset_id && BabylonLoader.assetsData.assets[mats[key].asset_id]) {\r\n                        let newMat = BabylonLoader.assetsData.assets[mats[key].asset_id].data;\r\n                        // 检测texture\r\n                        if (newMat.diffuseTexture && newMat.diffuseTexture.texture_id) {\r\n                            newMat.diffuseTexture.name = BabylonLoader.prefix + newMat.diffuseTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.diffuseTexture.texture_id].name;\r\n                            // console.warn(newMat.diffuseTexture.name);\r\n                        }\r\n                        if (newMat.specularTexture && newMat.specularTexture.texture_id) {\r\n                            newMat.specularTexture.name = BabylonLoader.prefix + newMat.specularTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.specularTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.reflectionTexture && newMat.reflectionTexture.texture_id) {\r\n                            newMat.reflectionTexture.name = BabylonLoader.prefix + newMat.reflectionTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.reflectionTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.refractionTexture && newMat.refractionTexture.texture_id) {\r\n                            newMat.refractionTexture.name = BabylonLoader.prefix + newMat.refractionTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.refractionTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.emissiveTexture && newMat.emissiveTexture.texture_id) {\r\n                            newMat.emissiveTexture.name = BabylonLoader.prefix + newMat.emissiveTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.emissiveTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.bumpTexture && newMat.bumpTexture.texture_id) {\r\n                            newMat.bumpTexture.name = BabylonLoader.prefix + newMat.bumpTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.bumpTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.opacityTexture && newMat.opacityTexture.texture_id) {\r\n                            newMat.opacityTexture.name = BabylonLoader.prefix + newMat.opacityTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.opacityTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.ambientTexture && newMat.ambientTexture.texture_id) {\r\n                            newMat.ambientTexture.name = BabylonLoader.prefix + newMat.ambientTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.ambientTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.lightmapTexture && newMat.lightmapTexture.texture_id) {\r\n                            newMat.lightmapTexture.name = BabylonLoader.prefix + newMat.lightmapTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.lightmapTexture.texture_id].name;\r\n                        }\r\n\r\n                        newMats.push(newMat);\r\n                    }\r\n                }\r\n\r\n                newMats.forEach((element: any) => {\r\n                    // console.error(element);\r\n                    BabylonLoader.loadMaterial(element, VR.BabylonEngine.Scene, '');\r\n                });\r\n            }\r\n\r\n            // geometries assemble\r\n            if (dataBabylon.geometries && dataBabylon.geometries.vertexData) {\r\n                dataBabylon.geometries.vertexData.array.forEach((parsedVertexData: any) => {\r\n                    BabylonLoader.loadGeometry(parsedVertexData, VR.BabylonEngine.Scene, '');\r\n                });\r\n            }\r\n\r\n            // transformNode assemble\r\n            let newTransformNodes: Nullable<BABYLON.TransformNode>[] = [];\r\n            if (dataBabylon.transformNodes) {\r\n                dataBabylon.transformNodes.forEach((parsedTransformNode: any) => {\r\n                    let node = BabylonLoader.loadTransformNode(parsedTransformNode, VR.BabylonEngine.Scene, '');\r\n                    newTransformNodes.push(node);\r\n                });\r\n            }\r\n\r\n            // mesh assemble\r\n            let newMeshes: Nullable<BABYLON.AbstractMesh>[] = [];\r\n            let parentMeshes: Nullable<BABYLON.AbstractMesh>[] = [];\r\n\r\n            let tempMeshDic: { [key: string]: Nullable<BABYLON.AbstractMesh> } = {};\r\n\r\n            let tempMeshID: { [key: string]: string } = {};\r\n\r\n            if (dataBabylon.meshes) {\r\n                dataBabylon.meshes.forEach((element: any) => {\r\n                    // 若当前scene数据中已包含mesh id，则重新创建resource_id\r\n                    if (BabylonLoader.scenesData.entities[element.id]) {\r\n                        let newID = GUID.create();\r\n                        let oldID = element.id;\r\n                        // element['babylon_id'] = oldID;\r\n                        tempMeshID[newID] = oldID;\r\n                        element.id = newID;\r\n                        // 遍历，更改parentID\r\n                        dataBabylon.meshes.forEach((element2: any) => {\r\n                            if (element2.parentId === oldID) {\r\n                                element2.parentId = newID;\r\n                                console.log('change parent id');\r\n                            }\r\n                        });\r\n                    } else {\r\n                        tempMeshID[element.id] = element.id;\r\n                        // element['babylon_id'] = element.id;\r\n                    }\r\n                    // console.error(element);\r\n                });\r\n\r\n                dataBabylon.meshes.forEach((element: any) => {\r\n                    let tempMesh = BabylonLoader.loadMesh(element, VR.BabylonEngine.Scene, '');\r\n                    newMeshes.push(tempMesh);\r\n                    tempMeshDic[element.id] = tempMesh;\r\n                });\r\n            }\r\n\r\n            // parent \r\n            // TODO: 若不为root，则mesh这里也要设定父子关系，parent为null则为当前选中物体\r\n            let parent = null;\r\n            let parentNode: Nullable<BABYLON.Node> = null;\r\n            if (editor.call('selector:type') === 'entity')\r\n                parent = editor.call('selector:items')[0];\r\n\r\n            if (!parent) {\r\n                parent = editor.call('entities:root');\r\n            } else {\r\n                // console.warn(parent);\r\n                // console.warn(parent.node);\r\n                if (parent.node) {\r\n                    parentNode = parent.node;\r\n                }\r\n            }\r\n\r\n\r\n            var entities: any[] = [];\r\n            var data: any[] = [];\r\n\r\n            // TODO: 还没有考虑有transformNode数据的情况\r\n            for (let index = 0, cache = newTransformNodes.length; index < cache; index++) {\r\n                var transformNode = newTransformNodes[index];\r\n                if (transformNode && transformNode._waitingParentId) {\r\n                    transformNode.parent = VR.BabylonEngine.Scene.getLastEntryByID(transformNode._waitingParentId);\r\n                    transformNode._waitingParentId = null;\r\n                }\r\n            }\r\n\r\n            for (let i = 0, len = newMeshes.length; i < len; i++) {\r\n                if (newMeshes[i] !== null) {\r\n                    if (newMeshes[i]!._waitingParentId) {\r\n                        if (tempMeshDic[newMeshes[i]!._waitingParentId!]) {\r\n                            newMeshes[i]!.parent = tempMeshDic[newMeshes[i]!._waitingParentId!];\r\n                        } else {\r\n                            newMeshes[i]!.parent = parentNode;\r\n                            parentMeshes.push(newMeshes[i]);\r\n                        }\r\n                    } else {\r\n                        newMeshes[i]!.parent = parentNode;\r\n                        parentMeshes.push(newMeshes[i]);\r\n                    }\r\n                    newMeshes[i]!._waitingParentId = null;\r\n                    // console.warn(newMeshes[i]);\r\n                }\r\n            }\r\n\r\n\r\n\r\n            for (let i = 0; i < parentMeshes.length; i++) {\r\n                BabylonLoader.meshParseRecursion(parentMeshes[i], assetID, tempMeshID, entities, data);\r\n            }\r\n\r\n            editor.call('selector:history', false);\r\n            editor.call('selector:set', 'entity', [editor.call('entities:get', parentMeshes[0]?.id)]);\r\n            editor.once('selector:change', function () {\r\n                editor.call('selector:history', true);\r\n            });\r\n\r\n            editor.call('make:scene:dirty');\r\n\r\n\r\n            // editor.emit('entities:load', true);\r\n\r\n\r\n            // TODO\r\n            // VeryEngine.viewScene.onPointerObservable.add(pointerInfo => {\r\n            //     switch (pointerInfo.type) {\r\n            //         case BABYLON.PointerEventTypes.POINTERDOWN:\r\n            //             // console.log('down');\r\n            //             if (pointerInfo!.pickInfo!.pickedMesh != null) {\r\n            //                 editor.call('pick', pointerInfo!.pickInfo!.pickedMesh);\r\n            //             } else {\r\n            //                 editor.call('pick', null);\r\n            //             }\r\n            //             // console.log(pointerInfo!.pickInfo!.pickedMesh);\r\n            //             break;\r\n            //     }\r\n            // });\r\n            // });\r\n        }\r\n    }\r\n\r\n    public static parseBabylon(assetID: string, babylonData: any): void {\r\n        if (babylonData) {\r\n            let parsedData: any = {};\r\n            // 材质\r\n            if (babylonData.materials) {\r\n                parsedData.materials = {};\r\n                babylonData.materials.forEach((material: any) => {\r\n                    parsedData.materials[material.id] = material;\r\n                });\r\n            }\r\n            // geometries\r\n            if (babylonData.geometries && babylonData.geometries.vertexData) {\r\n                parsedData.geometries = {};\r\n                babylonData.geometries.vertexData.forEach((geometry: any) => {\r\n                    parsedData.geometries[geometry.id] = geometry;\r\n                });\r\n            }\r\n            // mesh\r\n            if (babylonData.meshes) {\r\n                parsedData.meshes = {};\r\n                babylonData.meshes.forEach((mesh: any) => {\r\n                    parsedData.meshes[mesh.id] = mesh;\r\n                });\r\n            }\r\n            // transformNodes\r\n            if (babylonData.transformNodes) {\r\n                parsedData.transformNodes = {};\r\n                babylonData.transformNodes.forEach((transformNode: any) => {\r\n                    parsedData.transformNodes[transformNode.id] = transformNode;\r\n                });\r\n            }\r\n            BabylonLoader.babylonParsedData[assetID] = parsedData;\r\n        }\r\n    }\r\n\r\n    public static hasBabylobData(assetID: string): boolean {\r\n        return assetID in BabylonLoader.babylonCacheData;\r\n    }\r\n\r\n    public static getBabylonData(assetID: string): any {\r\n        if (assetID in BabylonLoader.babylonCacheData) {\r\n            return BabylonLoader.babylonCacheData[assetID];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static hasParsedBabylonData(assetID: string): boolean {\r\n        return assetID in BabylonLoader.babylonParsedData;\r\n    }\r\n\r\n    public static getParsedBabylonData(assetID: string): any {\r\n        if (assetID in BabylonLoader.babylonParsedData) {\r\n            return BabylonLoader.babylonParsedData[assetID];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    private static meshParseRecursion(mesh: Nullable<BABYLON.AbstractMesh>, assetID: string, tempMeshID: any, entities: any[], data: any[]): void {\r\n        if (mesh) {\r\n\r\n            let parentID: string = '';\r\n            if (mesh.parent !== null) {\r\n                parentID = mesh.parent!.id;\r\n            } else {\r\n                let root = editor.call('entities:root');\r\n                parentID = root.get('resource_id');\r\n                // root.insert('children', mesh.id);\r\n                // BabylonLoader.updateSceneData(parentID, root._data2);\r\n                // editor.call('make:scene:dirty');\r\n            }\r\n\r\n            var childs = mesh.getChildren();\r\n            var myChildren = [];\r\n            for (let k = 0; k < childs.length; k++) {\r\n                myChildren.push(childs[k].id);\r\n            }\r\n\r\n            let eulerAngle = Tools.radianToEulerAngle(mesh.rotation);\r\n\r\n            let entityData = {\r\n                name: mesh.name,\r\n                resource_id: mesh.id,\r\n                babylon_id: tempMeshID[mesh.id],  // 原始的mesh id\r\n                asset_id: assetID,  // 对应babylon资源id\r\n                parent: parentID,\r\n                position: [mesh.position.x, mesh.position.y, mesh.position.z],\r\n                rotation: [eulerAngle.x, eulerAngle.y, eulerAngle.z],\r\n                scale: [mesh.scaling.x, mesh.scaling.y, mesh.scaling.z],\r\n                children: myChildren,\r\n                enabled: mesh.isEnabled(),\r\n                checkCollisions: mesh.checkCollisions,\r\n                pickable: mesh.isPickable,\r\n                isVisible: mesh.isVisible,\r\n                tags: [],\r\n                type: 'mesh'\r\n            }\r\n\r\n            let entity = editor.call('entities:new', entityData);\r\n            entities.push(entity);\r\n            data.push(entity.origin);\r\n\r\n            for (let k = 0; k < childs.length; k++) {\r\n                BabylonLoader.meshParseRecursion(<BABYLON.AbstractMesh>childs[k], assetID, tempMeshID, entities, data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public static addSceneData(resource_id: string, data: any): void {\r\n        BabylonLoader.scenesData.entities[resource_id] = data;\r\n        BabylonLoader.scenesData['modified'] = BabylonLoader.createdAtTime();\r\n    }\r\n\r\n    public static updateSceneData(resource_id: string, data: any): void {\r\n        BabylonLoader.scenesData.entities[resource_id] = data;\r\n        BabylonLoader.scenesData['modified'] = BabylonLoader.createdAtTime();\r\n    }\r\n\r\n    public static createdAtTime(): string {\r\n        var now = new Date();\r\n        var Y = now.getFullYear();\r\n        var m = BabylonLoader.getRealTime(now.getMonth() + 1);\r\n        var d = BabylonLoader.getRealTime(now.getDate());\r\n        var H = BabylonLoader.getRealTime(now.getHours());\r\n        var i = BabylonLoader.getRealTime(now.getMinutes());\r\n        // var s = getRealTime(now.getSeconds());\r\n        return Y + \"-\" + m + \"-\" + d + \" \" + H + \":\" + i;\r\n    }\r\n\r\n    private static getRealTime(str: number): string {\r\n        if (str < 10) {\r\n            return \"0\" + str;\r\n        }\r\n        return str.toString();\r\n    }\r\n\r\n\r\n    public static loadLight(parsedLight: any, scene: BABYLON.Scene): Nullable<BABYLON.Light> {\r\n        // Light\r\n        if (parsedLight !== undefined && parsedLight !== null) {\r\n            var light = BABYLON.Light.Parse(parsedLight, scene);\r\n            return light;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadReflectionProbe(parsedReflectionProbe: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.ReflectionProbe> {\r\n        // ReflectionProbe\r\n        if (parsedReflectionProbe !== undefined && parsedReflectionProbe !== null) {\r\n            var reflectionProbe = BABYLON.ReflectionProbe.Parse(parsedReflectionProbe, scene, rootUrl);\r\n            return reflectionProbe;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadAnimation(parsedAnimation: any): Nullable<BABYLON.Animation[]> {\r\n        // Animation\r\n        if (parsedAnimation !== undefined && parsedAnimation !== null) {\r\n            const internalClass = BABYLON._TypeStore.GetClass(\"BABYLON.Animation\");\r\n            if (internalClass) {\r\n                let animation = internalClass.Parse(parsedAnimation);\r\n                return animation;\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMaterial(parsedMaterial: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.Material> {\r\n        // Material\r\n        if (parsedMaterial !== undefined && parsedMaterial !== null) {\r\n            var mat = BABYLON.Material.Parse(parsedMaterial, scene, rootUrl);\r\n            return mat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMultiMaterial(parsedMultiMaterial: any, scene: BABYLON.Scene): Nullable<BABYLON.MultiMaterial> {\r\n        // MultiMaterial\r\n        if (parsedMultiMaterial !== undefined && parsedMultiMaterial !== null) {\r\n            var mmat = BABYLON.MultiMaterial.ParseMultiMaterial(parsedMultiMaterial, scene);\r\n            return mmat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMorphTargetManager(managerData: any, scene: BABYLON.Scene): Nullable<BABYLON.MorphTargetManager> {\r\n        // MorphTargetManager\r\n        if (managerData !== undefined && managerData !== null) {\r\n            var morphTarget = BABYLON.MorphTargetManager.Parse(managerData, scene);\r\n            return morphTarget;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadSkeleton(parsedSkeleton: any, scene: BABYLON.Scene): Nullable<BABYLON.Skeleton> {\r\n        // Skeleton\r\n        if (parsedSkeleton !== undefined && parsedSkeleton !== null) {\r\n            var skeleton = BABYLON.Skeleton.Parse(parsedSkeleton, scene);\r\n            return skeleton;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadGeometry(vertexData: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.Geometry> {\r\n        // Geometry\r\n        if (vertexData !== undefined && vertexData !== null) {\r\n            var geometry = BABYLON.Geometry.Parse(vertexData, scene, rootUrl);\r\n            return geometry;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadTransformNode(parsedTransformNode: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.TransformNode> {\r\n        // TransformNode\r\n        if (parsedTransformNode !== undefined && parsedTransformNode !== null) {\r\n            var node = BABYLON.TransformNode.Parse(parsedTransformNode, scene, rootUrl);\r\n            return node;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static loadMesh(parsedMesh: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.AbstractMesh> {\r\n        // Mesh\r\n        if (parsedMesh !== undefined && parsedMesh !== null) {\r\n            var mesh = <BABYLON.AbstractMesh>BABYLON.Mesh.Parse(parsedMesh, scene, rootUrl);\r\n            return mesh;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static loadCamera(parsedCamera: any, scene: BABYLON.Scene): Nullable<BABYLON.Camera> {\r\n        // Camera\r\n        if (parsedCamera !== undefined && parsedCamera !== null) {\r\n            var camera = BABYLON.Camera.Parse(parsedCamera, scene);\r\n            return camera;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadAnimationGroup(parsedAnimationGroup: any, scene: BABYLON.Scene): Nullable<BABYLON.AnimationGroup> {\r\n        // AnimationGroup\r\n        if (parsedAnimationGroup !== undefined && parsedAnimationGroup !== null) {\r\n            var animationGroup = BABYLON.AnimationGroup.Parse(parsedAnimationGroup, scene);\r\n            return animationGroup;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static setBabylonParent(scene: BABYLON.Scene): void {\r\n        let index, cache = 0;\r\n        // Browsing all the graph to connect the dots\r\n        for (let index = 0, cache = scene.cameras.length; index < cache; index++) {\r\n            var camera = scene.cameras[index];\r\n            if (camera._waitingParentId) {\r\n                camera.parent = scene.getLastEntryByID(camera._waitingParentId);\r\n                camera._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        for (index = 0, cache = scene.lights.length; index < cache; index++) {\r\n            let light = scene.lights[index];\r\n            if (light && light._waitingParentId) {\r\n                light.parent = scene.getLastEntryByID(light._waitingParentId);\r\n                light._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        //加载完所有资源以后，设立父子关系，加入在自己的引擎中，这些关系有scene数据确立，可以取消此处的操作\r\n        // Connect parents & children and parse actions\r\n        for (index = 0, cache = scene.transformNodes.length; index < cache; index++) {\r\n            var transformNode = scene.transformNodes[index];\r\n            if (transformNode._waitingParentId) {\r\n                transformNode.parent = scene.getLastEntryByID(transformNode._waitingParentId);\r\n                transformNode._waitingParentId = null;\r\n            }\r\n        }\r\n        for (index = 0, cache = scene.meshes.length; index < cache; index++) {\r\n            var mesh = scene.meshes[index];\r\n            if (mesh._waitingParentId) {\r\n                mesh.parent = scene.getLastEntryByID(mesh._waitingParentId);\r\n                mesh._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        // freeze world matrix application\r\n        // 此部分为babylon隐藏方法\r\n        // for (index = 0, cache = scene.meshes.length; index < cache; index++) {\r\n        //     var currentMesh = scene.meshes[index];\r\n        //     if (currentMesh._waitingFreezeWorldMatrix) {\r\n        //         currentMesh.freezeWorldMatrix();\r\n        //         currentMesh._waitingFreezeWorldMatrix = null;\r\n        //     } else {\r\n        //         currentMesh.computeWorldMatrix(true);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","export class Config {\r\n\r\n    public static prefix: string = '/assets/';\r\n\r\n\r\n    public static projectID: string = '';\r\n    public static projectName: string = '';\r\n    public static projectData: any = {};\r\n\r\n    public static userID: string = '';\r\n    public static username: string = '';\r\n\r\n    public static assetsData: any = {};\r\n    \r\n    public static scenesData: any = {};\r\n    public static sceneIndex: number = 0;\r\n\r\n\r\n    public static tableAssetsID: string = '';\r\n    public static tableName: string = '';\r\n    public static tableData: any = null;\r\n\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n}","///// <reference path=\"./dts/babylon.d.ts\"/>\r\n\r\nimport { Config } from \"./config\";\r\nimport { Loader } from \"./loader\";\r\n\r\n// import { VE_Objects, VE_Manager } from \"../veryengine/veryEngine\";\r\n\r\n// import { BabylonEngine, Time } from \"../veryengine/babylon\";\r\n\r\nexport class Game {\r\n    private _canvas: HTMLCanvasElement;\r\n    private _fps: HTMLElement;\r\n    private _table!: HTMLElement;\r\n    private _showFps: boolean = true;\r\n    private _engine!: BABYLON.Engine;\r\n    private _scene!: BABYLON.Scene;\r\n    // private _camera!: BABYLON.FreeCamera;\r\n\r\n    constructor(canvasElement: HTMLCanvasElement, fps: HTMLElement) {\r\n        new Loader();\r\n        this._canvas = canvasElement;\r\n        VR.BabylonEngine.Canvas = this._canvas;\r\n        this._fps = fps;\r\n        // this._engine = new BABYLON.Engine(this._canvas, true);\r\n        this._table = document.getElementById(\"VeryTable\")!;\r\n    }\r\n\r\n    /**\r\n     * 创建场景，并且启动\r\n     */\r\n    createScene(datas: any): Game {\r\n\r\n        // 假设有运行中的engine，先停止，重新初始化\r\n        if (this._engine) {\r\n            // TODO: 对象中相关数据dispose\r\n            VR.VE_Manager.dispose();\r\n            // console.log(VE_Manager.projects.projects);\r\n            this._engine.dispose();\r\n        }\r\n        this._engine = new BABYLON.Engine(this._canvas, true);\r\n        VR.BabylonEngine.Engine = this._engine;\r\n        // Resize\r\n        let engine = this._engine;\r\n        window.addEventListener(\"resize\", function () {\r\n            engine.resize();\r\n        });\r\n\r\n        this._scene = new BABYLON.Scene(this._engine);\r\n        VR.BabylonEngine.Scene = this._scene;\r\n        VR.Time.start();\r\n\r\n        this._scene.clearColor = new BABYLON.Color4(116 / 255, 116 / 255, 116 / 255, 1);\r\n\r\n        // TODO: 设定相机\r\n        var camera = new BABYLON.ArcRotateCamera('Default', 100, 50, 50, new BABYLON.Vector3(0, 0, 0), this._scene);\r\n        camera.setPosition(new BABYLON.Vector3(0, 1, -20));\r\n        camera.attachControl(this._canvas, true);\r\n\r\n        // let inputMap: { [key: string]: boolean } = {};\r\n\r\n        // TODO: 加载过度动画开\r\n        // engine.hideLoadingUI();\r\n\r\n        engine.displayLoadingUI();\r\n\r\n        // 加载资源\r\n        // console.warn(Config.scenesData);\r\n        editor.call('scene:raw', Config.scenesData);\r\n\r\n        // 运行编译器\r\n        this.startVeryEngine(this._scene, datas);\r\n\r\n\r\n        engine.hideLoadingUI();\r\n\r\n        // 发布版编辑器\r\n        this._scene.onKeyboardObservable.add(kbInfo => {\r\n            if (kbInfo.type === BABYLON.KeyboardEventTypes.KEYDOWN) {\r\n                if (kbInfo.event.keyCode === 81 && kbInfo.event.ctrlKey && kbInfo.event.altKey) { //Ctrl + Q\r\n                    console.log('Ctrl + Alt + Q');\r\n                    this.toggleDebug();\r\n                }\r\n            }\r\n        });\r\n\r\n        this._engine.runRenderLoop(() => {\r\n            // if (this._canvas.width !== this._canvas.clientWidth) {\r\n            //     this._engine.resize();\r\n            // }\r\n\r\n            if (this._scene) {\r\n                if (this._scene.activeCamera) {\r\n                    this._scene.render();\r\n                }\r\n            }\r\n\r\n            // if (this._showFps) {\r\n            // \tthis.updateFpsPos();\r\n            // }\r\n\r\n\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    startVeryEngine(scene: BABYLON.Scene, datas: any): void {\r\n        let entrance: VR.VeryEngine = new VR.VeryEngine();\r\n        let projectName = \"测试项目\";\r\n        console.log(datas);\r\n        // console.log(`空行数：${hot1.countEmptyRows()}`);\r\n        try {\r\n            entrance.init(datas, projectName);\r\n        } catch (e) { // TODO: 可能会影响效率\r\n            console.error(e);\r\n        }\r\n\r\n        let objects: VR.VE_Objects = VR.VE_Manager.objects(projectName);\r\n        // 全局渲染帧循环\r\n        scene.onBeforeRenderObservable.add(() => {\r\n            // 添加帧函数\r\n            // VR.Time._sum();\r\n\r\n            // 触发响应循环\r\n            for (let i: number = 0; i < objects.count; i++) {\r\n                let objectID: string = objects.getObjectID(i);\r\n                objects.getVeryObject(objectID).update();\r\n            }\r\n\r\n        });\r\n\r\n        scene.onKeyboardObservable.add(kbInfo => {\r\n            if (kbInfo.type === BABYLON.KeyboardEventTypes.KEYDOWN) {\r\n                console.log(kbInfo.event.key);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 启动渲染循环；\r\n     */\r\n    animate(): Game {\r\n        this._engine.runRenderLoop(() => {\r\n            // if (this._canvas.width !== this._canvas.clientWidth) {\r\n            //     this._engine.resize();\r\n            // }\r\n\r\n            if (this._scene) {\r\n                this._scene.render();\r\n            }\r\n\r\n            if (this._showFps) {\r\n                this.updateFpsPos();\r\n            }\r\n\r\n\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 属性编辑器UI界面控制；\r\n     */\r\n    toggleDebug(): Game {\r\n        if (this._engine) {\r\n            // Always showing the debug layer, because you can close it by itself\r\n            var scene = this._engine.scenes[0];\r\n            if (scene.debugLayer.isVisible()) {\r\n                scene.debugLayer.hide();\r\n            }\r\n            else {\r\n                // 此处修改了babylon.d.ts文件\r\n                scene.debugLayer.show({ embedMode: true });\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 更新fps显示及显示位置\r\n     */\r\n    updateFpsPos(): void {\r\n        if (this._fps) {\r\n            // this._fps.style.right = document.body.clientWidth - (this._table.clientWidth + this._canvas.clientWidth) + \"px\";\r\n\r\n            this._fps.innerHTML = this._engine.getFps().toFixed() + \" fps\";\r\n        }\r\n    }\r\n}\r\n","export * from './game';\r\nexport * from './scenes';\r\nexport * from './config';\r\nexport * from './loader';\r\nexport * from './babylonloader';","import { Ajax, AjaxRequest, Observer, Tools } from \"../lib\";\r\nimport { BabylonLoader } from \"./babylonloader\";\r\n\r\nexport class Loader {\r\n\r\n\r\n    public constructor() {\r\n\r\n        editor.method('initAssets', (assets_data: any) => {\r\n            if (assets_data.assets)\r\n                onLoad(assets_data.assets);\r\n        });\r\n\r\n        // 加载assets数据，data为assets数据\r\n        var onLoad = function (data: any) {\r\n            editor.call('assets:progress', 0.5);\r\n\r\n            var count = 0;\r\n            let assetsLength: number = Object.getOwnPropertyNames(data).length;\r\n            // 加载Asset资源\r\n            var load = function (asset_data: any) {\r\n                editor.call('loadAsset', asset_data, function () {\r\n                    count++;\r\n                    editor.call('assets:progress', (count / assetsLength) * 0.5 + 0.5);\r\n                    if (count >= assetsLength) {\r\n                        editor.call('assets:progress', 1);\r\n                        editor.emit('assets:load');\r\n                    }\r\n                });\r\n            };\r\n\r\n            for (let key in data) {\r\n                load(data[key]);\r\n            }\r\n\r\n        };\r\n\r\n\r\n        editor.method('scene:raw', function (data: any) {\r\n            // editor.call('selector:clear');\r\n            // editor.call('entities:clear');\r\n            // editor.call('attributes:clear');\r\n\r\n            // console.log(data);\r\n            // console.log(data.entities);\r\n\r\n            // var total = Object.keys(data.entities).length;\r\n            // var i = 0;\r\n\r\n            // list\r\n            for (var key in data.entities) {\r\n                let entity = new Observer(data.entities[key]);\r\n                // editor.call('entities:add', entity);\r\n                // p.progress = (++i / total) * 0.8 + 0.1;\r\n                // console.warn(entity);\r\n                if (!data.entities[key].root) {\r\n\r\n                    editor.call('create:scene:element', entity);\r\n                }\r\n            }\r\n\r\n            // p.progress = 1;\r\n\r\n            // loadedEntities = true;\r\n            editor.emit('entities:load');\r\n        });\r\n\r\n\r\n        var childIndex: { [key: string]: any } = {};\r\n        var entitiesIndex: { [key: string]: any } = {};\r\n        editor.method('create:scene:element', (entity: Observer) => {\r\n            // console.log('create scene element');\r\n            // console.error(entity);\r\n            if (entity.get('type') === 'light') {\r\n                // Lights\r\n                var light = BABYLON.Light.Parse(entity.get('data'), VR.BabylonEngine.Scene);\r\n                if (light) {\r\n                    entitiesIndex[entity.get('resource_id')] = light;\r\n                    entity.node = light;\r\n                    light.id = entity.get('resource_id');\r\n                    childAndParent(entity, light);\r\n                    // (<BABYLON.ShadowLight>light)\r\n                    // console.warn(light);\r\n                } else {\r\n                    console.error('light创建失败，light原始信息：');\r\n                    console.error(entity.get('data'));\r\n                }\r\n            } else if (entity.get('type') === 'camera') {\r\n                // TODO: camera要特别处理\r\n                // Cameras\r\n                // var camera = BABYLON.Camera.Parse(entity.get('data'), VeryEngine.viewScene);\r\n                // camera.attachControl(VeryEngine.viewCanvasElement);\r\n                // entity.node = camera;\r\n                // entitiesIndex[entity.get('resource_id')] = camera;\r\n                // camera!.id = entity.get('resource_id');\r\n                // childAndParent(entity, camera);\r\n                // console.warn(camera);\r\n            } else if (entity.get('type') === 'box') {\r\n                // box\r\n                var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VR.BabylonEngine.Scene);\r\n                entity.node = box;\r\n                entitiesIndex[entity.get('resource_id')] = box;\r\n                box.id = entity.get('resource_id');\r\n                box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                box.isEnabled(entity.get('enabled'));\r\n                box.isPickable = entity.get('pickable');\r\n                box.checkCollisions = entity.get('checkCollisions');\r\n                box.isVisible = entity.get('isVisible');\r\n                // 加载自定义关联材质\r\n                if (entity.get('material_id')) {\r\n\r\n                }\r\n                childAndParent(entity, box);\r\n                // console.warn(box);\r\n            } else if (entity.get('type') === 'mesh') {\r\n                // 模型异步加载，因为mesh需要先加载.babylon文件；\r\n                // console.warn('scene创建mesh：' + entity.get('name'));\r\n                editor.call('scene:mesh:create', entity);\r\n            }\r\n        });\r\n\r\n        let childAndParent = (entity: Observer, node: Nullable<BABYLON.Node>) => {\r\n            // children\r\n            let children = entity.get('children');\r\n            for (var i = 0; i < children.length; i++) {\r\n                childIndex[children[i]] = {\r\n                    index: i,\r\n                    parent: node\r\n                };\r\n\r\n                if (entitiesIndex[children[i]]) {\r\n                    insertChild(node, entitiesIndex[children[i]], i);\r\n                }\r\n            }\r\n\r\n            // parenting\r\n            if (!entity.get('parent')) {\r\n                // babylon root\r\n            } else {\r\n                // child\r\n                var details = childIndex[entity.get('resource_id')];\r\n                if (details && details.parent) {\r\n                    insertChild(details.parent, node, details.index);\r\n                }\r\n            }\r\n        }\r\n\r\n        let insertChild = (parent: Nullable<BABYLON.Node>, node: Nullable<BABYLON.Node>, index: number) => {\r\n            if (node !== null) {\r\n                node.parent = parent;\r\n            }\r\n        }\r\n\r\n        editor.method('scene:mesh:create', (entity: Observer) => {\r\n            loadBabylon(entity);\r\n        });\r\n\r\n        let loadingBabylonFlag: { [key: string]: boolean } = {};\r\n        let toLoadEntity: { [key: string]: Observer[] } = {};\r\n        let loadBabylon = (entity: Observer) => {\r\n            let assetID: string = entity.get('asset_id');\r\n            let dataBabylon: any = null;\r\n\r\n            if (BabylonLoader.hasBabylobData(assetID)) {\r\n                dataBabylon = BabylonLoader.getParsedBabylonData(assetID);\r\n                // BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n                // 关联mesh\r\n                assembleSceneMesh(entity, dataBabylon);\r\n            } else {\r\n                if (assetID in loadingBabylonFlag) {\r\n                    toLoadEntity[assetID].push(entity);\r\n                } else {\r\n                    loadingBabylonFlag[assetID] = true;\r\n                    toLoadEntity[assetID] = [entity];\r\n                    // console.warn(BabylonLoader.assetsData);\r\n                    var data1 = {\r\n                        url: BabylonLoader.prefix + assetID + '/' + BabylonLoader.assetsData.assets[assetID].name,\r\n                        method: 'GET',\r\n                        // auth: true,\r\n                        data: null,\r\n                        ignoreContentType: true,\r\n                        // headers: {\r\n                        //     Accept: 'application/json'\r\n                        // }\r\n                    };\r\n                    // 直接返回babylon json格式内容数据\r\n                    (<AjaxRequest>new Ajax(data1))\r\n                        .on('load', (status: any, data: any) => {\r\n\r\n                            dataBabylon = data;\r\n                            BabylonLoader.babylonCacheData[assetID] = dataBabylon;\r\n                            BabylonLoader.parseBabylon(assetID, data);\r\n                            BabylonLoader.parseBabylon(assetID, data);\r\n                            dataBabylon = BabylonLoader.getParsedBabylonData(assetID);\r\n                            toLoadEntity[assetID].forEach((item: Observer) => {\r\n                                assembleSceneMesh(item, dataBabylon);\r\n                            });\r\n                            // 关联mesh\r\n                        }).on('error', (evt: any) => {\r\n                            console.error('scene数据匹配babylon mesh数据错误！');\r\n                            console.error(evt);\r\n                        });;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let assembleSceneMesh = (entity: Observer, parsedBabylon: any) => {\r\n            // TODO: 暂时未考虑TransformNode数据的情况\r\n            if (parsedBabylon) {\r\n                let assetID: string = entity.get('asset_id');\r\n                // 先从.babylon提取原始mesh数据\r\n                let meshID: string = entity.get('babylon_id');\r\n                if (parsedBabylon.meshes[meshID]) {\r\n                    let meshData = parsedBabylon.meshes[meshID];\r\n                    // 结合scene和babylon数据，更新mesh信息\r\n                    meshData.position = entity.has('position') && entity.get('position') ? entity.get('position') : meshData.position;\r\n                    let recordRotation = entity.get('rotation');\r\n                    if (recordRotation && recordRotation.length > 0) {\r\n                        recordRotation = Tools.vector3ToArray(Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(recordRotation)));\r\n                    } else {\r\n                        recordRotation = meshData.rotation;\r\n                    }\r\n                    meshData.rotation = recordRotation;\r\n                    meshData.scale = entity.has('scale') && entity.get('scale') ? entity.get('scale') : meshData.scal;\r\n                    meshData.name = entity.has('name') && entity.get('name') ? entity.get('name') : meshData.name;\r\n                    meshData.id = entity.has('resource_id') && entity.get('resource_id') ? entity.get('resource_id') : meshData.id;\r\n                    meshData.isEnabled = entity.has('enabled') ? entity.get('enabled') : meshData.isEnabled;\r\n                    meshData.isVisible = entity.has('isVisible') ? entity.get('isVisible') : meshData.isVisible;\r\n                    // TODO：发布状态下，听数据的\r\n                    meshData.pickable = entity.has('pickable') ? entity.get('pickable') : meshData.pickable;\r\n                    // TODO：scene编辑条件下默认就是加载状态；\r\n                    // meshData.pickable = true;\r\n                    meshData.checkCollisions = entity.has('checkCollisions') ? entity.get('checkCollisions') : meshData.checkCollisions;\r\n                    meshData.materialId = entity.has('material_id') ? entity.get('material_id') : meshData.materialId;\r\n                    // 要注意是否为root id\r\n                    meshData.parentId = entity.has('parent') ? entity.get('parent') : meshData.parentId;\r\n\r\n\r\n                    // 判断是否关联了geometry\r\n                    if (meshData.geometryId) {\r\n                        if (VR.BabylonEngine.Scene.getGeometryByID(meshData.geometryId) === null) {\r\n                            if (parsedBabylon.geometries && parsedBabylon.geometries[meshData.geometryId]) {\r\n                                let vertexData = parsedBabylon.geometries[meshData.geometryId];\r\n                                BabylonLoader.loadGeometry(vertexData, VR.BabylonEngine.Scene, '');\r\n                            }\r\n                        }\r\n                    }\r\n                    // 组装material\r\n                    // console.error(meshData.materialId);\r\n                    if (meshData.materialId) {\r\n                        if (VR.BabylonEngine.Scene.getMaterialByID(meshData.materialId) === null) {\r\n                            // console.error(BabylonLoader.assetsData.babylon[assetID]);\r\n                            if (BabylonLoader.assetsData.babylon[assetID]) {\r\n                                let mats = BabylonLoader.assetsData.babylon[assetID]['materials'];\r\n                                if (mats && mats[meshData.materialId]) {\r\n                                    let matAssetID = mats[meshData.materialId].asset_id;\r\n                                    if (BabylonLoader.assetsData.assets[matAssetID]) {\r\n                                        let newMat = BabylonLoader.assetsData.assets[matAssetID].data;\r\n\r\n                                        // 检测texture\r\n                                        if (newMat.diffuseTexture && newMat.diffuseTexture.texture_id) {\r\n                                            newMat.diffuseTexture.name = BabylonLoader.prefix + newMat.diffuseTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.diffuseTexture.texture_id].name;\r\n                                            // console.warn(newMat.diffuseTexture.name);\r\n                                        }\r\n                                        if (newMat.specularTexture && newMat.specularTexture.texture_id) {\r\n                                            newMat.specularTexture.name = BabylonLoader.prefix + newMat.specularTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.specularTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.reflectionTexture && newMat.reflectionTexture.texture_id) {\r\n                                            newMat.reflectionTexture.name = BabylonLoader.prefix + newMat.reflectionTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.reflectionTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.refractionTexture && newMat.refractionTexture.texture_id) {\r\n                                            newMat.refractionTexture.name = BabylonLoader.prefix + newMat.refractionTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.refractionTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.emissiveTexture && newMat.emissiveTexture.texture_id) {\r\n                                            newMat.emissiveTexture.name = BabylonLoader.prefix + newMat.emissiveTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.emissiveTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.bumpTexture && newMat.bumpTexture.texture_id) {\r\n                                            newMat.bumpTexture.name = BabylonLoader.prefix + newMat.bumpTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.bumpTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.opacityTexture && newMat.opacityTexture.texture_id) {\r\n                                            newMat.opacityTexture.name = BabylonLoader.prefix + newMat.opacityTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.opacityTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.ambientTexture && newMat.ambientTexture.texture_id) {\r\n                                            newMat.ambientTexture.name = BabylonLoader.prefix + newMat.ambientTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.ambientTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.lightmapTexture && newMat.lightmapTexture.texture_id) {\r\n                                            newMat.lightmapTexture.name = BabylonLoader.prefix + newMat.lightmapTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.lightmapTexture.texture_id].name;\r\n                                        }\r\n                                        // console.error(newMat);\r\n                                        BabylonLoader.loadMaterial(newMat, VR.BabylonEngine.Scene, '');\r\n                                    } else {\r\n                                        console.warn('scene mesh warn');\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                console.warn('scene mesh warn');\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 加载mesh\r\n                    let mesh = BabylonLoader.loadMesh(meshData, VR.BabylonEngine.Scene, '');\r\n                    entity.node = mesh;\r\n                    entitiesIndex[entity.get('resource_id')] = mesh;\r\n                    childAndParent(entity, mesh);\r\n                } else {\r\n                    console.warn('scene mesh warn');\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n}","export class Scenes {\r\n\r\n\r\n\r\n  public constructor() {\r\n    // connect to server\r\n    // load project data\r\n    // analysis data\r\n    // load original model\r\n    // load scene object from original model\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n}","export * from './lib';\r\nexport * from './game';","import { Events } from \"../lib\";\r\n\r\nexport class Ajax {\r\n\r\n    public constructor(args: object | string) {\r\n        if (typeof (args) === 'string')\r\n            args = { url: args };\r\n\r\n        return new AjaxRequest(args);\r\n    }\r\n\r\n    public static get(url: string): AjaxRequest {\r\n        return new AjaxRequest({ url: url });\r\n    }\r\n\r\n    public static post(url: string, data: any): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'POST',\r\n            url: url,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    public static put(url: string, data: any): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'PUT',\r\n            url: url,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    public static delete(url: string): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'DELETE',\r\n            url: url\r\n        });\r\n    }\r\n\r\n    public static params: { [key: string]: any } = {};\r\n\r\n    public static param(name: string, value: any): void {\r\n        Ajax.params[name] = value;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class AjaxRequest extends Events {\r\n\r\n    private _progress: number = 0;\r\n\r\n    private _xhr: XMLHttpRequest;\r\n\r\n    public notJson: boolean;\r\n\r\n    public constructor(args: any) {\r\n        super();\r\n\r\n        if (!args) {\r\n            throw new Error('ajax请求无参数，请检查！')\r\n        }\r\n\r\n        this._progress = 0.0;\r\n        this.emit('progress', this._progress);\r\n\r\n        this._xhr = new XMLHttpRequest();\r\n\r\n        // send cookies\r\n        if (args.cookies)\r\n            this._xhr.withCredentials = true;\r\n\r\n        // events\r\n        this._xhr.addEventListener('load', this._onLoad.bind(this), false);\r\n        // this._xhr.addEventListener('progress', this._onProgress.bind(this), false);\r\n        this._xhr.upload.addEventListener('progress', this._onProgress.bind(this), false);\r\n        this._xhr.addEventListener('error', this._onError.bind(this), false);\r\n        this._xhr.addEventListener('abort', this._onAbort.bind(this), false);\r\n\r\n        // url\r\n        let url: string = args.url;\r\n\r\n        // query\r\n        if (args.query && Object.keys(args.query).length) {\r\n            if (url.indexOf('?') === -1) {\r\n                url += '?';\r\n            }\r\n\r\n            var query = [];\r\n            for (var key in args.query) {\r\n                query.push(key + '=' + args.query[key]);\r\n            }\r\n\r\n            url += query.join('&');\r\n        }\r\n\r\n        // templating\r\n        var parts = url.split('{{');\r\n        if (parts.length > 1) {\r\n            for (var i = 1; i < parts.length; i++) {\r\n                var ends = parts[i].indexOf('}}');\r\n                var key = parts[i].slice(0, ends);\r\n\r\n                if (Ajax.params[key] === undefined)\r\n                    continue;\r\n\r\n                // replace\r\n                parts[i] = Ajax.params[key] + parts[i].slice(ends + 2);\r\n            }\r\n\r\n            url = parts.join('');\r\n        }\r\n\r\n        // open request\r\n        this._xhr.open(args.method || 'GET', url, true);\r\n\r\n        // 返回数据是否为json格式\r\n        this.notJson = args.notJson || false;\r\n\r\n        // header for PUT/POST\r\n        if (!args.ignoreContentType && (args.method === 'PUT' || args.method === 'POST' || args.method === 'DELETE'))\r\n            this._xhr.setRequestHeader('Content-Type', 'application/json');\r\n\r\n        // TODO: 权限header参数\r\n        // if (args.auth && config.accessToken) {\r\n        //     this._xhr.setRequestHeader('Authorization', 'Bearer ' + config.accessToken);\r\n        // }\r\n\r\n        if (args.headers) {\r\n            for (var key in args.headers)\r\n                this._xhr.setRequestHeader(key, args.headers[key]);\r\n        }\r\n\r\n        // stringify data if needed\r\n        if (args.data && typeof (args.data) !== 'string' && !(args.data instanceof FormData)) {\r\n            args.data = JSON.stringify(args.data);\r\n        }\r\n\r\n        // make request\r\n        this._xhr.send(args.data || null);\r\n    }\r\n\r\n    private _onLoad(): void {\r\n        this._progress = 1.0;\r\n        this.emit('progress', 1.0);\r\n\r\n        if (this._xhr.status === 200 || this._xhr.status === 201) {\r\n            if (this.notJson) {\r\n                this.emit('load', this._xhr.status, this._xhr.responseText);\r\n            } else {\r\n                try {\r\n                    var json = JSON.parse(this._xhr.responseText);\r\n                } catch (ex) {\r\n                    this.emit('error', this._xhr.status || 0, new Error('invalid json'));\r\n                    return;\r\n                }\r\n                this.emit('load', this._xhr.status, json);\r\n            }\r\n        } else {\r\n            try {\r\n                var json = JSON.parse(this._xhr.responseText);\r\n                var msg = json.message;\r\n                if (!msg) {\r\n                    msg = json.error || (json.response && json.response.error);\r\n                }\r\n\r\n                if (!msg) {\r\n                    msg = this._xhr.responseText;\r\n                }\r\n\r\n                this.emit('error', this._xhr.status, msg);\r\n            } catch (ex) {\r\n                this.emit('error', this._xhr.status);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onError(evt: any): void {\r\n        this.emit('error', 0, evt);\r\n    }\r\n\r\n    private _onAbort(evt: any): void {\r\n        this.emit('error', 0, evt);\r\n    }\r\n\r\n    private _onProgress(evt: any): void {\r\n        if (!evt.lengthComputable)\r\n            return;\r\n\r\n        var progress = evt.loaded / evt.total;\r\n\r\n        if (progress !== this._progress) {\r\n            this._progress = progress;\r\n            this.emit('progress', this._progress);\r\n        }\r\n    }\r\n\r\n    public abort(): void {\r\n        this._xhr.abort();\r\n    }\r\n\r\n\r\n}","import { Events } from \"./events\";\r\n\r\nexport class Editor extends Events {\r\n\r\n  // 相较于Events，同一个函数名只可代表一个函数；\r\n\r\n  // 某个name对应的某个事件，name与Function是1对1的关系；\r\n  private _hooks: { [key: string]: Function } = {};\r\n\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * 添加全局函数，函数名与函数本体一一对应，不能重名；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public method(name: string, fn: Function): void {\r\n    if (this._hooks[name] !== undefined) {\r\n      throw new Error(\"can't override hook: \" + name);\r\n    }\r\n    this._hooks[name] = fn;\r\n  };\r\n\r\n  /**\r\n   * 移除某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public methodRemove(name: string): void {\r\n    delete this._hooks[name];\r\n  };\r\n\r\n  /**\r\n   * 执行某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public call(name: string, ...args: any[]): any {\r\n    if (this._hooks[name]) {\r\n      var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n      try {\r\n        return this._hooks[name].apply(null, args);\r\n      } catch (ex) {\r\n        console.error(\r\n          \"%c%s %c(editor.method error)\",\r\n          \"color: #06f\",\r\n          name,\r\n          \"color: #f00\"\r\n        );\r\n        console.error(ex.stack);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n}","export class Events {\r\n\r\n    // 相较于Editor，同一个函数名可包含一系列函数，不仅仅是一个，且有once功能；\r\n  \r\n    public get suspendEvents(): boolean {\r\n      return this._suspendEvents;\r\n    }\r\n    public set suspendEvents(val: boolean) {\r\n      this._suspendEvents = val;\r\n    }\r\n    private _suspendEvents: boolean = false;\r\n  \r\n    // 某个name对应的事件数组，name与Function是1对多的关系；\r\n    private _events: { [key: string]: Function[] } = {};\r\n  \r\n    public constructor() {\r\n  \r\n    }\r\n  \r\n    /**\r\n     * 添加事件数组，若name相同，则在数组末尾继续添加；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public on(name: string, fn: Function): EventHandle {\r\n      let events: Function[] = this._events[name];\r\n      if (events === undefined) {\r\n        this._events[name] = [fn];\r\n      } else {\r\n        if (events.indexOf(fn) == -1) {\r\n          events.push(fn);\r\n        }\r\n      }\r\n      return new EventHandle(this, name, fn);\r\n    }\r\n  \r\n    /**\r\n     * emit后只执行一次；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public once(name: string, fn: Function): EventHandle {\r\n      let self = this;\r\n      let evt: EventHandle = this.on(name, function (\r\n        arg0: any,\r\n        arg1: any,\r\n        arg2: any,\r\n        arg3: any,\r\n        arg4: any,\r\n        arg5: any,\r\n        arg6: any,\r\n        arg7: any\r\n      ) {\r\n        fn.call(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n        evt.unbind();\r\n      });\r\n      return evt;\r\n    }\r\n  \r\n    /**\r\n     * 执行事件；\r\n     * @param name 函数名；\r\n     * @param arg0 函数参数1，可选；\r\n     * @param arg1 函数参数2，可选；\r\n     * @param arg2 函数参数3，可选；\r\n     * @param arg3 函数参数4，可选；\r\n     * @param arg4 函数参数5，可选；\r\n     * @param arg5 函数参数6，可选；\r\n     * @param arg6 函数参数7，可选；\r\n     * @param arg7 函数参数8，可选；\r\n     */\r\n    public emit(name: string,\r\n      arg0?: any,\r\n      arg1?: any,\r\n      arg2?: any,\r\n      arg3?: any,\r\n      arg4?: any,\r\n      arg5?: any,\r\n      arg6?: any,\r\n      arg7?: any\r\n    ): Events {\r\n      if (this._suspendEvents) return this;\r\n  \r\n      let events: Function[] = this._events[name];\r\n      if (!events) return this;\r\n  \r\n      // 返回新数组\r\n      events = events.slice(0);\r\n  \r\n      for (let i: number = 0; i < events.length; i++) {\r\n        if (!events[i]) continue;\r\n        try {\r\n          events[i].call(this, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n        } catch (ex) {\r\n          console.info(\"%c%s %c(event error)\", \"color: #06f\", name, \"color: #f00\");\r\n          console.log(ex.stack);\r\n        }\r\n      }\r\n  \r\n      return this;\r\n    };\r\n  \r\n    /**\r\n     * 取消Events事件绑定，若name为空，则清空events；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public unbind(name?: string, fn?: Function): Events {\r\n      if (name) {\r\n        let events: Function[] = this._events[name];\r\n        if (!events) return this;\r\n  \r\n        if (fn) {\r\n          let i: number = events.indexOf(fn);\r\n          if (i !== -1) {\r\n            if (events.length === 1) {\r\n              delete this._events[name];\r\n            } else {\r\n              events.splice(i, 1);\r\n            }\r\n          }\r\n        } else {\r\n          delete this._events[name];\r\n        }\r\n      } else {\r\n        this._events = {};\r\n      }\r\n  \r\n      return this;\r\n    };\r\n  \r\n  }\r\n  \r\n  \r\n  export class EventHandle {\r\n  \r\n    public name: Nullable<string>;\r\n  \r\n    public owner: Nullable<Events>;\r\n  \r\n    public fn: Nullable<Function>;\r\n  \r\n    public constructor(owner: Events, name: string, fn: Function) {\r\n      this.owner = owner;\r\n      this.name = name;\r\n      this.fn = fn;\r\n    }\r\n  \r\n    public unbind(): void {\r\n      if (!this.owner) return;\r\n  \r\n      this.owner.unbind(this.name!, this.fn!);\r\n  \r\n      this.owner = null;\r\n      this.name = null;\r\n      this.fn = null;\r\n    }\r\n  \r\n    public call(): void {\r\n      if (!this.fn) return;\r\n  \r\n      this.fn.call(\r\n        this.owner!,\r\n        arguments[0],\r\n        arguments[1],\r\n        arguments[2],\r\n        arguments[3],\r\n        arguments[4],\r\n        arguments[5],\r\n        arguments[6],\r\n        arguments[7]\r\n      );\r\n    }\r\n  \r\n    public on(name: string, fn: Function): EventHandle {\r\n      return this.owner!.on(name, fn);\r\n    }\r\n  \r\n  }","export class GUID {\r\n\r\n    /**\r\n     * 创建GUID唯一标志，注意：采用大数法，有很小的可能性会重复，一般够用；\r\n     */\r\n    public static create(): string {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c: string) {\r\n        let r = Math.random() * 16 | 0,\r\n          v = (c === 'x') ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n    }\r\n  \r\n  }","export * from './events';\r\nexport * from './editor';\r\nexport * from './observer';\r\nexport * from './tools';\r\nexport * from './guid';\r\nexport * from './ajax';","import { Events } from './events';\r\n\r\n//  TODO： 当前暂不考虑赋值会超出现有类型的情况，比如原来是个number，赋值为了array；\r\nexport class Observer extends Events {\r\n\r\n    public get className(): string {\r\n        return 'Observer';\r\n    }\r\n\r\n    public origin: any;\r\n\r\n    private SEPARATOR: string = '.';\r\n\r\n\r\n    private _destroyed: boolean;\r\n    public _path: string;\r\n    // TODO\r\n    public _keys: string[]; // 记录对象的key、value值；\r\n\r\n\r\n    public _data: { [key: string]: any }; // 采用此对象，完整记录所有值；\r\n    public _data2: { [key: string]: any }; // 采用此对象，完整记录所有值；\r\n    public _dataType: { [key: string]: boolean } = {}; // 暂时只判断是否为array分拆而成的类型；\r\n    public _dataType2: { [key: string]: boolean } = {}; // 暂时只判断是否为array分拆而成的类型；\r\n\r\n\r\n\r\n\r\n    public _parent: any; // 当前父物体\r\n    // public _parentPath: string;\r\n    private _parentField: any;\r\n    private _parentKey: any;\r\n\r\n    private _silent: boolean;\r\n\r\n    public history!: History;\r\n    // private sync!: History;\r\n\r\n    public node: any = null;\r\n\r\n    public reparenting: boolean = false;\r\n    private _pathsWithDuplicates: { [key: string]: boolean } = {};\r\n\r\n    // entity, assets, components: script, 一般components, selector, history\r\n    public constructor(data: any, options?: any) {\r\n        super();\r\n\r\n        this.origin = data;\r\n        options = options || {};\r\n\r\n\r\n\r\n\r\n\r\n        this._destroyed = false;\r\n        this._path = '';\r\n        this._keys = [];\r\n        this._data = {};\r\n\r\n        this._data2 = {};\r\n\r\n        // array paths where duplicate entries are allowed - normally\r\n        // we check if an array already has a value before inserting it\r\n        // but if the array path is in here we'll allow it\r\n        if (options.pathsWithDuplicates) {\r\n            this._pathsWithDuplicates = {};\r\n            for (let i = 0; i < options.pathsWithDuplicates.length; i++) {\r\n                this._pathsWithDuplicates[options.pathsWithDuplicates[i]] = true;\r\n            }\r\n        }\r\n\r\n        this.patchData(data);\r\n\r\n        // for (let ke in this._data) {\r\n        //   debug.log('key: ' + ke);\r\n        //   debug.log(this._data[ke]);\r\n        // }\r\n\r\n        // this._parent = options.parent || null;\r\n        // this._parentPath = options.parentPath || '';\r\n        // this._parentField = options.parentField || null;\r\n        // this._parentKey = options.parentKey || null;\r\n\r\n        this._silent = false;\r\n    }\r\n\r\n    public patchData(data: any): void {\r\n        if (typeof data !== 'object') {\r\n            debug.warn(this.className + ': 不是正确的json对象，打印：\\n' + data);\r\n            return;\r\n        }\r\n\r\n        for (let key in data) {\r\n            if (typeof data[key] === 'object') {\r\n                // 对象属性\r\n                // debug.log('对象属性：' + key);\r\n                // debug.log(data[key]);\r\n                // this._prepare(this, key, data[key]);\r\n                this.parserObject(key, key, data[key]);\r\n            } else {\r\n                // 一般属性\r\n                // debug.log('一般属性：' + key);\r\n                // debug.log(data[key]);\r\n                this.set(key, data[key]);\r\n                this._dataType[key] = false;\r\n                this._dataType2[key] = false;\r\n                // this.set(key, data[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: 若设置值为object，需要再parse\r\n    public set(path: string, value: any): void {\r\n        // console.warn(path + ' : ' + value);\r\n        let oldValue = this._data[path];\r\n        // console.warn(path);\r\n        // console.warn(value);\r\n        let keys = path.split('.');\r\n        let parentID = '';\r\n        for (let i = 0; i < keys.length - 1; i++) {\r\n            if (i === 0) {\r\n                parentID = keys[i];\r\n            } else {\r\n                parentID += this.SEPARATOR + keys[i];\r\n            }\r\n        }\r\n        // 数组处理，其他形式暂不考虑\r\n        if (keys.length > 1 && this._dataType[path]) {\r\n            let index = parseInt(keys[keys.length - 1]);\r\n            this._data[path] = value;\r\n            // 上一级数组修改\r\n            this._data[parentID][index] = value;\r\n        } else {\r\n            // if (value instanceof Array) {\r\n            //     value = value.slice(0);\r\n            // }\r\n            this._data[path] = value;\r\n            this.updateChildData(path, value);\r\n            this._data2[path] = value;\r\n        }\r\n        // console.warn(this._data);\r\n\r\n        // if (parentID && this._dataType2[parentID] && this.isNumber(keys[keys.length - 1])) {\r\n        //     this._data2[parentID][parseInt(keys[keys.length - 1])] = value;\r\n        // }\r\n\r\n        this.emit(path + ':set', value, oldValue);\r\n        this.emit('*:set', path, value, oldValue);\r\n    }\r\n\r\n    private isNumber(str: string): boolean {\r\n        var n = Number(str);\r\n        return !isNaN(n) ? true : false;\r\n    }\r\n\r\n    private updateChildData(path: string, value: any): void {\r\n        if (value instanceof Array) {\r\n            for (let key in this._data) {\r\n                if (key.startsWith(path + this.SEPARATOR)) {\r\n                    delete this._data[key];\r\n                    delete this._dataType[key];\r\n                }\r\n            }\r\n            let newPath = '';\r\n            for (let i = 0; i < value.length; i++) {\r\n                newPath = path + this.SEPARATOR + i.toString();\r\n                this._data[newPath] = value[i];\r\n                this._dataType[newPath] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO\r\n    public unset(path: string, value: any): boolean {\r\n        // console.log(path + ' : ' + value);\r\n        if (!this.has(path)) {\r\n            return false;\r\n        }\r\n        let oldValue = this._data[path];\r\n        delete this._data[path];\r\n        delete this._dataType[path];\r\n\r\n        delete this._data2[path];\r\n        delete this._dataType2[path];\r\n\r\n        this.emit(path + ':set', value, oldValue);\r\n        this.emit('*:set', path, value, oldValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    // 在数组的某个指定位置增加值\r\n    public insert(path: string, value: any, ind: number | undefined): boolean {\r\n        // console.error(path + ':insert-value: ' + value);\r\n        // console.warn(this._data);\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        if (value instanceof Array) {\r\n            value = value.slice(0);\r\n        }\r\n        // if (!this._pathsWithDuplicates || !this._pathsWithDuplicates[path]) {\r\n        //     if (arr.indexOf(value) !== -1) {\r\n        //         return false;\r\n        //     }\r\n        // }\r\n        if (ind === undefined) {\r\n            arr.push(value);\r\n            ind = arr.length - 1;\r\n        } else {\r\n            arr.splice(ind, 0, value);\r\n        }\r\n        this.updateChildData(path, arr);\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // console.error(arr2);\r\n        // if (arr2) {\r\n        //     // if (!this._pathsWithDuplicates || !this._pathsWithDuplicates[path]) {\r\n        //     //     if (arr2.indexOf(value) !== -1) {\r\n        //     //         return false;\r\n        //     //     }\r\n        //     // }\r\n        //     if (ind === undefined) {\r\n        //         arr2.push(value);\r\n        //     } else {\r\n        //         arr2.splice(ind, 0, value);\r\n        //     }\r\n        // }\r\n        // console.error(arr2);\r\n        \r\n        // console.warn(this._data);\r\n        this.emit(path + ':insert', value, ind);\r\n        this.emit('*:insert', path, value, ind);\r\n\r\n        return true;\r\n    }\r\n\r\n    // 删除数组指定某个序号的值\r\n    public remove(path: string, ind: number): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        if (arr.length < ind) return false;\r\n        let value = arr[ind];\r\n        arr.splice(ind, 1);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2 && arr2.length >= ind) {\r\n        //     arr2.splice(ind, 1);\r\n        // }\r\n\r\n        this.emit(path + ':remove', value, ind);\r\n        this.emit('*:remove', path, value, ind);\r\n        return true;\r\n    }\r\n\r\n    // 删除数组中的某个value值\r\n    public removeValue(path: string, value: any): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        let ind = arr.indexOf(value);\r\n        if (ind === -1) {\r\n            return false;\r\n        }\r\n        let oldValue = arr[ind];\r\n        arr.splice(ind, 1);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2 && ind >= 0) {\r\n        //     arr2.splice(ind, 1);\r\n        // }\r\n\r\n        // console.warn('删除');\r\n        // console.warn(this._data);\r\n        // console.warn(this._data2);\r\n\r\n        this.emit(path + ':remove', oldValue, ind);\r\n        this.emit('*:remove', path, oldValue, ind);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    public move(path: string, indOld: number, indNew: number): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n\r\n        let indNew2 = indNew;\r\n\r\n        let arr = this._data[path];\r\n        if (arr.length < indOld || arr.length < indNew || indOld === indNew) return false;\r\n        let oldValue = arr[indOld]\r\n        arr.splice(indOld, 1);\r\n        if (indNew === -1) indNew = arr.length;\r\n        arr.splice(indNew, 0, oldValue);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2) {\r\n        //     if (arr2.length < indOld || arr2.length < indNew2 || indOld === indNew2) {\r\n\r\n        //     } else {\r\n        //         let oldValue2 = arr2[indOld]\r\n        //         arr2.splice(indOld, 1);\r\n        //         if (indNew2 === -1) indNew2 = arr2.length;\r\n        //         arr2.splice(indNew2, 0, oldValue2);\r\n        //     }\r\n        // }\r\n\r\n        this.emit(path + ':move', oldValue, indNew, indOld);\r\n        this.emit('*:move', path, oldValue, indNew, indOld);\r\n        return true;\r\n    }\r\n\r\n    public parserObject(prefix: string, key: string, value: any): void {\r\n        // 先保存一份\r\n        this.set(prefix, value);\r\n        this._dataType[prefix] = false;\r\n\r\n        let path: string;\r\n        let type: string = typeof value;\r\n\r\n        if (type === 'object' && value instanceof Array) {\r\n            this._dataType2[prefix] = true;\r\n            for (let i = 0; i < value.length; i++) {\r\n                path = prefix + this.SEPARATOR + i.toString();\r\n                this.set(path, value[i]);\r\n                this._dataType[path] = true;\r\n                // 数组元素还是对象的情况暂时不处理\r\n            }\r\n        } else if (type === 'object' && value instanceof Object) {\r\n\r\n            for (let key2 in value) {\r\n                if (typeof value[key2] === 'object') {\r\n                    // 递归解析\r\n                    this.parserObject(prefix + this.SEPARATOR + key2, key2, value[key2]);\r\n                } else {\r\n                    path = prefix + this.SEPARATOR + key2;\r\n                    this.set(path, value[key2]);\r\n                    this._dataType[path] = false;\r\n                    this._dataType2[prefix] = false;\r\n\r\n                }\r\n            }\r\n        } else {\r\n            // 目前看，null和undefined会经过这里\r\n            // debug.warn(this.className + '.parserObject, 为止数据类型:' + value);\r\n        }\r\n    }\r\n\r\n\r\n    public has(path: string): boolean {\r\n        return path in this._data;\r\n    }\r\n\r\n    public get(path: string): any {\r\n        if (path in this._data) {\r\n            return this._data[path];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public propagate(evt: any) {\r\n        let that = this;\r\n        return function (path: string, arg1: any, arg2: any, arg3: any) {\r\n            if (!that._parent) return;\r\n\r\n            let key = that._parentKey;\r\n            if (!key && that._parentField instanceof Array) {\r\n                key = that._parentField.indexOf(that);\r\n\r\n                if (key === -1) return;\r\n            }\r\n\r\n            // path = that._parentPath + '.' + key + '.' + path;\r\n\r\n            let state;\r\n            if (that._silent) state = that._parent.silence();\r\n\r\n            that._parent.emit(path + ':' + evt, arg1, arg2, arg3);\r\n            that._parent.emit('*:' + evt, path, arg1, arg2, arg3);\r\n\r\n            if (that._silent) that._parent.silenceRestore(state);\r\n        };\r\n    }\r\n\r\n\r\n    public destroy(): void {\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n        this.emit('destroy');\r\n        this.unbind();\r\n    }\r\n}\r\n\r\nexport interface History {\r\n    enabled?: boolean;\r\n}\r\n","export class Tools {\r\n\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n\r\n    public static eulerAngleToRadian(val: BABYLON.Vector3): BABYLON.Vector3 {\r\n        let para: number = Math.PI / 180;\r\n        return val.multiplyByFloats(para, para, para);\r\n    }\r\n\r\n    public static radianToEulerAngle(val: BABYLON.Vector3): BABYLON.Vector3 {\r\n        let para: number = 180 / Math.PI;\r\n        return val.multiplyByFloats(para, para, para);\r\n    }\r\n\r\n    public static vector3ToArray(val: BABYLON.Vector3): number[] {\r\n        return [val.x, val.y, val.z];\r\n    }\r\n\r\n\r\n\r\n}","import { BabylonLoader, Config, Game } from './game';\r\nimport { Editor } from './lib';\r\n\r\nexport * from './index';\r\n\r\nlet game!: Game;\r\nlet initFlag: boolean = false;\r\nlet dataLoaded: boolean = false;\r\nlet dataLoaded2: boolean = false;\r\n\r\n// let path1: string = '';\r\n// let path2: string = '';\r\nlet datas: any;\r\n\r\n// 添加到全局变量\r\nwindow.editor = new Editor();\r\n// if (typeof String.prototype.startsWith != 'function') {\r\n//     String.prototype.startsWith = function (prefix) {\r\n//         return this.slice(0, prefix.length) === prefix;\r\n//     };\r\n// }\r\n\r\nvar projectID = window.location.pathname.substring(9);\r\n\r\n/**\r\n * 初始化入口；\r\n */\r\nfunction initGame(): void {\r\n    let canvas = <HTMLCanvasElement>document.getElementById('renderCanvas');\r\n    let fpsLabel = document.getElementById('fpsLabel');\r\n    if (canvas !== null && fpsLabel !== null) {\r\n        game = new Game(canvas, fpsLabel);\r\n        game.createScene(datas).animate();  // 链式调用\r\n    }\r\n}\r\n\r\nfunction runBtn(): void {\r\n    if (game) {\r\n        game.createScene(datas).animate();\r\n    }\r\n}\r\n\r\nfunction toggleDebug(): void {\r\n    if (game) {\r\n        game.toggleDebug();\r\n    }\r\n}\r\n\r\n\r\nfunction init(): void {\r\n    // 等待表格数据加载完成\r\n    if (dataLoaded && dataLoaded2) {\r\n        initGame();\r\n    } else {\r\n        setTimeout(init, 500);\r\n    }\r\n}\r\n\r\n\r\nfunction loadResources(): void {\r\n\r\n    var projectID = window.location.pathname.substring(9);\r\n    Config.projectID = projectID;\r\n    // project data\r\n    axios.post('/api/getProject', { projectID: Config.projectID })\r\n        .then(response => {\r\n            var data = response.data;\r\n            if (data.code === '0000') {\r\n                // console.log(data.data);\r\n                Config.projectData = data.data;\r\n                Config.projectName = data.data.project.name;\r\n                Config.userID = data.data.owner.id;\r\n                Config.username = data.data.owner.username;\r\n                // 加载完assets数据再加载scene数据，便于解析scene过程中使用assets数据\r\n                editor.call('getAssets');\r\n                // document.title = Config.projectName + ' - 万维引擎';\r\n                // editor.call('toolbar.project.set', Config.projectName);\r\n            } else {\r\n                console.error('load project data error: ' + data.message);\r\n            }\r\n        })\r\n        .catch(\r\n            error => {\r\n                console.error('load project data error: ');\r\n                console.error(error);\r\n            }\r\n        );\r\n\r\n\r\n    editor.method('getAssets', () => {\r\n        // assets data\r\n        axios.post('/api/getAssets', { projectID: Config.projectID })\r\n            .then(response => {\r\n                var data = response.data;\r\n                if (data.code === '0000') {\r\n                    // console.log(data.data);\r\n                    Config.assetsData = data.data;\r\n                    BabylonLoader.assetsData = data.data;\r\n                    // editor.call('initAssets', Config.assetsData);\r\n                    // 加载完assets数据再加载scene数据，便于解析scene过程中使用assets数据\r\n                    editor.call('getScenes');\r\n                    // 加载表格判断\r\n                    if(data.data.assets) {\r\n                        for(let key in data.data.assets) {\r\n                            if(data.data.assets[key].type === 'table') {\r\n                                Config.tableAssetsID = key;\r\n                                Config.tableName = data.data.assets[key].name;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(Config.tableAssetsID !== '') {\r\n                        editor.call('loadTable');\r\n                    }\r\n                } else {\r\n                    console.error(data.message);\r\n                }\r\n                // ep.emit('settings', response.data);\r\n            })\r\n            .catch(\r\n                error => {\r\n                    console.error(error);\r\n                }\r\n            );\r\n    });\r\n\r\n    editor.method('getScenes', () => {\r\n        // scenes data\r\n        axios.post('/api/getScenes', { projectID: Config.projectID})\r\n            .then(response => {\r\n                var data = response.data;\r\n                if (data.code === '0000') {\r\n                    let lastScene: number = data.data.last;\r\n                    Config.scenesData = data.data.scenes[lastScene];\r\n                    Config.sceneIndex = lastScene;\r\n                    // console.log(Config.scenesData);\r\n                    dataLoaded2 = true;\r\n                    // editor.emit('scene:raw', Config.scenesData);\r\n                    // editor.call('toolbar.scene.set', Config.scenesData.name);\r\n                } else {\r\n                    console.error(data.message);\r\n                }\r\n                // ep.emit('settings', response.data);\r\n            })\r\n            .catch(\r\n                error => {\r\n                    console.error(error);\r\n                }\r\n            );\r\n    });\r\n\r\n\r\n    editor.method('loadTable', () => {\r\n        // 获取表格数据\r\n        var path = window.location.href;\r\n        var paramsData: any = {};\r\n        paramsData['name'] = Config.tableName;\r\n        paramsData['projectID'] = projectID;\r\n        paramsData['id'] = Config.tableAssetsID;\r\n        axios\r\n            .get('/api/table/acquire', {\r\n                params: paramsData,\r\n            })\r\n            .then(function (response) {\r\n                let data = response.data;\r\n                // console.log(data);\r\n                if (data.code === '0000') {\r\n                    // 先将json转化为字符串\r\n                    let tempData = JSON.stringify(data.data);\r\n                    // 对字符串再进行反转义\r\n                    tempData = escape2Html(tempData);\r\n                    // 转化为json后，赋值给表格\r\n                    // hot1.loadData(JSON.parse(tempData).table);\r\n                    // console.log(JSON.parse(tempData).table);\r\n                    datas = JSON.parse(tempData).table;\r\n                    Config.tableData = datas;\r\n                    dataLoaded = true;\r\n                } else {\r\n                    // Do nothing\r\n                    console.log('load not right: ' + data.message);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log('load error: ' + error);\r\n            });\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\nloadResources();\r\n\r\n\r\nfunction loadScene(): void {\r\n\r\n\r\n    var sceneData: any;\r\n    axios.post('/api/getScenes', { projectID: projectID })\r\n        .then(response => {\r\n            var data = response.data;\r\n            if (data.code === '0000') {\r\n                let lastScene: number = data.data.last;\r\n                sceneData = data.data.scenes[lastScene];\r\n                console.log(sceneData);\r\n                document.title = sceneData.name + ' | 发布项目';\r\n                // path1 = sceneData.path1;\r\n                // path2 = sceneData.path2;\r\n                // console.log('path1: ' + sceneData.path1);\r\n                // console.log('path2: ' + sceneData.path2);\r\n                // dataLoaded2 = true;\r\n            } else {\r\n                console.error(data.message);\r\n            }\r\n            // ep.emit('settings', response.data);\r\n        })\r\n        .catch(\r\n            error => {\r\n                console.error(error);\r\n            }\r\n\r\n        );\r\n}\r\n\r\n// loadScene();\r\n\r\n\r\n// function loadData(): void {\r\n\r\n// }\r\n\r\n// loadData();\r\n\r\n//HTML标签转义（< -> &lt;）\r\nfunction html2Escape(sHtml: any) {\r\n    var temp: any = document.createElement('div');\r\n    temp.textContent != null\r\n        ? (temp.textContent = sHtml)\r\n        : (temp.innerText = sHtml);\r\n    var output = temp.innerHTML;\r\n    temp = null;\r\n    return output;\r\n}\r\n\r\n//HTML标签反转义（&lt; -> <）\r\nfunction escape2Html(str: any) {\r\n    var temp: any = document.createElement('div');\r\n    temp.innerHTML = str;\r\n    var output = temp.innerText || temp.textContent;\r\n    temp = null;\r\n    return output;\r\n}\r\n\r\n// 关联按钮\r\n// document.getElementById('runButton')!.addEventListener('click', runBtn);\r\n\r\n// // 关联按钮\r\n// document.getElementById('debugButton')!.addEventListener('click', toggleDebug);\r\n\r\n// 启动引擎\r\n// 第一次启动时，先异步加载数据后再初始化，后期可以直接点击按钮进行加载；\r\ninit();\r\n// loadData2()\r\n//   .then(function (hot: HandTable) {\r\n//     console.log(hot.getData());\r\n//   }\r\n//   );\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}