{"version":3,"sources":["node_modules/_browser-pack@6.1.0@browser-pack/_prelude.js","src/game/babylonloader.ts","src/game/config.ts","src/game/game.ts","src/game/index.ts","src/game/loader.ts","src/game/scenes.ts","src/index.ts","src/lib/ajax.ts","src/lib/editor.ts","src/lib/events.ts","src/lib/guid.ts","src/lib/index.ts","src/lib/observer.ts","src/lib/tools.ts","src/lib/very-camera.ts","src/lib/very-light.ts","src/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","lib_1","BabylonLoader","loadFromBabylonAsset","loadBabylon","asset","data1","assetID","get","dataBabylon","babylonCacheData","parseBabylon","assembleBabylon","url","prefix","method","data","ignoreContentType","Ajax","on","status","evt","console","error","warn","log","meshes","materials","lights","assetsData","babylon","key","newMat","mats","newMats","asset_id","assets","diffuseTexture","texture_id","name","specularTexture","reflectionTexture","refractionTexture","emissiveTexture","bumpTexture","opacityTexture","ambientTexture","lightmapTexture","push","forEach","element","loadMaterial","VR","BabylonEngine","Scene","geometries","vertexData","array","parsedVertexData","loadGeometry","newTransformNodes_1","transformNodes","parsedTransformNode","node","loadTransformNode","newMeshes_1","parentMeshes","tempMeshDic_1","tempMeshID_1","newID_1","oldID_1","scenesData","entities","id","GUID","create","element2","parentId","tempMesh","loadMesh","parent_1","parentNode","editor","index","cache","transformNode","_waitingParentId","parent","getLastEntryByID","len","meshParseRecursion","_a","once","babylonData","parsedData_1","material","geometry","mesh","babylonParsedData","hasBabylobData","getBabylonData","hasParsedBabylonData","getParsedBabylonData","tempMeshID","parentID","childs","getChildren","myChildren","k","eulerAngle","Tools","radianToEulerAngle","rotation","entityData","resource_id","babylon_id","position","x","y","z","scale","scaling","children","enabled","isEnabled","checkCollisions","pickable","isPickable","isVisible","tags","type","entity","origin","addSceneData","createdAtTime","updateSceneData","now","Date","getFullYear","getRealTime","getMonth","getDate","getHours","getMinutes","str","toString","createCameraWraper","scene","canvas","camera","BABYLON","UniversalCamera","Vector3","maxZ","attachControl","cameraWraper","VeryCamera","orthoSize","createLightWraper","light","createLight","VeryLight","toLowerCase","PointLight","Zero","SpotLight","Math","PI","HemisphericLight","Up","DirectionalLight","Forward","loadLight","parsedLight","Light","Parse","loadReflectionProbe","parsedReflectionProbe","rootUrl","ReflectionProbe","loadAnimation","parsedAnimation","internalClass","_TypeStore","GetClass","parsedMaterial","Material","loadMultiMaterial","parsedMultiMaterial","MultiMaterial","ParseMultiMaterial","loadMorphTargetManager","managerData","MorphTargetManager","loadSkeleton","parsedSkeleton","Skeleton","Geometry","TransformNode","parsedMesh","Mesh","loadCamera","parsedCamera","Camera","loadAnimationGroup","parsedAnimationGroup","AnimationGroup","setBabylonParent","index_1","cache_1","cameras","projectData","sceneIndex","Config","addCamera","projectID","projectName","userID","username","sceneName","tableAssetsID","tableName","tableData","config_1","loader_1","Game","prototype","createScene","datas","_this","this","_engine","VE_Manager","dispose","Engine","_canvas","engine","window","addEventListener","resize","_scene","Time","start","clearColor","Color4","displayLoadingUI","startVeryEngine","hideLoadingUI","onKeyboardObservable","add","kbInfo","KeyboardEventTypes","KEYDOWN","event","keyCode","ctrlKey","altKey","toggleDebug","runRenderLoop","activeCamera","render","entrance","VeryEngine","init","objects","onBeforeRenderObservable","count","objectID","getObjectID","getVeryObject","update","animate","width","clientWidth","_showFps","updateFpsPos","scenes","debugLayer","hide","show","embedMode","_fps","innerHTML","getFps","toFixed","canvasElement","fps","Loader","Canvas","_table","document","getElementById","__exportStar","assets_data","onLoad","asset_data","assetsLength","Object","getOwnPropertyNames","emit","Observer","childIndex","entitiesIndex","lightWraper","arr","empty","box","babylonloader_1","intensity","has","diffuse","Color3","FromArray","specular","angle","exponent","setEnabled","eulerAngleToRadian","LIGHTTYPEID_HEMISPHERICLIGHT","direction","copyFrom","up","childAndParent","activeCameras","FreeCamera","applyGravity","viewport","Viewport","mode","fov","inertia","MeshBuilder","CreateBox","size","CreateSphere","segments","diameter","CreateGround","height","subdivisions","CreateCylinder","details","insertChild","loadingBabylonFlag","toLoadEntity","assembleSceneMesh","item","parsedBabylon","meshID","meshData","matAssetID","recordRotation","vector3ToArray","scal","materialId","geometryId","getGeometryByID","getMaterialByID","Scenes","AjaxRequest","post","put","delete","param","value","params","args","_super","Events","__extends","_onLoad","_progress","_xhr","notJson","responseText","json","JSON","parse","ex","msg","message","response","_onError","_onAbort","_onProgress","progress","lengthComputable","loaded","total","abort","XMLHttpRequest","cookies","withCredentials","bind","upload","query","keys","indexOf","join","parts","split","ends","slice","undefined","open","setRequestHeader","headers","FormData","stringify","send","events_1","Editor","fn","_hooks","methodRemove","_i","arguments","Array","apply","stack","defineProperty","_suspendEvents","val","events","_events","EventHandle","self","arg0","arg1","arg2","arg3","arg4","arg5","arg6","arg7","unbind","info","splice","owner","replace","random","patchData","parserObject","set","_dataType","_dataType2","debug","className","path","oldValue","_data","SEPARATOR","parseInt","updateChildData","_data2","isNumber","Number","isNaN","startsWith","newPath","unset","insert","ind","remove","removeValue","move","indOld","indNew","key2","propagate","that","state","_parent","_parentKey","_parentField","_silent","silence","silenceRestore","destroy","_destroyed","options","reparenting","_pathsWithDuplicates","_path","_keys","pathsWithDuplicates","para","multiplyByFloats","ORTHOGRAPHIC_CAMERA","_orthoSize","orthoRight","getEngine","getRenderWidth","orthoLeft","orthoTop","getRenderHeight","orthoBottom","_clearColor","renderCamera","_render","_backupViewport","clone","w","h","_width","_height","inputs","clear","getTypeID","getAbsolutePosition","game_1","dataLoaded","dataLoaded2","location","pathname","substring","axios","then","project","catch","lastScene","last","title","href","paramsData","tempData","temp","createElement","output","innerText","textContent","escape2Html","table","fpsLabel","style","display","setTimeout"],"mappings":"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","file":"publish.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// import { Tools, AjaxRequest, Ajax, GUID } from \"../../../editor/utility\";\r\nimport { Ajax, AjaxRequest, GUID, Observer, Tools, VeryCamera, VeryLight } from \"../lib\";\r\n// import { VeryEngine } from \"../../../engine\";\r\n// import { Config } from \"../../../editor/global\";\r\n\r\nexport class BabylonLoader {\r\n\r\n\r\n    public static prefix: string = '/assets/';\r\n\r\n    public static assetsData: any = {};\r\n    public static projectData: any = {};\r\n    public static scenesData: any = {};\r\n    public static sceneIndex: number = 0;\r\n\r\n\r\n    public static babylonCacheData: { [key: string]: any } = {};\r\n    public static babylonParsedData: { [key: string]: any } = {};\r\n\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public static loadFromBabylonAsset() {\r\n\r\n    }\r\n\r\n\r\n    public static loadBabylon(asset: Observer) {\r\n        let assetID: string = asset.get('id');\r\n        let dataBabylon: any = null;\r\n        if (BabylonLoader.babylonCacheData[assetID]) {\r\n            dataBabylon = BabylonLoader.babylonCacheData[assetID];\r\n            BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n            BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n        } else {\r\n            var data1 = {\r\n                url: BabylonLoader.prefix + asset.get('id') + '/' + asset.get('name'),\r\n                method: 'GET',\r\n                // auth: true,\r\n                data: null,\r\n                ignoreContentType: true,\r\n                // headers: {\r\n                //     Accept: 'application/json'\r\n                // }\r\n            };\r\n\r\n            // 直接返回babylon json格式内容数据\r\n            (<AjaxRequest>new Ajax(data1))\r\n                .on('load', (status: any, data: any) => {\r\n\r\n                    dataBabylon = data;\r\n                    BabylonLoader.babylonCacheData[assetID] = dataBabylon;\r\n                    BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n                    BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n                }).on('error', (evt: any) => {\r\n                    console.error(evt);\r\n                });;\r\n        }\r\n    }\r\n\r\n\r\n    public static assembleBabylon(assetID: string, dataBabylon: any) {\r\n        if (dataBabylon !== null) {\r\n            console.warn(dataBabylon);\r\n            console.log(dataBabylon.meshes);\r\n            console.log(dataBabylon.materials);\r\n            console.log(dataBabylon.lights);\r\n\r\n            // if (dataBabylon.lights) {\r\n            //     dataBabylon.lights.forEach((element: any) => {\r\n            //         BabylonLoader.loadLight(element, VeryEngine.viewScene);\r\n            //     });\r\n            // }\r\n\r\n            // material assemble\r\n            if (BabylonLoader.assetsData.babylon[assetID]) {\r\n                let mats = BabylonLoader.assetsData.babylon[assetID]['materials'];\r\n                let newMats = [];\r\n                for (let key in mats) {\r\n                    if (mats[key].asset_id && BabylonLoader.assetsData.assets[mats[key].asset_id]) {\r\n                        let newMat = BabylonLoader.assetsData.assets[mats[key].asset_id].data;\r\n                        // 检测texture\r\n                        if (newMat.diffuseTexture && newMat.diffuseTexture.texture_id) {\r\n                            newMat.diffuseTexture.name = BabylonLoader.prefix + newMat.diffuseTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.diffuseTexture.texture_id].name;\r\n                            // console.warn(newMat.diffuseTexture.name);\r\n                        }\r\n                        if (newMat.specularTexture && newMat.specularTexture.texture_id) {\r\n                            newMat.specularTexture.name = BabylonLoader.prefix + newMat.specularTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.specularTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.reflectionTexture && newMat.reflectionTexture.texture_id) {\r\n                            newMat.reflectionTexture.name = BabylonLoader.prefix + newMat.reflectionTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.reflectionTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.refractionTexture && newMat.refractionTexture.texture_id) {\r\n                            newMat.refractionTexture.name = BabylonLoader.prefix + newMat.refractionTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.refractionTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.emissiveTexture && newMat.emissiveTexture.texture_id) {\r\n                            newMat.emissiveTexture.name = BabylonLoader.prefix + newMat.emissiveTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.emissiveTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.bumpTexture && newMat.bumpTexture.texture_id) {\r\n                            newMat.bumpTexture.name = BabylonLoader.prefix + newMat.bumpTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.bumpTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.opacityTexture && newMat.opacityTexture.texture_id) {\r\n                            newMat.opacityTexture.name = BabylonLoader.prefix + newMat.opacityTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.opacityTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.ambientTexture && newMat.ambientTexture.texture_id) {\r\n                            newMat.ambientTexture.name = BabylonLoader.prefix + newMat.ambientTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.ambientTexture.texture_id].name;\r\n                        }\r\n                        if (newMat.lightmapTexture && newMat.lightmapTexture.texture_id) {\r\n                            newMat.lightmapTexture.name = BabylonLoader.prefix + newMat.lightmapTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.lightmapTexture.texture_id].name;\r\n                        }\r\n\r\n                        newMats.push(newMat);\r\n                    }\r\n                }\r\n\r\n                newMats.forEach((element: any) => {\r\n                    // console.error(element);\r\n                    BabylonLoader.loadMaterial(element, VR.BabylonEngine.Scene, '');\r\n                });\r\n            }\r\n\r\n            // geometries assemble\r\n            if (dataBabylon.geometries && dataBabylon.geometries.vertexData) {\r\n                dataBabylon.geometries.vertexData.array.forEach((parsedVertexData: any) => {\r\n                    BabylonLoader.loadGeometry(parsedVertexData, VR.BabylonEngine.Scene, '');\r\n                });\r\n            }\r\n\r\n            // transformNode assemble\r\n            let newTransformNodes: Nullable<BABYLON.TransformNode>[] = [];\r\n            if (dataBabylon.transformNodes) {\r\n                dataBabylon.transformNodes.forEach((parsedTransformNode: any) => {\r\n                    let node = BabylonLoader.loadTransformNode(parsedTransformNode, VR.BabylonEngine.Scene, '');\r\n                    newTransformNodes.push(node);\r\n                });\r\n            }\r\n\r\n            // mesh assemble\r\n            let newMeshes: Nullable<BABYLON.AbstractMesh>[] = [];\r\n            let parentMeshes: Nullable<BABYLON.AbstractMesh>[] = [];\r\n\r\n            let tempMeshDic: { [key: string]: Nullable<BABYLON.AbstractMesh> } = {};\r\n\r\n            let tempMeshID: { [key: string]: string } = {};\r\n\r\n            if (dataBabylon.meshes) {\r\n                dataBabylon.meshes.forEach((element: any) => {\r\n                    // 若当前scene数据中已包含mesh id，则重新创建resource_id\r\n                    if (BabylonLoader.scenesData.entities[element.id]) {\r\n                        let newID = GUID.create();\r\n                        let oldID = element.id;\r\n                        // element['babylon_id'] = oldID;\r\n                        tempMeshID[newID] = oldID;\r\n                        element.id = newID;\r\n                        // 遍历，更改parentID\r\n                        dataBabylon.meshes.forEach((element2: any) => {\r\n                            if (element2.parentId === oldID) {\r\n                                element2.parentId = newID;\r\n                                console.log('change parent id');\r\n                            }\r\n                        });\r\n                    } else {\r\n                        tempMeshID[element.id] = element.id;\r\n                        // element['babylon_id'] = element.id;\r\n                    }\r\n                    // console.error(element);\r\n                });\r\n\r\n                dataBabylon.meshes.forEach((element: any) => {\r\n                    let tempMesh = BabylonLoader.loadMesh(element, VR.BabylonEngine.Scene, '');\r\n                    newMeshes.push(tempMesh);\r\n                    tempMeshDic[element.id] = tempMesh;\r\n                });\r\n            }\r\n\r\n            // parent \r\n            // TODO: 若不为root，则mesh这里也要设定父子关系，parent为null则为当前选中物体\r\n            let parent = null;\r\n            let parentNode: Nullable<BABYLON.Node> = null;\r\n            if (editor.call('selector:type') === 'entity')\r\n                parent = editor.call('selector:items')[0];\r\n\r\n            if (!parent) {\r\n                parent = editor.call('entities:root');\r\n            } else {\r\n                // console.warn(parent);\r\n                // console.warn(parent.node);\r\n                if (parent.node) {\r\n                    parentNode = parent.node;\r\n                }\r\n            }\r\n\r\n\r\n            var entities: any[] = [];\r\n            var data: any[] = [];\r\n\r\n            // TODO: 还没有考虑有transformNode数据的情况\r\n            for (let index = 0, cache = newTransformNodes.length; index < cache; index++) {\r\n                var transformNode = newTransformNodes[index];\r\n                if (transformNode && transformNode._waitingParentId) {\r\n                    transformNode.parent = VR.BabylonEngine.Scene.getLastEntryByID(transformNode._waitingParentId);\r\n                    transformNode._waitingParentId = null;\r\n                }\r\n            }\r\n\r\n            for (let i = 0, len = newMeshes.length; i < len; i++) {\r\n                if (newMeshes[i] !== null) {\r\n                    if (newMeshes[i]!._waitingParentId) {\r\n                        if (tempMeshDic[newMeshes[i]!._waitingParentId!]) {\r\n                            newMeshes[i]!.parent = tempMeshDic[newMeshes[i]!._waitingParentId!];\r\n                        } else {\r\n                            newMeshes[i]!.parent = parentNode;\r\n                            parentMeshes.push(newMeshes[i]);\r\n                        }\r\n                    } else {\r\n                        newMeshes[i]!.parent = parentNode;\r\n                        parentMeshes.push(newMeshes[i]);\r\n                    }\r\n                    newMeshes[i]!._waitingParentId = null;\r\n                    // console.warn(newMeshes[i]);\r\n                }\r\n            }\r\n\r\n\r\n\r\n            for (let i = 0; i < parentMeshes.length; i++) {\r\n                BabylonLoader.meshParseRecursion(parentMeshes[i], assetID, tempMeshID, entities, data);\r\n            }\r\n\r\n            editor.call('selector:history', false);\r\n            editor.call('selector:set', 'entity', [editor.call('entities:get', parentMeshes[0]?.id)]);\r\n            editor.once('selector:change', function () {\r\n                editor.call('selector:history', true);\r\n            });\r\n\r\n            editor.call('make:scene:dirty');\r\n\r\n\r\n            // editor.emit('entities:load', true);\r\n\r\n\r\n            // TODO\r\n            // VeryEngine.viewScene.onPointerObservable.add(pointerInfo => {\r\n            //     switch (pointerInfo.type) {\r\n            //         case BABYLON.PointerEventTypes.POINTERDOWN:\r\n            //             // console.log('down');\r\n            //             if (pointerInfo!.pickInfo!.pickedMesh != null) {\r\n            //                 editor.call('pick', pointerInfo!.pickInfo!.pickedMesh);\r\n            //             } else {\r\n            //                 editor.call('pick', null);\r\n            //             }\r\n            //             // console.log(pointerInfo!.pickInfo!.pickedMesh);\r\n            //             break;\r\n            //     }\r\n            // });\r\n            // });\r\n        }\r\n    }\r\n\r\n    public static parseBabylon(assetID: string, babylonData: any): void {\r\n        if (babylonData) {\r\n            let parsedData: any = {};\r\n            // 材质\r\n            if (babylonData.materials) {\r\n                parsedData.materials = {};\r\n                babylonData.materials.forEach((material: any) => {\r\n                    parsedData.materials[material.id] = material;\r\n                });\r\n            }\r\n            // geometries\r\n            if (babylonData.geometries && babylonData.geometries.vertexData) {\r\n                parsedData.geometries = {};\r\n                babylonData.geometries.vertexData.forEach((geometry: any) => {\r\n                    parsedData.geometries[geometry.id] = geometry;\r\n                });\r\n            }\r\n            // mesh\r\n            if (babylonData.meshes) {\r\n                parsedData.meshes = {};\r\n                babylonData.meshes.forEach((mesh: any) => {\r\n                    parsedData.meshes[mesh.id] = mesh;\r\n                });\r\n            }\r\n            // transformNodes\r\n            if (babylonData.transformNodes) {\r\n                parsedData.transformNodes = {};\r\n                babylonData.transformNodes.forEach((transformNode: any) => {\r\n                    parsedData.transformNodes[transformNode.id] = transformNode;\r\n                });\r\n            }\r\n            BabylonLoader.babylonParsedData[assetID] = parsedData;\r\n        }\r\n    }\r\n\r\n    public static hasBabylobData(assetID: string): boolean {\r\n        return assetID in BabylonLoader.babylonCacheData;\r\n    }\r\n\r\n    public static getBabylonData(assetID: string): any {\r\n        if (assetID in BabylonLoader.babylonCacheData) {\r\n            return BabylonLoader.babylonCacheData[assetID];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static hasParsedBabylonData(assetID: string): boolean {\r\n        return assetID in BabylonLoader.babylonParsedData;\r\n    }\r\n\r\n    public static getParsedBabylonData(assetID: string): any {\r\n        if (assetID in BabylonLoader.babylonParsedData) {\r\n            return BabylonLoader.babylonParsedData[assetID];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    private static meshParseRecursion(mesh: Nullable<BABYLON.AbstractMesh>, assetID: string, tempMeshID: any, entities: any[], data: any[]): void {\r\n        if (mesh) {\r\n\r\n            let parentID: string = '';\r\n            if (mesh.parent !== null) {\r\n                parentID = mesh.parent!.id;\r\n            } else {\r\n                let root = editor.call('entities:root');\r\n                parentID = root.get('resource_id');\r\n                // root.insert('children', mesh.id);\r\n                // BabylonLoader.updateSceneData(parentID, root._data2);\r\n                // editor.call('make:scene:dirty');\r\n            }\r\n\r\n            var childs = mesh.getChildren();\r\n            var myChildren = [];\r\n            for (let k = 0; k < childs.length; k++) {\r\n                myChildren.push(childs[k].id);\r\n            }\r\n\r\n            let eulerAngle = Tools.radianToEulerAngle(mesh.rotation);\r\n\r\n            let entityData = {\r\n                name: mesh.name,\r\n                resource_id: mesh.id,\r\n                babylon_id: tempMeshID[mesh.id],  // 原始的mesh id\r\n                asset_id: assetID,  // 对应babylon资源id\r\n                parent: parentID,\r\n                position: [mesh.position.x, mesh.position.y, mesh.position.z],\r\n                rotation: [eulerAngle.x, eulerAngle.y, eulerAngle.z],\r\n                scale: [mesh.scaling.x, mesh.scaling.y, mesh.scaling.z],\r\n                children: myChildren,\r\n                enabled: mesh.isEnabled(),\r\n                checkCollisions: mesh.checkCollisions,\r\n                pickable: mesh.isPickable,\r\n                isVisible: mesh.isVisible,\r\n                tags: [],\r\n                type: 'mesh'\r\n            }\r\n\r\n            let entity = editor.call('entities:new', entityData);\r\n            entities.push(entity);\r\n            data.push(entity.origin);\r\n\r\n            for (let k = 0; k < childs.length; k++) {\r\n                BabylonLoader.meshParseRecursion(<BABYLON.AbstractMesh>childs[k], assetID, tempMeshID, entities, data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public static addSceneData(resource_id: string, data: any): void {\r\n        BabylonLoader.scenesData.entities[resource_id] = data;\r\n        BabylonLoader.scenesData['modified'] = BabylonLoader.createdAtTime();\r\n    }\r\n\r\n    public static updateSceneData(resource_id: string, data: any): void {\r\n        BabylonLoader.scenesData.entities[resource_id] = data;\r\n        BabylonLoader.scenesData['modified'] = BabylonLoader.createdAtTime();\r\n    }\r\n\r\n    public static createdAtTime(): string {\r\n        var now = new Date();\r\n        var Y = now.getFullYear();\r\n        var m = BabylonLoader.getRealTime(now.getMonth() + 1);\r\n        var d = BabylonLoader.getRealTime(now.getDate());\r\n        var H = BabylonLoader.getRealTime(now.getHours());\r\n        var i = BabylonLoader.getRealTime(now.getMinutes());\r\n        // var s = getRealTime(now.getSeconds());\r\n        return Y + \"-\" + m + \"-\" + d + \" \" + H + \":\" + i;\r\n    }\r\n\r\n    private static getRealTime(str: number): string {\r\n        if (str < 10) {\r\n            return \"0\" + str;\r\n        }\r\n        return str.toString();\r\n    }\r\n\r\n    // hierarchy创建灯光，直接创建wraper\r\n\r\n    public static createCameraWraper(name: string, scene: BABYLON.Scene, canvas: HTMLCanvasElement): VeryCamera {\r\n        var camera = new BABYLON.UniversalCamera(name, new BABYLON.Vector3(0, 100, -200), scene);\r\n        // camera.mode = BABYLON.Camera.ORTHOGRAPHIC_CAMERA;\r\n        // camera.minZ = -800;\r\n        camera.maxZ = 20000;\r\n        camera.attachControl(canvas, true);\r\n        let cameraWraper = new VeryCamera(camera, scene, canvas);\r\n\r\n        cameraWraper.orthoSize = 0.5;\r\n\r\n        return cameraWraper;\r\n    }\r\n\r\n\r\n    public static createLightWraper(type: string, name: string, scene: BABYLON.Scene): VeryLight {\r\n        let light = BabylonLoader.createLight(type, name, scene);\r\n\r\n        let lightWraper = new VeryLight(light, scene);\r\n\r\n        return lightWraper;\r\n    }\r\n\r\n\r\n\r\n    public static createLight(type: string, name: string, scene: BABYLON.Scene): BABYLON.Light {\r\n        let light: BABYLON.Light;\r\n\r\n        type = type.toLowerCase();\r\n        if (type === 'point') {\r\n            light = new BABYLON.PointLight(name, BABYLON.Vector3.Zero(), scene);\r\n        } else if (type === 'spot') {\r\n            light = new BABYLON.SpotLight(name, BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, -1, 0), Math.PI * 0.75, 8, scene);\r\n        } else if (type === 'hemispheric') {\r\n            light = new BABYLON.HemisphericLight(name, BABYLON.Vector3.Up(), scene);\r\n        } else {\r\n            light = new BABYLON.DirectionalLight(name, BABYLON.Vector3.Forward(), scene);\r\n        }\r\n\r\n        return light;\r\n    }\r\n\r\n\r\n    public static loadLight(parsedLight: any, scene: BABYLON.Scene): Nullable<BABYLON.Light> {\r\n        // Light\r\n        if (parsedLight !== undefined && parsedLight !== null) {\r\n            var light = BABYLON.Light.Parse(parsedLight, scene);\r\n            return light;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadReflectionProbe(parsedReflectionProbe: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.ReflectionProbe> {\r\n        // ReflectionProbe\r\n        if (parsedReflectionProbe !== undefined && parsedReflectionProbe !== null) {\r\n            var reflectionProbe = BABYLON.ReflectionProbe.Parse(parsedReflectionProbe, scene, rootUrl);\r\n            return reflectionProbe;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadAnimation(parsedAnimation: any): Nullable<BABYLON.Animation[]> {\r\n        // Animation\r\n        if (parsedAnimation !== undefined && parsedAnimation !== null) {\r\n            const internalClass = BABYLON._TypeStore.GetClass(\"BABYLON.Animation\");\r\n            if (internalClass) {\r\n                let animation = internalClass.Parse(parsedAnimation);\r\n                return animation;\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMaterial(parsedMaterial: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.Material> {\r\n        // Material\r\n        if (parsedMaterial !== undefined && parsedMaterial !== null) {\r\n            var mat = BABYLON.Material.Parse(parsedMaterial, scene, rootUrl);\r\n            return mat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMultiMaterial(parsedMultiMaterial: any, scene: BABYLON.Scene): Nullable<BABYLON.MultiMaterial> {\r\n        // MultiMaterial\r\n        if (parsedMultiMaterial !== undefined && parsedMultiMaterial !== null) {\r\n            var mmat = BABYLON.MultiMaterial.ParseMultiMaterial(parsedMultiMaterial, scene);\r\n            return mmat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMorphTargetManager(managerData: any, scene: BABYLON.Scene): Nullable<BABYLON.MorphTargetManager> {\r\n        // MorphTargetManager\r\n        if (managerData !== undefined && managerData !== null) {\r\n            var morphTarget = BABYLON.MorphTargetManager.Parse(managerData, scene);\r\n            return morphTarget;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadSkeleton(parsedSkeleton: any, scene: BABYLON.Scene): Nullable<BABYLON.Skeleton> {\r\n        // Skeleton\r\n        if (parsedSkeleton !== undefined && parsedSkeleton !== null) {\r\n            var skeleton = BABYLON.Skeleton.Parse(parsedSkeleton, scene);\r\n            return skeleton;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadGeometry(vertexData: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.Geometry> {\r\n        // Geometry\r\n        if (vertexData !== undefined && vertexData !== null) {\r\n            var geometry = BABYLON.Geometry.Parse(vertexData, scene, rootUrl);\r\n            return geometry;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadTransformNode(parsedTransformNode: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.TransformNode> {\r\n        // TransformNode\r\n        if (parsedTransformNode !== undefined && parsedTransformNode !== null) {\r\n            var node = BABYLON.TransformNode.Parse(parsedTransformNode, scene, rootUrl);\r\n            return node;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static loadMesh(parsedMesh: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.AbstractMesh> {\r\n        // Mesh\r\n        if (parsedMesh !== undefined && parsedMesh !== null) {\r\n            var mesh = <BABYLON.AbstractMesh>BABYLON.Mesh.Parse(parsedMesh, scene, rootUrl);\r\n            return mesh;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static loadCamera(parsedCamera: any, scene: BABYLON.Scene): Nullable<BABYLON.Camera> {\r\n        // Camera\r\n        if (parsedCamera !== undefined && parsedCamera !== null) {\r\n            var camera = BABYLON.Camera.Parse(parsedCamera, scene);\r\n            return camera;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadAnimationGroup(parsedAnimationGroup: any, scene: BABYLON.Scene): Nullable<BABYLON.AnimationGroup> {\r\n        // AnimationGroup\r\n        if (parsedAnimationGroup !== undefined && parsedAnimationGroup !== null) {\r\n            var animationGroup = BABYLON.AnimationGroup.Parse(parsedAnimationGroup, scene);\r\n            return animationGroup;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static setBabylonParent(scene: BABYLON.Scene): void {\r\n        let index, cache = 0;\r\n        // Browsing all the graph to connect the dots\r\n        for (let index = 0, cache = scene.cameras.length; index < cache; index++) {\r\n            var camera = scene.cameras[index];\r\n            if (camera._waitingParentId) {\r\n                camera.parent = scene.getLastEntryByID(camera._waitingParentId);\r\n                camera._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        for (index = 0, cache = scene.lights.length; index < cache; index++) {\r\n            let light = scene.lights[index];\r\n            if (light && light._waitingParentId) {\r\n                light.parent = scene.getLastEntryByID(light._waitingParentId);\r\n                light._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        //加载完所有资源以后，设立父子关系，加入在自己的引擎中，这些关系有scene数据确立，可以取消此处的操作\r\n        // Connect parents & children and parse actions\r\n        for (index = 0, cache = scene.transformNodes.length; index < cache; index++) {\r\n            var transformNode = scene.transformNodes[index];\r\n            if (transformNode._waitingParentId) {\r\n                transformNode.parent = scene.getLastEntryByID(transformNode._waitingParentId);\r\n                transformNode._waitingParentId = null;\r\n            }\r\n        }\r\n        for (index = 0, cache = scene.meshes.length; index < cache; index++) {\r\n            var mesh = scene.meshes[index];\r\n            if (mesh._waitingParentId) {\r\n                mesh.parent = scene.getLastEntryByID(mesh._waitingParentId);\r\n                mesh._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        // freeze world matrix application\r\n        // 此部分为babylon隐藏方法\r\n        // for (index = 0, cache = scene.meshes.length; index < cache; index++) {\r\n        //     var currentMesh = scene.meshes[index];\r\n        //     if (currentMesh._waitingFreezeWorldMatrix) {\r\n        //         currentMesh.freezeWorldMatrix();\r\n        //         currentMesh._waitingFreezeWorldMatrix = null;\r\n        //     } else {\r\n        //         currentMesh.computeWorldMatrix(true);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { VeryCamera } from \"../lib\";\r\n\r\nexport class Config {\r\n\r\n    public static prefix: string = '/assets/';\r\n\r\n\r\n    public static projectID: string = '';\r\n    public static projectName: string = '';\r\n    public static projectData: any = {};\r\n\r\n    public static userID: string = '';\r\n    public static username: string = '';\r\n\r\n    public static assetsData: any = {};\r\n\r\n    public static scenesData: any = {};\r\n    public static sceneIndex: number = 0;\r\n    public static sceneName: string = '';\r\n\r\n    public static tableAssetsID: string = '';\r\n    public static tableName: string = '';\r\n    public static tableData: any = null;\r\n\r\n\r\n    public static cameras: VeryCamera[] = [];\r\n\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n\r\n    public static addCamera(camera: VeryCamera): void {\r\n        Config.cameras.push(camera);\r\n    }\r\n\r\n\r\n}","///// <reference path=\"./dts/babylon.d.ts\"/>\r\n\r\nimport { Config } from \"./config\";\r\nimport { Loader } from \"./loader\";\r\n\r\n// import { VE_Objects, VE_Manager } from \"../veryengine/veryEngine\";\r\n\r\n// import { BabylonEngine, Time } from \"../veryengine/babylon\";\r\n\r\nexport class Game {\r\n    private _canvas: HTMLCanvasElement;\r\n    private _fps: HTMLElement;\r\n    private _table!: HTMLElement;\r\n    private _showFps: boolean = true;\r\n    private _engine!: BABYLON.Engine;\r\n    private _scene!: BABYLON.Scene;\r\n    // private _camera!: BABYLON.FreeCamera;\r\n\r\n    constructor(canvasElement: HTMLCanvasElement, fps: HTMLElement) {\r\n        new Loader();\r\n        this._canvas = canvasElement;\r\n        VR.BabylonEngine.Canvas = this._canvas;\r\n        this._fps = fps;\r\n        // this._engine = new BABYLON.Engine(this._canvas, true);\r\n        this._table = document.getElementById(\"VeryTable\")!;\r\n    }\r\n\r\n    /**\r\n     * 创建场景，并且启动\r\n     */\r\n    createScene(datas: any): Game {\r\n\r\n        // 假设有运行中的engine，先停止，重新初始化\r\n        if (this._engine) {\r\n            // TODO: 对象中相关数据dispose\r\n            VR.VE_Manager.dispose();\r\n            // console.log(VE_Manager.projects.projects);\r\n            this._engine.dispose();\r\n        }\r\n        this._engine = new BABYLON.Engine(this._canvas, true);\r\n        VR.BabylonEngine.Engine = this._engine;\r\n        // Resize\r\n        let engine = this._engine;\r\n        window.addEventListener(\"resize\", function () {\r\n            engine.resize();\r\n        });\r\n\r\n        this._scene = new BABYLON.Scene(this._engine);\r\n        VR.BabylonEngine.Scene = this._scene;\r\n        VR.Time.start();\r\n\r\n        this._scene.clearColor = new BABYLON.Color4(116 / 255, 116 / 255, 116 / 255, 1);\r\n\r\n        // TODO: 设定相机\r\n        // var camera = new BABYLON.ArcRotateCamera('Default', 100, 50, 50, new BABYLON.Vector3(0, 0, 0), this._scene);\r\n        // camera.setPosition(new BABYLON.Vector3(0, 1, -20));\r\n        // camera.attachControl(this._canvas, true);\r\n\r\n        // let inputMap: { [key: string]: boolean } = {};\r\n\r\n        // TODO: 加载过度动画开\r\n        // engine.hideLoadingUI();\r\n\r\n        engine.displayLoadingUI();\r\n\r\n        // 加载资源\r\n        // console.warn(Config.scenesData);\r\n        editor.call('scene:raw', Config.scenesData);\r\n\r\n        // 运行编译器\r\n        this.startVeryEngine(this._scene, datas);\r\n\r\n\r\n        engine.hideLoadingUI();\r\n\r\n        // 发布版编辑器\r\n        this._scene.onKeyboardObservable.add(kbInfo => {\r\n            if (kbInfo.type === BABYLON.KeyboardEventTypes.KEYDOWN) {\r\n                if (kbInfo.event.keyCode === 81 && kbInfo.event.ctrlKey && kbInfo.event.altKey) { //Ctrl + Q\r\n                    console.log('Ctrl + Alt + Q');\r\n                    this.toggleDebug();\r\n                }\r\n            }\r\n        });\r\n\r\n        this._engine.runRenderLoop(() => {\r\n            // if (this._canvas.width !== this._canvas.clientWidth) {\r\n            //     this._engine.resize();\r\n            // }\r\n\r\n            if (this._scene) {\r\n                if (this._scene.activeCamera) {\r\n                    this._scene.render();\r\n                }\r\n            }\r\n\r\n            // if (this._showFps) {\r\n            // \tthis.updateFpsPos();\r\n            // }\r\n\r\n\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    startVeryEngine(scene: BABYLON.Scene, datas: any): void {\r\n        let entrance: VR.VeryEngine = new VR.VeryEngine();\r\n        let projectName = \"测试项目\";\r\n        // console.log(datas);\r\n        // console.log(`空行数：${hot1.countEmptyRows()}`);\r\n        try {\r\n            entrance.init(datas, projectName);\r\n        } catch (e) { // TODO: 可能会影响效率\r\n            console.error(e);\r\n        }\r\n\r\n        let objects: VR.VE_Objects = VR.VE_Manager.objects(projectName);\r\n        // 全局渲染帧循环\r\n        scene.onBeforeRenderObservable.add(() => {\r\n            // 添加帧函数\r\n            // VR.Time._sum();\r\n\r\n            // 触发响应循环\r\n            for (let i: number = 0; i < objects.count; i++) {\r\n                let objectID: string = objects.getObjectID(i);\r\n                objects.getVeryObject(objectID).update();\r\n            }\r\n\r\n        });\r\n\r\n        // scene.onKeyboardObservable.add(kbInfo => {\r\n        //     if (kbInfo.type === BABYLON.KeyboardEventTypes.KEYDOWN) {\r\n        //         console.log(kbInfo.event.key);\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    /**\r\n     * 启动渲染循环；\r\n     */\r\n    animate(): Game {\r\n        this._engine.runRenderLoop(() => {\r\n            if (this._canvas.width !== this._canvas.clientWidth) {\r\n                this._engine.resize();\r\n            }\r\n\r\n            if (this._scene) {\r\n                // 正交相机画面比例控制\r\n                for (let i = 0, len = Config.cameras.length; i < len; i++) {\r\n                    Config.cameras[i].resize(false);\r\n                }\r\n                this._scene.render();\r\n            }\r\n\r\n            if (this._showFps) {\r\n                this.updateFpsPos();\r\n            }\r\n\r\n\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 属性编辑器UI界面控制；\r\n     */\r\n    toggleDebug(): Game {\r\n        if (this._engine) {\r\n            // Always showing the debug layer, because you can close it by itself\r\n            var scene = this._engine.scenes[0];\r\n            if (scene.debugLayer.isVisible()) {\r\n                scene.debugLayer.hide();\r\n            }\r\n            else {\r\n                // 此处修改了babylon.d.ts文件\r\n                scene.debugLayer.show({ embedMode: true });\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 更新fps显示及显示位置\r\n     */\r\n    updateFpsPos(): void {\r\n        if (this._fps) {\r\n            // this._fps.style.right = document.body.clientWidth - (this._table.clientWidth + this._canvas.clientWidth) + \"px\";\r\n\r\n            this._fps.innerHTML = this._engine.getFps().toFixed() + \" fps\";\r\n        }\r\n    }\r\n}\r\n","export * from './game';\r\nexport * from './scenes';\r\nexport * from './config';\r\nexport * from './loader';\r\nexport * from './babylonloader';","import { Ajax, AjaxRequest, Observer, Tools } from \"../lib\";\r\nimport { BabylonLoader } from \"./babylonloader\";\r\nimport { Config } from \"./config\";\r\n\r\nexport class Loader {\r\n\r\n\r\n    public constructor() {\r\n\r\n        editor.method('initAssets', (assets_data: any) => {\r\n            if (assets_data.assets)\r\n                onLoad(assets_data.assets);\r\n        });\r\n\r\n        // 加载assets数据，data为assets数据\r\n        var onLoad = function (data: any) {\r\n            editor.call('assets:progress', 0.5);\r\n\r\n            var count = 0;\r\n            let assetsLength: number = Object.getOwnPropertyNames(data).length;\r\n            // 加载Asset资源\r\n            var load = function (asset_data: any) {\r\n                editor.call('loadAsset', asset_data, function () {\r\n                    count++;\r\n                    editor.call('assets:progress', (count / assetsLength) * 0.5 + 0.5);\r\n                    if (count >= assetsLength) {\r\n                        editor.call('assets:progress', 1);\r\n                        editor.emit('assets:load');\r\n                    }\r\n                });\r\n            };\r\n\r\n            for (let key in data) {\r\n                load(data[key]);\r\n            }\r\n\r\n        };\r\n\r\n\r\n        editor.method('scene:raw', function (data: any) {\r\n            // editor.call('selector:clear');\r\n            // editor.call('entities:clear');\r\n            // editor.call('attributes:clear');\r\n\r\n            // console.log(data);\r\n            // console.log(data.entities);\r\n\r\n            // var total = Object.keys(data.entities).length;\r\n            // var i = 0;\r\n\r\n            // list\r\n            for (var key in data.entities) {\r\n                let entity = new Observer(data.entities[key]);\r\n                // editor.call('entities:add', entity);\r\n                // p.progress = (++i / total) * 0.8 + 0.1;\r\n                // console.warn(entity);\r\n                if (entity.get('type') !== 'root') {\r\n                    editor.call('create:scene:element', entity);\r\n                }\r\n            }\r\n\r\n            // p.progress = 1;\r\n\r\n            // loadedEntities = true;\r\n            editor.emit('entities:load');\r\n        });\r\n\r\n\r\n        var childIndex: { [key: string]: any } = {};\r\n        var entitiesIndex: { [key: string]: any } = {};\r\n        editor.method('create:scene:element', (entity: Observer) => {\r\n            // console.log('create scene element');\r\n            // console.error(entity);\r\n            if (entity.get('type') === 'light') {\r\n                // Lights\r\n                let lightWraper = BabylonLoader.createLightWraper(entity.get('subtype'), entity.get('name'), VR.BabylonEngine.Scene);\r\n\r\n                // lightWraper.light.setEnabled(entity.has('enabled') ? entity.get('enabled') : true);\r\n                lightWraper.light.intensity = entity.has('intensity') ? entity.get('intensity') : 1;\r\n                if (entity.has('diffuse') && entity.get('diffuse').length === 3) {\r\n                    lightWraper.light.diffuse = BABYLON.Color3.FromArray(entity.get('diffuse'));\r\n                }\r\n                if (entity.has('specular') && entity.get('specular').length === 3) {\r\n                    lightWraper.light.specular = BABYLON.Color3.FromArray(entity.get('specular'));\r\n                }\r\n                if (lightWraper.light instanceof BABYLON.SpotLight) {\r\n                    if (entity.has('angle')) {\r\n                        lightWraper.light.angle = entity.get('angle');\r\n                    }\r\n                    if (entity.has('exponent')) {\r\n                        lightWraper.light.exponent = entity.get('exponent');\r\n                    }\r\n                }\r\n\r\n                lightWraper.id = entity.get('resource_id');\r\n                entitiesIndex[entity.get('resource_id')] = lightWraper;\r\n                entity.node = lightWraper;\r\n\r\n                if (entity.has('enabled')) {\r\n                    lightWraper.setEnabled(entity.get('enabled'));\r\n                }\r\n                if (entity.has('position') && entity.get('position').length === 3) {\r\n                    lightWraper.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                }\r\n                if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                    lightWraper.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    // 环境光不跟着父物体发生位置变化\r\n                    if (lightWraper.type === BABYLON.Light.LIGHTTYPEID_HEMISPHERICLIGHT) {\r\n                        (<BABYLON.HemisphericLight>lightWraper.light).direction.copyFrom(lightWraper.up);\r\n                    }\r\n                }\r\n                if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                    lightWraper.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                }\r\n\r\n                childAndParent(entity, lightWraper);\r\n            } else if (entity.get('type') === 'camera') {\r\n                // Cameras\r\n                // 默认创建universalCamera，把input控制全删除\r\n                let cameraWraper = BabylonLoader.createCameraWraper(entity.get('name'), VR.BabylonEngine.Scene, VR.BabylonEngine.Canvas);\r\n\r\n                // TODO: camera视窗\r\n                // let w = VeryEngine.viewEngine.getRenderWidth();\r\n                // let h = VeryEngine.viewEngine.getRenderHeight();\r\n                // // cameraWraper.camera.viewport = new BABYLON.Viewport(4 / w, (h - 241) / h, 260 / w, 200 / h);\r\n\r\n                // cameraWraper.camera.viewport = new BABYLON.Viewport(Config.x / w, (h - Config.y) / h, Config.width / w, Config.height / h);\r\n                VR.BabylonEngine.Scene.activeCameras.push(cameraWraper.camera);\r\n\r\n                cameraWraper.id = entity.get('resource_id');\r\n                entitiesIndex[entity.get('resource_id')] = cameraWraper;\r\n                entity.node = cameraWraper;\r\n\r\n                if (entity.has('enabled')) {\r\n                    cameraWraper.setEnabled(entity.get('enabled'));\r\n                }\r\n                if (entity.has('position') && entity.get('position').length === 3) {\r\n                    cameraWraper.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                }\r\n                if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                    cameraWraper.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                }\r\n                if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                    cameraWraper.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                }\r\n\r\n                if (entity.has('checkCollisions')) {\r\n                    if (cameraWraper.camera instanceof BABYLON.FreeCamera) {\r\n                        cameraWraper.camera.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                }\r\n                if (entity.has('applyGravity')) {\r\n                    if (cameraWraper.camera instanceof BABYLON.FreeCamera) {\r\n                        cameraWraper.camera.applyGravity = entity.get('applyGravity');\r\n                    }\r\n                }\r\n\r\n                if (entity.has('viewport')) {\r\n                    // 编辑器条件下不用管\r\n                    let arr = entity.get('viewport');\r\n                    if (arr && arr.length && arr.length === 4) {\r\n                        cameraWraper.camera.viewport = new BABYLON.Viewport(arr[0], arr[1], arr[2], arr[3]);\r\n                    }\r\n                }\r\n\r\n                // TODO: 设置clearColor\r\n                if (entity.has('clearColor')) {\r\n                    let arr = entity.get('clearColor');\r\n                    if (arr && arr.length && arr.length === 4) {\r\n                        cameraWraper.clearColor = new BABYLON.Color4(arr[0], arr[1], arr[2], arr[3]);\r\n                    }\r\n                } else {\r\n                    cameraWraper.clearColor = new BABYLON.Color4(45 / 255, 145 / 255, 186 / 255, 1);\r\n                }\r\n\r\n                if (entity.has('mode')) {\r\n                    cameraWraper.mode = entity.get('mode');\r\n                }\r\n                if (entity.has('fov')) {\r\n                    cameraWraper.fov = entity.get('fov');\r\n                }\r\n                if (entity.has('inertia')) {\r\n                    cameraWraper.inertia = entity.get('inertia');\r\n                }\r\n                if (entity.has('orthoSize')) {\r\n                    cameraWraper.orthoSize = entity.get('orthoSize');\r\n                }\r\n\r\n                // VeryEngine.addCamera(cameraWraper);\r\n                \r\n\r\n                // 设置viewport\r\n                cameraWraper.resize(false);\r\n                // 先不要渲染出来\r\n                // cameraWraper.renderCamera(false);\r\n\r\n                Config.addCamera(cameraWraper);\r\n\r\n                childAndParent(entity, cameraWraper);\r\n            } else if (entity.get('type') === 'empty') {\r\n                // 空物体\r\n                let empty = new BABYLON.TransformNode(entity.get('name'), VR.BabylonEngine.Scene);\r\n                entity.node = empty;\r\n                empty.id = entity.get('resource_id');\r\n                empty.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                empty.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                empty.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                empty.isEnabled(entity.get('enabled'));\r\n                childAndParent(entity, empty);\r\n            } else if (entity.get('type') === 'primitive') {\r\n                if (entity.get('subtype') && entity.get('subtype') === 'box') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateBox(entity.get('name'), { size: 100 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'sphere') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateSphere(entity.get('name'), { segments: 20, diameter: 100 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'plane') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateGround(entity.get('name'), { width: 5000, height: 5000, subdivisions: 10 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'cylinder') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateCylinder(entity.get('name'), { height: 200, diameter: 100 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                }\r\n                // console.warn(box);\r\n            } else if (entity.get('type') === 'mesh') {\r\n                // 模型异步加载，因为mesh需要先加载.babylon文件；\r\n                // console.warn('scene创建mesh：' + entity.get('name'));\r\n                editor.call('scene:mesh:create', entity);\r\n            }\r\n        });\r\n\r\n        let childAndParent = (entity: Observer, node: Nullable<BABYLON.Node>) => {\r\n            // children\r\n            let children = entity.get('children');\r\n            for (var i = 0; i < children.length; i++) {\r\n                childIndex[children[i]] = {\r\n                    index: i,\r\n                    parent: node\r\n                };\r\n\r\n                if (entitiesIndex[children[i]]) {\r\n                    insertChild(node, entitiesIndex[children[i]], i);\r\n                }\r\n            }\r\n\r\n            // parenting\r\n            if (!entity.get('parent')) {\r\n                // babylon root\r\n            } else {\r\n                // child\r\n                var details = childIndex[entity.get('resource_id')];\r\n                if (details && details.parent) {\r\n                    insertChild(details.parent, node, details.index);\r\n                }\r\n            }\r\n        }\r\n\r\n        let insertChild = (parent: Nullable<BABYLON.Node>, node: Nullable<BABYLON.Node>, index: number) => {\r\n            if (node !== null) {\r\n                node.parent = parent;\r\n            }\r\n        }\r\n\r\n        editor.method('scene:mesh:create', (entity: Observer) => {\r\n            loadBabylon(entity);\r\n        });\r\n\r\n        let loadingBabylonFlag: { [key: string]: boolean } = {};\r\n        let toLoadEntity: { [key: string]: Observer[] } = {};\r\n        let loadBabylon = (entity: Observer) => {\r\n            let assetID: string = entity.get('asset_id');\r\n            let dataBabylon: any = null;\r\n\r\n            if (BabylonLoader.hasBabylobData(assetID)) {\r\n                dataBabylon = BabylonLoader.getParsedBabylonData(assetID);\r\n                // BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n                // 关联mesh\r\n                assembleSceneMesh(entity, dataBabylon);\r\n            } else {\r\n                if (assetID in loadingBabylonFlag) {\r\n                    toLoadEntity[assetID].push(entity);\r\n                } else {\r\n                    loadingBabylonFlag[assetID] = true;\r\n                    toLoadEntity[assetID] = [entity];\r\n                    // console.warn(BabylonLoader.assetsData);\r\n                    var data1 = {\r\n                        url: BabylonLoader.prefix + assetID + '/' + BabylonLoader.assetsData.assets[assetID].name,\r\n                        method: 'GET',\r\n                        // auth: true,\r\n                        data: null,\r\n                        ignoreContentType: true,\r\n                        // headers: {\r\n                        //     Accept: 'application/json'\r\n                        // }\r\n                    };\r\n                    // 直接返回babylon json格式内容数据\r\n                    (<AjaxRequest>new Ajax(data1))\r\n                        .on('load', (status: any, data: any) => {\r\n\r\n                            dataBabylon = data;\r\n                            BabylonLoader.babylonCacheData[assetID] = dataBabylon;\r\n                            BabylonLoader.parseBabylon(assetID, data);\r\n                            BabylonLoader.parseBabylon(assetID, data);\r\n                            dataBabylon = BabylonLoader.getParsedBabylonData(assetID);\r\n                            toLoadEntity[assetID].forEach((item: Observer) => {\r\n                                assembleSceneMesh(item, dataBabylon);\r\n                            });\r\n                            // 关联mesh\r\n                        }).on('error', (evt: any) => {\r\n                            console.error('scene数据匹配babylon mesh数据错误！');\r\n                            console.error(evt);\r\n                        });;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let assembleSceneMesh = (entity: Observer, parsedBabylon: any) => {\r\n            // TODO: 暂时未考虑TransformNode数据的情况\r\n            if (parsedBabylon) {\r\n                let assetID: string = entity.get('asset_id');\r\n                // 先从.babylon提取原始mesh数据\r\n                let meshID: string = entity.get('babylon_id');\r\n                if (parsedBabylon.meshes[meshID]) {\r\n                    let meshData = parsedBabylon.meshes[meshID];\r\n                    // 结合scene和babylon数据，更新mesh信息\r\n                    meshData.position = entity.has('position') && entity.get('position') ? entity.get('position') : meshData.position;\r\n                    let recordRotation = entity.get('rotation');\r\n                    if (recordRotation && recordRotation.length > 0) {\r\n                        recordRotation = Tools.vector3ToArray(Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(recordRotation)));\r\n                    } else {\r\n                        recordRotation = meshData.rotation;\r\n                    }\r\n                    meshData.rotation = recordRotation;\r\n                    meshData.scale = entity.has('scale') && entity.get('scale') ? entity.get('scale') : meshData.scal;\r\n                    meshData.name = entity.has('name') && entity.get('name') ? entity.get('name') : meshData.name;\r\n                    meshData.id = entity.has('resource_id') && entity.get('resource_id') ? entity.get('resource_id') : meshData.id;\r\n                    meshData.isEnabled = entity.has('enabled') ? entity.get('enabled') : meshData.isEnabled;\r\n                    meshData.isVisible = entity.has('isVisible') ? entity.get('isVisible') : meshData.isVisible;\r\n                    // TODO：发布状态下，听数据的\r\n                    meshData.pickable = entity.has('pickable') ? entity.get('pickable') : meshData.pickable;\r\n                    // TODO：scene编辑条件下默认就是加载状态；\r\n                    // meshData.pickable = true;\r\n                    meshData.checkCollisions = entity.has('checkCollisions') ? entity.get('checkCollisions') : meshData.checkCollisions;\r\n                    meshData.materialId = entity.has('material_id') ? entity.get('material_id') : meshData.materialId;\r\n                    // 要注意是否为root id\r\n                    meshData.parentId = entity.has('parent') ? entity.get('parent') : meshData.parentId;\r\n\r\n\r\n                    // 判断是否关联了geometry\r\n                    if (meshData.geometryId) {\r\n                        if (VR.BabylonEngine.Scene.getGeometryByID(meshData.geometryId) === null) {\r\n                            if (parsedBabylon.geometries && parsedBabylon.geometries[meshData.geometryId]) {\r\n                                let vertexData = parsedBabylon.geometries[meshData.geometryId];\r\n                                BabylonLoader.loadGeometry(vertexData, VR.BabylonEngine.Scene, '');\r\n                            }\r\n                        }\r\n                    }\r\n                    // 组装material\r\n                    // console.error(meshData.materialId);\r\n                    if (meshData.materialId) {\r\n                        if (VR.BabylonEngine.Scene.getMaterialByID(meshData.materialId) === null) {\r\n                            // console.error(BabylonLoader.assetsData.babylon[assetID]);\r\n                            if (BabylonLoader.assetsData.babylon[assetID]) {\r\n                                let mats = BabylonLoader.assetsData.babylon[assetID]['materials'];\r\n                                if (mats && mats[meshData.materialId]) {\r\n                                    let matAssetID = mats[meshData.materialId].asset_id;\r\n                                    if (BabylonLoader.assetsData.assets[matAssetID]) {\r\n                                        let newMat = BabylonLoader.assetsData.assets[matAssetID].data;\r\n\r\n                                        // 检测texture\r\n                                        if (newMat.diffuseTexture && newMat.diffuseTexture.texture_id) {\r\n                                            newMat.diffuseTexture.name = BabylonLoader.prefix + newMat.diffuseTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.diffuseTexture.texture_id].name;\r\n                                            // console.warn(newMat.diffuseTexture.name);\r\n                                        }\r\n                                        if (newMat.specularTexture && newMat.specularTexture.texture_id) {\r\n                                            newMat.specularTexture.name = BabylonLoader.prefix + newMat.specularTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.specularTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.reflectionTexture && newMat.reflectionTexture.texture_id) {\r\n                                            newMat.reflectionTexture.name = BabylonLoader.prefix + newMat.reflectionTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.reflectionTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.refractionTexture && newMat.refractionTexture.texture_id) {\r\n                                            newMat.refractionTexture.name = BabylonLoader.prefix + newMat.refractionTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.refractionTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.emissiveTexture && newMat.emissiveTexture.texture_id) {\r\n                                            newMat.emissiveTexture.name = BabylonLoader.prefix + newMat.emissiveTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.emissiveTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.bumpTexture && newMat.bumpTexture.texture_id) {\r\n                                            newMat.bumpTexture.name = BabylonLoader.prefix + newMat.bumpTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.bumpTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.opacityTexture && newMat.opacityTexture.texture_id) {\r\n                                            newMat.opacityTexture.name = BabylonLoader.prefix + newMat.opacityTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.opacityTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.ambientTexture && newMat.ambientTexture.texture_id) {\r\n                                            newMat.ambientTexture.name = BabylonLoader.prefix + newMat.ambientTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.ambientTexture.texture_id].name;\r\n                                        }\r\n                                        if (newMat.lightmapTexture && newMat.lightmapTexture.texture_id) {\r\n                                            newMat.lightmapTexture.name = BabylonLoader.prefix + newMat.lightmapTexture.texture_id + '/' + BabylonLoader.assetsData.assets[newMat.lightmapTexture.texture_id].name;\r\n                                        }\r\n                                        // console.error(newMat);\r\n                                        BabylonLoader.loadMaterial(newMat, VR.BabylonEngine.Scene, '');\r\n                                    } else {\r\n                                        console.warn('scene mesh warn');\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                console.warn('scene mesh warn');\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 加载mesh\r\n                    let mesh = BabylonLoader.loadMesh(meshData, VR.BabylonEngine.Scene, '');\r\n                    entity.node = mesh;\r\n                    entitiesIndex[entity.get('resource_id')] = mesh;\r\n                    childAndParent(entity, mesh);\r\n                } else {\r\n                    console.warn('scene mesh warn');\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n}","export class Scenes {\r\n\r\n\r\n\r\n  public constructor() {\r\n    // connect to server\r\n    // load project data\r\n    // analysis data\r\n    // load original model\r\n    // load scene object from original model\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n}","export * from './lib';\r\nexport * from './game';","import { Events } from \"../lib\";\r\n\r\nexport class Ajax {\r\n\r\n    public constructor(args: object | string) {\r\n        if (typeof (args) === 'string')\r\n            args = { url: args };\r\n\r\n        return new AjaxRequest(args);\r\n    }\r\n\r\n    public static get(url: string): AjaxRequest {\r\n        return new AjaxRequest({ url: url });\r\n    }\r\n\r\n    public static post(url: string, data: any): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'POST',\r\n            url: url,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    public static put(url: string, data: any): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'PUT',\r\n            url: url,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    public static delete(url: string): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'DELETE',\r\n            url: url\r\n        });\r\n    }\r\n\r\n    public static params: { [key: string]: any } = {};\r\n\r\n    public static param(name: string, value: any): void {\r\n        Ajax.params[name] = value;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class AjaxRequest extends Events {\r\n\r\n    private _progress: number = 0;\r\n\r\n    private _xhr: XMLHttpRequest;\r\n\r\n    public notJson: boolean;\r\n\r\n    public constructor(args: any) {\r\n        super();\r\n\r\n        if (!args) {\r\n            throw new Error('ajax请求无参数，请检查！')\r\n        }\r\n\r\n        this._progress = 0.0;\r\n        this.emit('progress', this._progress);\r\n\r\n        this._xhr = new XMLHttpRequest();\r\n\r\n        // send cookies\r\n        if (args.cookies)\r\n            this._xhr.withCredentials = true;\r\n\r\n        // events\r\n        this._xhr.addEventListener('load', this._onLoad.bind(this), false);\r\n        // this._xhr.addEventListener('progress', this._onProgress.bind(this), false);\r\n        this._xhr.upload.addEventListener('progress', this._onProgress.bind(this), false);\r\n        this._xhr.addEventListener('error', this._onError.bind(this), false);\r\n        this._xhr.addEventListener('abort', this._onAbort.bind(this), false);\r\n\r\n        // url\r\n        let url: string = args.url;\r\n\r\n        // query\r\n        if (args.query && Object.keys(args.query).length) {\r\n            if (url.indexOf('?') === -1) {\r\n                url += '?';\r\n            }\r\n\r\n            var query = [];\r\n            for (var key in args.query) {\r\n                query.push(key + '=' + args.query[key]);\r\n            }\r\n\r\n            url += query.join('&');\r\n        }\r\n\r\n        // templating\r\n        var parts = url.split('{{');\r\n        if (parts.length > 1) {\r\n            for (var i = 1; i < parts.length; i++) {\r\n                var ends = parts[i].indexOf('}}');\r\n                var key = parts[i].slice(0, ends);\r\n\r\n                if (Ajax.params[key] === undefined)\r\n                    continue;\r\n\r\n                // replace\r\n                parts[i] = Ajax.params[key] + parts[i].slice(ends + 2);\r\n            }\r\n\r\n            url = parts.join('');\r\n        }\r\n\r\n        // open request\r\n        this._xhr.open(args.method || 'GET', url, true);\r\n\r\n        // 返回数据是否为json格式\r\n        this.notJson = args.notJson || false;\r\n\r\n        // header for PUT/POST\r\n        if (!args.ignoreContentType && (args.method === 'PUT' || args.method === 'POST' || args.method === 'DELETE'))\r\n            this._xhr.setRequestHeader('Content-Type', 'application/json');\r\n\r\n        // TODO: 权限header参数\r\n        // if (args.auth && config.accessToken) {\r\n        //     this._xhr.setRequestHeader('Authorization', 'Bearer ' + config.accessToken);\r\n        // }\r\n\r\n        if (args.headers) {\r\n            for (var key in args.headers)\r\n                this._xhr.setRequestHeader(key, args.headers[key]);\r\n        }\r\n\r\n        // stringify data if needed\r\n        if (args.data && typeof (args.data) !== 'string' && !(args.data instanceof FormData)) {\r\n            args.data = JSON.stringify(args.data);\r\n        }\r\n\r\n        // make request\r\n        this._xhr.send(args.data || null);\r\n    }\r\n\r\n    private _onLoad(): void {\r\n        this._progress = 1.0;\r\n        this.emit('progress', 1.0);\r\n\r\n        if (this._xhr.status === 200 || this._xhr.status === 201) {\r\n            if (this.notJson) {\r\n                this.emit('load', this._xhr.status, this._xhr.responseText);\r\n            } else {\r\n                try {\r\n                    var json = JSON.parse(this._xhr.responseText);\r\n                } catch (ex) {\r\n                    this.emit('error', this._xhr.status || 0, new Error('invalid json'));\r\n                    return;\r\n                }\r\n                this.emit('load', this._xhr.status, json);\r\n            }\r\n        } else {\r\n            try {\r\n                var json = JSON.parse(this._xhr.responseText);\r\n                var msg = json.message;\r\n                if (!msg) {\r\n                    msg = json.error || (json.response && json.response.error);\r\n                }\r\n\r\n                if (!msg) {\r\n                    msg = this._xhr.responseText;\r\n                }\r\n\r\n                this.emit('error', this._xhr.status, msg);\r\n            } catch (ex) {\r\n                this.emit('error', this._xhr.status);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onError(evt: any): void {\r\n        this.emit('error', 0, evt);\r\n    }\r\n\r\n    private _onAbort(evt: any): void {\r\n        this.emit('error', 0, evt);\r\n    }\r\n\r\n    private _onProgress(evt: any): void {\r\n        if (!evt.lengthComputable)\r\n            return;\r\n\r\n        var progress = evt.loaded / evt.total;\r\n\r\n        if (progress !== this._progress) {\r\n            this._progress = progress;\r\n            this.emit('progress', this._progress);\r\n        }\r\n    }\r\n\r\n    public abort(): void {\r\n        this._xhr.abort();\r\n    }\r\n\r\n\r\n}","import { Events } from \"./events\";\r\n\r\nexport class Editor extends Events {\r\n\r\n  // 相较于Events，同一个函数名只可代表一个函数；\r\n\r\n  // 某个name对应的某个事件，name与Function是1对1的关系；\r\n  private _hooks: { [key: string]: Function } = {};\r\n\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * 添加全局函数，函数名与函数本体一一对应，不能重名；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public method(name: string, fn: Function): void {\r\n    if (this._hooks[name] !== undefined) {\r\n      throw new Error(\"can't override hook: \" + name);\r\n    }\r\n    this._hooks[name] = fn;\r\n  };\r\n\r\n  /**\r\n   * 移除某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public methodRemove(name: string): void {\r\n    delete this._hooks[name];\r\n  };\r\n\r\n  /**\r\n   * 执行某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public call(name: string, ...args: any[]): any {\r\n    if (this._hooks[name]) {\r\n      var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n      try {\r\n        return this._hooks[name].apply(null, args);\r\n      } catch (ex) {\r\n        console.error(\r\n          \"%c%s %c(editor.method error)\",\r\n          \"color: #06f\",\r\n          name,\r\n          \"color: #f00\"\r\n        );\r\n        console.error(ex.stack);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n}","export class Events {\r\n\r\n    // 相较于Editor，同一个函数名可包含一系列函数，不仅仅是一个，且有once功能；\r\n  \r\n    public get suspendEvents(): boolean {\r\n      return this._suspendEvents;\r\n    }\r\n    public set suspendEvents(val: boolean) {\r\n      this._suspendEvents = val;\r\n    }\r\n    private _suspendEvents: boolean = false;\r\n  \r\n    // 某个name对应的事件数组，name与Function是1对多的关系；\r\n    private _events: { [key: string]: Function[] } = {};\r\n  \r\n    public constructor() {\r\n  \r\n    }\r\n  \r\n    /**\r\n     * 添加事件数组，若name相同，则在数组末尾继续添加；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public on(name: string, fn: Function): EventHandle {\r\n      let events: Function[] = this._events[name];\r\n      if (events === undefined) {\r\n        this._events[name] = [fn];\r\n      } else {\r\n        if (events.indexOf(fn) == -1) {\r\n          events.push(fn);\r\n        }\r\n      }\r\n      return new EventHandle(this, name, fn);\r\n    }\r\n  \r\n    /**\r\n     * emit后只执行一次；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public once(name: string, fn: Function): EventHandle {\r\n      let self = this;\r\n      let evt: EventHandle = this.on(name, function (\r\n        arg0: any,\r\n        arg1: any,\r\n        arg2: any,\r\n        arg3: any,\r\n        arg4: any,\r\n        arg5: any,\r\n        arg6: any,\r\n        arg7: any\r\n      ) {\r\n        fn.call(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n        evt.unbind();\r\n      });\r\n      return evt;\r\n    }\r\n  \r\n    /**\r\n     * 执行事件；\r\n     * @param name 函数名；\r\n     * @param arg0 函数参数1，可选；\r\n     * @param arg1 函数参数2，可选；\r\n     * @param arg2 函数参数3，可选；\r\n     * @param arg3 函数参数4，可选；\r\n     * @param arg4 函数参数5，可选；\r\n     * @param arg5 函数参数6，可选；\r\n     * @param arg6 函数参数7，可选；\r\n     * @param arg7 函数参数8，可选；\r\n     */\r\n    public emit(name: string,\r\n      arg0?: any,\r\n      arg1?: any,\r\n      arg2?: any,\r\n      arg3?: any,\r\n      arg4?: any,\r\n      arg5?: any,\r\n      arg6?: any,\r\n      arg7?: any\r\n    ): Events {\r\n      if (this._suspendEvents) return this;\r\n  \r\n      let events: Function[] = this._events[name];\r\n      if (!events) return this;\r\n  \r\n      // 返回新数组\r\n      events = events.slice(0);\r\n  \r\n      for (let i: number = 0; i < events.length; i++) {\r\n        if (!events[i]) continue;\r\n        try {\r\n          events[i].call(this, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n        } catch (ex) {\r\n          console.info(\"%c%s %c(event error)\", \"color: #06f\", name, \"color: #f00\");\r\n          console.log(ex.stack);\r\n        }\r\n      }\r\n  \r\n      return this;\r\n    };\r\n  \r\n    /**\r\n     * 取消Events事件绑定，若name为空，则清空events；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public unbind(name?: string, fn?: Function): Events {\r\n      if (name) {\r\n        let events: Function[] = this._events[name];\r\n        if (!events) return this;\r\n  \r\n        if (fn) {\r\n          let i: number = events.indexOf(fn);\r\n          if (i !== -1) {\r\n            if (events.length === 1) {\r\n              delete this._events[name];\r\n            } else {\r\n              events.splice(i, 1);\r\n            }\r\n          }\r\n        } else {\r\n          delete this._events[name];\r\n        }\r\n      } else {\r\n        this._events = {};\r\n      }\r\n  \r\n      return this;\r\n    };\r\n  \r\n  }\r\n  \r\n  \r\n  export class EventHandle {\r\n  \r\n    public name: Nullable<string>;\r\n  \r\n    public owner: Nullable<Events>;\r\n  \r\n    public fn: Nullable<Function>;\r\n  \r\n    public constructor(owner: Events, name: string, fn: Function) {\r\n      this.owner = owner;\r\n      this.name = name;\r\n      this.fn = fn;\r\n    }\r\n  \r\n    public unbind(): void {\r\n      if (!this.owner) return;\r\n  \r\n      this.owner.unbind(this.name!, this.fn!);\r\n  \r\n      this.owner = null;\r\n      this.name = null;\r\n      this.fn = null;\r\n    }\r\n  \r\n    public call(): void {\r\n      if (!this.fn) return;\r\n  \r\n      this.fn.call(\r\n        this.owner!,\r\n        arguments[0],\r\n        arguments[1],\r\n        arguments[2],\r\n        arguments[3],\r\n        arguments[4],\r\n        arguments[5],\r\n        arguments[6],\r\n        arguments[7]\r\n      );\r\n    }\r\n  \r\n    public on(name: string, fn: Function): EventHandle {\r\n      return this.owner!.on(name, fn);\r\n    }\r\n  \r\n  }","export class GUID {\r\n\r\n    /**\r\n     * 创建GUID唯一标志，注意：采用大数法，有很小的可能性会重复，一般够用；\r\n     */\r\n    public static create(): string {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c: string) {\r\n        let r = Math.random() * 16 | 0,\r\n          v = (c === 'x') ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n    }\r\n  \r\n  }","export * from './events';\r\nexport * from './editor';\r\nexport * from './observer';\r\nexport * from './tools';\r\nexport * from './guid';\r\nexport * from './ajax';\r\nexport * from './very-light';\r\nexport * from './very-camera';","import { Events } from './events';\r\n\r\n//  TODO： 当前暂不考虑赋值会超出现有类型的情况，比如原来是个number，赋值为了array；\r\nexport class Observer extends Events {\r\n\r\n    public get className(): string {\r\n        return 'Observer';\r\n    }\r\n\r\n    public origin: any;\r\n\r\n    private SEPARATOR: string = '.';\r\n\r\n\r\n    private _destroyed: boolean;\r\n    public _path: string;\r\n    // TODO\r\n    public _keys: string[]; // 记录对象的key、value值；\r\n\r\n\r\n    public _data: { [key: string]: any }; // 采用此对象，完整记录所有值；\r\n    public _data2: { [key: string]: any }; // 采用此对象，完整记录所有值；\r\n    public _dataType: { [key: string]: boolean } = {}; // 暂时只判断是否为array分拆而成的类型；\r\n    public _dataType2: { [key: string]: boolean } = {}; // 暂时只判断是否为array分拆而成的类型；\r\n\r\n\r\n\r\n\r\n    public _parent: any; // 当前父物体\r\n    // public _parentPath: string;\r\n    private _parentField: any;\r\n    private _parentKey: any;\r\n\r\n    private _silent: boolean;\r\n\r\n    public history!: History;\r\n    // private sync!: History;\r\n\r\n    public node: any = null;\r\n\r\n    public reparenting: boolean = false;\r\n    private _pathsWithDuplicates: { [key: string]: boolean } = {};\r\n\r\n    // entity, assets, components: script, 一般components, selector, history\r\n    public constructor(data: any, options?: any) {\r\n        super();\r\n\r\n        this.origin = data;\r\n        options = options || {};\r\n\r\n\r\n\r\n\r\n\r\n        this._destroyed = false;\r\n        this._path = '';\r\n        this._keys = [];\r\n        this._data = {};\r\n\r\n        this._data2 = {};\r\n\r\n        // array paths where duplicate entries are allowed - normally\r\n        // we check if an array already has a value before inserting it\r\n        // but if the array path is in here we'll allow it\r\n        if (options.pathsWithDuplicates) {\r\n            this._pathsWithDuplicates = {};\r\n            for (let i = 0; i < options.pathsWithDuplicates.length; i++) {\r\n                this._pathsWithDuplicates[options.pathsWithDuplicates[i]] = true;\r\n            }\r\n        }\r\n\r\n        this.patchData(data);\r\n\r\n        // for (let ke in this._data) {\r\n        //   debug.log('key: ' + ke);\r\n        //   debug.log(this._data[ke]);\r\n        // }\r\n\r\n        // this._parent = options.parent || null;\r\n        // this._parentPath = options.parentPath || '';\r\n        // this._parentField = options.parentField || null;\r\n        // this._parentKey = options.parentKey || null;\r\n\r\n        this._silent = false;\r\n    }\r\n\r\n    public patchData(data: any): void {\r\n        if (typeof data !== 'object') {\r\n            debug.warn(this.className + ': 不是正确的json对象，打印：\\n' + data);\r\n            return;\r\n        }\r\n\r\n        for (let key in data) {\r\n            if (typeof data[key] === 'object') {\r\n                // 对象属性\r\n                // debug.log('对象属性：' + key);\r\n                // debug.log(data[key]);\r\n                // this._prepare(this, key, data[key]);\r\n                this.parserObject(key, key, data[key]);\r\n            } else {\r\n                // 一般属性\r\n                // debug.log('一般属性：' + key);\r\n                // debug.log(data[key]);\r\n                this.set(key, data[key]);\r\n                this._dataType[key] = false;\r\n                this._dataType2[key] = false;\r\n                // this.set(key, data[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: 若设置值为object，需要再parse\r\n    public set(path: string, value: any): void {\r\n        // console.warn(path + ' : ' + value);\r\n        let oldValue = this._data[path];\r\n        // console.warn(path);\r\n        // console.warn(value);\r\n        let keys = path.split('.');\r\n        let parentID = '';\r\n        for (let i = 0; i < keys.length - 1; i++) {\r\n            if (i === 0) {\r\n                parentID = keys[i];\r\n            } else {\r\n                parentID += this.SEPARATOR + keys[i];\r\n            }\r\n        }\r\n        // 数组处理，其他形式暂不考虑\r\n        if (keys.length > 1 && this._dataType[path]) {\r\n            let index = parseInt(keys[keys.length - 1]);\r\n            this._data[path] = value;\r\n            // 上一级数组修改\r\n            this._data[parentID][index] = value;\r\n        } else {\r\n            // if (value instanceof Array) {\r\n            //     value = value.slice(0);\r\n            // }\r\n            this._data[path] = value;\r\n            this.updateChildData(path, value);\r\n            this._data2[path] = value;\r\n        }\r\n        // console.warn(this._data);\r\n\r\n        // if (parentID && this._dataType2[parentID] && this.isNumber(keys[keys.length - 1])) {\r\n        //     this._data2[parentID][parseInt(keys[keys.length - 1])] = value;\r\n        // }\r\n\r\n        this.emit(path + ':set', value, oldValue);\r\n        this.emit('*:set', path, value, oldValue);\r\n    }\r\n\r\n    private isNumber(str: string): boolean {\r\n        var n = Number(str);\r\n        return !isNaN(n) ? true : false;\r\n    }\r\n\r\n    private updateChildData(path: string, value: any): void {\r\n        if (value instanceof Array) {\r\n            for (let key in this._data) {\r\n                if (key.startsWith(path + this.SEPARATOR)) {\r\n                    delete this._data[key];\r\n                    delete this._dataType[key];\r\n                }\r\n            }\r\n            let newPath = '';\r\n            for (let i = 0; i < value.length; i++) {\r\n                newPath = path + this.SEPARATOR + i.toString();\r\n                this._data[newPath] = value[i];\r\n                this._dataType[newPath] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO\r\n    public unset(path: string, value: any): boolean {\r\n        // console.log(path + ' : ' + value);\r\n        if (!this.has(path)) {\r\n            return false;\r\n        }\r\n        let oldValue = this._data[path];\r\n        delete this._data[path];\r\n        delete this._dataType[path];\r\n\r\n        delete this._data2[path];\r\n        delete this._dataType2[path];\r\n\r\n        this.emit(path + ':set', value, oldValue);\r\n        this.emit('*:set', path, value, oldValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    // 在数组的某个指定位置增加值\r\n    public insert(path: string, value: any, ind: number | undefined): boolean {\r\n        // console.error(path + ':insert-value: ' + value);\r\n        // console.warn(this._data);\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        if (value instanceof Array) {\r\n            value = value.slice(0);\r\n        }\r\n        // if (!this._pathsWithDuplicates || !this._pathsWithDuplicates[path]) {\r\n        //     if (arr.indexOf(value) !== -1) {\r\n        //         return false;\r\n        //     }\r\n        // }\r\n        if (ind === undefined) {\r\n            arr.push(value);\r\n            ind = arr.length - 1;\r\n        } else {\r\n            arr.splice(ind, 0, value);\r\n        }\r\n        this.updateChildData(path, arr);\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // console.error(arr2);\r\n        // if (arr2) {\r\n        //     // if (!this._pathsWithDuplicates || !this._pathsWithDuplicates[path]) {\r\n        //     //     if (arr2.indexOf(value) !== -1) {\r\n        //     //         return false;\r\n        //     //     }\r\n        //     // }\r\n        //     if (ind === undefined) {\r\n        //         arr2.push(value);\r\n        //     } else {\r\n        //         arr2.splice(ind, 0, value);\r\n        //     }\r\n        // }\r\n        // console.error(arr2);\r\n        \r\n        // console.warn(this._data);\r\n        this.emit(path + ':insert', value, ind);\r\n        this.emit('*:insert', path, value, ind);\r\n\r\n        return true;\r\n    }\r\n\r\n    // 删除数组指定某个序号的值\r\n    public remove(path: string, ind: number): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        if (arr.length < ind) return false;\r\n        let value = arr[ind];\r\n        arr.splice(ind, 1);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2 && arr2.length >= ind) {\r\n        //     arr2.splice(ind, 1);\r\n        // }\r\n\r\n        this.emit(path + ':remove', value, ind);\r\n        this.emit('*:remove', path, value, ind);\r\n        return true;\r\n    }\r\n\r\n    // 删除数组中的某个value值\r\n    public removeValue(path: string, value: any): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        let ind = arr.indexOf(value);\r\n        if (ind === -1) {\r\n            return false;\r\n        }\r\n        let oldValue = arr[ind];\r\n        arr.splice(ind, 1);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2 && ind >= 0) {\r\n        //     arr2.splice(ind, 1);\r\n        // }\r\n\r\n        // console.warn('删除');\r\n        // console.warn(this._data);\r\n        // console.warn(this._data2);\r\n\r\n        this.emit(path + ':remove', oldValue, ind);\r\n        this.emit('*:remove', path, oldValue, ind);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    public move(path: string, indOld: number, indNew: number): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n\r\n        let indNew2 = indNew;\r\n\r\n        let arr = this._data[path];\r\n        if (arr.length < indOld || arr.length < indNew || indOld === indNew) return false;\r\n        let oldValue = arr[indOld]\r\n        arr.splice(indOld, 1);\r\n        if (indNew === -1) indNew = arr.length;\r\n        arr.splice(indNew, 0, oldValue);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2) {\r\n        //     if (arr2.length < indOld || arr2.length < indNew2 || indOld === indNew2) {\r\n\r\n        //     } else {\r\n        //         let oldValue2 = arr2[indOld]\r\n        //         arr2.splice(indOld, 1);\r\n        //         if (indNew2 === -1) indNew2 = arr2.length;\r\n        //         arr2.splice(indNew2, 0, oldValue2);\r\n        //     }\r\n        // }\r\n\r\n        this.emit(path + ':move', oldValue, indNew, indOld);\r\n        this.emit('*:move', path, oldValue, indNew, indOld);\r\n        return true;\r\n    }\r\n\r\n    public parserObject(prefix: string, key: string, value: any): void {\r\n        // 先保存一份\r\n        this.set(prefix, value);\r\n        this._dataType[prefix] = false;\r\n\r\n        let path: string;\r\n        let type: string = typeof value;\r\n\r\n        if (type === 'object' && value instanceof Array) {\r\n            this._dataType2[prefix] = true;\r\n            for (let i = 0; i < value.length; i++) {\r\n                path = prefix + this.SEPARATOR + i.toString();\r\n                this.set(path, value[i]);\r\n                this._dataType[path] = true;\r\n                // 数组元素还是对象的情况暂时不处理\r\n            }\r\n        } else if (type === 'object' && value instanceof Object) {\r\n\r\n            for (let key2 in value) {\r\n                if (typeof value[key2] === 'object') {\r\n                    // 递归解析\r\n                    this.parserObject(prefix + this.SEPARATOR + key2, key2, value[key2]);\r\n                } else {\r\n                    path = prefix + this.SEPARATOR + key2;\r\n                    this.set(path, value[key2]);\r\n                    this._dataType[path] = false;\r\n                    this._dataType2[prefix] = false;\r\n\r\n                }\r\n            }\r\n        } else {\r\n            // 目前看，null和undefined会经过这里\r\n            // debug.warn(this.className + '.parserObject, 为止数据类型:' + value);\r\n        }\r\n    }\r\n\r\n\r\n    public has(path: string): boolean {\r\n        return path in this._data;\r\n    }\r\n\r\n    public get(path: string): any {\r\n        if (path in this._data) {\r\n            return this._data[path];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public propagate(evt: any) {\r\n        let that = this;\r\n        return function (path: string, arg1: any, arg2: any, arg3: any) {\r\n            if (!that._parent) return;\r\n\r\n            let key = that._parentKey;\r\n            if (!key && that._parentField instanceof Array) {\r\n                key = that._parentField.indexOf(that);\r\n\r\n                if (key === -1) return;\r\n            }\r\n\r\n            // path = that._parentPath + '.' + key + '.' + path;\r\n\r\n            let state;\r\n            if (that._silent) state = that._parent.silence();\r\n\r\n            that._parent.emit(path + ':' + evt, arg1, arg2, arg3);\r\n            that._parent.emit('*:' + evt, path, arg1, arg2, arg3);\r\n\r\n            if (that._silent) that._parent.silenceRestore(state);\r\n        };\r\n    }\r\n\r\n\r\n    public destroy(): void {\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n        this.emit('destroy');\r\n        this.unbind();\r\n    }\r\n}\r\n\r\nexport interface History {\r\n    enabled?: boolean;\r\n}\r\n","export class Tools {\r\n\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n\r\n    public static eulerAngleToRadian(val: BABYLON.Vector3): BABYLON.Vector3 {\r\n        let para: number = Math.PI / 180;\r\n        return val.multiplyByFloats(para, para, para);\r\n    }\r\n\r\n    public static radianToEulerAngle(val: BABYLON.Vector3): BABYLON.Vector3 {\r\n        let para: number = 180 / Math.PI;\r\n        return val.multiplyByFloats(para, para, para);\r\n    }\r\n\r\n    public static vector3ToArray(val: BABYLON.Vector3): number[] {\r\n        return [val.x, val.y, val.z];\r\n    }\r\n\r\n\r\n\r\n}","// import { VeryEngine } from \"../../engine\";\r\n// import { Config } from \"../global\";\r\n// import { Viewport } from \"../viewport\";\r\n\r\n\r\nexport class VeryCamera extends BABYLON.TransformNode {\r\n\r\n    private _canvas: HTMLCanvasElement;\r\n    private _width: number;\r\n    private _height: number;\r\n\r\n    public get mode(): number {\r\n        return this.camera.mode;\r\n    }\r\n    public set mode(val: number) {\r\n        this.camera.mode = val;\r\n    }\r\n\r\n    public get fov(): number {\r\n        return this.camera.fov;\r\n    }\r\n    public set fov(val: number) {\r\n        this.camera.fov = val;\r\n    }\r\n\r\n    public get inertia(): number {\r\n        return this.camera.inertia;\r\n    }\r\n    public set inertia(val: number) {\r\n        this.camera.inertia = val;\r\n    }\r\n\r\n    private _orthoSize: number = 0;\r\n    public get orthoSize(): number {\r\n        if (this.camera.mode === BABYLON.Camera.ORTHOGRAPHIC_CAMERA) {\r\n            this._orthoSize = this.camera!.orthoRight! / this._scene.getEngine().getRenderWidth() / this.camera.viewport.width;\r\n            return this._orthoSize;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    public set orthoSize(val: number) {\r\n        this._orthoSize = val;\r\n        if (this.camera.mode === BABYLON.Camera.ORTHOGRAPHIC_CAMERA) {\r\n            this.camera.orthoRight = val * this._scene.getEngine().getRenderWidth() * this.camera.viewport.width;\r\n            this.camera.orthoLeft = -val * this._scene.getEngine().getRenderWidth() * this.camera.viewport.width;\r\n            this.camera.orthoTop = val * this._scene.getEngine().getRenderHeight() * this.camera.viewport.height;\r\n            this.camera.orthoBottom = -val * this._scene.getEngine().getRenderHeight() * this.camera.viewport.height;\r\n        }\r\n    }\r\n\r\n    private _clearColor: Nullable<BABYLON.Color4> = null;\r\n    public get clearColor(): Nullable<BABYLON.Color4> {\r\n        if (this._clearColor === null) {\r\n            this._clearColor = new BABYLON.Color4(1, 1, 1, 1);\r\n        }\r\n        this._clearColor.copyFrom(this._scene.clearColor);\r\n        return this._clearColor;\r\n    }\r\n\r\n    public set clearColor(value: Nullable<BABYLON.Color4>) {\r\n        this._clearColor = value;\r\n        if (this._scene.activeCameras[0] === this.camera && value) {\r\n            this._scene.clearColor.copyFrom(value);\r\n        }\r\n    }\r\n\r\n    public camera: BABYLON.TargetCamera;\r\n\r\n    // public get mode()\r\n\r\n    public constructor(camera: BABYLON.TargetCamera, scene: BABYLON.Scene, canvas: HTMLCanvasElement) {\r\n        super(camera.name, scene);\r\n        this.camera = camera;\r\n        camera.name += '-Camera';\r\n        this._canvas = canvas;\r\n        this._width = canvas.width;\r\n        this._height = canvas.height;\r\n        this.position.copyFrom(camera.position);\r\n        this.rotation.copyFrom(camera.rotation);\r\n        camera.parent = this;\r\n        camera.position = BABYLON.Vector3.Zero();\r\n        camera.rotation = BABYLON.Vector3.Zero();\r\n        camera.inputs.clear();\r\n\r\n    }\r\n\r\n    private _backupViewport: BABYLON.Viewport = new BABYLON.Viewport(0, 0, 1, 1);\r\n    private _render: boolean = true;\r\n    public renderCamera(render: boolean): void {\r\n        if (this._render === render) return;\r\n        this._render = render;\r\n        if (render) {\r\n            this.camera.viewport = this._backupViewport.clone();\r\n        } else {\r\n            this._backupViewport = this.camera.viewport.clone();\r\n            this.camera.viewport = new BABYLON.Viewport(0, 0, 0, 0);\r\n        }\r\n    }\r\n\r\n    // orthographic相机在窗口resize后需要刷新；\r\n    public resize(editor?: boolean): void {\r\n        if (this.camera && this._canvas) {\r\n            if (this._canvas.width !== this._width || this._canvas.height !== this._height) {\r\n                this._width = this._canvas.width;\r\n                this._height = this._canvas.height;\r\n\r\n                let w = this._scene.getEngine().getRenderWidth();\r\n                let h = this._scene.getEngine().getRenderHeight();\r\n\r\n                // if (editor) {\r\n                //     if (this !== VeryEngine.viewCamera) {\r\n                //         if (this._render) {\r\n                //             this.camera.viewport = new BABYLON.Viewport(Config.x / w, (h - Config.y) / h, Config.width / w, Config.height / h);\r\n                //         } else {\r\n                //             this._backupViewport = new BABYLON.Viewport(Config.x / w, (h - Config.y) / h, Config.width / w, Config.height / h);\r\n                //         }\r\n                //         // console.warn(this.camera.viewport);\r\n                //     }\r\n                // }\r\n\r\n                if (this.camera.mode === BABYLON.Camera.ORTHOGRAPHIC_CAMERA) {\r\n                    this.camera.orthoRight = this._orthoSize * w * this.camera.viewport.width;\r\n                    this.camera.orthoLeft = -this._orthoSize * w * this.camera.viewport.width;\r\n                    this.camera.orthoTop = this._orthoSize * h * this.camera.viewport.height;\r\n                    this.camera.orthoBottom = -this._orthoSize * h * this.camera.viewport.height;\r\n                } else {\r\n\r\n                }\r\n\r\n                // console.log('设置ortho参数: ' + this._orthoSize);\r\n                // console.warn(this.camera);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}","export class VeryLight extends BABYLON.TransformNode {\r\n\r\n\r\n    public light: BABYLON.Light;\r\n\r\n    public get type(): number {\r\n        return this.light.getTypeID();\r\n    }\r\n\r\n    public get intensity(): number {\r\n        return this.light.intensity;\r\n    }\r\n    public set intensity(value: number) {\r\n        this.light.intensity = value;\r\n    }\r\n\r\n    public get diffuse(): BABYLON.Color3 {\r\n        return this.light.diffuse;\r\n    }\r\n    public set diffuse(value: BABYLON.Color3) {\r\n        this.light.diffuse = value;\r\n    }\r\n\r\n    public get specular(): BABYLON.Color3 {\r\n        return this.light.specular;\r\n    }\r\n    public set specular(value: BABYLON.Color3) {\r\n        this.light.specular = value;\r\n    }\r\n\r\n    public get angle(): number {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            return this.light.angle;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    public set angle(value: number) {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            this.light.angle = value;\r\n        }\r\n    }\r\n\r\n    public get exponent(): number {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            return this.light.exponent;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    public set exponent(value: number) {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            this.light.exponent = value;\r\n        }\r\n    }\r\n\r\n\r\n    public constructor(light: BABYLON.Light, scene: BABYLON.Scene) {\r\n        super(light.name, scene);\r\n        light.name += '-Light';\r\n        // light\r\n        this.light = light;\r\n        this.position.copyFrom(light.getAbsolutePosition());\r\n        // this.rotation = BABYLON.Vector3.Zero();\r\n        light.parent = this;\r\n        \r\n    }\r\n\r\n    // public isEnabled(): boolean {\r\n    //     return this.light.isEnabled();\r\n    // }\r\n\r\n    // public setEnabled(value: boolean) {\r\n    //     this.light.setEnabled(value);\r\n    // }\r\n\r\n}","import { BabylonLoader, Config, Game } from './game';\r\nimport { Editor } from './lib';\r\n\r\nexport * from './index';\r\n\r\nlet game!: Game;\r\nlet initFlag: boolean = false;\r\nlet dataLoaded: boolean = false;\r\nlet dataLoaded2: boolean = false;\r\n\r\n// let path1: string = '';\r\n// let path2: string = '';\r\nlet datas: any;\r\n\r\n// 添加到全局变量\r\nwindow.editor = new Editor();\r\n// if (typeof String.prototype.startsWith != 'function') {\r\n//     String.prototype.startsWith = function (prefix) {\r\n//         return this.slice(0, prefix.length) === prefix;\r\n//     };\r\n// }\r\n\r\nvar projectID = window.location.pathname.substring(9);\r\n\r\n/**\r\n * 初始化入口；\r\n */\r\nfunction initGame(): void {\r\n    let canvas = <HTMLCanvasElement>document.getElementById('renderCanvas');\r\n    let fpsLabel = document.getElementById('fpsLabel');\r\n    fpsLabel!.style.display = 'none';\r\n    if (canvas !== null && fpsLabel !== null) {\r\n        game = new Game(canvas, fpsLabel);\r\n        game.createScene(datas).animate();  // 链式调用\r\n    }\r\n}\r\n\r\nfunction runBtn(): void {\r\n    if (game) {\r\n        game.createScene(datas).animate();\r\n    }\r\n}\r\n\r\nfunction toggleDebug(): void {\r\n    if (game) {\r\n        game.toggleDebug();\r\n    }\r\n}\r\n\r\n\r\nfunction init(): void {\r\n    // 等待表格数据加载完成\r\n    if (dataLoaded && dataLoaded2) {\r\n        initGame();\r\n    } else {\r\n        setTimeout(init, 500);\r\n    }\r\n}\r\n\r\n\r\nfunction loadResources(): void {\r\n\r\n    var projectID = window.location.pathname.substring(9);\r\n    Config.projectID = projectID;\r\n    // project data\r\n    axios.post('/api/getProject', { projectID: Config.projectID })\r\n        .then(response => {\r\n            var data = response.data;\r\n            if (data.code === '0000') {\r\n                // console.log(data.data);\r\n                Config.projectData = data.data;\r\n                Config.projectName = data.data.project.name;\r\n                Config.userID = data.data.owner.id;\r\n                Config.username = data.data.owner.username;\r\n                // 加载完assets数据再加载scene数据，便于解析scene过程中使用assets数据\r\n                editor.call('getAssets');\r\n                // document.title = Config.projectName + ' - 万维引擎';\r\n                // editor.call('toolbar.project.set', Config.projectName);\r\n            } else {\r\n                console.error('load project data error: ' + data.message);\r\n            }\r\n        })\r\n        .catch(\r\n            error => {\r\n                console.error('load project data error: ');\r\n                console.error(error);\r\n            }\r\n        );\r\n\r\n\r\n    editor.method('getAssets', () => {\r\n        // assets data\r\n        axios.post('/api/getAssets', { projectID: Config.projectID })\r\n            .then(response => {\r\n                var data = response.data;\r\n                if (data.code === '0000') {\r\n                    // console.log(data.data);\r\n                    Config.assetsData = data.data;\r\n                    BabylonLoader.assetsData = data.data;\r\n                    // editor.call('initAssets', Config.assetsData);\r\n                    // 加载完assets数据再加载scene数据，便于解析scene过程中使用assets数据\r\n                    editor.call('getScenes');\r\n                    // 加载表格判断\r\n                    if(data.data.assets) {\r\n                        for(let key in data.data.assets) {\r\n                            if(data.data.assets[key].type === 'table') {\r\n                                Config.tableAssetsID = key;\r\n                                Config.tableName = data.data.assets[key].name;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(Config.tableAssetsID !== '') {\r\n                        editor.call('loadTable');\r\n                    } else {\r\n                        dataLoaded = true;\r\n                    }\r\n                } else {\r\n                    console.error(data.message);\r\n                }\r\n                // ep.emit('settings', response.data);\r\n            })\r\n            .catch(\r\n                error => {\r\n                    console.error(error);\r\n                }\r\n            );\r\n    });\r\n\r\n    editor.method('getScenes', () => {\r\n        // scenes data\r\n        axios.post('/api/getScenes', { projectID: Config.projectID})\r\n            .then(response => {\r\n                var data = response.data;\r\n                if (data.code === '0000') {\r\n                    let lastScene: number = data.data.last;\r\n                    Config.scenesData = data.data.scenes[lastScene];\r\n                    Config.sceneIndex = lastScene;\r\n                    Config.sceneName = Config.scenesData.name;\r\n\r\n                    document.title = Config.projectName + ' - ' + Config.sceneName + ' - 万维引擎';\r\n                    // console.log(Config.scenesData);\r\n                    dataLoaded2 = true;\r\n                    // editor.emit('scene:raw', Config.scenesData);\r\n                    // editor.call('toolbar.scene.set', Config.scenesData.name);\r\n                } else {\r\n                    console.error(data.message);\r\n                }\r\n                // ep.emit('settings', response.data);\r\n            })\r\n            .catch(\r\n                error => {\r\n                    console.error(error);\r\n                }\r\n            );\r\n    });\r\n\r\n\r\n    editor.method('loadTable', () => {\r\n        // 获取表格数据\r\n        var path = window.location.href;\r\n        var paramsData: any = {};\r\n        paramsData['name'] = Config.tableName;\r\n        paramsData['projectID'] = projectID;\r\n        paramsData['id'] = Config.tableAssetsID;\r\n        axios\r\n            .get('/api/table/acquire', {\r\n                params: paramsData,\r\n            })\r\n            .then(function (response) {\r\n                let data = response.data;\r\n                // console.log(data);\r\n                if (data.code === '0000') {\r\n                    // 先将json转化为字符串\r\n                    let tempData = JSON.stringify(data.data);\r\n                    // 对字符串再进行反转义\r\n                    tempData = escape2Html(tempData);\r\n                    // 转化为json后，赋值给表格\r\n                    // hot1.loadData(JSON.parse(tempData).table);\r\n                    // console.log(JSON.parse(tempData).table);\r\n                    datas = JSON.parse(tempData).table;\r\n                    Config.tableData = datas;\r\n                    dataLoaded = true;\r\n                } else {\r\n                    // Do nothing\r\n                    console.log('load not right: ' + data.message);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log('load error: ' + error);\r\n            });\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\nloadResources();\r\n\r\n\r\nfunction loadScene(): void {\r\n\r\n\r\n    var sceneData: any;\r\n    axios.post('/api/getScenes', { projectID: projectID })\r\n        .then(response => {\r\n            var data = response.data;\r\n            if (data.code === '0000') {\r\n                let lastScene: number = data.data.last;\r\n                sceneData = data.data.scenes[lastScene];\r\n                console.log(sceneData);\r\n                document.title = sceneData.name + ' | 发布项目';\r\n                // path1 = sceneData.path1;\r\n                // path2 = sceneData.path2;\r\n                // console.log('path1: ' + sceneData.path1);\r\n                // console.log('path2: ' + sceneData.path2);\r\n                // dataLoaded2 = true;\r\n            } else {\r\n                console.error(data.message);\r\n            }\r\n            // ep.emit('settings', response.data);\r\n        })\r\n        .catch(\r\n            error => {\r\n                console.error(error);\r\n            }\r\n\r\n        );\r\n}\r\n\r\n// loadScene();\r\n\r\n\r\n// function loadData(): void {\r\n\r\n// }\r\n\r\n// loadData();\r\n\r\n//HTML标签转义（< -> &lt;）\r\nfunction html2Escape(sHtml: any) {\r\n    var temp: any = document.createElement('div');\r\n    temp.textContent != null\r\n        ? (temp.textContent = sHtml)\r\n        : (temp.innerText = sHtml);\r\n    var output = temp.innerHTML;\r\n    temp = null;\r\n    return output;\r\n}\r\n\r\n//HTML标签反转义（&lt; -> <）\r\nfunction escape2Html(str: any) {\r\n    var temp: any = document.createElement('div');\r\n    temp.innerHTML = str;\r\n    var output = temp.innerText || temp.textContent;\r\n    temp = null;\r\n    return output;\r\n}\r\n\r\n// 关联按钮\r\n// document.getElementById('runButton')!.addEventListener('click', runBtn);\r\n\r\n// // 关联按钮\r\n// document.getElementById('debugButton')!.addEventListener('click', toggleDebug);\r\n\r\n// 启动引擎\r\n// 第一次启动时，先异步加载数据后再初始化，后期可以直接点击按钮进行加载；\r\ninit();\r\n// loadData2()\r\n//   .then(function (hot: HandTable) {\r\n//     console.log(hot.getData());\r\n//   }\r\n//   );\r\n"]}