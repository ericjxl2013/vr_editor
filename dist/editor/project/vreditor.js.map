{"version":3,"sources":["node_modules/_browser-pack@6.1.0@browser-pack/_prelude.js","node_modules/_process@0.11.10@process/browser.js","node_modules/_timers-browserify@1.4.2@timers-browserify/main.js","src/editor/assets/assets.ts","src/editor/assets/index.ts","src/editor/attributes/attributes-entity.ts","src/editor/attributes/attributes-history.ts","src/editor/attributes/attributes-panel.ts","src/editor/attributes/attributes-reference.ts","src/editor/attributes/index.ts","src/editor/editor.ts","src/editor/entity/entities.ts","src/editor/entity/entity-load.ts","src/editor/entity/entity.ts","src/editor/entity/index.ts","src/editor/hierarchy/hierarchy-context-menu.ts","src/editor/hierarchy/hierarchy-menu.ts","src/editor/hierarchy/hierarchy-panel.ts","src/editor/hierarchy/hierarchy-search.ts","src/editor/hierarchy/hierarchy.ts","src/editor/hierarchy/index.ts","src/editor/hotkeys.ts","src/editor/index.ts","src/editor/initialize-after.ts","src/editor/initialize-before.ts","src/editor/layout.ts","src/editor/middleware/component.ts","src/editor/middleware/gameobject.ts","src/editor/middleware/index.ts","src/editor/middleware/middle-container.ts","src/editor/middleware/transform.ts","src/editor/selector/index.ts","src/editor/selector/selector-history.ts","src/editor/selector/selector.ts","src/editor/toolbar/index.ts","src/editor/toolbar/toolbar-top-control.ts","src/editor/utility/components-logos.ts","src/editor/utility/context-menu.ts","src/editor/utility/debug.ts","src/editor/utility/eventproxy.ts","src/editor/utility/guid.ts","src/editor/utility/index.ts","src/editor/viewport/index.ts","src/editor/viewport/viewport-application.ts","src/editor/viewport/viewport-expand.ts","src/editor/viewport/viewport-instance-create.ts","src/editor/viewport/viewport.ts","src/editor/web/realtime.ts","src/engine/babylon-engine.ts","src/engine/index.ts","src/engine/very-engine.ts","src/index.ts","src/lib/events.ts","src/lib/index.ts","src/lib/observer-list.ts","src/lib/observer.ts","src/main.ts","src/ui/bubble.ts","src/ui/button.ts","src/ui/canvas.ts","src/ui/checkbox.ts","src/ui/code.ts","src/ui/color-field.ts","src/ui/container-element.ts","src/ui/element.ts","src/ui/grid-item.ts","src/ui/grid.ts","src/ui/image-field.ts","src/ui/index.ts","src/ui/label.ts","src/ui/link.ts","src/ui/list-item.ts","src/ui/list.ts","src/ui/menu-item.ts","src/ui/menu.ts","src/ui/number-field.ts","src/ui/overlay.ts","src/ui/panel.ts","src/ui/progress.ts","src/ui/select-field.ts","src/ui/slider.ts","src/ui/text-field.ts","src/ui/textarea-field.ts","src/ui/tooltip.ts","src/ui/tree-item.ts","src/ui/tree.ts"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"vreditor.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","import { Panel, Progress } from \"../../ui\";\r\nimport { VeryEngine } from \"../../engine\";\r\n\r\nexport class Assets {\r\n\r\n  \r\n\r\n\r\n  public constructor() {\r\n\r\n    let assetsOverlay: Panel = new Panel();\r\n    assetsOverlay.class!.add('overlay');\r\n    VeryEngine.assetPanel.append(assetsOverlay);\r\n\r\n    let p: Progress = new Progress();\r\n    p.on('progress:100', function () {\r\n      assetsOverlay.hidden = true;\r\n    });\r\n    assetsOverlay.append(p);\r\n    p.hidden = false;\r\n    p.progress = 1;\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}","export * from './assets';","import { Panel } from '../../ui';\r\nimport { Observer } from '../../lib';\r\n\r\nexport class AttributesEntity {\r\n\r\n\r\n  public panelComponents: Panel;\r\n\r\n  public items: any;\r\n\r\n\r\n  public inspectEvents: EventHandle[] = [];\r\n\r\n\r\n  public constructor() {\r\n    this.panelComponents = editor.call('attributes:addPanel');\r\n\r\n    /* ***scene结构***\r\n     * 1. 自定义结构，关联assets数据，避免数据冗余下载；\r\n     * 2. \r\n    */\r\n\r\n    /* ***game结构***\r\n     * 1. game与scene非常类似，但是不应该是同一个；\r\n     * 2. 想办法从scene中复制出一个一模一样的场景，直接运行，与原始scene脱离连接关系；\r\n     * 3. 摄像机等组件自定义更新；\r\n     * 4. 运行时，game和scene如何协同，类似unity运行过程中编辑；\r\n    */\r\n\r\n    /* ***assets结构***\r\n     * 1. 多种资源，如模型、图片、声音等；\r\n     * 2. 使用自定义格式；\r\n    */\r\n\r\n    /***原始数据：\r\n     * 1.babylon;\r\n     *  （1）babylon用于完整的scene描述，所以包含了许多不必要的信息，需要删除，比如灯光、相机等；\r\n     *  （2）用户可能分多次上传模型，假设上传的是babylon怎么办？后续使用时，可能只需要部分模型，在unity中，是把整个模型丢进scene里面，然后从scene里面拖动预制件到Project，创建出新的数据结构；\r\n     *  （3）加载模型，使用babylon的现有函数，支持.babylon、.gltf、stl、obj；\r\n     * 2.glTF;\r\n     * 3.fbx;\r\n     * 4.obj/stl;\r\n\r\n    */\r\n\r\n    this.init();\r\n\r\n  }\r\n\r\n\r\n  private init(): void {\r\n\r\n    let self = this;\r\n\r\n\r\n    let inspectEvents = [];\r\n\r\n    /** \r\n    // link data to fields when inspecting\r\n    editor.on('attributes:inspect[entity]', function (entities: Observer[]) {\r\n      if (entities.length > 1) {\r\n        editor.call('attributes:header', entities.length + ' Entities');\r\n      } else {\r\n        editor.call('attributes:header', 'Entity');\r\n      }\r\n\r\n      if (!self.items)\r\n        self.initialize();\r\n\r\n      let root = editor.call('attributes.rootPanel');\r\n\r\n      if (!self.items.panel.parent)\r\n        root.append(self.items.panel);\r\n\r\n      if (!self.items.panelComponents.parent)\r\n        root.append(self.items.panelComponents);\r\n\r\n      // disable renderChanges\r\n      for (let i = 0; i < argsFieldsChanges.length; i++)\r\n        argsFieldsChanges[i].renderChanges = false;\r\n\r\n      // link fields\r\n      for (let i = 0; i < argsList.length; i++) {\r\n        argsList[i].link = entities;\r\n        argsList[i].linkField();\r\n      }\r\n\r\n      // enable renderChanges\r\n      for (let i = 0; i < argsFieldsChanges.length; i++)\r\n        argsFieldsChanges[i].renderChanges = true;\r\n\r\n      // disable fields if needed\r\n      self.toggleFields(entities);\r\n\r\n      self.onInspect(entities);\r\n    });\r\n    */\r\n\r\n    editor.on('attributes:clear', function () {\r\n      self.onUninspect();\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  private initialize(): void {\r\n\r\n  }\r\n\r\n\r\n  private toggleFields(selectedEntities: Observer[]): void {\r\n    let self = this;\r\n    let disablePositionXY = false;\r\n    let disableRotation = false;\r\n    let disableScale = false;\r\n\r\n    for (let i = 0, len = selectedEntities.length; i < len; i++) {\r\n      let entity = selectedEntities[i];\r\n\r\n      // disable rotation / scale for 2D screens\r\n      // if (entity.get('components.screen.screenSpace')) {\r\n      //   disableRotation = true;\r\n      //   disableScale = true;\r\n      // }\r\n\r\n      // disable position on the x/y axis for elements that are part of a layout group\r\n      if (editor.call('entities:layout:isUnderControlOfLayoutGroup', entity)) {\r\n        disablePositionXY = true;\r\n      }\r\n    }\r\n\r\n    self.items.fieldPosition[0].enabled = !disablePositionXY;\r\n    self.items.fieldPosition[1].enabled = !disablePositionXY;\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      self.items.fieldRotation[i].enabled = !disableRotation;\r\n      self.items.fieldScale[i].enabled = !disableScale;\r\n\r\n      self.items.fieldRotation[i].renderChanges = !disableRotation;\r\n      self.items.fieldScale[i].renderChanges = !disableScale;\r\n    }\r\n\r\n  };\r\n\r\n\r\n  private onInspect(entities: Observer[]): void {\r\n    let self = this;\r\n\r\n    this.onUninspect();\r\n\r\n    let addEvents = function (entity: Observer) {\r\n      self.inspectEvents.push(entity.on('*:set', function (path: string) {\r\n        if (/components.screen.screenSpace/.test(path) ||\r\n          /^parent/.test(path) ||\r\n          /components.layoutchild.excludeFromLayout/.test(path)) {\r\n          toggleFieldsIfNeeded(entity);\r\n        }\r\n      }));\r\n    };\r\n\r\n    let toggleFieldsIfNeeded = function (entity: Observer) {\r\n      if (editor.call('selector:has', entity))\r\n        self.toggleFields(editor.call('selector:items'));\r\n    };\r\n\r\n\r\n    for (let i = 0, len = entities.length; i < len; i++) {\r\n      addEvents(entities[i]);\r\n    }\r\n  };\r\n\r\n  private onUninspect(): void {\r\n    let self = this;\r\n    for (let i = 0; i < self.inspectEvents.length; i++) {\r\n      self.inspectEvents[i].unbind();\r\n    }\r\n    self.inspectEvents.length = 0;\r\n  };\r\n\r\n}\r\n\r\n\r\nexport class AttributesFieldArgs {\r\n\r\n\r\n  public panel!: Panel;\r\n\r\n\r\n\r\n\r\n}","export class AttributeHistory {\r\n\r\n  public constructor() {\r\n\r\n  }\r\n\r\n}","import { Panel, Label, Progress, Element, TextField, Button, TextAreaField, Slider, NumberField, Checkbox, ColorField, ImageField, Code, SelectField } from \"../../ui\";\r\nimport { VeryEngine } from \"../../engine\";\r\nimport { Observer, EventHandle } from \"../../lib\";\r\n\r\nexport class AttributesPanel {\r\n\r\n\r\n  public root: Panel;\r\n\r\n  private inspectedItems: EventHandle[] = [];\r\n\r\n  public title: string = '属性面板';\r\n\r\n  public constructor() {\r\n    this.root = VeryEngine.attributesPanel;\r\n\r\n    this.init();\r\n\r\n  }\r\n\r\n  private init(): void {\r\n    let self = this;\r\n\r\n    // clearing\r\n    editor.method('attributes:clear', this.clearPanel);\r\n\r\n    // set header\r\n    editor.method('attributes:header', (text: string) => {\r\n      self.root.header = text;\r\n    });\r\n\r\n    // return root panel\r\n    editor.method('attributes.rootPanel', function () {\r\n      return self.root;\r\n    });\r\n\r\n    // add panel\r\n    editor.method('attributes:addPanel', function (args: AddPanelArgs) {\r\n      args = args || {};\r\n\r\n      // panel\r\n      let panel = new Panel(args.name || '');\r\n      // parent\r\n      (args.parent || self.root).append(panel);\r\n\r\n      // folding\r\n      panel.foldable = args.foldable || args.folded || false;\r\n      panel.folded = args.folded || false;\r\n\r\n      return panel;\r\n    });\r\n\r\n    // var historyState = function (item, state) {\r\n    //   if (item.history !== undefined) {\r\n    //     if (typeof (item.history) === 'boolean') {\r\n    //       item.history = state;\r\n    //     } else {\r\n    //       item.history.enabled = state;\r\n    //     }\r\n    //   } else {\r\n    //     if (item._parent && item._parent.history !== undefined) {\r\n    //       item._parent.history.enabled = state;\r\n    //     }\r\n    //   }\r\n    // };\r\n\r\n\r\n\r\n    /* *\r\n\r\n    // 属性面板添加field，关联相关数据\r\n    editor.method('attributes:addField', function (args: any) {\r\n      var panel = args.panel;\r\n\r\n      if (!panel) {\r\n        panel = new Panel();\r\n        panel.flexWrap = 'nowrap';\r\n        panel.WebkitFlexWrap = 'nowrap';\r\n        panel.style!.display = '';\r\n\r\n        if (args.type) {\r\n          panel.class!.add('field-' + args.type);\r\n        } else {\r\n          panel.class!.add('field');\r\n        }\r\n\r\n        (args.parent || self.root).append(panel);\r\n      }\r\n\r\n      if (args.name) {\r\n        var label = new Label(args.name);\r\n        label.class!.add('label-field');\r\n        panel._label = label;\r\n        panel.append(label);\r\n\r\n        if (args.reference) {\r\n          var tooltip = label.tooltip = editor.call('attributes:reference', {\r\n            element: label.element,\r\n            title: args.reference.title,\r\n            subTitle: args.reference.subTitle,\r\n            description: args.reference.description\r\n          });\r\n\r\n          tooltip.attach({\r\n            target: label,\r\n            element: label.element\r\n          });\r\n        }\r\n      }\r\n\r\n      var field: Element;\r\n\r\n      args.linkEvents = [];\r\n\r\n      // if we provide multiple paths for a single Observer then turn args.link into an array\r\n      if (args.paths && args.paths instanceof Array && args.link && !(args.link instanceof Array)) {\r\n        var link = args.link;\r\n        args.link = [];\r\n        for (var i = 0; i < args.paths.length; i++) {\r\n          args.link.push(link);\r\n        }\r\n      }\r\n\r\n      var linkField = args.linkField = function () {\r\n        if (args.link) {\r\n          var link = function (field: Element, path?: string | string[]) {\r\n            var data = {\r\n              field: field,\r\n              type: args.type,\r\n              slider: args.slider,\r\n              enum: args.enum,\r\n              link: args.link,\r\n              trim: args.trim,\r\n              name: args.name,\r\n              stopHistory: args.stopHistory,\r\n              paths: [''],\r\n              path: ''\r\n            };\r\n\r\n            if (!path) {\r\n              path = args.paths || args.path;\r\n            }\r\n\r\n            if (path instanceof Array) {\r\n              data.paths = path;\r\n            } else {\r\n              data.path = path || '';\r\n            }\r\n\r\n            args.linkEvents = args.linkEvents.concat(editor.call('attributes:linkField', data));\r\n\r\n            // Give the field a uniquely addressable css class that we can target from Selenium\r\n            if (field.element && typeof path === 'string') {\r\n              field.element.classList.add('field-path-' + path.replace(/\\./g, '-'));\r\n            }\r\n          };\r\n\r\n          if (field instanceof Array) {\r\n            for (var i = 0; i < field.length; i++) {\r\n              var paths = args.paths;\r\n\r\n              if (paths) {\r\n                paths = paths.map(function (p: string) {\r\n                  return p + '.' + i;\r\n                });\r\n              }\r\n\r\n              link(field[i], paths || (args.path + '.' + i));\r\n            }\r\n          } else {\r\n            link(field);\r\n          }\r\n        }\r\n      };\r\n\r\n      var unlinkField = args.unlinkField = function () {\r\n        for (var i = 0; i < args.linkEvents.length; i++)\r\n          args.linkEvents[i].unbind();\r\n\r\n        args.linkEvents = [];\r\n      };\r\n\r\n      switch (args.type) {\r\n        case 'string':\r\n          if (args.enum) {\r\n            field = new SelectField({\r\n              options: args.enum\r\n            });\r\n          } else {\r\n            field = new TextField();\r\n          }\r\n\r\n          field.value = args.value || '';\r\n          field.flexGrow = '1';\r\n\r\n          if (args.placeholder) {\r\n            if (field instanceof SelectField) {\r\n              (<SelectField>field).placeholder = args.placeholder;\r\n            } else {\r\n              (<TextField>field).placeholder = args.placeholder;\r\n            }\r\n          }\r\n\r\n          linkField();\r\n\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'tags':\r\n          // TODO: why isn't this in a seperate class/file???\r\n\r\n          var innerPanel = new Panel();\r\n          var tagType = args.tagType || 'string';\r\n\r\n          if (args.enum) {\r\n            field = new SelectField({\r\n              options: args.enum,\r\n              type: tagType\r\n            });\r\n            field.renderChanges = false;\r\n            field.on('change', function (value: any) {\r\n              if (tagType === 'string') {\r\n                if (!value) return;\r\n\r\n                value = value.trim();\r\n              }\r\n\r\n              addTag(value);\r\n              field.value = '';\r\n            });\r\n\r\n            innerPanel.append(field);\r\n\r\n          } else {\r\n            field = new TextField();\r\n            (<TextField>field).blurOnEnter = false;\r\n            field.renderChanges = false;\r\n\r\n            field.element!.addEventListener('keydown', function (evt) {\r\n              if (evt.keyCode !== 13 || !field.value)\r\n                return;\r\n\r\n              addTag(field.value.trim());\r\n              field.value = '';\r\n            });\r\n\r\n            innerPanel.append(field);\r\n\r\n            var btnAdd = new Button('&#57632');\r\n            btnAdd.flexGrow = '0';\r\n            btnAdd.on('click', function () {\r\n              if (!field.value)\r\n                return;\r\n\r\n              addTag(field.value.trim());\r\n              field.value = '';\r\n            });\r\n            innerPanel.append(btnAdd);\r\n          }\r\n\r\n\r\n          var tagsPanel = new Panel();\r\n          tagsPanel.class!.add('tags');\r\n          tagsPanel.flex = true;\r\n          innerPanel.append(tagsPanel);\r\n\r\n          var tagItems = {};\r\n          var tagIndex = {};\r\n          var tagList = [];\r\n\r\n          var onRemoveClick = function () {\r\n            if (innerPanel.disabled)\r\n              return;\r\n\r\n            removeTag(this.tag);\r\n          };\r\n\r\n          var removeTag = function (tag) {\r\n            if (tagType === 'string' && !tag) {\r\n              return;\r\n            } else if (tag === null || tag === undefined) {\r\n              return;\r\n            }\r\n\r\n            if (!tagIndex.hasOwnProperty(tag))\r\n              return;\r\n\r\n            var records = [];\r\n\r\n            for (var i = 0; i < args.link.length; i++) {\r\n              var path = pathAt(args, i);\r\n              if (args.link[i].get(path).indexOf(tag) === -1)\r\n                continue;\r\n\r\n              records.push({\r\n                get: args.link[i].history !== undefined ? args.link[i].history._getItemFn : null,\r\n                item: args.link[i],\r\n                path: path,\r\n                value: tag\r\n              });\r\n\r\n              historyState(args.link[i], false);\r\n              args.link[i].removeValue(path, tag);\r\n              historyState(args.link[i], true);\r\n            }\r\n\r\n            if (!args.stopHistory) {\r\n              editor.call('history:add', {\r\n                name: pathAt(args, 0),\r\n                undo: function () {\r\n                  for (var i = 0; i < records.length; i++) {\r\n                    var item;\r\n                    if (records[i].get) {\r\n                      item = records[i].get();\r\n                      if (!item)\r\n                        continue;\r\n                    } else {\r\n                      item = records[i].item;\r\n                    }\r\n\r\n                    historyState(item, false);\r\n                    item.insert(records[i].path, records[i].value);\r\n                    historyState(item, true);\r\n                  }\r\n                },\r\n                redo: function () {\r\n                  for (var i = 0; i < records.length; i++) {\r\n                    var item;\r\n                    if (records[i].get) {\r\n                      item = records[i].get();\r\n                      if (!item)\r\n                        continue;\r\n                    } else {\r\n                      item = records[i].item;\r\n                    }\r\n\r\n                    historyState(item, false);\r\n                    item.removeValue(records[i].path, records[i].value);\r\n                    historyState(item, true);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n          };\r\n\r\n          var addTag = function (tag) {\r\n            var records = [];\r\n\r\n            // convert to number if needed\r\n            if (args.tagType === 'number') {\r\n              tag = parseInt(tag, 10);\r\n              if (isNaN(tag))\r\n                return;\r\n            }\r\n\r\n            for (var i = 0; i < args.link.length; i++) {\r\n              var path = pathAt(args, i);\r\n              if (args.link[i].get(path).indexOf(tag) !== -1)\r\n                continue;\r\n\r\n              records.push({\r\n                get: args.link[i].history !== undefined ? args.link[i].history._getItemFn : null,\r\n                item: args.link[i],\r\n                path: path,\r\n                value: tag\r\n              });\r\n\r\n              historyState(args.link[i], false);\r\n              args.link[i].insert(path, tag);\r\n              historyState(args.link[i], true);\r\n            }\r\n\r\n            if (!args.stopHistory) {\r\n              editor.call('history:add', {\r\n                name: pathAt(args, 0),\r\n                undo: function () {\r\n                  for (var i = 0; i < records.length; i++) {\r\n                    var item;\r\n                    if (records[i].get) {\r\n                      item = records[i].get();\r\n                      if (!item)\r\n                        continue;\r\n                    } else {\r\n                      item = records[i].item;\r\n                    }\r\n\r\n                    historyState(item, false);\r\n                    item.removeValue(records[i].path, records[i].value);\r\n                    historyState(item, true);\r\n                  }\r\n                },\r\n                redo: function () {\r\n                  for (var i = 0; i < records.length; i++) {\r\n                    var item;\r\n                    if (records[i].get) {\r\n                      item = records[i].get();\r\n                      if (!item)\r\n                        continue;\r\n                    } else {\r\n                      item = records[i].item;\r\n                    }\r\n\r\n                    historyState(item, false);\r\n                    item.insert(records[i].path, records[i].value);\r\n                    historyState(item, true);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n          };\r\n\r\n          var onInsert = function (tag) {\r\n            if (!tagIndex.hasOwnProperty(tag)) {\r\n              tagIndex[tag] = 0;\r\n              tagList.push(tag);\r\n            }\r\n\r\n            tagIndex[tag]++;\r\n            insertElement(tag);\r\n          };\r\n\r\n          var onRemove = function (tag) {\r\n            if (!tagIndex[tag])\r\n              return;\r\n\r\n            tagIndex[tag]--;\r\n\r\n            if (!tagIndex[tag]) {\r\n              tagsPanel.innerElement.removeChild(tagItems[tag]);\r\n              var ind = tagList.indexOf(tag);\r\n              if (ind !== -1)\r\n                tagList.splice(ind, 1);\r\n\r\n              delete tagItems[tag];\r\n              delete tagIndex[tag];\r\n            } else {\r\n              if (tagIndex[tag] === args.link.length) {\r\n                tagItems[tag].classList.remove('partial');\r\n              } else {\r\n                tagItems[tag].classList.add('partial');\r\n              }\r\n            }\r\n          };\r\n\r\n          // when tag field is initialized\r\n          var onSet = function (values) {\r\n            for (var i = 0; i < values.length; i++) {\r\n              var value = values[i];\r\n              onInsert(value);\r\n            }\r\n          };\r\n\r\n          var insertElement = function (tag) {\r\n            if (!tagItems[tag]) {\r\n              sortTags();\r\n\r\n              var item = document.createElement('div');\r\n              tagItems[tag] = item;\r\n              item.classList.add('tag');\r\n              var itemText = document.createElement('span');\r\n              itemText.textContent = args.tagToString ? args.tagToString(tag) : tag;\r\n              item.appendChild(itemText);\r\n\r\n              // the original tag value before tagToString is called. Useful\r\n              // if the tag value is an id for example\r\n              item.originalValue = tag;\r\n\r\n              // attach click handler on text part of the tag - bind the listener\r\n              // to the tag item so that `this` refers to that tag in the listener\r\n              if (args.onClickTag) {\r\n                itemText.addEventListener('click', args.onClickTag.bind(item));\r\n              }\r\n\r\n              var icon = document.createElement('span');\r\n              icon.innerHTML = '&#57650;';\r\n              icon.classList.add('icon');\r\n              icon.tag = tag;\r\n              icon.addEventListener('click', onRemoveClick, false);\r\n              item.appendChild(icon);\r\n\r\n              var ind = tagList.indexOf(tag);\r\n              if (tagItems[tagList[ind + 1]]) {\r\n                tagsPanel.appendBefore(item, tagItems[tagList[ind + 1]]);\r\n              } else {\r\n                tagsPanel.append(item);\r\n              }\r\n            }\r\n\r\n            if (tagIndex[tag] === args.link.length) {\r\n              tagItems[tag].classList.remove('partial');\r\n            } else {\r\n              tagItems[tag].classList.add('partial');\r\n            }\r\n          };\r\n\r\n          var sortTags = function () {\r\n            tagList.sort(function (a, b) {\r\n              if (args.tagToString) {\r\n                a = args.tagToString(a);\r\n                b = args.tagToString(b);\r\n              }\r\n\r\n              if (a > b) {\r\n                return 1;\r\n              } else if (a < b) {\r\n                return -1;\r\n              } else {\r\n                return 0;\r\n              }\r\n            });\r\n          };\r\n\r\n          if (args.placeholder)\r\n            field.placeholder = args.placeholder;\r\n\r\n          // list\r\n          args.linkEvents = [];\r\n\r\n          args.linkField = function () {\r\n            if (args.link) {\r\n              if (!(args.link instanceof Array))\r\n                args.link = [args.link];\r\n\r\n              for (var i = 0; i < args.link.length; i++) {\r\n                var path = pathAt(args, i);\r\n                var tags = args.link[i].get(path);\r\n\r\n                args.linkEvents.push(args.link[i].on(path + ':set', onSet));\r\n                args.linkEvents.push(args.link[i].on(path + ':insert', onInsert));\r\n                args.linkEvents.push(args.link[i].on(path + ':remove', onRemove));\r\n\r\n                if (!tags)\r\n                  continue;\r\n\r\n                for (var t = 0; t < tags.length; t++) {\r\n                  if (tagType === 'string' && !tags[t]) {\r\n                    continue;\r\n                  } else if (tags[t] === null || tags[t] === undefined) {\r\n                    continue;\r\n                  }\r\n\r\n                  if (!tagIndex.hasOwnProperty(tags[t])) {\r\n                    tagIndex[tags[t]] = 0;\r\n                    tagList.push(tags[t]);\r\n                  }\r\n\r\n                  tagIndex[tags[t]]++;\r\n                }\r\n              }\r\n            }\r\n\r\n            sortTags();\r\n\r\n            for (var i = 0; i < tagList.length; i++)\r\n              insertElement(tagList[i]);\r\n          };\r\n\r\n          args.unlinkField = function () {\r\n            for (var i = 0; i < args.linkEvents.length; i++)\r\n              args.linkEvents[i].unbind();\r\n\r\n            args.linkEvents = [];\r\n\r\n            for (var key in tagItems)\r\n              tagsPanel.innerElement.removeChild(tagItems[key]);\r\n\r\n            tagList = [];\r\n            tagIndex = {};\r\n            tagItems = {};\r\n          };\r\n\r\n          args.linkField();\r\n\r\n          panel.once('destroy', args.unlinkField);\r\n\r\n          panel.append(innerPanel);\r\n          break;\r\n\r\n        case 'text':\r\n          field = new TextAreaField();\r\n\r\n          field.value = args.value || '';\r\n          field.flexGrow = '1';\r\n\r\n          if (args.placeholder)\r\n            field.placeholder = args.placeholder;\r\n\r\n          linkField();\r\n\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'number':\r\n          if (args.enum) {\r\n            field = new SelectField({\r\n              options: args.enum,\r\n              type: 'number'\r\n            });\r\n          } else if (args.slider) {\r\n            field = new Slider();\r\n          } else {\r\n            field = new NumberField();\r\n          }\r\n\r\n          field.value = args.value || 0;\r\n          field.flexGrow = '1';\r\n\r\n          if (args.allowNull) {\r\n            field.allowNull = true;\r\n          }\r\n\r\n          if (args.placeholder)\r\n            field.placeholder = args.placeholder;\r\n\r\n          if (args.precision != null)\r\n            field.precision = args.precision;\r\n\r\n          if (args.step != null)\r\n            field.step = args.step;\r\n\r\n          if (args.min != null)\r\n            field.min = args.min;\r\n\r\n          if (args.max != null)\r\n            field.max = args.max;\r\n\r\n          linkField();\r\n\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'checkbox':\r\n          if (args.enum) {\r\n            field = new SelectField({\r\n              options: args.enum,\r\n              type: 'boolean'\r\n            });\r\n            field.flexGrow = '1';\r\n          } else {\r\n            field = new Checkbox();\r\n          }\r\n\r\n          field.value = args.value || 0;\r\n          field.class!.add('tick');\r\n\r\n          linkField();\r\n\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'vec2':\r\n        case 'vec3':\r\n        case 'vec4':\r\n          var channels = parseInt(args.type[3], 10);\r\n          field = [];\r\n\r\n          for (var i = 0; i < channels; i++) {\r\n            field[i] = new NumberField();\r\n            field[i].flexGrow = '1';\r\n            field[i].style!.width = '24px';\r\n            field[i].value = (args.value && args.value[i]) || 0;\r\n            panel.append(field[i]);\r\n\r\n            if (args.placeholder)\r\n              field[i].placeholder = args.placeholder[i];\r\n\r\n            if (args.precision != null)\r\n              field[i].precision = args.precision;\r\n\r\n            if (args.step != null)\r\n              field[i].step = args.step;\r\n\r\n            if (args.min != null)\r\n              field[i].min = args.min;\r\n\r\n            if (args.max != null)\r\n              field[i].max = args.max;\r\n\r\n            // if (args.link)\r\n            //     field[i].link(args.link, args.path + '.' + i);\r\n          }\r\n\r\n          linkField();\r\n          break;\r\n\r\n        case 'rgb':\r\n          field = new ColorField();\r\n\r\n          if (args.channels != null)\r\n            field.channels = args.channels;\r\n\r\n          linkField();\r\n\r\n          var colorPickerOn = false;\r\n          field.on('click', function () {\r\n            colorPickerOn = true;\r\n            var first = true;\r\n\r\n            // set picker color\r\n            editor.call('picker:color', field.value);\r\n\r\n            // picking starts\r\n            var evtColorPickStart = editor.on('picker:color:start', function () {\r\n              first = true;\r\n            });\r\n\r\n            // picked color\r\n            var evtColorPick = editor.on('picker:color', function (color) {\r\n              first = false;\r\n              field.value = color;\r\n            });\r\n\r\n            // position picker\r\n            var rectPicker = editor.call('picker:color:rect');\r\n            var rectField = field.element.getBoundingClientRect();\r\n            editor.call('picker:color:position', rectField.left - rectPicker.width, rectField.top);\r\n\r\n            // color changed, update picker\r\n            var evtColorToPicker = field.on('change', function () {\r\n              editor.call('picker:color:set', this.value);\r\n            });\r\n\r\n            // picker closed\r\n            editor.once('picker:color:close', function () {\r\n              evtColorPick.unbind();\r\n              evtColorPickStart.unbind();\r\n              evtColorToPicker.unbind();\r\n              colorPickerOn = false;\r\n              field.element.focus();\r\n            });\r\n          });\r\n\r\n          // close picker if field destroyed\r\n          field.on('destroy', function () {\r\n            if (colorPickerOn)\r\n              editor.call('picker:color:close');\r\n          });\r\n\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'asset':\r\n          field = new ImageField(args.kind === 'material' || args.kind === 'model' || args.kind === 'cubemap' || args.kind === 'font' || args.kind === 'sprite');\r\n          var evtPick;\r\n\r\n          if (label) {\r\n            label.renderChanges = false;\r\n            field._label = label;\r\n\r\n            label.style!.width = '32px';\r\n            label.flexGrow = '1';\r\n          }\r\n\r\n\r\n          var panelFields = document.createElement('div');\r\n          panelFields.classList.add('top');\r\n\r\n          var panelControls = document.createElement('div');\r\n          panelControls.classList.add('controls');\r\n\r\n          var fieldTitle = field._title = new Label();\r\n          fieldTitle.text = 'Empty';\r\n          fieldTitle.parent = panel;\r\n          fieldTitle.flexGrow = '1';\r\n          fieldTitle.placeholder = '...';\r\n\r\n          var btnEdit = new Button('&#57648;');\r\n          btnEdit.disabled = true;\r\n          btnEdit.parent = panel;\r\n          btnEdit.flexGrow = '0';\r\n\r\n          var btnRemove = new Button('&#57650;');\r\n          btnRemove.disabled = true;\r\n          btnRemove.parent = panel;\r\n          btnRemove.flexGrow = '0';\r\n\r\n          fieldTitle.on('click', function () {\r\n            var asset = editor.call('assets:get', field.value);\r\n            editor.call('picker:asset', {\r\n              type: args.kind,\r\n              currentAsset: asset\r\n            });\r\n\r\n            evtPick = editor.once('picker:asset', function (asset) {\r\n              var oldValues = {};\r\n              if (args.onSet && args.link && args.link instanceof Array) {\r\n                for (var i = 0; i < args.link.length; i++) {\r\n                  var id = 0;\r\n                  if (args.link[i]._type === 'asset') {\r\n                    id = args.link[i].get('id');\r\n                  } else if (args.link[i]._type === 'entity') {\r\n                    id = args.link[i].get('resource_id');\r\n                  } else {\r\n                    continue;\r\n                  }\r\n\r\n                  oldValues[id] = args.link[i].get(pathAt(args, i));\r\n                }\r\n              }\r\n\r\n              field.emit('beforechange', asset.get('id'));\r\n              field.value = asset.get('id');\r\n              evtPick = null;\r\n              if (args.onSet) args.onSet(asset, oldValues);\r\n            });\r\n\r\n            editor.once('picker:asset:close', function () {\r\n              if (evtPick) {\r\n                evtPick.unbind();\r\n                evtPick = null;\r\n              }\r\n              field.element.focus();\r\n            });\r\n          });\r\n\r\n          field.on('click', function () {\r\n            if (!this.value)\r\n              return;\r\n\r\n            var asset = editor.call('assets:get', this.value);\r\n            if (!asset) return;\r\n            editor.call('selector:set', 'asset', [asset]);\r\n\r\n            if (legacyScripts && asset.get('type') === 'script') {\r\n              editor.call('assets:panel:currentFolder', 'scripts');\r\n            } else {\r\n              var path = asset.get('path');\r\n              if (path.length) {\r\n                editor.call('assets:panel:currentFolder', editor.call('assets:get', path[path.length - 1]));\r\n              } else {\r\n                editor.call('assets:panel:currentFolder', null);\r\n              }\r\n            }\r\n          });\r\n          btnEdit.on('click', function () {\r\n            field.emit('click');\r\n          });\r\n\r\n          btnRemove.on('click', function () {\r\n            field.emit('beforechange', null);\r\n            field.value = null;\r\n          });\r\n\r\n          var watch = null;\r\n          var watchAsset = null;\r\n          var renderQueued;\r\n          var queueRender;\r\n\r\n          var evtThumbnailChange;\r\n          var updateThumbnail = function (empty) {\r\n            var asset = editor.call('assets:get', field.value);\r\n\r\n            if (watch) {\r\n              editor.call('assets:' + watchAsset.get('type') + ':unwatch', watchAsset, watch);\r\n              watchAsset = watch = null;\r\n            }\r\n\r\n            if (empty) {\r\n              field.image = '';\r\n            } else if (!asset) {\r\n              field.image = config.url.home + '/editor/scene/img/asset-placeholder-texture.png';\r\n            } else {\r\n              if (asset.has('thumbnails.m')) {\r\n                var src = asset.get('thumbnails.m');\r\n                if (src.startsWith('data:image/png;base64')) {\r\n                  field.image = asset.get('thumbnails.m');\r\n                } else {\r\n                  field.image = config.url.home + asset.get('thumbnails.m').appendQuery('t=' + asset.get('file.hash'));\r\n                }\r\n              } else {\r\n                field.image = '/editor/scene/img/asset-placeholder-' + asset.get('type') + '.png';\r\n              }\r\n\r\n              if (args.kind === 'material' || args.kind === 'model' || args.kind === 'cubemap' || args.kind == 'font' || args.kind === 'sprite') {\r\n                watchAsset = asset;\r\n                watch = editor.call('assets:' + args.kind + ':watch', {\r\n                  asset: watchAsset,\r\n                  autoLoad: true,\r\n                  callback: queueRender\r\n                });\r\n              }\r\n            }\r\n\r\n            if (queueRender)\r\n              queueRender();\r\n          };\r\n\r\n          if (args.kind === 'material' || args.kind === 'model' || args.kind === 'font' || args.kind === 'sprite') {\r\n            if (args.kind !== 'sprite') {\r\n              field.elementImage.classList.add('flipY');\r\n            }\r\n\r\n            var renderPreview = function () {\r\n              renderQueued = false;\r\n\r\n              if (watchAsset) {\r\n                // render\r\n                editor.call('preview:render', watchAsset, 128, 128, field.elementImage);\r\n              } else {\r\n                var ctx = field.elementImage.ctx;\r\n                if (!ctx)\r\n                  ctx = field.elementImage.ctx = field.elementImage.getContext('2d');\r\n\r\n                ctx.clearRect(0, 0, field.elementImage.width, field.elementImage.height);\r\n              }\r\n            };\r\n\r\n            renderPreview();\r\n\r\n            queueRender = function () {\r\n              if (renderQueued) return;\r\n              renderQueued = true;\r\n              requestAnimationFrame(renderPreview);\r\n            };\r\n\r\n            var evtSceneSettings = editor.on('preview:scene:changed', queueRender);\r\n\r\n            field.once('destroy', function () {\r\n              evtSceneSettings.unbind();\r\n              evtSceneSettings = null;\r\n\r\n              if (watch) {\r\n                editor.call('assets:' + watchAsset.get('type') + ':unwatch', watchAsset, watch);\r\n                watchAsset = watch = null;\r\n              }\r\n            });\r\n          } else if (args.kind === 'cubemap') {\r\n            field.elementImage.width = 60;\r\n            field.elementImage.height = 60;\r\n\r\n            var positions = [[30, 22], [0, 22], [15, 7], [15, 37], [15, 22], [45, 22]];\r\n            var images = [null, null, null, null, null, null];\r\n\r\n            var renderPreview = function () {\r\n              renderQueued = false;\r\n\r\n              var ctx = field.elementImage.ctx;\r\n              if (!ctx)\r\n                ctx = field.elementImage.ctx = field.elementImage.getContext('2d');\r\n\r\n              ctx.clearRect(0, 0, field.elementImage.width, field.elementImage.height);\r\n\r\n              if (watchAsset) {\r\n                for (var i = 0; i < 6; i++) {\r\n                  var id = watchAsset.get('data.textures.' + i);\r\n                  var image = null;\r\n\r\n                  if (id) {\r\n                    var texture = editor.call('assets:get', id);\r\n                    if (texture) {\r\n                      var hash = texture.get('file.hash');\r\n                      if (images[i] && images[i].hash === hash) {\r\n                        image = images[i];\r\n                      } else {\r\n                        var url = texture.get('thumbnails.s');\r\n\r\n                        if (images[i])\r\n                          images[i].onload = null;\r\n\r\n                        images[i] = null;\r\n\r\n                        if (url) {\r\n                          image = images[i] = new Image();\r\n                          image.hash = hash;\r\n                          image.onload = queueRender;\r\n                          image.src = url.appendQuery('t=' + hash);\r\n                        }\r\n                      }\r\n                    } else if (images[i]) {\r\n                      images[i].onload = null;\r\n                      images[i] = null;\r\n                    }\r\n                  } else if (images[i]) {\r\n                    images[i].onload = null;\r\n                    images[i] = null;\r\n                  }\r\n\r\n                  if (image) {\r\n                    ctx.drawImage(image, positions[i][0], positions[i][1], 15, 15);\r\n                  } else {\r\n                    ctx.beginPath();\r\n                    ctx.rect(positions[i][0], positions[i][1], 15, 15);\r\n                    ctx.fillStyle = '#000';\r\n                    ctx.fill();\r\n                  }\r\n                }\r\n              }\r\n            };\r\n\r\n            renderPreview();\r\n\r\n            queueRender = function () {\r\n              if (renderQueued) return;\r\n              renderQueued = true;\r\n              requestAnimationFrame(renderPreview);\r\n            };\r\n\r\n            field.once('destroy', function () {\r\n              if (watch) {\r\n                editor.call('assets:cubemap:unwatch', watchAsset, watch);\r\n                watchAsset = watch = null;\r\n              }\r\n            });\r\n          }\r\n\r\n          linkField();\r\n\r\n          var updateField = function () {\r\n            var value = field.value;\r\n\r\n            fieldTitle.text = field.class!.contains('null') ? 'various' : 'Empty';\r\n\r\n            btnEdit.disabled = !value;\r\n            btnRemove.disabled = !value && !field.class!.contains('null');\r\n\r\n            if (evtThumbnailChange) {\r\n              evtThumbnailChange.unbind();\r\n              evtThumbnailChange = null;\r\n            }\r\n\r\n            if (!value) {\r\n              if (field.class!.contains('star'))\r\n                fieldTitle.text = '* ' + fieldTitle.text;\r\n\r\n              field.empty = true;\r\n              updateThumbnail(true);\r\n\r\n              return;\r\n            }\r\n\r\n            field.empty = false;\r\n\r\n            var asset = editor.call('assets:get', value);\r\n\r\n            if (!asset)\r\n              return updateThumbnail();\r\n\r\n            evtThumbnailChange = asset.on('file.hash.m:set', updateThumbnail);\r\n            updateThumbnail();\r\n\r\n            fieldTitle.text = asset.get('name');\r\n\r\n            if (field.class!.contains('star'))\r\n              fieldTitle.text = '* ' + fieldTitle.text;\r\n          };\r\n          field.on('change', updateField);\r\n\r\n          if (args.value)\r\n            field.value = args.value;\r\n\r\n          updateField();\r\n\r\n          var dropRef = editor.call('drop:target', {\r\n            ref: panel.element,\r\n            filter: function (type, data) {\r\n              var rectA = root.innerElement.getBoundingClientRect();\r\n              var rectB = panel.element.getBoundingClientRect();\r\n              return data.id && (args.kind === '*' || type === 'asset.' + args.kind) && parseInt(data.id, 10) !== field.value && !editor.call('assets:get', parseInt(data.id, 10)).get('source') && rectB.top > rectA.top && rectB.bottom < rectA.bottom;\r\n            },\r\n            drop: function (type, data) {\r\n              if ((args.kind !== '*' && type !== 'asset.' + args.kind) || editor.call('assets:get', parseInt(data.id, 10)).get('source'))\r\n                return;\r\n\r\n              var oldValues = {};\r\n              if (args.onSet && args.link && args.link instanceof Array) {\r\n                for (var i = 0; i < args.link.length; i++) {\r\n                  var id = 0;\r\n                  if (args.link[i]._type === 'asset') {\r\n                    id = args.link[i].get('id');\r\n                  } else if (args.link[i]._type === 'entity') {\r\n                    id = args.link[i].get('resource_id');\r\n                  } else {\r\n                    continue;\r\n                  }\r\n\r\n                  oldValues[id] = args.link[i].get(pathAt(args, i));\r\n                }\r\n              }\r\n\r\n              field.emit('beforechange', parseInt(data.id, 10));\r\n              field.value = parseInt(data.id, 10);\r\n\r\n              if (args.onSet) {\r\n                var asset = editor.call('assets:get', parseInt(data.id, 10));\r\n                if (asset) args.onSet(asset, oldValues);\r\n              }\r\n            },\r\n            over: function (type, data) {\r\n              if (args.over)\r\n                args.over(type, data);\r\n            },\r\n            leave: function () {\r\n              if (args.leave)\r\n                args.leave();\r\n            }\r\n          });\r\n          field.on('destroy', function () {\r\n            dropRef.unregister();\r\n            if (evtThumbnailChange) {\r\n              evtThumbnailChange.unbind();\r\n              evtThumbnailChange = null;\r\n            }\r\n          });\r\n\r\n          // thumbnail\r\n          panel.append(field);\r\n          // right side\r\n          panel.append(panelFields);\r\n          // controls\r\n          panelFields.appendChild(panelControls);\r\n          // label\r\n          if (label) {\r\n            panel.innerElement.removeChild(label.element);\r\n            panelControls.appendChild(label.element);\r\n          }\r\n          panelControls.classList.remove('label-field');\r\n          // edit\r\n          panelControls.appendChild(btnEdit.element);\r\n          // remove\r\n          panelControls.appendChild(btnRemove.element);\r\n\r\n          // title\r\n          panelFields.appendChild(fieldTitle.element);\r\n          break;\r\n\r\n        // entity picker\r\n        case 'entity':\r\n          field = new Label();\r\n          field.class!.add('add-entity');\r\n          field.flexGrow = '1';\r\n          field.class!.add('null');\r\n\r\n          field.text = 'Select Entity';\r\n          field.placeholder = '...';\r\n\r\n          panel.append(field);\r\n\r\n          var icon = document.createElement('span');\r\n          icon.classList.add('icon');\r\n\r\n          icon.addEventListener('click', function (e) {\r\n            e.stopPropagation();\r\n\r\n            if (editor.call('permissions:write'))\r\n              field.text = '';\r\n          });\r\n\r\n          field.on('change', function (value) {\r\n            if (value) {\r\n              var entity = editor.call('entities:get', value);\r\n              if (!entity) {\r\n                field.text = null;\r\n                return;\r\n              }\r\n\r\n              field.element.innerHTML = entity.get('name');\r\n              field.element.appendChild(icon);\r\n              field.placeholder = '';\r\n\r\n              if (value !== 'various')\r\n                field.class.remove('null');\r\n            } else {\r\n              field.element.innerHTML = 'Select Entity';\r\n              field.placeholder = '...';\r\n              field.class!.add('null');\r\n            }\r\n          });\r\n\r\n          linkField();\r\n\r\n          var getCurrentEntity = function () {\r\n            var entity = null;\r\n            if (args.link) {\r\n              if (!(args.link instanceof Array)) {\r\n                args.link = [args.link];\r\n              }\r\n\r\n              // get initial value only if it's the same for all\r\n              // links otherwise set it to null\r\n              for (var i = 0, len = args.link.length; i < len; i++) {\r\n                var val = args.link[i].get(pathAt(args, i));\r\n                if (entity !== val) {\r\n                  if (entity) {\r\n                    entity = null;\r\n                    break;\r\n                  } else {\r\n                    entity = val;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            return entity;\r\n          };\r\n\r\n          field.on('click', function () {\r\n            var evtEntityPick = editor.once('picker:entity', function (entity) {\r\n              field.text = entity ? entity.get('resource_id') : null;\r\n              evtEntityPick = null;\r\n            });\r\n\r\n            var initialValue = getCurrentEntity();\r\n\r\n            editor.call('picker:entity', initialValue, args.filter || null);\r\n\r\n            editor.once('picker:entity:close', function () {\r\n              if (evtEntityPick) {\r\n                evtEntityPick.unbind();\r\n                evtEntityPick = null;\r\n              }\r\n            });\r\n          });\r\n\r\n          // highlight on hover\r\n          field.on('hover', function () {\r\n            var entity = getCurrentEntity();\r\n            if (!entity) return;\r\n\r\n            editor.call('entities:panel:highlight', entity, true);\r\n\r\n            field.once('blur', function () {\r\n              editor.call('entities:panel:highlight', entity, false);\r\n            });\r\n\r\n            field.once('click', function () {\r\n              editor.call('entities:panel:highlight', entity, false);\r\n            });\r\n          });\r\n\r\n          var dropRef = editor.call('drop:target', {\r\n            ref: field.element,\r\n            filter: function (type, data) {\r\n              var rectA = root.innerElement.getBoundingClientRect();\r\n              var rectB = field.element.getBoundingClientRect();\r\n              return type === 'entity' && data.resource_id !== field.value && rectB.top > rectA.top && rectB.bottom < rectA.bottom;\r\n            },\r\n            drop: function (type, data) {\r\n              if (type !== 'entity')\r\n                return;\r\n\r\n              field.value = data.resource_id;\r\n            },\r\n            over: function (type, data) {\r\n              if (args.over)\r\n                args.over(type, data);\r\n            },\r\n            leave: function () {\r\n              if (args.leave)\r\n                args.leave();\r\n            }\r\n          });\r\n          field.on('destroy', function () {\r\n            dropRef.unregister();\r\n          });\r\n\r\n          break;\r\n        case 'image':\r\n          panel.flex = false;\r\n\r\n          field = new Image();\r\n          field.style!.maxWidth = '100%';\r\n          field.style!.display = 'block';\r\n          field.src = args.src;\r\n\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'progress':\r\n          field = new Progress();\r\n          field.flexGrow = '1';\r\n\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'code':\r\n          field = new Code();\r\n          field.flexGrow = '1';\r\n\r\n          if (args.value)\r\n            field.text = args.value;\r\n\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'button':\r\n          field = new Button();\r\n          field.flexGrow = '1';\r\n          field.text = args.text || 'Button';\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'element':\r\n          field = args.element;\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'curveset':\r\n          field = new ui.CurveField(args);\r\n          field.flexGrow = '1';\r\n          field.text = args.text || '';\r\n\r\n          // Warning: Curve fields do not currently support multiselect\r\n          if (args.link) {\r\n            var link = args.link;\r\n            if (args.link instanceof Array)\r\n              link = args.link[0];\r\n\r\n            var path = pathAt(args, 0);\r\n\r\n            field.link(link, args.canRandomize ? [path, path + '2'] : [path]);\r\n          }\r\n\r\n          var curvePickerOn = false;\r\n\r\n          var toggleCurvePicker = function () {\r\n            if (!field.class!.contains('disabled') && !curvePickerOn) {\r\n              editor.call('picker:curve', field.value, args);\r\n\r\n              curvePickerOn = true;\r\n\r\n              // position picker\r\n              var rectPicker = editor.call('picker:curve:rect');\r\n              var rectField = field.element.getBoundingClientRect();\r\n              editor.call('picker:curve:position', rectField.right - rectPicker.width, rectField.bottom);\r\n\r\n              args.keepZoom = false;\r\n\r\n              var combine = false;\r\n\r\n              var evtChangeStart = editor.on('picker:curve:change:start', function () {\r\n                combine = true;\r\n              });\r\n\r\n              var evtChangeEnd = editor.on('picker:curve:change:end', function () {\r\n                combine = false;\r\n              });\r\n\r\n              var evtPickerChanged = editor.on('picker:curve:change', function (paths, values) {\r\n                if (!field._link) return;\r\n\r\n                var link = field._link;\r\n\r\n                var previous = {\r\n                  paths: [],\r\n                  values: []\r\n                };\r\n\r\n                var path;\r\n                for (var i = 0, len = paths.length; i < len; i++) {\r\n                  path = pathAt(args, 0); // always use 0 because we do not support multiselect\r\n                  // use the second curve path if needed\r\n                  if (args.canRandomize && paths[i][0] !== '0') {\r\n                    path += '2';\r\n                  }\r\n\r\n                  path += paths[i].substring(1);\r\n\r\n                  previous.paths.push(path);\r\n                  previous.values.push(field._link.get(path));\r\n                }\r\n\r\n\r\n                var undo = function () {\r\n                  var item = link;\r\n                  if (link.history && link.history._getItemFn) {\r\n                    item = link.history._getItemFn();\r\n                  }\r\n\r\n                  if (!item) return;\r\n\r\n                  args.keepZoom = true;\r\n\r\n                  var history = false;\r\n                  if (item.history) {\r\n                    history = item.history.enabled;\r\n                    item.history.enabled = false;\r\n                  }\r\n\r\n                  for (var i = 0, len = previous.paths.length; i < len; i++) {\r\n                    item.set(previous.paths[i], previous.values[i]);\r\n                  }\r\n\r\n                  if (item.history)\r\n                    item.history.enabled = history;\r\n\r\n                  args.keepZoom = false;\r\n                };\r\n\r\n                var redo = function () {\r\n                  var item = link;\r\n                  if (link.history && link.history._getItemFn) {\r\n                    item = link.history._getItemFn();\r\n                  }\r\n\r\n                  if (!item) return;\r\n\r\n                  args.keepZoom = true;\r\n\r\n                  var history = false;\r\n                  if (item.history) {\r\n                    history = item.history.enabled;\r\n                    item.history.enabled = false;\r\n                  }\r\n\r\n                  for (var i = 0, len = paths.length; i < len; i++) {\r\n                    path = pathAt(args, 0); // always use 0 because we do not support multiselect\r\n                    // use the second curve path if needed\r\n                    if (args.canRandomize && paths[i][0] !== '0') {\r\n                      path += '2';\r\n                    }\r\n\r\n                    path += paths[i].substring(1);\r\n\r\n                    item.set(path, values[i]);\r\n                  }\r\n\r\n                  if (item.history)\r\n                    item.history.enabled = history;\r\n\r\n                  args.keepZoom = false;\r\n                };\r\n\r\n                redo();\r\n\r\n                // add custom history event\r\n                editor.call('history:' + (combine ? 'update' : 'add'), {\r\n                  name: path + '.curves',\r\n                  undo: undo,\r\n                  redo: redo\r\n                });\r\n\r\n              });\r\n\r\n              var evtRefreshPicker = field.on('change', function (value) {\r\n                editor.call('picker:curve:set', value, args);\r\n              });\r\n\r\n              editor.once('picker:curve:close', function () {\r\n                evtRefreshPicker.unbind();\r\n                evtPickerChanged.unbind();\r\n                evtChangeStart.unbind();\r\n                evtChangeEnd.unbind();\r\n                curvePickerOn = false;\r\n              });\r\n            }\r\n          };\r\n\r\n          // open curve editor on click\r\n          field.on('click', toggleCurvePicker);\r\n\r\n          // close picker if field destroyed\r\n          field.on('destroy', function () {\r\n            if (curvePickerOn) {\r\n              editor.call('picker:curve:close');\r\n            }\r\n          });\r\n\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'gradient':\r\n          field = new ui.CurveField(args);\r\n          field.flexGrow = '1';\r\n          field.text = args.text || '';\r\n\r\n          if (args.link) {\r\n            var link = args.link;\r\n            if (args.link instanceof Array)\r\n              link = args.link[0];\r\n            var path = pathAt(args, 0);\r\n            field.link(link, [path]);\r\n          }\r\n\r\n          var gradientPickerVisible = false;\r\n\r\n          var toggleGradientPicker = function () {\r\n            if (!field.class!.contains('disabled') && !gradientPickerVisible) {\r\n              editor.call('picker:gradient', field.value, args);\r\n\r\n              gradientPickerVisible = true;\r\n\r\n              // position picker\r\n              var rectPicker = editor.call('picker:gradient:rect');\r\n              var rectField = field.element.getBoundingClientRect();\r\n              editor.call('picker:gradient:position', rectField.right - rectPicker.width, rectField.bottom);\r\n\r\n              var evtPickerChanged = editor.on('picker:curve:change', function (paths, values) {\r\n                if (!field._link) return;\r\n\r\n                var link = field._link;\r\n\r\n                var previous = {\r\n                  paths: [],\r\n                  values: []\r\n                };\r\n\r\n                var path;\r\n                for (var i = 0; i < paths.length; i++) {\r\n                  // always use 0 because we do not support multiselect\r\n                  path = pathAt(args, 0) + paths[i].substring(1);\r\n                  previous.paths.push(path);\r\n                  previous.values.push(field._link.get(path));\r\n                }\r\n\r\n                var undo = function () {\r\n                  var item = link;\r\n                  if (link.history && link.history._getItemFn) {\r\n                    item = link.history._getItemFn();\r\n                  }\r\n\r\n                  if (!item) return;\r\n\r\n                  var history = false;\r\n                  if (item.history) {\r\n                    history = item.history.enabled;\r\n                    item.history.enabled = false;\r\n                  }\r\n\r\n                  for (var i = 0; i < previous.paths.length; i++) {\r\n                    item.set(previous.paths[i], previous.values[i]);\r\n                  }\r\n\r\n                  if (item.history)\r\n                    item.history.enabled = history;\r\n                };\r\n\r\n                var redo = function () {\r\n                  var item = link;\r\n                  if (link.history && link.history._getItemFn) {\r\n                    item = link.history._getItemFn();\r\n                  }\r\n\r\n                  if (!item) return;\r\n\r\n                  var history = false;\r\n                  if (item.history) {\r\n                    history = item.history.enabled;\r\n                    item.history.enabled = false;\r\n                  }\r\n\r\n                  for (var i = 0; i < paths.length; i++) {\r\n                    // always use 0 because we do not support multiselect\r\n                    path = pathAt(args, 0) + paths[i].substring(1);\r\n                    item.set(path, values[i]);\r\n                  }\r\n\r\n                  if (item.history)\r\n                    item.history.enabled = history;\r\n                };\r\n\r\n                redo();\r\n\r\n                editor.call('history:' + 'add', {\r\n                  name: path + '.curves',\r\n                  undo: undo,\r\n                  redo: redo\r\n                });\r\n              });\r\n\r\n              var evtRefreshPicker = field.on('change', function (value) {\r\n                editor.call('picker:gradient:set', value, args);\r\n              });\r\n\r\n              editor.once('picker:gradient:close', function () {\r\n                evtRefreshPicker.unbind();\r\n                evtPickerChanged.unbind();\r\n                gradientPickerVisible = false;\r\n              });\r\n            }\r\n          };\r\n\r\n          // open curve editor on click\r\n          field.on('click', toggleGradientPicker);\r\n\r\n          panel.append(field);\r\n          break;\r\n\r\n        case 'array':\r\n          field = editor.call('attributes:addArray', args);\r\n          panel.append(field);\r\n\r\n          break;\r\n\r\n        default:\r\n          field = new Label();\r\n          field.flexGrow = '1';\r\n          (<Label>field).text = args.value || '';\r\n          field.class!.add('selectable');\r\n\r\n          if (args.placeholder)\r\n            (<Label>field).placeholder = args.placeholder;\r\n\r\n          linkField();\r\n\r\n          panel.append(field);\r\n          break;\r\n      }\r\n\r\n      if (args.className && field instanceof Element) {\r\n        field.class!.add(args.className);\r\n      }\r\n\r\n      return field;\r\n    });\r\n\r\n    */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    editor.on('attributes:clear', function () {\r\n      for (let i = 0; i < self.inspectedItems.length; i++) {\r\n        self.inspectedItems[i].unbind();\r\n      }\r\n      self.inspectedItems = [];\r\n    });\r\n\r\n    editor.method('attributes:inspect', function (type: string, item: Observer) {\r\n      self.clearPanel();\r\n\r\n      // clear if destroyed\r\n      self.inspectedItems.push(item.once('destroy', function () {\r\n        editor.call('attributes:clear');\r\n      }));\r\n\r\n      self.root.header = type;\r\n      editor.emit('attributes:inspect[' + type + ']', [item]);\r\n      editor.emit('attributes:inspect[*]', type, [item]);\r\n    });\r\n\r\n\r\n    editor.on('selector:change', function (type: string, items: Observer[]) {\r\n      self.clearPanel();\r\n\r\n      console.warn('选中entity长度：' + items.length);\r\n\r\n      // nothing selected\r\n      if (items.length === 0) {\r\n        let label = new Label('请选择物体或资源');\r\n        label.style!.display = 'block';\r\n        label.style!.textAlign = 'center';\r\n        label.style!.width = '100%';\r\n        // label.style!.height = '22px';\r\n        self.root.append(label);\r\n\r\n        self.root.header = self.title;\r\n\r\n        return;\r\n      }\r\n\r\n      // clear if destroyed\r\n      for (let i = 0; i < items.length; i++) {\r\n        // TODO：当前item为空\r\n        self.inspectedItems.push(items[i].once('destroy', function () {\r\n          editor.call('attributes:clear');\r\n        }));\r\n      }\r\n\r\n      self.root.header = type;\r\n      editor.emit('attributes:inspect[' + type + ']', items);\r\n      editor.emit('attributes:inspect[*]', type, items);\r\n    });\r\n\r\n    // 初始时，默认没有选中物体\r\n    editor.emit('selector:change', null, []);\r\n\r\n  }\r\n\r\n\r\n  public clearPanel(): void {\r\n    editor.emit('attributes:beforeClear');\r\n    this.root.clear();\r\n    editor.emit('attributes:clear');\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport interface AddPanelArgs {\r\n  name?: string;\r\n  parent?: Panel;\r\n  foldable?: boolean;\r\n  folded?: boolean;\r\n}","import { Tooltip, Panel, Element } from \"../../ui\";\r\nimport { VeryEngine } from \"../../engine\";\r\n\r\n// 属性参考说明Tooltip\r\nexport class AttributesReference {\r\n\r\n  public root: Panel;\r\n  public attributesPanel: Panel;\r\n\r\n  public index: { [key: string]: Tooltip } = {};\r\n  public missing: { [key: string]: boolean } = {};\r\n\r\n\r\n  public constructor() {\r\n\r\n    this.root = VeryEngine.rootPanel;\r\n    this.attributesPanel = VeryEngine.attributesPanel;\r\n\r\n    this.init();\r\n  }\r\n\r\n\r\n  private init(): void {\r\n\r\n    let self = this;\r\n\r\n    // TODO\r\n    editor.method('attributes:reference:add', function (args: any) {\r\n      self.index[args.name] = editor.call('attributes:reference', args);\r\n    });\r\n\r\n    editor.method('attributes:reference:attach', function (name: string, target: HTMLElement, element: Element, panel?: Panel) {\r\n      let tooltip = self.index[name];\r\n\r\n      if (!tooltip) {\r\n        if (!self.missing[name]) {\r\n          self.missing[name] = true;\r\n          console.log('reference', name, 'is not defined');\r\n        }\r\n        return;\r\n      }\r\n\r\n      tooltip.attachReference({\r\n        target: target,\r\n        panel: panel,\r\n        element: element || target.ui\r\n      });\r\n\r\n      return tooltip;\r\n    });\r\n\r\n    editor.method('attributes:reference:template', function (args: any) {\r\n      let html = '';\r\n\r\n      if (args.title)\r\n        html += '<h1>' + self.sanitize(args.title) + '</h1>';\r\n      if (args.subTitle)\r\n        html += '<h2>' + self.sanitize(args.subTitle) + '</h2>';\r\n      if (args.webgl2)\r\n        html += '<div class=\"tag\">WebGL 2.0 Only</div>';\r\n      if (args.description) {\r\n        let description = self.sanitize(args.description);\r\n        description = description.replace(/\\n/g, '<br />'); // new lines\r\n        description = description.replace(/&lt;b&gt;/g, '<b>').replace(/&lt;\\/b&gt;/g, '</b>'); // bold\r\n        html += '<p>' + description + '</p>';\r\n      }\r\n      if (args.code)\r\n        html += '<pre class=\"ui-code\">' + self.sanitize(args.code) + '</pre>';\r\n      if (args.url)\r\n        html += '<a class=\"reference\" href=\"' + self.sanitize(args.url) + '\" target=\"_blank\">API Reference</a>';\r\n\r\n      return html;\r\n    });\r\n\r\n\r\n    editor.method('attributes:reference', function (args: any) {\r\n      let tooltip = new Tooltip({\r\n        align: 'right'\r\n      });\r\n      tooltip.hoverable = true;\r\n      tooltip.class!.add('reference');\r\n\r\n      tooltip.html = editor.call('attributes:reference:template', args);\r\n\r\n      // let links = {};\r\n      let timerHover: any = null;\r\n      let timerBlur: any = null;\r\n\r\n      // 重写该方法\r\n      tooltip.attachReference = function (args: any) {\r\n        let target = args.target;\r\n        let element = args.element;\r\n        let targetPanel = args.panel || self.attributesPanel;\r\n\r\n        let show = function () {\r\n          if (!target || target.hidden) return;\r\n          tooltip.position(targetPanel.element.getBoundingClientRect().left, element.getBoundingClientRect().top + 16);\r\n          tooltip.hidden = false;\r\n        };\r\n\r\n        let evtHide = function () {\r\n          if (timerHover !== null) clearTimeout(timerHover);\r\n          if (timerBlur !== null) clearTimeout(timerBlur);\r\n          tooltip.hidden = true;\r\n        };\r\n\r\n        let evtHover = function () {\r\n          if (timerBlur !== null) clearTimeout(timerBlur);\r\n          timerHover = setTimeout(show, 500);\r\n        };\r\n\r\n        let evtBlur = function () {\r\n          if (timerHover !== null) clearTimeout(timerHover);\r\n          timerBlur = setTimeout(hide, 200);\r\n        };\r\n\r\n        let evtClick = function () {\r\n          if (timerHover !== null) clearTimeout(timerHover);\r\n          if (timerBlur !== null) clearTimeout(timerBlur);\r\n          show();\r\n        };\r\n\r\n        target.on('hide', evtHide);\r\n\r\n        target.once('destroy', function () {\r\n          element.removeEventListener('mouseover', evtHover);\r\n          element.removeEventListener('mouseout', evtBlur);\r\n          element.removeEventListener('click', evtClick);\r\n          target.unbind('hide', evtHide);\r\n          target = null;\r\n          element = null;\r\n          if (timerHover !== null) clearTimeout(timerHover);\r\n          if (timerBlur !== null) clearTimeout(timerBlur);\r\n          tooltip.hidden = true;\r\n        });\r\n\r\n        element.addEventListener('mouseover', evtHover, false);\r\n        element.addEventListener('mouseout', evtBlur, false);\r\n        element.addEventListener('click', evtClick, false);\r\n      };\r\n\r\n      let hide = function () {\r\n        tooltip.hidden = true;\r\n      };\r\n\r\n      tooltip.on('hover', function () {\r\n        clearTimeout(timerBlur);\r\n      });\r\n\r\n      self.root.append(tooltip);\r\n\r\n      return tooltip;\r\n    });\r\n  }\r\n\r\n\r\n  private sanitize(str: string) {\r\n    return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  };\r\n\r\n\r\n}","export * from './attributes-panel';\r\nexport * from './attributes-entity';\r\nexport * from './attributes-history';\r\nexport * from './attributes-reference';","import { Events } from '../lib';\r\n\r\nexport class Editor extends Events {\r\n\r\n  // 相较于Events，同一个函数名只可代表一个函数；\r\n\r\n  // 某个name对应的某个事件，name与Function是1对1的关系；\r\n  private _hooks: { [key: string]: Function } = {};\r\n\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * 添加全局函数，函数名与函数本体一一对应，不能重名；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public method(name: string, fn: Function): void {\r\n    if (this._hooks[name] !== undefined) {\r\n      throw new Error(\"can't override hook: \" + name);\r\n    }\r\n    this._hooks[name] = fn;\r\n  };\r\n\r\n  /**\r\n   * 移除某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public methodRemove(name: string): void {\r\n    delete this._hooks[name];\r\n  };\r\n\r\n  /**\r\n   * 执行某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public call(name: string, ...args: any[]): any {\r\n    if (this._hooks[name]) {\r\n      var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n      try {\r\n        return this._hooks[name].apply(null, args);\r\n      } catch (ex) {\r\n        console.error(\r\n          \"%c%s %c(editor.method error)\",\r\n          \"color: #06f\",\r\n          name,\r\n          \"color: #f00\"\r\n        );\r\n        console.error(ex.stack);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n}","import { Entity } from \"./entity\";\r\nimport { GameObject, MiddleContainer } from \"../middleware\";\r\nimport { Observer } from \"../../lib\";\r\n\r\nexport class Entities {\r\n    public lists: Entity[] = [];\r\n    private _indexed: { [key: string]: Entity } = {};\r\n\r\n    private container: MiddleContainer;\r\n\r\n    public constructor() {\r\n        this.container = new MiddleContainer();\r\n    }\r\n\r\n    // 1.建立基本的数据格式；\r\n    // 2.串联hierarchy，包括基本的菜单；\r\n    // 3.尝试建立property；\r\n    // 4.串联Assets结构与UI；\r\n\r\n    public addRaw(entity_data: any): void {\r\n        console.log('***entity-data***');\r\n        console.log(entity_data);\r\n        let gameObject = this.createGameObject(entity_data);\r\n\r\n\r\n        // add component\r\n\r\n        // children\r\n\r\n        // parent\r\n\r\n\r\n\r\n        this.container.addGameObject(gameObject);\r\n    }\r\n\r\n    private createGameObject(entity: any): GameObject {\r\n        // TODO: 解析是node还是mesh\r\n        // 设置name\r\n        let instance = new GameObject(entity.name);\r\n        // 设置guid\r\n        instance.guid = entity.resource_id;\r\n        \r\n        // 设置位置\r\n        // 设置角度\r\n        // 设置比例值\r\n        // 设置enable ? 不存在的情况\r\n        instance.setActive(entity.enabled);\r\n        // 设置visiable\r\n\r\n        // 设置tags\r\n\r\n        return instance;\r\n    }\r\n\r\n    public add(item: Entity): void { }\r\n\r\n    public has(item: Entity): boolean {\r\n        return false;\r\n    }\r\n\r\n    public set(index: string, item: Entity): void { }\r\n\r\n    public get(index: string): Nullable<Entity> {\r\n        return this._indexed[index];\r\n    }\r\n\r\n    public indexOf(item: Entity): number {\r\n        return this.lists.indexOf(item);\r\n    }\r\n}\r\n","import { Entities } from \"./entities\";\r\nimport { Observer } from \"../../lib\";\r\n\r\nexport class EntityLoad {\r\n\r\n    public loadedEntities: boolean = false;\r\n\r\n    private _entities: Entities = new Entities();\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n\r\n    public scene_raw(row_data: any): void {\r\n        // 解析entity\r\n\r\n        // 清空\r\n        // editor.call('selector:clear');\r\n        // editor.call('entities:clear');\r\n        // editor.call('attributes:clear');\r\n\r\n        // 加载进度条计算\r\n        var total = Object.keys(row_data.entities).length;\r\n        var i = 0;\r\n\r\n        // list 挨个解析\r\n        for (var key in row_data.entities) {\r\n            // 是否需要加入一个中间结构\r\n            this._entities.addRaw(row_data.entities[key]);\r\n            let entity = new Observer(row_data.entities[key]);\r\n            debug.warn(entity.get('name'));\r\n            debug.warn(entity.get('resource_id'));\r\n            if (entity.has('components.rigidbody')) {\r\n                debug.warn(entity.get('components.rigidbody.type'));\r\n            }\r\n\r\n\r\n\r\n            // editor.call('entities:add', new Observer(data.entities[key]));\r\n            // p.progress = (++i / total) * 0.8 + 0.1;\r\n        }\r\n\r\n        // p.progress = 1;\r\n\r\n        this.loadedEntities = true;\r\n\r\n        // 解析完成，其他面板设置\r\n        editor.emit('entities:load');\r\n    }\r\n\r\n\r\n}","export class Entity {\r\n\r\n\r\n  public constructor() {\r\n\r\n  }\r\n\r\n\r\n  public get(str: string) {\r\n    \r\n  }\r\n\r\n  \r\n\r\n}","export * from './entity';\r\nexport * from './entities';\r\nexport * from './entity-load';","import { Panel, MenuItem, Menu, MenuItemArgs, TreeItem } from \"../../ui\";\r\nimport { Entity } from \"../entity\";\r\n\r\nexport class HierarchyContextMenu {\r\n\r\n  public root: Panel;\r\n  public clickableSubmenus: boolean;\r\n  public menu!: Menu;\r\n  public customMenuItems: MenuItemArgs[] = [];\r\n  public entity!: Entity;\r\n  public items = [];\r\n\r\n\r\n  public constructor() {\r\n    this.root = editor.call('layout.root');\r\n\r\n    this.clickableSubmenus = /clickableContextSubmenus=true/.test(location.search);\r\n\r\n    this.initMenu();\r\n    this.initFunction();\r\n\r\n  }\r\n\r\n\r\n  private initMenu(): void {\r\n    let that = this;\r\n    var menuData: { [key: string]: ContextMenuArgs } = {};\r\n\r\n    menuData['new-entity'] = {\r\n      title: 'New Entity',\r\n      className: 'menu-item-new-entity',\r\n      // filter: function () {\r\n      //   return that.items.length === 1;\r\n      // },\r\n      // select: function () {\r\n      //   editor.call('entities:new', { parent: that.items[0] });\r\n      // },\r\n      // \r\n      // items: editor.call('menu:entities:new', function () { return that.items[0]; })\r\n    };\r\n\r\n    menuData['add-component'] = {\r\n      title: 'Add Component',\r\n      className: 'menu-item-add-component',\r\n      // items: editor.call('menu:entities:add-component')\r\n      items: {\r\n        'add-new-entity': {\r\n          title: 'Entity',\r\n          className: 'menu-item-add-entity',\r\n          icon: '&#57632;'\r\n        },\r\n        'audio-sub-menu': {\r\n          title: 'Audio',\r\n          className: 'menu-item-audio-sub-menu',\r\n          icon: editor.call('components:logos')['sound'],\r\n          items: {\r\n            'add-new-entity2': {\r\n              title: '测试1',\r\n              className: 'menu-item-add-entity2',\r\n              icon: '&#57632;'\r\n            },\r\n            'audio-sub-menu2': {\r\n              title: '测试2',\r\n              className: 'menu-item-audio-sub-menu2',\r\n              icon: editor.call('components:logos')['sound']\r\n            } \r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    menuData['enable'] = {\r\n      title: 'Enable',\r\n      className: 'menu-item-enable',\r\n      icon: '&#57651;',\r\n      // hide: function () {\r\n      //   if (that.items.length === 1) {\r\n      //     return that.items[0].get('enabled');\r\n      //   } else {\r\n      //     var enabled = that.items[0].get('enabled');\r\n      //     for (var i = 1; i < that.items.length; i++) {\r\n      //       if (enabled !== that.items[i].get('enabled'))\r\n      //         return false;\r\n      //     }\r\n      //     return enabled;\r\n      //   }\r\n      // },\r\n      // select: function () {\r\n      //   setField('enabled', true);\r\n      // }\r\n    };\r\n\r\n    menuData['disable'] = {\r\n      title: 'Disable',\r\n      className: 'menu-item-disable',\r\n      icon: '&#57650;',\r\n      // hide: function () {\r\n      //   if (that.items.length === 1) {\r\n      //     return !that.items[0].get('enabled');\r\n      //   } else {\r\n      //     var disabled = that.items[0].get('enabled');\r\n      //     for (var i = 1; i < that.items.length; i++) {\r\n      //       if (disabled !== that.items[i].get('enabled'))\r\n      //         return false;\r\n      //     }\r\n      //     return !disabled;\r\n      //   }\r\n      // },\r\n      // select: function () {\r\n      //   setField('enabled', false);\r\n      // }\r\n    };\r\n\r\n    menuData['copy'] = {\r\n      title: 'Copy',\r\n      className: 'menu-item-copy',\r\n      icon: '&#58193;',\r\n      // select: function () {\r\n      //   editor.call('entities:copy', that.items);\r\n      // }\r\n    };\r\n\r\n    menuData['paste'] = {\r\n      title: 'Paste',\r\n      className: 'menu-item-paste',\r\n      icon: '&#58184;',\r\n      // filter: function () {\r\n      //   return that.items.length <= 1 && !editor.call('entities:clipboard:empty');\r\n      // },\r\n      // select: function () {\r\n      //   editor.call('entities:paste', that.entity);\r\n      // }\r\n    };\r\n\r\n    menuData['duplicate'] = {\r\n      title: 'Duplicate',\r\n      className: 'menu-item-duplicate',\r\n      icon: '&#57638;',\r\n      // filter: function () {\r\n      //   var items = getSelection();\r\n\r\n      //   if (items.indexOf(editor.call('entities:root')) !== -1)\r\n      //     return false;\r\n\r\n      //   return items.length > 0;\r\n      // },\r\n      // select: function () {\r\n      //   editor.call('entities:duplicate', getSelection());\r\n      // }\r\n    };\r\n\r\n    menuData['delete'] = {\r\n      title: 'Delete',\r\n      className: 'menu-item-delete',\r\n      icon: '&#57636;',\r\n      // filter: function () {\r\n      //   var root = editor.call('entities:root');\r\n      //   for (var i = 0; i < that.items.length; i++) {\r\n      //     if (that.items[i] === root)\r\n      //       return false;\r\n      //   }\r\n      //   return true;\r\n      // },\r\n      // select: function () {\r\n      //   editor.call('entities:delete', that.items);\r\n      // }\r\n    };\r\n\r\n    // menu\r\n    this.menu = Menu.fromData(menuData, { clickableSubmenus: this.clickableSubmenus });\r\n    this.root.append(this.menu);\r\n\r\n    // this.menu.on('open', function () {\r\n    //   var selection = getSelection();\r\n\r\n    //   for (var i = 0; i < that.customMenuItems.length; i++) {\r\n    //     if (!that.customMenuItems[i].filter)\r\n    //       continue;\r\n\r\n    //     that.customMenuItems[i].hidden = !that.customMenuItems[i].filter(selection);\r\n    //   }\r\n    // });\r\n\r\n  }\r\n\r\n\r\n  private getSelection() {\r\n    var selection = editor.call('selector:items');\r\n\r\n    if (selection.indexOf(this.entity) !== -1) {\r\n      return selection;\r\n    } else {\r\n      return [this.entity];\r\n    }\r\n  }\r\n\r\n\r\n  private initFunction(): void {\r\n\r\n    let that = this;\r\n\r\n    // TODO\r\n    // editor.method('entities:contextmenu:add', function (data: MenuItemArgs) {\r\n    //   var item = new MenuItem({\r\n    //     text: data.text,\r\n    //     icon: data.icon,\r\n    //     value: data.value,\r\n    //     hasChildren: !!(data.items && Object.keys(data.items).length > 0),\r\n    //     clickableSubmenus: that.clickableSubmenus\r\n    //   });\r\n\r\n    //   item.on('select', function () {\r\n    //     data.select.call(item, getSelection());\r\n    //   });\r\n\r\n    //   var parent = data.parent || that.menu;\r\n    //   parent.append(item);\r\n\r\n    //   if (data.filter)\r\n    //     item.filter = data.filter;\r\n\r\n    //   that.customMenuItems.push(item);\r\n\r\n    //   return item;\r\n    // });\r\n\r\n    editor.method('entities:contextmenu:open', function (item: TreeItem, x: number, y: number, ignoreSelection: boolean) {\r\n      // TODO\r\n      // if (!that.menu || !editor.call('permissions:write')) return;\r\n      if (!that.menu) return;\r\n      // that.entity = item;\r\n\r\n      // if (ignoreSelection) {\r\n      //   items = [];\r\n      // } else {\r\n      //   items = getSelection();\r\n      // }\r\n\r\n      that.menu.open = true;\r\n      that.menu.position(x + 1, y);\r\n\r\n      return true;\r\n    });\r\n\r\n    // get the entity that was right-clicked when opening the context menu\r\n    editor.method('entities:contextmenu:entity', function () {\r\n      return that.entity;\r\n    });\r\n\r\n    // for each entity added\r\n    editor.on('entities:add', function (item: TreeItem) {\r\n      // get tree item\r\n      // var treeItem = editor.call('entities:panel:get', item.get('resource_id'));\r\n      // if (!treeItem) return;\r\n      // attach contextmenu event\r\n\r\n      item.element!.addEventListener('contextmenu', function (evt: MouseEvent) {\r\n        // console.log(\"context click: \" + item.element!.innerText);\r\n        let openned = editor.call('entities:contextmenu:open', item, evt.clientX, evt.clientY);\r\n\r\n        if (openned) {\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface ContextMenuArgs {\r\n  title?: string;\r\n  className?: string;\r\n  icon?: string;\r\n  filter?: () => boolean;\r\n  hide?: () => boolean;\r\n  select?: () => void;\r\n  items?: any;\r\n}","export class HierarchyMenu {\r\n\r\n\r\n\r\n  public constructor () {\r\n    let componentsLogos = editor.call('components:logos');\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}","import { Panel, Button, Tooltip, Tree, TreeItem } from '../../ui';\r\nimport { VeryEngine } from '../../engine';\r\nimport { HierarchySearch } from './hierarchy-search';\r\nimport { HierarchyMenu } from './hierarchy-menu';\r\nimport { HierarchyContextMenu } from './hierarchy-context-menu';\r\n\r\nexport class HierarchyPanel {\r\n\r\n\r\n  public hierarchyMain: Panel;\r\n\r\n  public constructor() {\r\n    this.hierarchyMain = new Panel();\r\n    this.hierarchyMain.class!.add('hierarchy-controls');\r\n    this.hierarchyMain.parent = VeryEngine.hierarchyPanel;\r\n    VeryEngine.hierarchyPanel.headerAppend(this.hierarchyMain);\r\n    // console.log('hierarchy-controls');\r\n\r\n    // controls delete (Button)\r\n    let btnDelete: Button = new Button('&#57636;');\r\n    btnDelete.class!.add('delete');\r\n    btnDelete.style!.fontWeight = '200';\r\n    btnDelete.on('click', function () {\r\n      let type = editor.call('selector:type');\r\n      if (type !== 'entity')\r\n        return;\r\n      editor.call('entities:delete', editor.call('selector:items'));\r\n    });\r\n    this.hierarchyMain.append(btnDelete);\r\n\r\n    let tooltipDelete = Tooltip.attach({\r\n      target: btnDelete.element!,\r\n      text: '删除',\r\n      align: 'top',\r\n      root: VeryEngine.rootPanel\r\n    });\r\n    tooltipDelete.class!.add('innactive');\r\n\r\n    // controls duplicate\r\n    let btnDuplicate: Button = new Button('&#57638;');\r\n    btnDuplicate.disabled = true;\r\n    btnDuplicate.class!.add('duplicate');\r\n    btnDuplicate.on('click', function () {\r\n      let type = editor.call('selector:type');\r\n      let items = editor.call('selector:items');\r\n\r\n      if (type === 'entity' && items.length)\r\n        editor.call('entities:duplicate', items);\r\n    });\r\n    this.hierarchyMain.append(btnDuplicate);\r\n\r\n    let tooltipDuplicate = Tooltip.attach({\r\n      target: btnDuplicate.element!,\r\n      text: '复制',\r\n      align: 'top',\r\n      root: VeryEngine.rootPanel\r\n    });\r\n    tooltipDuplicate.class!.add('innactive');\r\n\r\n    // TODO: Menu\r\n    // let menuEntities = ui.Menu.fromData(editor.call('menu:entities:new'));\r\n    // root.append(menuEntities);\r\n\r\n    // controls add\r\n    let btnAdd: Button = new Button('&#57632;');\r\n    btnAdd.class!.add('add');\r\n    btnAdd.on('click', function () {\r\n      // menuEntities.open = true;\r\n      // let rect = btnAdd.element.getBoundingClientRect();\r\n      // menuEntities.position(rect.left, rect.top);\r\n    });\r\n    this.hierarchyMain.append(btnAdd);\r\n\r\n    Tooltip.attach({\r\n      target: btnAdd.element!,\r\n      text: '添加',\r\n      align: 'top',\r\n      root: VeryEngine.rootPanel\r\n    });\r\n\r\n    this.init();\r\n\r\n  }\r\n\r\n  public init(): void {\r\n    // left control\r\n    // hierarchy index\r\n    let uiItemIndex = {};\r\n    let awaitingParent = {};\r\n    let panel: Panel = VeryEngine.hierarchyPanel;\r\n\r\n    let hierarchy: Tree = new Tree();\r\n    VeryEngine.hierarchyTree = hierarchy;\r\n\r\n    // TODO: hierarchy权限管理，有些人可看不可编辑；\r\n    // hierarchy.allowRenaming = editor.call('permissions:write');\r\n    hierarchy.draggable = hierarchy.allowRenaming;\r\n    hierarchy.class!.add('hierarchy');\r\n    panel.append(hierarchy);\r\n\r\n    let resizeQueued = false;\r\n    let resizeTree = function () {\r\n      resizeQueued = false;\r\n      hierarchy.element!.style.width = '';\r\n      hierarchy.element!.style.width = (panel.innerElement!.scrollWidth - 5) + 'px';\r\n    };\r\n    let resizeQueue = function () {\r\n      if (resizeQueued) return;\r\n      resizeQueued = true;\r\n      requestAnimationFrame(resizeTree);\r\n    };\r\n    panel.on('resize', resizeQueue);\r\n    hierarchy.on('open', resizeQueue);\r\n    hierarchy.on('close', resizeQueue);\r\n    setInterval(resizeQueue, 1000);\r\n\r\n    // return hierarchy\r\n    editor.method('entities:hierarchy', function () {\r\n      return hierarchy;\r\n    });\r\n\r\n    // list item selected\r\n    hierarchy.on('select', function (item: TreeItem) {\r\n      // open items till parent\r\n      let parent = item.parent;\r\n      while (parent && parent instanceof TreeItem) {\r\n        parent.open = true;\r\n        parent = parent.parent;\r\n      }\r\n      // focus\r\n      item.elementTitle.focus();\r\n      // add selection\r\n      // TODO\r\n      console.log('hierarchy 面板选中entity');\r\n\r\n      // TODO: 当前entity为undefined\r\n      editor.call('selector:add', 'entity', item.entity);\r\n    });\r\n\r\n    // list item deselected\r\n    hierarchy.on('deselect', function (item: TreeItem) {\r\n      // TODO:\r\n      // console.log('selector:remove entity');\r\n      editor.call('selector:remove', item.entity);\r\n    });\r\n\r\n    // scrolling on drag\r\n    let dragScroll = 0;\r\n    let dragTimer: NodeJS.Timer | null = null;;\r\n    let dragLastEvt;\r\n    let dragEvt = function (evt: MouseEvent) {\r\n      if (!hierarchy._dragging) {\r\n        clearInterval(Number(dragTimer));\r\n        window.removeEventListener('mousemove', dragEvt);\r\n        return;\r\n      }\r\n      let rect = panel.innerElement!.getBoundingClientRect();\r\n\r\n      if ((evt.clientY - rect.top) < 32 && panel.innerElement!.scrollTop > 0) {\r\n        dragScroll = -1;\r\n      } else if ((rect.bottom - evt.clientY) < 32 && (panel.innerElement!.scrollHeight - (rect.height + panel.innerElement!.scrollTop)) > 0) {\r\n        dragScroll = 1;\r\n      } else {\r\n        dragScroll = 0;\r\n      }\r\n    };\r\n\r\n    hierarchy.on('dragstart', function () {\r\n      dragTimer = setInterval(function () {\r\n        if (dragScroll === 0)\r\n          return;\r\n\r\n        panel.innerElement!.scrollTop += dragScroll * 8;\r\n        hierarchy._dragOver = null;\r\n        hierarchy._updateDragHandle();\r\n      }, 1000 / 60);\r\n\r\n      dragScroll = 0;\r\n      window.addEventListener('mousemove', dragEvt, false);\r\n\r\n      // TODO:\r\n      console.log('get drag TreeItem entity resourceId');\r\n      // let resourceId = hierarchy._dragItems[0].entity.get('resource_id');\r\n      // editor.call('drop:set', 'entity', { resource_id: resourceId });\r\n      // editor.call('drop:activate', true);\r\n    });\r\n\r\n    hierarchy.on('dragend', function () {\r\n      editor.call('drop:activate', false);\r\n      editor.call('drop:set');\r\n    });\r\n\r\n    // TODO\r\n    // let target = editor.call('drop:target', {\r\n    //   ref: panel.innerElement,\r\n    //   type: 'entity',\r\n    //   hole: true,\r\n    //   passThrough: true\r\n    // });\r\n    // target.element.style.outline = 'none';\r\n\r\n    let classList = ['tree-item-entity', 'entity-id-' + 'ids-to-be-done', 'c-model'];\r\n    // if (isRoot) {\r\n    //   classList.push('tree-item-root');\r\n    // }\r\n\r\n    let rootElement = new TreeItem({\r\n      text: 'Scene',\r\n      classList: classList\r\n    });\r\n    rootElement.class!.remove('c-model');\r\n    hierarchy.element!.appendChild(rootElement.element!);\r\n    hierarchy.emit('append', rootElement);\r\n\r\n    for (let i: number = 0; i < 10; i++) {\r\n      let element1 = new TreeItem({\r\n        text: '物体名' + (i + 1),\r\n        classList: classList\r\n      });\r\n      editor.emit('entities:add', element1);\r\n      hierarchy.emit('append', element1);\r\n      rootElement.append(element1);\r\n\r\n      for (let k = 0; k < 5; k++) {\r\n        let element2 = new TreeItem({\r\n          text: '子物体名' + (k + 1),\r\n          classList: classList\r\n        });\r\n        editor.emit('entities:add', element2);\r\n        hierarchy.emit('append', element2);\r\n        element1.append(element2);\r\n        for (let x = 0; x < 5; x++) {\r\n          let element3 = new TreeItem({\r\n            text: '二级子物体' + (x + 1),\r\n            classList: classList\r\n          });\r\n          editor.emit('entities:add', element3);\r\n          hierarchy.emit('append', element3);\r\n\r\n          element2.append(element3);\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    // element.append();\r\n\r\n  }\r\n\r\n}","import { List, TextField, Element, TreeItem, ListItem } from \"../../ui\";\r\nimport { VeryEngine } from \"../../engine\";\r\n\r\nexport class HierarchySearch {\r\n\r\n  public results: List;\r\n\r\n  public search: TextField;\r\n\r\n  public searchClear: HTMLElement;\r\n\r\n  public changing: boolean = false;\r\n\r\n  public itemsIndex: { [key: string]: TreeItem } = {};\r\n\r\n  public lastSearch: string = '';\r\n\r\n\r\n  public constructor() {\r\n\r\n    let self = this;\r\n\r\n    // 结果列表\r\n    this.results = new List();\r\n    this.results.element!.tabIndex = 0;\r\n    this.results.hidden = true;\r\n    this.results.class!.add('search-results');\r\n    VeryEngine.hierarchyPanel.append(this.results);\r\n    this.initResult();\r\n\r\n    // 搜索区域控制\r\n    this.search = new TextField('搜索');\r\n    this.initSearchField();\r\n\r\n    // 搜索结果clear控制\r\n    this.searchClear = document.createElement('div');\r\n    this.searchClear.innerHTML = '&#57650;';\r\n    this.searchClear.classList.add('clear');\r\n    this.search.element!.appendChild(this.searchClear);\r\n\r\n    this.searchClear.addEventListener('click', function () {\r\n      self.search.value = '';\r\n    }, false);\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  public initResult(): void {\r\n\r\n    let self = this;\r\n\r\n    // clear on escape\r\n    this.results.element!.addEventListener('keydown', function (evt) {\r\n      if (evt.keyCode === 27) { // esc\r\n        self.searchClear.click();\r\n\r\n      } else if (evt.keyCode === 13) { // enter，TODO: 回车键选择\r\n        if (!self.results.selected) {\r\n          // let firstElement = self.results.element!.firstElementChild;\r\n          // if (firstElement && (<HTMLElement>firstElement).ui && (<HTMLElement>firstElement).ui.entity)\r\n          //   editor.call('selector:set', 'entity', [firstElement.ui.entity]);\r\n        }\r\n        self.search.value = '';\r\n\r\n      } else if (evt.keyCode === 40) {  // down\r\n        self.selectNext();\r\n        evt.stopPropagation();\r\n      } else if (evt.keyCode === 38) {  // up\r\n        self.selectPrev();\r\n        evt.stopPropagation();\r\n      }\r\n    }, false);\r\n\r\n\r\n    // deselecting\r\n    this.results.unbind('deselect', this.results._onDeselect);\r\n    this.results._onDeselect = function (item) {\r\n      let ind = this.selected.indexOf(item);\r\n      if (ind !== -1) this.selected.splice(ind, 1);\r\n\r\n      if (this._changing)\r\n        return;\r\n\r\n      if (List._ctrl && List._ctrl()) {\r\n\r\n      } else {\r\n        this._changing = true;\r\n\r\n        let items = editor.call('selector:type') === 'entity' && editor.call('selector:items') || [];\r\n\r\n        // TODO: \r\n        console.log('_onDeselect');\r\n        // let inSelected = items.indexOf(item.entity) !== -1;\r\n\r\n        // if (items.length >= 2 && inSelected) {\r\n        //   let selected = this.selected;\r\n        //   for (let i = 0; i < selected.length; i++)\r\n        //     selected[i].selected = false;\r\n\r\n        //   item.selected = true;\r\n        // }\r\n\r\n        this._changing = false;\r\n      }\r\n\r\n      this.emit('change');\r\n    };\r\n    this.results.on('deselect', this.results._onDeselect);\r\n\r\n    // results selection change\r\n    this.results.on('change', function () {\r\n      if (self.changing)\r\n        return;\r\n\r\n      if (self.results.selected) {\r\n        editor.call('selector:set', 'entity', self.results.selected.map(function (item) {\r\n          console.log('entity change');\r\n          return;\r\n          // TODO\r\n          // return item.entity;\r\n        }));\r\n      } else {\r\n        editor.call('selector:clear');\r\n      }\r\n    });\r\n\r\n    // selector change\r\n    editor.on('selector:change', function (type: string, items: TreeItem[]) {\r\n      if (self.changing)\r\n        return;\r\n\r\n      self.changing = true;\r\n\r\n      if (type === 'entity') {\r\n        self.results.selected = [];\r\n\r\n        // TODO\r\n        for (let i = 0; i < items.length; i++) {\r\n          // let item = self.itemsIndex[items[i].get('resource_id')];\r\n          // if (!item) continue;\r\n          // item.selected = true;.\r\n        }\r\n      } else {\r\n        self.results.selected = [];\r\n      }\r\n\r\n      self.changing = false;\r\n    });\r\n  }\r\n\r\n  public initSearchField(): void {\r\n\r\n    let self = this;\r\n\r\n    this.search.blurOnEnter = false;\r\n    this.search.keyChange = true;\r\n    this.search.class!.add('search');\r\n    this.search.renderChanges = false;\r\n    VeryEngine.hierarchyPanel.element!.insertBefore(this.search.element!, VeryEngine.hierarchyPanel.innerElement);\r\n\r\n    this.search.element!.addEventListener('keydown', function (evt: KeyboardEvent) {\r\n      if (evt.keyCode === 27) {\r\n        searchClear.click();\r\n\r\n      } else if (evt.keyCode === 13) {\r\n        if (!self.results.selected.length) {\r\n          // TODO\r\n          // let firstElement = self.results.element!.firstElementChild;\r\n          // if (firstElement && (<HTMLElement>firstElement).ui && (<HTMLElement>firstElement).ui.entity)\r\n          //   editor.call('selector:set', 'entity', [(<HTMLElement>firstElement).ui.entity]);\r\n        }\r\n        self.search.value = '';\r\n\r\n      } else if (evt.keyCode === 40) { // down\r\n        editor.call('hotkey:updateModifierKeys', evt);\r\n        self.selectNext();\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n\r\n      } else if (evt.keyCode === 38) { // up\r\n        editor.call('hotkey:updateModifierKeys', evt);\r\n        self.selectPrev();\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n\r\n      } else if (evt.keyCode === 65 && evt.ctrlKey) { // ctrl + a\r\n        let toSelect = [];\r\n        let items = self.results.element!.querySelectorAll('.ui-list-item');\r\n        for (let i = 0; i < items.length; i++) {\r\n          toSelect.push((<HTMLElement>items[i]).ui);\r\n        }\r\n        // TODO\r\n        console.log('全选');\r\n        // self.results.selected = toSelect;\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n      }\r\n    }, false);\r\n\r\n\r\n    this.search.on('change', function (value: string) {\r\n      value = value.trim();\r\n\r\n      if (self.lastSearch === value) return;\r\n      self.lastSearch = value;\r\n\r\n      if (value) {\r\n        self.search.class!.add('not-empty');\r\n      } else {\r\n        self.search.class!.remove('not-empty');\r\n      }\r\n\r\n      self.performSearch();\r\n    });\r\n\r\n\r\n    let searchClear = document.createElement('div');\r\n    searchClear.innerHTML = '&#57650;';\r\n    searchClear.classList.add('clear');\r\n    this.search.element!.appendChild(searchClear);\r\n\r\n    searchClear.addEventListener('click', function () {\r\n      self.search.value = '';\r\n    }, false);\r\n\r\n\r\n  }\r\n\r\n\r\n  private selectNext(): void {\r\n    let children = this.results.element!.children;\r\n\r\n    // could be nothing or only one item to select\r\n    if (!children.length || !children.length)\r\n      return;\r\n\r\n    let toSelect = null;\r\n    let items = this.results.element!.querySelectorAll('.ui-list-item.selected');\r\n    let multi: boolean = List._ctrl() || List._shift();\r\n\r\n    if (items.length) {\r\n      let last = items[items.length - 1];\r\n      let next = last.nextElementSibling;\r\n      if (next) {\r\n        // select next\r\n        toSelect = (<HTMLElement>next).ui;\r\n      } else {\r\n        // loop through\r\n        if (!multi) toSelect = (<HTMLElement>children[0]).ui;\r\n      }\r\n    } else {\r\n      // select first\r\n      toSelect = (<HTMLElement>children[0]).ui;\r\n    }\r\n\r\n    if (toSelect) {\r\n      if (!multi) this.results.selected = [];\r\n      // TODO\r\n      // toSelect.selected = true;\r\n    }\r\n  }\r\n\r\n  private selectPrev(): void {\r\n    let children = this.results.element!.children;\r\n\r\n    // could be nothing or only one item to select\r\n    if (!children || !children.length)\r\n      return;\r\n\r\n    let toSelect = null;\r\n    let items = this.results.element!.querySelectorAll('.ui-list-item.selected');\r\n    let multi: boolean = List._ctrl() || List._shift();\r\n\r\n    if (items.length) {\r\n      let first = items[0];\r\n      let prev = first.previousElementSibling;\r\n      if (prev) {\r\n        // select previous\r\n        toSelect = (<HTMLElement>prev).ui;\r\n      } else {\r\n        // loop through\r\n        if (!multi) toSelect = (<HTMLElement>children[children.length - 1]).ui;\r\n      }\r\n    } else {\r\n      // select last\r\n      toSelect = (<HTMLElement>children[children.length - 1]).ui;\r\n    }\r\n\r\n    if (toSelect) {\r\n      if (!multi) this.results.selected = [];\r\n      // TODO\r\n      // toSelect.selected = true;\r\n    }\r\n  };\r\n\r\n  private performSearch() {\r\n    let query = this.lastSearch;\r\n\r\n    // clear results list\r\n    this.results.clear();\r\n    this.itemsIndex = {};\r\n\r\n    if (query) {\r\n      let result = editor.call('entities:fuzzy-search', query);\r\n\r\n      VeryEngine.hierarchyTree.hidden = true;\r\n      this.results.hidden = false;\r\n\r\n      let selected = [];\r\n      if (editor.call('selector:type') === 'entity')\r\n        selected = editor.call('selector:items');\r\n\r\n      // TODO\r\n      for (let i = 0; i < result.length; i++) {\r\n        // let item = this.addItem(result[i]);\r\n\r\n        // this.itemsIndex[result[i].get('resource_id')] = item;\r\n\r\n        // if (selected.indexOf(result[i]) !== -1)\r\n        //   item.selected = true;\r\n\r\n        // this.results.append(item);\r\n      }\r\n    } else {\r\n      this.results.hidden = true;\r\n      VeryEngine.hierarchyTree.hidden = false;\r\n    }\r\n  };\r\n\r\n\r\n  // private addItem(entity) {\r\n  //   let events = [];\r\n\r\n  //   let item = new ListItem({\r\n  //     text: entity.get('name')\r\n  //   });\r\n  //   item.disabledClick = true;\r\n  //   item.entity = entity;\r\n\r\n  //   if (entity.get('children').length)\r\n  //     item.class.add('container');\r\n\r\n  //   // relate to tree item\r\n  //   let treeItem = editor.call('entities:panel:get', entity.get('resource_id'));\r\n\r\n  //   item.disabled = treeItem.disabled;\r\n\r\n  //   let onStateChange = function () {\r\n  //     item.disabled = treeItem.disabled;\r\n  //   };\r\n\r\n  //   events.push(treeItem.on('enable', onStateChange));\r\n  //   events.push(treeItem.on('disable', onStateChange));\r\n\r\n  //   let onNameSet = function (name) {\r\n  //     item.text = name;\r\n  //   };\r\n  //   events.push(entity.on('name:set', onNameSet));\r\n\r\n  //   // icon\r\n  //   let components = Object.keys(entity.get('components'));\r\n  //   for (let c = 0; c < components.length; c++)\r\n  //     item.class.add('c-' + components[c]);\r\n\r\n  //   let onContextMenu = function (evt) {\r\n  //     let openned = editor.call('entities:contextmenu:open', entity, evt.clientX, evt.clientY);\r\n\r\n  //     if (openned) {\r\n  //       evt.preventDefault();\r\n  //       evt.stopPropagation();\r\n  //     }\r\n  //   };\r\n\r\n  //   let onDblClick = function (evt) {\r\n  //     search.value = '';\r\n  //     editor.call('selector:set', 'entity', [entity]);\r\n\r\n  //     evt.stopPropagation();\r\n  //     evt.preventDefault();\r\n  //   };\r\n\r\n  //   item.element.addEventListener('contextmenu', onContextMenu);\r\n  //   item.element.addEventListener('dblclick', onDblClick);\r\n\r\n  //   events.push(item.once('destroy', function () {\r\n  //     for (let i = 0; i < events.length; i++)\r\n  //       events[i].unbind();\r\n  //     events = null;\r\n\r\n  //     item.element.removeEventListener('contextmenu', onContextMenu);\r\n  //     item.element.removeEventListener('dblclick', onDblClick);\r\n  //   }));\r\n\r\n  //   events.push(treeItem.once('destroy', function () {\r\n  //     // if entity removed, perform search again\r\n  //     performSearch();\r\n  //   }));\r\n\r\n  //   return item;\r\n  // };\r\n\r\n\r\n}","import { Panel, Button, Tooltip, Tree, TreeItem } from '../../ui';\r\nimport { VeryEngine } from '../../engine';\r\nimport { HierarchySearch } from './hierarchy-search';\r\nimport { HierarchyMenu } from './hierarchy-menu';\r\nimport { HierarchyContextMenu } from './hierarchy-context-menu';\r\nimport { HierarchyPanel } from './hierarchy-panel';\r\n\r\nexport class Hierarchy {\r\n\r\n  // public hierarchyMain: Panel;\r\n\r\n  public constructor() {\r\n    // this.hierarchyMain = new Panel();\r\n    // this.hierarchyMain.class!.add('hierarchy-controls');\r\n    // this.hierarchyMain.parent = VeryEngine.hierarchyPanel;\r\n    // VeryEngine.hierarchyPanel.headerAppend(this.hierarchyMain);\r\n    // // console.log('hierarchy-controls');\r\n\r\n    // // controls delete (Button)\r\n    // let btnDelete: Button = new Button('&#57636;');\r\n    // btnDelete.class!.add('delete');\r\n    // btnDelete.style!.fontWeight = '200';\r\n    // btnDelete.on('click', function () {\r\n    //   let type = editor.call('selector:type');\r\n    //   if (type !== 'entity')\r\n    //     return;\r\n    //   editor.call('entities:delete', editor.call('selector:items'));\r\n    // });\r\n    // this.hierarchyMain.append(btnDelete);\r\n\r\n    // let tooltipDelete = Tooltip.attach({\r\n    //   target: btnDelete.element!,\r\n    //   text: '删除',\r\n    //   align: 'top',\r\n    //   root: VeryEngine.rootPanel\r\n    // });\r\n    // tooltipDelete.class!.add('innactive');\r\n\r\n    // // controls duplicate\r\n    // let btnDuplicate: Button = new Button('&#57638;');\r\n    // btnDuplicate.disabled = true;\r\n    // btnDuplicate.class!.add('duplicate');\r\n    // btnDuplicate.on('click', function () {\r\n    //   let type = editor.call('selector:type');\r\n    //   let items = editor.call('selector:items');\r\n\r\n    //   if (type === 'entity' && items.length)\r\n    //     editor.call('entities:duplicate', items);\r\n    // });\r\n    // this.hierarchyMain.append(btnDuplicate);\r\n\r\n    // let tooltipDuplicate = Tooltip.attach({\r\n    //   target: btnDuplicate.element!,\r\n    //   text: '复制',\r\n    //   align: 'top',\r\n    //   root: VeryEngine.rootPanel\r\n    // });\r\n    // tooltipDuplicate.class!.add('innactive');\r\n\r\n    // // TODO: Menu\r\n    // // let menuEntities = ui.Menu.fromData(editor.call('menu:entities:new'));\r\n    // // root.append(menuEntities);\r\n\r\n    // // controls add\r\n    // let btnAdd: Button = new Button('&#57632;');\r\n    // btnAdd.class!.add('add');\r\n    // btnAdd.on('click', function () {\r\n    //   // menuEntities.open = true;\r\n    //   // let rect = btnAdd.element.getBoundingClientRect();\r\n    //   // menuEntities.position(rect.left, rect.top);\r\n    // });\r\n    // this.hierarchyMain.append(btnAdd);\r\n\r\n    // Tooltip.attach({\r\n    //   target: btnAdd.element!,\r\n    //   text: '添加',\r\n    //   align: 'top',\r\n    //   root: VeryEngine.rootPanel\r\n    // });\r\n\r\n    // hierarchy panel\r\n    let hierarchyMainPanel = new HierarchyPanel();\r\n\r\n    let contextMenu = new HierarchyContextMenu();\r\n\r\n    // 搜索区域：Search Field\r\n    let searchField = new HierarchySearch();\r\n\r\n    // 全局菜单\r\n    let contextMenuLogo = new HierarchyMenu();\r\n\r\n    // this.init();\r\n\r\n  }\r\n\r\n  public init(): void {\r\n    // left control\r\n    // hierarchy index\r\n    let uiItemIndex = {};\r\n    let awaitingParent = {};\r\n    let panel: Panel = VeryEngine.hierarchyPanel;\r\n\r\n    let hierarchy: Tree = new Tree();\r\n    VeryEngine.hierarchyTree = hierarchy;\r\n\r\n    // TODO: hierarchy权限管理，有些人可看不可编辑；\r\n    // hierarchy.allowRenaming = editor.call('permissions:write');\r\n    hierarchy.draggable = hierarchy.allowRenaming;\r\n    hierarchy.class!.add('hierarchy');\r\n    panel.append(hierarchy);\r\n\r\n    let resizeQueued = false;\r\n    let resizeTree = function () {\r\n      resizeQueued = false;\r\n      hierarchy.element!.style.width = '';\r\n      hierarchy.element!.style.width = (panel.innerElement!.scrollWidth - 5) + 'px';\r\n    };\r\n    let resizeQueue = function () {\r\n      if (resizeQueued) return;\r\n      resizeQueued = true;\r\n      requestAnimationFrame(resizeTree);\r\n    };\r\n    panel.on('resize', resizeQueue);\r\n    hierarchy.on('open', resizeQueue);\r\n    hierarchy.on('close', resizeQueue);\r\n    setInterval(resizeQueue, 1000);\r\n\r\n    // return hierarchy\r\n    editor.method('entities:hierarchy', function () {\r\n      return hierarchy;\r\n    });\r\n\r\n    // list item selected\r\n    hierarchy.on('select', function (item: TreeItem) {\r\n      // open items till parent\r\n      let parent = item.parent;\r\n      while (parent && parent instanceof TreeItem) {\r\n        parent.open = true;\r\n        parent = parent.parent;\r\n      }\r\n      // focus\r\n      item.elementTitle.focus();\r\n      // add selection\r\n      // TODO\r\n      console.log('selector:add entity');\r\n      // editor.call('selector:add', 'entity', item.entity);\r\n    });\r\n\r\n    // list item deselected\r\n    hierarchy.on('deselect', function (item: TreeItem) {\r\n      // TODO:\r\n      console.log('selector:remove entity');\r\n      // editor.call('selector:remove', item.entity);\r\n    });\r\n\r\n    // scrolling on drag\r\n    let dragScroll = 0;\r\n    let dragTimer: NodeJS.Timer | null = null;;\r\n    let dragLastEvt;\r\n    let dragEvt = function (evt: MouseEvent) {\r\n      if (!hierarchy._dragging) {\r\n        clearInterval(Number(dragTimer));\r\n        window.removeEventListener('mousemove', dragEvt);\r\n        return;\r\n      }\r\n      let rect = panel.innerElement!.getBoundingClientRect();\r\n\r\n      if ((evt.clientY - rect.top) < 32 && panel.innerElement!.scrollTop > 0) {\r\n        dragScroll = -1;\r\n      } else if ((rect.bottom - evt.clientY) < 32 && (panel.innerElement!.scrollHeight - (rect.height + panel.innerElement!.scrollTop)) > 0) {\r\n        dragScroll = 1;\r\n      } else {\r\n        dragScroll = 0;\r\n      }\r\n    };\r\n\r\n    hierarchy.on('dragstart', function () {\r\n      dragTimer = setInterval(function () {\r\n        if (dragScroll === 0)\r\n          return;\r\n\r\n        panel.innerElement!.scrollTop += dragScroll * 8;\r\n        hierarchy._dragOver = null;\r\n        hierarchy._updateDragHandle();\r\n      }, 1000 / 60);\r\n\r\n      dragScroll = 0;\r\n      window.addEventListener('mousemove', dragEvt, false);\r\n\r\n      // TODO:\r\n      console.log('get drag TreeItem entity resourceId');\r\n      // let resourceId = hierarchy._dragItems[0].entity.get('resource_id');\r\n      // editor.call('drop:set', 'entity', { resource_id: resourceId });\r\n      // editor.call('drop:activate', true);\r\n    });\r\n\r\n    hierarchy.on('dragend', function () {\r\n      editor.call('drop:activate', false);\r\n      editor.call('drop:set');\r\n    });\r\n\r\n    // TODO\r\n    // let target = editor.call('drop:target', {\r\n    //   ref: panel.innerElement,\r\n    //   type: 'entity',\r\n    //   hole: true,\r\n    //   passThrough: true\r\n    // });\r\n    // target.element.style.outline = 'none';\r\n\r\n    let classList = ['tree-item-entity', 'entity-id-' + 'ids-to-be-done', 'c-model'];\r\n    // if (isRoot) {\r\n    //   classList.push('tree-item-root');\r\n    // }\r\n\r\n    let rootElement = new TreeItem({\r\n      text: 'Scene',\r\n      classList: classList\r\n    });\r\n    rootElement.class!.remove('c-model');\r\n    hierarchy.element!.appendChild(rootElement.element!);\r\n    hierarchy.emit('append', rootElement);\r\n\r\n    for (let i: number = 0; i < 10; i++) {\r\n      let element1 = new TreeItem({\r\n        text: '物体名' + (i + 1),\r\n        classList: classList\r\n      });\r\n      editor.emit('entities:add', element1);\r\n      hierarchy.emit('append', element1);\r\n      rootElement.append(element1);\r\n\r\n      for (let k = 0; k < 5; k++) {\r\n        let element2 = new TreeItem({\r\n          text: '子物体名' + (k + 1),\r\n          classList: classList\r\n        });\r\n        editor.emit('entities:add', element2);\r\n        hierarchy.emit('append', element2);\r\n        element1.append(element2);\r\n        for (let x = 0; x < 5; x++) {\r\n          let element3 = new TreeItem({\r\n            text: '二级子物体' + (x + 1),\r\n            classList: classList\r\n          });\r\n          editor.emit('entities:add', element3);\r\n          hierarchy.emit('append', element3);\r\n\r\n          element2.append(element3);\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    // element.append();\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","export * from './hierarchy';\r\nexport * from './hierarchy-search';\r\nexport * from './hierarchy-menu';","export class Hotkeys {\r\n\r\n  public static ctrl: boolean = false;\r\n  public static shift: boolean = false;\r\n  public static alt: boolean = false;\r\n\r\n  private hotkeys: { [key: string]: HotKeyArgs } = {};\r\n  private keyIndex: { [key: string]: string[] } = {};\r\n  // private keysDown = {};\r\n\r\n  private isMac: boolean = navigator.userAgent.indexOf('Mac OS X') !== -1;\r\n\r\n  private keyByKeyCode: { [key: number]: string } = {};\r\n  private keyByCode: { [key: string]: string } = {};\r\n\r\n  private keyMap: { [key: string]: { keyCode: number, code: string | string[] } } = {};\r\n\r\n  public constructor() {\r\n    this.keyMapInit();\r\n\r\n    let self = this;\r\n\r\n    editor.method('hotkey:register', function (name: string, args: HotKeyArgs) {\r\n      self.hotkeys[name] = args;\r\n\r\n      // keys list\r\n      let keys: string[] = [args.ctrl ? '1' : '0', args.alt ? '1' : '0', args.shift ? '1' : '0'];\r\n\r\n      // map keyCode to key\r\n      if (typeof (args.key) === 'number')\r\n        args.key = self.keyByKeyCode[args.key];\r\n\r\n      // unknown key\r\n      if (!args.key) {\r\n        console.error('未知的hotkeys: ' + name + ', ' + args.key);\r\n        return;\r\n      }\r\n\r\n      keys.push(args.key);\r\n\r\n      args.index = keys.join('+');\r\n\r\n      if (!self.keyIndex[args.index])\r\n        self.keyIndex[args.index] = [];\r\n\r\n      self.keyIndex[args.index].push(name);\r\n    });\r\n\r\n    editor.method('hotkey:unregister', function (name: string) {\r\n      let hotkey: HotKeyArgs = self.hotkeys[name];\r\n      if (!hotkey) return;\r\n\r\n      if (self.keyIndex[hotkey.index!].length === 1) {\r\n        delete self.keyIndex[hotkey.index!];\r\n      } else {\r\n        self.keyIndex[hotkey.index!].splice(self.keyIndex[hotkey.index!].indexOf(name), 1);\r\n      }\r\n\r\n      delete self.hotkeys[name];\r\n    });\r\n\r\n\r\n    editor.method('hotkey:shift', function () {\r\n      return Hotkeys.shift;\r\n    });\r\n\r\n    editor.method('hotkey:ctrl', function () {\r\n      return Hotkeys.ctrl;\r\n    });\r\n\r\n    editor.method('hotkey:alt', function () {\r\n      return Hotkeys.alt;\r\n    });\r\n\r\n    let updateModifierKeys: (evt: Event) => void = function (evt: Event): void {\r\n      if (evt instanceof KeyboardEvent || evt instanceof MouseEvent) {\r\n        // console.warn(evt);\r\n        Hotkeys.shift = evt.shiftKey;\r\n        Hotkeys.ctrl = evt.ctrlKey || evt.metaKey;\r\n        Hotkeys.alt = evt.altKey;\r\n      }\r\n    };\r\n    editor.method('hotkey:updateModifierKeys', updateModifierKeys);\r\n\r\n    window.addEventListener('keydown', function (evt: KeyboardEvent) {\r\n      if (evt.target) {\r\n        let tag: string = (<HTMLElement>evt.target).tagName;\r\n        if (/(input)|(textarea)/i.test(tag) && !(<HTMLElement>evt.target).classList.contains('hotkeys'))\r\n          return;\r\n      }\r\n\r\n      updateModifierKeys(evt);\r\n\r\n      let key: string = evt.code ? self.keyByCode[evt.code] : self.keyByKeyCode[evt.keyCode];\r\n\r\n      if (evt.keyCode === 92 || evt.keyCode === 93)\r\n        return;\r\n\r\n      let index: string = [Hotkeys.ctrl ? '1' : '0', Hotkeys.alt ? '1' : '0', Hotkeys.shift ? '1' : '0', key].join('+');\r\n\r\n      if (self.keyIndex[index]) {\r\n        let skipPreventDefault: boolean = false;\r\n        for (let i: number = 0; i < self.keyIndex[index].length; i++) {\r\n          if (!skipPreventDefault && self.hotkeys[self.keyIndex[index][i]].skipPreventDefault)\r\n            skipPreventDefault = true;\r\n\r\n          self.hotkeys[self.keyIndex[index][i]].callback(evt);\r\n        }\r\n        if (!skipPreventDefault)\r\n          evt.preventDefault();\r\n      }\r\n    }, false);\r\n\r\n    // Returns Ctrl or Cmd for Mac\r\n    editor.method('hotkey:ctrl:string', function () {\r\n      return self.isMac ? 'Cmd' : 'Ctrl';\r\n    });\r\n\r\n\r\n    window.addEventListener('keyup', updateModifierKeys, false);\r\n    window.addEventListener('mousedown', updateModifierKeys, false);\r\n    window.addEventListener('mouseup', updateModifierKeys, false);\r\n    window.addEventListener('click', updateModifierKeys, false);\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  private keyMapInit(): void {\r\n    this.keyMap = {\r\n      'backspace': {\r\n        keyCode: 8,\r\n        code: 'Backspace'\r\n      },\r\n      'tab': {\r\n        keyCode: 9,\r\n        code: 'Tab',\r\n      },\r\n      'enter': {\r\n        keyCode: 13,\r\n        code: ['enter', 'NumpadEnter', 'Enter'],\r\n      },\r\n      'shift': {\r\n        keyCode: 16,\r\n        code: ['ShiftLeft', 'ShiftRight'],\r\n      },\r\n      'ctrl': {\r\n        keyCode: 17,\r\n        code: ['CtrlLeft', 'CtrlRight'],\r\n      },\r\n      'alt': {\r\n        keyCode: 18,\r\n        code: ['AltLeft', 'AltRight'],\r\n      },\r\n      'pause/break': {\r\n        keyCode: 19,\r\n        code: 'Pause',\r\n      },\r\n      'caps lock': {\r\n        keyCode: 20,\r\n        code: 'CapsLock',\r\n      },\r\n      'esc': {\r\n        keyCode: 27,\r\n        code: 'Escape',\r\n      },\r\n      'space': {\r\n        keyCode: 32,\r\n        code: 'Space',\r\n      },\r\n      'page up': {\r\n        keyCode: 33,\r\n        code: 'PageUp'\r\n      },\r\n      'page down': {\r\n        keyCode: 34,\r\n        code: 'PageDown'\r\n      },\r\n      'end': {\r\n        keyCode: 35,\r\n        code: 'End'\r\n      },\r\n      'home': {\r\n        keyCode: 36,\r\n        code: 'Home'\r\n      },\r\n      'left arrow': {\r\n        keyCode: 37,\r\n        code: 'ArrowLeft'\r\n      },\r\n      'up arrow': {\r\n        keyCode: 38,\r\n        code: 'ArrowUp'\r\n      },\r\n      'right arrow': {\r\n        keyCode: 39,\r\n        code: 'ArrowRight'\r\n      },\r\n      'down arrow': {\r\n        keyCode: 40,\r\n        code: 'ArrowDown'\r\n      },\r\n      'insert': {\r\n        keyCode: 45,\r\n        code: 'Insert'\r\n      },\r\n      'delete': {\r\n        keyCode: 46,\r\n        code: 'Delete'\r\n      },\r\n      '0': {\r\n        keyCode: 48,\r\n        code: 'Digit0'\r\n      },\r\n      '1': {\r\n        keyCode: 49,\r\n        code: 'Digit1'\r\n      },\r\n      '2': {\r\n        keyCode: 50,\r\n        code: 'Digit2'\r\n      },\r\n      '3': {\r\n        keyCode: 51,\r\n        code: 'Digit3'\r\n      },\r\n      '4': {\r\n        keyCode: 52,\r\n        code: 'Digit4'\r\n      },\r\n      '5': {\r\n        keyCode: 53,\r\n        code: 'Digit5'\r\n      },\r\n      '6': {\r\n        keyCode: 54,\r\n        code: 'Digit6'\r\n      },\r\n      '7': {\r\n        keyCode: 55,\r\n        code: 'Digit7'\r\n      },\r\n      '8': {\r\n        keyCode: 56,\r\n        code: 'Digit8'\r\n      },\r\n      '9': {\r\n        keyCode: 57,\r\n        code: 'Digit9'\r\n      },\r\n      'a': {\r\n        keyCode: 65,\r\n        code: 'KeyA'\r\n      },\r\n      'b': {\r\n        keyCode: 66,\r\n        code: 'KeyB'\r\n      },\r\n      'c': {\r\n        keyCode: 67,\r\n        code: 'KeyC'\r\n      },\r\n      'd': {\r\n        keyCode: 68,\r\n        code: 'KeyD'\r\n      },\r\n      'e': {\r\n        keyCode: 69,\r\n        code: 'KeyE'\r\n      },\r\n      'f': {\r\n        keyCode: 70,\r\n        code: 'KeyF'\r\n      },\r\n      'g': {\r\n        keyCode: 71,\r\n        code: 'KeyG'\r\n      },\r\n      'h': {\r\n        keyCode: 72,\r\n        code: 'KeyH'\r\n      },\r\n      'i': {\r\n        keyCode: 73,\r\n        code: 'KeyI'\r\n      },\r\n      'j': {\r\n        keyCode: 74,\r\n        code: 'KeyJ'\r\n      },\r\n      'k': {\r\n        keyCode: 75,\r\n        code: 'KeyK'\r\n      },\r\n      'l': {\r\n        keyCode: 76,\r\n        code: 'KeyL'\r\n      },\r\n      'm': {\r\n        keyCode: 77,\r\n        code: 'KeyM'\r\n      },\r\n      'n': {\r\n        keyCode: 78,\r\n        code: 'KeyN'\r\n      },\r\n      'o': {\r\n        keyCode: 79,\r\n        code: 'KeyO'\r\n      },\r\n      'p': {\r\n        keyCode: 80,\r\n        code: 'KeyP'\r\n      },\r\n      'q': {\r\n        keyCode: 81,\r\n        code: 'KeyQ'\r\n      },\r\n      'r': {\r\n        keyCode: 82,\r\n        code: 'KeyR'\r\n      },\r\n      's': {\r\n        keyCode: 83,\r\n        code: 'KeyS'\r\n      },\r\n      't': {\r\n        keyCode: 84,\r\n        code: 'KeyT'\r\n      },\r\n      'u': {\r\n        keyCode: 85,\r\n        code: 'KeyU'\r\n      },\r\n      'v': {\r\n        keyCode: 86,\r\n        code: 'KeyV'\r\n      },\r\n      'w': {\r\n        keyCode: 87,\r\n        code: 'KeyW'\r\n      },\r\n      'x': {\r\n        keyCode: 88,\r\n        code: 'KeyX'\r\n      },\r\n      'y': {\r\n        keyCode: 89,\r\n        code: 'KeyY'\r\n      },\r\n      'z': {\r\n        keyCode: 90,\r\n        code: 'KeyZ'\r\n      },\r\n      'left window key': {\r\n        keyCode: 91,\r\n        code: 'MetaLeft'\r\n      },\r\n      'right window key': {\r\n        keyCode: 92,\r\n        code: 'MetaRight'\r\n      },\r\n      'select key': {\r\n        keyCode: 93,\r\n        code: 'ContextMenu'\r\n      },\r\n      'numpad 0': {\r\n        keyCode: 96,\r\n        code: 'Numpad0'\r\n      },\r\n      'numpad 1': {\r\n        keyCode: 97,\r\n        code: 'Numpad1'\r\n      },\r\n      'numpad 2': {\r\n        keyCode: 98,\r\n        code: 'Numpad2'\r\n      },\r\n      'numpad 3': {\r\n        keyCode: 99,\r\n        code: 'Numpad3'\r\n      },\r\n      'numpad 4': {\r\n        keyCode: 100,\r\n        code: 'Numpad4'\r\n      },\r\n      'numpad 5': {\r\n        keyCode: 101,\r\n        code: 'Numpad5'\r\n      },\r\n      'numpad 6': {\r\n        keyCode: 102,\r\n        code: 'Numpad6'\r\n      },\r\n      'numpad 7': {\r\n        keyCode: 103,\r\n        code: 'Numpad7'\r\n      },\r\n      'numpad 8': {\r\n        keyCode: 104,\r\n        code: 'Numpad8'\r\n      },\r\n      'numpad 9': {\r\n        keyCode: 105,\r\n        code: 'Numpad9'\r\n      },\r\n      'multiply': {\r\n        keyCode: 106,\r\n        code: 'NumpadMultiply'\r\n      },\r\n      'add': {\r\n        keyCode: 107,\r\n        code: 'NumpadAdd'\r\n      },\r\n      'subtract': {\r\n        keyCode: 109,\r\n        code: 'NumpadSubtract'\r\n      },\r\n      'decimal point': {\r\n        keyCode: 110,\r\n        code: 'NumpadDecimal'\r\n      },\r\n      'divide': {\r\n        keyCode: 111,\r\n        code: 'NumpadDivide'\r\n      },\r\n      'f1': {\r\n        keyCode: 112,\r\n        code: 'F1'\r\n      },\r\n      'f2': {\r\n        keyCode: 113,\r\n        code: 'F2'\r\n      },\r\n      'f3': {\r\n        keyCode: 114,\r\n        code: 'F3'\r\n      },\r\n      'f4': {\r\n        keyCode: 115,\r\n        code: 'F4'\r\n      },\r\n      'f5': {\r\n        keyCode: 116,\r\n        code: 'F5'\r\n      },\r\n      'f6': {\r\n        keyCode: 117,\r\n        code: 'F6'\r\n      },\r\n      'f7': {\r\n        keyCode: 118,\r\n        code: 'F7'\r\n      },\r\n      'f8': {\r\n        keyCode: 119,\r\n        code: 'F8'\r\n      },\r\n      'f9': {\r\n        keyCode: 120,\r\n        code: 'F9'\r\n      },\r\n      'f10': {\r\n        keyCode: 121,\r\n        code: 'F10'\r\n      },\r\n      'f11': {\r\n        keyCode: 122,\r\n        code: 'F11'\r\n      },\r\n      'f12': {\r\n        keyCode: 123,\r\n        code: 'F12'\r\n      },\r\n      'num lock': {\r\n        keyCode: 144,\r\n        code: 'NumLock'\r\n      },\r\n      'scroll lock': {\r\n        keyCode: 145,\r\n        code: 'ScrollLock'\r\n      },\r\n      'semi-colon': {\r\n        keyCode: 186,\r\n        code: 'Semicolon'\r\n      },\r\n      'equal sign': {\r\n        keyCode: 187,\r\n        code: 'Equal'\r\n      },\r\n      'comma': {\r\n        keyCode: 188,\r\n        code: 'Comma'\r\n      },\r\n      'dash': {\r\n        keyCode: 189,\r\n        code: 'Minus'\r\n      },\r\n      'period': {\r\n        keyCode: 190,\r\n        code: 'Period'\r\n      },\r\n      'forward slash': {\r\n        keyCode: 191,\r\n        code: ''\r\n      },\r\n      'grave accent': {\r\n        keyCode: 192,\r\n        code: 'Backquote'\r\n      },\r\n      'open bracket': {\r\n        keyCode: 219,\r\n        code: 'BracketLeft'\r\n      },\r\n      'back slash': {\r\n        keyCode: 220,\r\n        code: ['Backslash', 'IntlBackslash']\r\n      },\r\n      'close bracket': {\r\n        keyCode: 221,\r\n        code: 'BracketRight'\r\n      },\r\n      'single quote': {\r\n        keyCode: 222,\r\n        code: 'Quote'\r\n      },\r\n    };\r\n\r\n    for (let key in this.keyMap) {\r\n      this.keyByKeyCode[this.keyMap[key].keyCode] = key;\r\n\r\n      if (this.keyMap[key].code instanceof Array) {\r\n        for (let i: number = 0; i < this.keyMap[key].code.length; i++) {\r\n          this.keyByCode[this.keyMap[key].code[i]] = key;\r\n        }\r\n      } else {\r\n        this.keyByCode[<string>(this.keyMap[key].code)] = key;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport interface HotKeyArgs {\r\n  key: string | number;\r\n  callback: (evt?: Event) => void;\r\n  ctrl?: boolean;\r\n  alt?: boolean;\r\n  shift?: boolean;\r\n  skipPreventDefault?: boolean;\r\n  index?: string\r\n}","export * from './initialize-before';\r\nexport * from './editor';\r\nexport * from './layout';\r\nexport * from './viewport';\r\nexport * from './hierarchy';\r\nexport * from './hotkeys';\r\nexport * from './assets';\r\nexport * from './toolbar';\r\nexport * from './utility';\r\nexport * from './entity';\r\nexport * from './middleware';\r\nexport * from './initialize-after';","import { AttributesPanel, AttributesEntity, AttributesReference } from \"./attributes\";\r\n\r\n\r\nexport class InitializeAfter {\r\n\r\n\r\n  public constructor() {\r\n\r\n    // attributes\r\n\r\n    let attributesReference = new AttributesReference();\r\n\r\n    let attributesPanel = new AttributesPanel();\r\n    let attributesEntity = new AttributesEntity();\r\n\r\n\r\n  }\r\n\r\n\r\n}","import { Hotkeys } from \"./hotkeys\";\r\nimport { ComponentsLogos, ContextMenu } from \"./utility\";\r\nimport { Selector } from \"./selector\";\r\nimport { Realtime } from \"./web/realtime\";\r\n\r\nexport class InitializeBefore {\r\n\r\n  public constructor() {\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n\r\n    // axois默认请求头设置，全局通过json方式传送和接收数据\r\n    axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\n    // 全局快捷键注册\r\n    let hotkeys = new Hotkeys();\r\n\r\n    // components-logos\r\n    let logos = new ComponentsLogos();\r\n\r\n    // 屏蔽浏览器默认右键菜单\r\n    let systemContextMenu = new ContextMenu();\r\n\r\n    // selector \r\n    let selector = new Selector();\r\n\r\n    // Websocket\r\n    let io = new Realtime();\r\n\r\n  }\r\n\r\n}","import { Panel } from '../ui';\r\nimport { VeryEngine } from '../engine';\r\n\r\nexport class Layout {\r\n\r\n  private ignoreClasses: RegExp = /(ui-list-item)|(ui-button)|(ui-text-field)|(ui-number-field)/i;\r\n  private ignoreElements: RegExp = /(input)|(textarea)/i;\r\n\r\n\r\n  public constructor() {\r\n    let self = this;\r\n    // prevent drag'n'select\r\n    window.addEventListener('mousedown', function (evt) {\r\n      // don't prevent for certain cases\r\n      if (evt.target) {\r\n        if (self.ignoreClasses.test((<HTMLElement>evt.target).className)) {\r\n          return;\r\n        } else if (self.ignoreElements.test((<HTMLElement>evt.target).tagName)) {\r\n          return;\r\n        } else if ((<HTMLElement>evt.target).classList.contains('selectable')) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      // blur inputs\r\n      if (window.getSelection) {\r\n        let focusNode = window.getSelection()!.focusNode;\r\n        if (focusNode) {\r\n          if ((<HTMLElement>focusNode).tagName === 'INPUT') {\r\n            (<HTMLElement>focusNode).blur();\r\n          } else if (focusNode.firstChild && (<HTMLElement>focusNode.firstChild).tagName === 'INPUT') {\r\n            (<HTMLElement>focusNode.firstChild).blur();\r\n          }\r\n        }\r\n      }\r\n\r\n      // prevent default will prevent blur, dragstart and selection\r\n      evt.preventDefault();\r\n    }, false);\r\n  }\r\n\r\n  public init(): void {\r\n    // main container\r\n    let root: Panel = new Panel();\r\n    root.element!.id = 'ui-root';\r\n    root.flex = true;\r\n    root.flexDirection = 'column';\r\n    root.flexWrap = 'nowrap';\r\n    root.scroll = true;\r\n    document.body.appendChild(root.element!);\r\n    // expose\r\n    editor.method('layout.root', function () { return root; });\r\n    VeryEngine.rootPanel = root;\r\n\r\n    // top panel TODO: top干嘛用？\r\n    let top = new Panel();\r\n    top.style!.backgroundColor = '#5f6f72';\r\n    top.style!.cursor = 'pointer';\r\n    top.element!.id = 'ui-top';\r\n    top.flexShrink = '0';\r\n    top.once('click', function () {\r\n      top.destroy();\r\n      // TODO\r\n      top.style!.marginTop = '';\r\n    });\r\n    root.append(top);\r\n\r\n    // middle panel\r\n    let middle = new Panel();\r\n    middle.element!.id = 'ui-middle';\r\n    middle.flexible = true;\r\n    middle.flexGrow = '1';\r\n    root.append(middle);\r\n\r\n    // bottom panel (status)\r\n    let bottom = new Panel();\r\n    bottom.element!.id = 'ui-bottom';\r\n    bottom.flexShrink = '0';\r\n    root.append(bottom);\r\n    // expose\r\n    editor.method('layout.bottom', function () { return bottom; });\r\n\r\n    // toolbar panel (left)\r\n    let toolbar = new Panel();\r\n    toolbar.element!.id = 'ui-toolbar';\r\n    toolbar.flexShrink = '0';\r\n    toolbar.style!.width = '45px';\r\n    middle.append(toolbar);\r\n    // expose\r\n    editor.method('layout.toolbar', function () { return toolbar; });\r\n    VeryEngine.toolbarPanel = toolbar;\r\n\r\n    // hierarchy\r\n    let hierarchyPanel = new Panel('树形结构窗口');\r\n    hierarchyPanel.enabled = true;\r\n    hierarchyPanel.class!.add('hierarchy');\r\n    hierarchyPanel.flexShrink = '0';\r\n    let hierarchyPanelSize = editor.call('localStorage:get', 'editor:layout:hierarchy:width') || '256px';\r\n    hierarchyPanel.style!.width = hierarchyPanelSize;\r\n    hierarchyPanel.innerElement!.style.width = hierarchyPanelSize;\r\n    hierarchyPanel.foldable = true;\r\n    hierarchyPanel.folded = editor.call('localStorage:get', 'editor:layout:hierarchy:fold') || false;\r\n    hierarchyPanel.horizontal = true;\r\n    hierarchyPanel.scroll = true;\r\n    hierarchyPanel.resizable = 'right';\r\n    hierarchyPanel.resizeMin = 196;\r\n    hierarchyPanel.resizeMax = 512;\r\n\r\n    hierarchyPanel.on('resize', function () {\r\n      editor.call('localStorage:set', 'editor:layout:hierarchy:width', hierarchyPanel.style!.width);\r\n    });\r\n    hierarchyPanel.on('fold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:hierarchy:fold', true);\r\n    });\r\n    hierarchyPanel.on('unfold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:hierarchy:fold', false);\r\n    });\r\n\r\n    middle.append(hierarchyPanel);\r\n    // expose\r\n    editor.method('layout.left', function () { return hierarchyPanel; });\r\n    editor.on('permissions:writeState', function (state: boolean) {\r\n      hierarchyPanel.enabled = state;\r\n    });\r\n    if (window.innerWidth <= 480) {\r\n      hierarchyPanel.folded = true;\r\n    }\r\n    VeryEngine.hierarchyPanel = hierarchyPanel;\r\n\r\n    // center panel\r\n    let center = new Panel();\r\n    center.flexible = true;\r\n    center.flexGrow = '1';\r\n    center.flexDirection = 'column';\r\n    middle.append(center);\r\n\r\n    // viewport panel\r\n    let viewport = new Panel();\r\n    viewport.flexible = true;\r\n    viewport.flexGrow = '1';\r\n    viewport.class!.add('viewport');\r\n    center.append(viewport);\r\n    // expose\r\n    editor.method('layout.viewport', function () { return viewport; });\r\n    VeryEngine.viewPanel = viewport;\r\n\r\n    // assets panel\r\n    let assetsPanel = new Panel('资源窗口');\r\n    assetsPanel.class!.add('assets');\r\n    assetsPanel.foldable = true;\r\n    assetsPanel.folded = editor.call('localStorage:get', 'editor:layout:assets:fold') || false;\r\n    assetsPanel.flexShrink = '0';\r\n    assetsPanel.innerElement!.style.height = editor.call('localStorage:get', 'editor:layout:assets:height') || '212px';\r\n    assetsPanel.scroll = true;\r\n    assetsPanel.resizable = 'top';\r\n    assetsPanel.resizeMin = 106;\r\n    assetsPanel.resizeMax = 106 * 6;\r\n    assetsPanel.headerSize = -1;\r\n\r\n    assetsPanel.on('resize', function () {\r\n      editor.call('localStorage:set', 'editor:layout:assets:height', assetsPanel.innerElement!.style.height);\r\n    });\r\n    assetsPanel.on('fold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:assets:fold', true);\r\n    });\r\n    assetsPanel.on('unfold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:assets:fold', false);\r\n    });\r\n\r\n    center.append(assetsPanel);\r\n    // expose\r\n    editor.method('layout.assets', function () { return assetsPanel; });\r\n    if (window.innerHeight <= 480) {\r\n      assetsPanel.folded = true;\r\n    }\r\n    VeryEngine.assetPanel = assetsPanel;\r\n\r\n\r\n    // attributes panel\r\n    let attributesPanel = new Panel('属性窗口');\r\n    attributesPanel.enabled = true;\r\n    attributesPanel.class!.add('attributes');\r\n    attributesPanel.flexShrink = '0';\r\n    let attributesPanelWidth = editor.call('localStorage:get', 'editor:layout:attributes:width') || '320px';\r\n    attributesPanel.style!.width = attributesPanelWidth;\r\n    attributesPanel.innerElement!.style.width = attributesPanelWidth;\r\n    attributesPanel.horizontal = true;\r\n    attributesPanel.foldable = true;\r\n    attributesPanel.folded = editor.call('localStorage:get', 'editor:layout:attributes:fold') || false;\r\n    attributesPanel.scroll = true;\r\n    attributesPanel.resizable = 'left';\r\n    attributesPanel.resizeMin = 256;\r\n    attributesPanel.resizeMax = 512;\r\n\r\n    attributesPanel.on('resize', function () {\r\n      editor.call('localStorage:set', 'editor:layout:attributes:width', attributesPanel.innerElement!.style.width);\r\n    });\r\n    attributesPanel.on('fold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:attributes:fold', true);\r\n    });\r\n    attributesPanel.on('unfold', function () {\r\n      editor.call('localStorage:set', 'editor:layout:attributes:fold', false);\r\n    });\r\n\r\n    middle.append(attributesPanel);\r\n    // expose\r\n    editor.method('layout.right', function () { return attributesPanel; });\r\n    editor.on('permissions:writeState', function (state: boolean) {\r\n      attributesPanel.enabled = state;\r\n    });\r\n    if (window.innerWidth <= 720) {\r\n      attributesPanel.folded = true;\r\n    }\r\n    VeryEngine.attributesPanel = attributesPanel;\r\n  }\r\n\r\n\r\n}","import { Transform } from \"./transform\";\r\nimport { GameObject } from \"./gameobject\";\r\n\r\nexport class Component {\r\n\r\n\r\n  public get transform(): Transform {\r\n    return new Transform();\r\n  }\r\n\r\n  public get gameObject(): GameObject {\r\n    return new GameObject();\r\n  }\r\n\r\n  public get tag(): string {\r\n    return '';\r\n  }\r\n\r\n  public get camera(): Component {\r\n    return new Component();\r\n  }\r\n\r\n\r\n  public get light(): Component {\r\n    return new Component();\r\n  }\r\n\r\n  public get renderer(): Component {\r\n    return new Component();\r\n  }\r\n\r\n  public get collider(): Component {\r\n    return new Component();\r\n  }\r\n\r\n  public constructor() {\r\n\r\n  }\r\n\r\n\r\n\r\n}","import { Transform } from \"./transform\";\r\nimport { BabylonEngine } from \"../../engine\";\r\n\r\nexport class GameObject {\r\n\r\n\r\n  public get gameObject(): GameObject {\r\n    return this;\r\n  }\r\n\r\n  public get transform(): Transform {\r\n    return this._transform;\r\n  }\r\n  public set transform(val: Transform) {\r\n    this._transform = val;\r\n  }\r\n  private _transform: Transform;\r\n\r\n  public get name(): string {\r\n    return this.transform.name;\r\n  }\r\n  public set name(val: string) {\r\n    this.transform.name = val;\r\n  }\r\n\r\n  private _guid: string = '';\r\n  public get guid(): string {\r\n    return this._guid;\r\n  }\r\n  public set guid(val: string) {\r\n    this._guid = val;\r\n  }\r\n\r\n  public get isEmpty(): boolean {\r\n    return this._transform.isEmpty;\r\n  }\r\n\r\n  public get mesh(): Nullable<BABYLON.AbstractMesh> {\r\n    return this._transform.mesh;\r\n  }\r\n\r\n  private _tag: string = '';\r\n  public get tag(): string {\r\n    return this._tag;\r\n  }\r\n  public set tag(val: string) {\r\n    this._tag = val;\r\n  }\r\n\r\n  public get isActive(): boolean {\r\n    return this.isEmpty ? false : this.transform.transformNode!.isEnabled();\r\n  }\r\n\r\n  constructor(name?: string, mesh: Nullable<BABYLON.AbstractMesh> = null, node: Nullable<BABYLON.TransformNode> = null) {\r\n    if (mesh) {\r\n      this._transform = new Transform('', mesh);\r\n    } else {\r\n      if (node) {\r\n        this._transform = new Transform('', null, node);\r\n      } else if (name) {\r\n        this._transform = new Transform(name);\r\n      } else {\r\n        this._transform = new Transform();\r\n      }\r\n    }\r\n  }\r\n\r\n  // TODO\r\n  public static Find(name: string, scene?: BABYLON.Scene): Nullable<GameObject> {\r\n    if (!scene) {\r\n      scene = BabylonEngine.Scene;\r\n    }\r\n    let node: Nullable<BABYLON.Node> = scene.getNodeByName(name);\r\n    if (!node) {\r\n      return null;\r\n    } else {\r\n      if (node instanceof BABYLON.AbstractMesh) {\r\n        return new GameObject('', <BABYLON.AbstractMesh>node);\r\n      } else if (node instanceof BABYLON.TransformNode) {\r\n        return new GameObject('', null, <BABYLON.TransformNode>node);\r\n      } else {\r\n        console.error('GameObject.Find函数查找到不支持的类型：' + node.getClassName());\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public static FindGameObjectWithTag(tag: string): void {\r\n\r\n  }\r\n\r\n  public static FindGameObjectsWithTag(tag: string): void {\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  // TODO\r\n  public static Destroy(obj: GameObject): void {\r\n    if (obj) {\r\n      obj.transform.destroy();\r\n    }\r\n  }\r\n\r\n\r\n  public static CreateInstance(game_object: GameObject): Nullable<GameObject> {\r\n    if (!game_object) {\r\n      return null;\r\n    }\r\n\r\n    if (game_object.isEmpty) {\r\n      return new GameObject();\r\n    } else {\r\n      if (game_object.transform.mesh) {\r\n        let tempMesh: BABYLON.AbstractMesh;\r\n        if (game_object.transform.mesh instanceof BABYLON.Mesh) {\r\n          tempMesh = (<BABYLON.Mesh>game_object.transform.mesh).createInstance(game_object.name + '_instance');\r\n        } else {\r\n          tempMesh = (<BABYLON.InstancedMesh>game_object.transform.mesh).sourceMesh.createInstance(game_object.name + '_instance');\r\n        }\r\n        return new GameObject('', tempMesh);\r\n      } else {\r\n        let newNode: Nullable<BABYLON.TransformNode> = game_object.transform.transformNode!.clone(game_object.name + '_intance');\r\n        return new GameObject('', null, newNode);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public setActive(value: boolean): void {\r\n\r\n  }\r\n\r\n  public setActiveRecursively(value: boolean): void {\r\n\r\n  }\r\n\r\n  public static AddComponent(): void {\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  // public static empty(name: string): GameObject {\r\n\r\n  // }\r\n\r\n}","export * from './transform';\r\nexport * from './gameobject';\r\nexport * from './component';\r\nexport * from './middle-container';","import { GameObject } from \"./gameobject\";\r\n\r\nexport class MiddleContainer {\r\n\r\n    public gameObjects: GameObject[] = [];\r\n\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n\r\n    public addGameObject(object: GameObject): void {\r\n        this.gameObjects.push();\r\n        \r\n    }\r\n\r\n}","export class Transform {\r\n\r\n  // public get gameObject(): GameObject {\r\n  //   return this._gameObject;\r\n  // }\r\n  // private _gameObject: GameObject;\r\n\r\n  private _transformNode: BABYLON.Nullable<BABYLON.TransformNode> = null;\r\n  private _mesh: BABYLON.Nullable<BABYLON.AbstractMesh> = null;\r\n\r\n  public get transformNode(): Nullable<BABYLON.TransformNode> {\r\n    if (this._mesh) {\r\n      return this._mesh;\r\n    } else if (this._transformNode) {\r\n      return this._transformNode;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public get mesh(): Nullable<BABYLON.AbstractMesh> {\r\n    return this._mesh;\r\n  }\r\n\r\n  public get isMesh(): boolean {\r\n    if (this._mesh) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public get isEmpty(): boolean {\r\n    if (this._transformNode || this._mesh) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // public get parent(): Nullable<BABYLON.TransformNode>\r\n\r\n  public get name(): string {\r\n    return this._name;\r\n  }\r\n  public set name(val: string) {\r\n    if (this._transformNode) {\r\n      this._transformNode.name = val;\r\n    }\r\n    if (this._mesh) {\r\n      this._mesh.name = val;\r\n    }\r\n    this._name = val;\r\n  }\r\n  private _name: string = '';\r\n\r\n  private _tempVec: BABYLON.Vector3 = BABYLON.Vector3.Zero();\r\n\r\n  public get parent(): Nullable<Transform> {\r\n    return this._parent;\r\n  }\r\n  private _parent: Nullable<Transform> = null;\r\n\r\n  public set parent(val: Nullable<Transform>) {\r\n    if (!this.isEmpty) {\r\n      if (val && !val.isEmpty) {\r\n        this._transformNode!.setParent(val.transformNode);\r\n        this._parent = val;\r\n      } else {\r\n        this._transformNode!.setParent(null);\r\n        this._parent = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取相对坐标\r\n   */\r\n  public get localPosition(): BABYLON.Vector3 {\r\n    if (this.isEmpty) {\r\n      return BABYLON.Vector3.Zero();\r\n    } else {\r\n      this._tempVec.copyFrom(this.transformNode!.position);\r\n      return this._tempVec;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置相对坐标\r\n   */\r\n  public set localPosition(val: BABYLON.Vector3) {\r\n    if (!this.isEmpty) {\r\n      this.transformNode!.position = val;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取绝对坐标\r\n   */\r\n  public get position(): BABYLON.Vector3 {\r\n    if (this.isEmpty) {\r\n      return BABYLON.Vector3.Zero();\r\n    } else {\r\n      this._tempVec.copyFrom(this.transformNode!.getAbsolutePosition());\r\n      return this._tempVec;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置绝对坐标\r\n   */\r\n  public set position(val: BABYLON.Vector3) {\r\n    if (!this.isEmpty) {\r\n      this.transformNode!.setAbsolutePosition(val);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取相对欧拉角度\r\n   */\r\n  public get localEulerAngles(): BABYLON.Vector3 {\r\n    if (this.isEmpty) {\r\n      return BABYLON.Vector3.Zero();\r\n    } else {\r\n      let para: number = 180 / Math.PI;\r\n      return this.transformNode!.rotation.multiplyByFloats(para, para, para);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置相对欧拉角度\r\n   */\r\n  public set localEulerAngles(val: BABYLON.Vector3) {\r\n    if (!this.isEmpty) {\r\n      let para: number = Math.PI / 180;\r\n      this.transformNode!.rotation = val.multiplyByFloats(para, para, para);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取相对角度（弧度）\r\n   */\r\n  public get localRotation(): BABYLON.Vector3 {\r\n    if (this.isEmpty) {\r\n      return BABYLON.Vector3.Zero();\r\n    } else {\r\n      this._tempVec.copyFrom(this.transformNode!.rotation);\r\n      return this._tempVec;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置相对角度（弧度）\r\n   */\r\n  public set localRotation(val: BABYLON.Vector3) {\r\n    if (!this.isEmpty) {\r\n      this.transformNode!.rotation = val;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取绝对欧拉角度\r\n   */\r\n  public get eulerAngles(): BABYLON.Vector3 {\r\n    if (this.isEmpty) {\r\n      return BABYLON.Vector3.Zero();\r\n    } else {\r\n      let parent: Nullable<BABYLON.Node> = this.transformNode!.parent;\r\n      let para: number = 180 / Math.PI;\r\n      this.transformNode!.setParent(null);\r\n      let result: BABYLON.Vector3 = this.transformNode!.rotation.multiplyByFloats(para, para, para);\r\n      this.transformNode!.setParent(parent);\r\n      return result;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置绝对欧拉角度\r\n   */\r\n  public set eulerAngles(val: BABYLON.Vector3) {\r\n    if (!this.isEmpty) {\r\n      let parent: Nullable<BABYLON.Node> = this.transformNode!.parent;\r\n      let para: number = Math.PI / 180;\r\n      this.transformNode!.setParent(null);\r\n      this.transformNode!.rotation = val.multiplyByFloats(para, para, para);\r\n      this.transformNode!.setParent(parent);\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取绝对角度（弧度）\r\n   */\r\n  public get rotation(): BABYLON.Vector3 {\r\n    if (this.isEmpty) {\r\n      return BABYLON.Vector3.Zero();\r\n    } else {\r\n      let parent: Nullable<BABYLON.Node> = this.transformNode!.parent;\r\n      this.transformNode!.setParent(null);\r\n      this._tempVec.copyFrom(this.transformNode!.rotation);\r\n      this.transformNode!.setParent(parent);\r\n      return this._tempVec;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置绝对角度（弧度）\r\n   */\r\n  public set rotation(val: BABYLON.Vector3) {\r\n    if (!this.isEmpty) {\r\n      let parent: Nullable<BABYLON.Node> = this.transformNode!.parent;\r\n      this.transformNode!.setParent(null);\r\n      this.transformNode!.rotation = val;\r\n      this.transformNode!.setParent(parent);\r\n    }\r\n  }\r\n\r\n\r\n  // TO be contioued\r\n\r\n  public get childCount(): number {\r\n    return 0;\r\n  }\r\n\r\n  public forward: BABYLON.Vector3 = BABYLON.Vector3.Forward();\r\n\r\n\r\n  public get hierarchyCount(): number {\r\n    return 0;\r\n  }\r\n\r\n  public localScale: BABYLON.Vector3 = new BABYLON.Vector3(1, 1, 1);\r\n\r\n\r\n  /**\r\n   * BabylonJS Mesh和TransformNode包装类，仿照UnityEngine数据结构；\r\n   * @param name 物体名，默认为“空物体”；\r\n   * @param mesh BabylonJS Mesh;\r\n   * @param node BabylonJS TransformNode;\r\n   */\r\n  constructor(name: string = '空物体', mesh: Nullable<BABYLON.AbstractMesh> = null, node: Nullable<BABYLON.TransformNode> = null) {\r\n    if (mesh) {\r\n      this._mesh = mesh;\r\n      this._transformNode = mesh;\r\n      this._name = mesh.name;\r\n    } else {\r\n      if (node) {\r\n        this._mesh = null;\r\n        this._transformNode = node;\r\n        this._name = node.name;\r\n      } else {\r\n        // if (!name) name = '空物体';\r\n        this._mesh = null;\r\n        this._transformNode = new BABYLON.TransformNode(name);\r\n        this._name = name;\r\n      }\r\n    }\r\n\r\n    // 设置父物体\r\n    if (this._transformNode) {\r\n      let tempParent: Nullable<BABYLON.Node> = this._transformNode.parent;\r\n      if (tempParent) {\r\n        if (tempParent instanceof BABYLON.AbstractMesh) {\r\n          this._parent = new Transform(tempParent.name, <BABYLON.AbstractMesh>tempParent);\r\n        } else {\r\n          this._parent = new Transform(tempParent.name, null, <BABYLON.TransformNode>tempParent);\r\n        }\r\n      }\r\n    } else {\r\n      this._parent = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 沿世界或局部坐标系平移；\r\n   * @param translation 平移方向向量；\r\n   * @param relativeTo 平移参考系，LOCAL为局部坐标，WORLD为世界坐标；\r\n   */\r\n  public translate(translation: BABYLON.Vector3, relativeTo: BABYLON.Space): void {\r\n    if (this.transformNode) {\r\n      this.transformNode.translate(translation, 1, relativeTo);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 沿着某个参考物体的局部方向向量平移，参考物体为null时，则沿世界坐标移动；\r\n   * @param translation 参考物体的局部方向向量；\r\n   * @param trans 平移参考物体；\r\n   */\r\n  public translateRelativeTo(translation: BABYLON.Vector3, trans: Transform): void {\r\n    if (this.transformNode) {\r\n      let direction: BABYLON.Vector3 = translation.clone();\r\n      if (trans && trans.transformNode) {\r\n        direction = this.transformDirection(direction);\r\n      }\r\n      this.transformNode.translate(direction, 1, BABYLON.Space.WORLD);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 沿某个轴自转，可选择相对世界坐标或自身坐标；\r\n   * @param eulerAngles 自转运动向量；\r\n   * @param relativeTo 自转参考系；\r\n   */\r\n  public rotate(eulerAngles: BABYLON.Vector3, relativeTo: BABYLON.Space): void {\r\n    if (this.transformNode) {\r\n      let axis: BABYLON.Vector3 = BABYLON.Vector3.Zero().copyFrom(eulerAngles.normalize());\r\n      let angle: number = eulerAngles.length();\r\n      this.transformNode.rotate(axis, angle, relativeTo);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 沿世界坐标某个轴公转；\r\n   * @param point 旋转点；\r\n   * @param axis 旋转轴；\r\n   * @param speed 旋转速度；\r\n   */\r\n  public rotateAround(point: BABYLON.Vector3, axis: BABYLON.Vector3, speed: number): void {\r\n    if (this.transformNode) {\r\n      this.transformNode.rotateAround(point, axis, speed);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * 局部坐标位置转世界坐标位置；\r\n   * @param local_position 局部坐标位置；\r\n   * 返回新Vector3向量；\r\n   */\r\n  public transformPosition(local_position: BABYLON.Vector3): BABYLON.Vector3 {\r\n    if (this.transformNode) {\r\n      let matrix: BABYLON.Matrix = this.transformNode.computeWorldMatrix();\r\n      return BABYLON.Vector3.TransformCoordinates(local_position, matrix);\r\n    } else {\r\n      return local_position;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 局部方向向量转世界方向向量，转换后保持向量长度相等；\r\n   * @param local_direction 局部方向向量；\r\n   * 返回新Vector3向量；\r\n   */\r\n  public transformDirection(local_direction: BABYLON.Vector3): BABYLON.Vector3 {\r\n    if (this.transformNode) {\r\n      let matrix: BABYLON.Matrix = this.transformNode.computeWorldMatrix();\r\n      return BABYLON.Vector3.TransformCoordinates(local_direction, matrix).subtract(this.transformNode.getAbsolutePosition());\r\n    } else {\r\n      return local_direction;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 世界坐标位置转局部坐标位置；\r\n   * @param global_position 世界坐标位置；\r\n   * 返回新Vector3向量；\r\n   */\r\n  public inverseTransformPosition(global_position: BABYLON.Vector3): BABYLON.Vector3 {\r\n    if (this.transformNode) {\r\n      let matrix: BABYLON.Matrix = BABYLON.Matrix.Invert(this.transformNode.computeWorldMatrix());\r\n      return BABYLON.Vector3.TransformCoordinates(global_position, matrix);\r\n    } else {\r\n      return global_position;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 世界方向向量转局部方向向量，转换后保持向量长度相等；\r\n   * @param global_direction 世界方向向量；\r\n   * 返回新Vector3向量；\r\n   */\r\n  public inverseTransformDirection(global_direction: BABYLON.Vector3): BABYLON.Vector3 {\r\n    if (this.transformNode) {\r\n      let matrix: BABYLON.Matrix = BABYLON.Matrix.Invert(this.transformNode.computeWorldMatrix());\r\n      let pointA: BABYLON.Vector3 = BABYLON.Vector3.TransformCoordinates(global_direction, matrix);\r\n      let pointOrigin: BABYLON.Vector3 = BABYLON.Vector3.TransformCoordinates(BABYLON.Vector3.Zero(), matrix);\r\n      return pointA.subtract(pointOrigin);\r\n    } else {\r\n      return global_direction;\r\n    }\r\n  }\r\n\r\n\r\n  public destroy(): void {\r\n    if (this.mesh) this.mesh.dispose();\r\n    if (this.transformNode) this.transformNode.dispose();\r\n  }\r\n\r\n\r\n  // TODO\r\n\r\n  public lookAt(target: Transform, worldUp: BABYLON.Vector3 = BABYLON.Vector3.Up()): void {\r\n\r\n  }\r\n\r\n  public setParent(parent: Nullable<Transform>): void {\r\n\r\n  }\r\n\r\n  public detachChildren(): void {\r\n\r\n  }\r\n\r\n  public findChild(name: string): void {\r\n\r\n\r\n  }\r\n\r\n  public isChildOf(name: string): boolean {\r\n    return true;\r\n  }\r\n\r\n  public getChild(index: number): void {\r\n\r\n  }\r\n\r\n\r\n}","export * from './selector';\r\nexport * from './selector-history';","export class SelectorHistory {\r\n  \r\n}","import { Observer } from '../../lib/observer';\r\nimport { ObserverList } from '../../lib';\r\n\r\n\r\nexport class Selector {\r\n\r\n  public enabled: boolean = true;\r\n\r\n  public selector: ObserverList;\r\n\r\n  public evtChange: boolean;\r\n\r\n  public constructor() {\r\n    this.selector = new ObserverList();\r\n\r\n    this.evtChange = false;\r\n\r\n    this.init();\r\n  }\r\n\r\n\r\n  private init(): void {\r\n\r\n    let self = this;\r\n\r\n    // 某个面板选中item\r\n    editor.method('selector:add', (type: string, item: Observer) => {\r\n\r\n      if (!self.enabled)\r\n        return;\r\n\r\n      if (self.selector.has(item))\r\n        return;\r\n\r\n        // console.warn('selector add入口');\r\n\r\n      if (self.selector.length > 0 && self.selector.type !== type)\r\n        self.selector.clear();\r\n\r\n      self.selector.type = type;\r\n      self.selector.add(item);\r\n    });\r\n\r\n    // deselecting item\r\n    editor.method('selector:remove', (type: string, item: Observer) => {\r\n\r\n      // console.warn('selector:remove 移除');\r\n\r\n      if (!self.enabled)\r\n        return;\r\n\r\n      if (!self.selector.has(item))\r\n        return;\r\n\r\n      self.selector.remove(item);\r\n    });\r\n\r\n    // observer-list中有添加item\r\n    this.selector.on('add', (item: Observer) => {\r\n      // add index TODO\r\n      // this.setIndex(self.selector.type, item);\r\n\r\n      // console.warn('selector list 中 add item');\r\n\r\n      editor.emit('selector:add', item, self.selector.type);\r\n\r\n      if (!self.evtChange) {\r\n        self.evtChange = true;\r\n        setTimeout(self.evtChangeFn.bind(self), 0);\r\n      }\r\n    });\r\n\r\n\r\n    // removing\r\n    this.selector.on('remove', (item: Observer) => {\r\n      editor.emit('selector:remove', item, self.selector.type);\r\n\r\n      // remove index\r\n      // this.removeIndex(self.selector.type, item);\r\n\r\n      if (self.selector.length === 0)\r\n        self.selector.type = '';\r\n\r\n      if (!self.evtChange) {\r\n        self.evtChange = true;\r\n        setTimeout(self.evtChangeFn.bind(self), 0);\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  private keyByType(type: string): string {\r\n    switch (type) {\r\n      case 'entity':\r\n        return 'resource_id';\r\n      case 'asset':\r\n        return 'id';\r\n    }\r\n    return '';\r\n  }\r\n\r\n\r\n  // private setIndex(type: string, item: Observer): void {\r\n  //   var key = this.keyByType(type);\r\n  //   if (!key) return;\r\n\r\n  //   if (!index[type])\r\n  //     index[type] = {};\r\n\r\n  //   index[type][item.get[key]] = item.once('destroy', function () {\r\n  //     var state = editor.call('selector:history');\r\n  //     if (state)\r\n  //       editor.call('selector:history', false);\r\n\r\n  //     selector.remove(item);\r\n  //     delete index[type][item.get[key]];\r\n\r\n  //     if (state)\r\n  //       editor.call('selector:history', true);\r\n  //   });\r\n  // }\r\n\r\n\r\n  private evtChangeFn(): void {\r\n    this.evtChange = false;\r\n    console.log('selector change 事件');\r\n    editor.emit('selector:change', this.selector.type, this.selector.array());\r\n  }\r\n\r\n\r\n}","export * from './toolbar-top-control';","import { Panel, Button, Tooltip } from \"../../ui\";\r\nimport { VeryEngine } from \"../../engine\";\r\n\r\nexport class ToolbarTopControl {\r\n\r\n\r\n\r\n\r\n  public constructor() {\r\n\r\n    // panel\r\n    var panel = new Panel();\r\n    panel.class!.add('top-controls');\r\n    VeryEngine.viewPanel.append(panel);\r\n\r\n    editor.method('layout.toolbar.launch', function () {\r\n      return panel;\r\n    });\r\n\r\n    // fullscreen button\r\n    var buttonExpand = new Button('&#57639;');\r\n    buttonExpand.class!.add('icon', 'expand');\r\n    panel.append(buttonExpand);\r\n\r\n    buttonExpand.on('click', function () {\r\n      editor.call('viewport:expand');\r\n    });\r\n\r\n    editor.on('viewport:expand', function (state: boolean) {\r\n      if (state) {\r\n        tooltipExpand.text = '还原';\r\n        buttonExpand.class!.add('active');\r\n      } else {\r\n        tooltipExpand.text = '最大化';\r\n        buttonExpand.class!.remove('active');\r\n      }\r\n\r\n      tooltipExpand.hidden = true;\r\n    });\r\n\r\n    var tooltipExpand = Tooltip.attach({\r\n      target: buttonExpand.element!,\r\n      text: '最大化',\r\n      align: 'top',\r\n      root: VeryEngine.rootPanel\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n}","export class ComponentsLogos {\r\n\r\n  public constructor() {\r\n    editor.method('components:logos', function () {\r\n      return {\r\n        'animation': '&#57875;',\r\n        'audiolistener': '&#57750;',\r\n        'audiosource': '&#57751;',\r\n        'sound': '&#57751;',\r\n        'camera': '&#57874;',\r\n        'collision': '&#57735;',\r\n        'directional': '&#57746;',\r\n        'point': '&#57745;',\r\n        'spot': '&#57747;',\r\n        'light': '&#57748;',\r\n        'model': '&#57736;',\r\n        'particlesystem': '&#57753;',\r\n        'rigidbody': '&#57737;',\r\n        'script': '&#57910;',\r\n        'screen': '&#58371;',\r\n        'sprite': '&#58261;',\r\n        'element': '&#58232;',\r\n        'layoutgroup': '&#57667;',\r\n        'layoutchild': '&#57667;',\r\n        'scrollview': '&#58376;',\r\n        'scrollbar': '&#58377;',\r\n        'button': '&#58373;',\r\n        'zone': '&#57910;',\r\n        '2d-screen': '&#58371;',\r\n        '3d-screen': '&#58372;',\r\n        'text-element': '&#58374;',\r\n        'image-element': '&#58005;',\r\n        'group-element': '&#58375;',\r\n        'userinterface': '&#58370;'\r\n      };\r\n    });\r\n  }\r\n\r\n\r\n\r\n}","export class ContextMenu {\r\n\r\n  public constructor() {\r\n    // 阻止默认鼠标右键菜单\r\n    window.addEventListener('contextmenu', function (evt) {\r\n      evt.preventDefault();\r\n    }, false);\r\n  }\r\n\r\n}","export class Debug {\r\n\r\n    private allow: boolean;\r\n\r\n    public constructor(allow: boolean = true) {\r\n        this.allow = allow;\r\n    }\r\n\r\n    public log(message?: any, ...optionalParams: any[]): void {\r\n        if (!this.allow) return;\r\n        console.log(message, optionalParams);\r\n    }\r\n\r\n    public warn(message?: any, ...optionalParams: any[]): void {\r\n        if (!this.allow) return;\r\n        console.warn(message, optionalParams);\r\n    }\r\n\r\n    public error(message?: any, ...optionalParams: any[]): void {\r\n        if (!this.allow) return;\r\n        console.error(message, optionalParams);\r\n    }\r\n\r\n}","export class EventProxy {\r\n\r\n    private _callbacks: { [key: string]: Function[] };\r\n    private _fired: { [key: string]: any } = {};\r\n    private _after: any;\r\n\r\n    public debug: Function;\r\n\r\n    /*!\r\n     * refs\r\n     */\r\n    private SLICE = Array.prototype.slice;\r\n    private CONCAT = Array.prototype.concat;\r\n    private ALL_EVENT: string = '__all__';\r\n\r\n    private later = (typeof setImmediate !== 'undefined' && setImmediate) ||\r\n        (typeof process !== 'undefined' && process.nextTick) || function (fn) {\r\n            setTimeout(fn, 0);\r\n        };\r\n\r\n\r\n    public constructor(debug?: () => void) {\r\n        this.debug = debug || function () { };\r\n        this._callbacks = {};\r\n    }\r\n\r\n    public addListener(ev: string, callback: Function): EventProxy {\r\n        this.debug('Add listener for %s', ev);\r\n        this._callbacks[ev] = this._callbacks[ev] || [];\r\n        this._callbacks[ev].push(callback);\r\n        return this;\r\n    }\r\n\r\n    public bind(ev: string, callback: Function): EventProxy {\r\n        return this.addListener(ev, callback);\r\n    }\r\n\r\n    public on(ev: string, callback: Function): EventProxy {\r\n        return this.addListener(ev, callback);\r\n    }\r\n\r\n    public subscribe(ev: string, callback: Function): EventProxy {\r\n        return this.addListener(ev, callback);\r\n    }\r\n\r\n    public headbind(ev: string, callback: Function): EventProxy {\r\n        this.debug('Add listener for %s', ev);\r\n        this._callbacks[ev] = this._callbacks[ev] || [];\r\n        this._callbacks[ev].unshift(callback);\r\n        return this;\r\n    }\r\n\r\n    public removeListener(eventname?: string, callback?: Nullable<Function>): EventProxy {\r\n        var calls = this._callbacks;\r\n        if (!eventname) {\r\n            this.debug('Remove all listeners');\r\n            this._callbacks = {};\r\n        } else {\r\n            if (!callback) {\r\n                this.debug('Remove all listeners of %s', eventname);\r\n                calls[eventname] = [];\r\n            } else {\r\n                var list = calls[eventname];\r\n                if (list) {\r\n                    var l = list.length;\r\n                    for (var i = 0; i < l; i++) {\r\n                        if (callback === list[i]) {\r\n                            this.debug('Remove a listener of %s', eventname);\r\n                            list.splice(i, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public unbind(eventname?: string, callback?: Nullable<Function>): EventProxy {\r\n        return this.removeListener(eventname, callback);\r\n    }\r\n\r\n    public removeAllListeners(): EventProxy {\r\n        return this.unbind();\r\n    }\r\n\r\n    public bindForAll(callback: Function): void {\r\n        this.bind(this.ALL_EVENT, callback);\r\n    }\r\n\r\n    public unbindForAll(callback: Function): void {\r\n        this.unbind(this.ALL_EVENT, callback);\r\n    }\r\n\r\n\r\n    public trigger(eventname: string, data?: any, ...args: any[]): EventProxy {\r\n        var list, ev, callback, i, l;\r\n        var both = 2;\r\n        var calls = this._callbacks;\r\n        this.debug('Emit event %s with data %j', eventname, data);\r\n        // 运行当前ev和ALL\r\n        while (both--) {\r\n            ev = both ? eventname : this.ALL_EVENT;\r\n            list = calls[ev];\r\n            if (list) {\r\n                for (i = 0, l = list.length; i < l; i++) {\r\n                    if (!(callback = list[i])) {\r\n                        list.splice(i, 1);\r\n                        i--;\r\n                        l--;\r\n                    } else {\r\n                        var args = [];\r\n                        var start = both ? 1 : 0;\r\n                        for (var j = start; j < arguments.length; j++) {\r\n                            args.push(arguments[j]);\r\n                        }\r\n                        callback.apply(this, args);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public emit(eventname: string, data?: any): EventProxy {\r\n        return this.trigger(eventname, data);\r\n    }\r\n\r\n    public fire(eventname: string, data?: any): EventProxy {\r\n        return this.trigger(eventname, data);\r\n    }\r\n\r\n    public once(ev: string, callback: Function): EventProxy {\r\n        var self = this;\r\n        var wrapper = function () {\r\n            callback.apply(self, arguments);\r\n            self.unbind(ev, wrapper);\r\n        };\r\n        this.bind(ev, wrapper);\r\n        return this;\r\n    }\r\n\r\n    // TODO\r\n    // public emitLater() {\r\n    //     var self = this;\r\n    //     var args: any[] = [];\r\n\r\n    //     for(var i = 0; i < arguments.length; i++) {\r\n    //         args.push(arguments[i]);\r\n    //     }\r\n    //     this.later(function () {\r\n    //         self.trigger.apply(self, args);\r\n    //     });\r\n    // }\r\n\r\n\r\n    public immediate(ev: string, callback: Function, data: any) {\r\n        this.bind(ev, callback);\r\n        this.trigger(ev, data);\r\n        return this;\r\n    }\r\n\r\n    private _assign(eventnames: string[], cb: Function, once: boolean): void {\r\n        var proxy = this;\r\n        // var argsLength = arguments.length;\r\n        var times = 0;\r\n        var flag: { [key: string]: boolean } = {};\r\n\r\n        // Check the arguments length.\r\n        // if (argsLength < 3) {\r\n        //     return this;\r\n        // }\r\n\r\n        var events = eventnames;\r\n        var callback = cb;\r\n        var isOnce = once;\r\n\r\n        // Check the callback type.\r\n        if (typeof callback !== \"function\") {\r\n            return;\r\n        }\r\n        this.debug('Assign listener for events %j, once is %s', events, !!isOnce);\r\n\r\n        var bind = function (key: string) {\r\n            if (isOnce) {\r\n                proxy.once(key, (data: any) => {\r\n                    proxy._fired[key] = proxy._fired[key] || {};\r\n                    proxy._fired[key].data = data;\r\n                    if (!flag[key]) {\r\n                        flag[key] = true;\r\n                        times++;\r\n                    }\r\n                });\r\n            } else {\r\n                proxy.bind(key, (data: any) => {\r\n                    proxy._fired[key] = proxy._fired[key] || {};\r\n                    proxy._fired[key].data = data;\r\n                    if (!flag[key]) {\r\n                        flag[key] = true;\r\n                        times++;\r\n                    }\r\n                })\r\n            }\r\n        };\r\n\r\n        var length = events.length;\r\n        for (var index = 0; index < length; index++) {\r\n            bind(events[index]);\r\n        }\r\n\r\n        var _all = function (event: string) {\r\n            if (times < length) {\r\n                return;\r\n            }\r\n            if (!flag[event]) {\r\n                return;\r\n            }\r\n            var data = [];\r\n            for (var index = 0; index < length; index++) {\r\n                data.push(proxy._fired[events[index]].data);\r\n            }\r\n            if (isOnce) {\r\n                proxy.unbindForAll(_all);\r\n            }\r\n            proxy.debug('Events %j all emited with data %j', events, data);\r\n            callback.apply(null, data);\r\n        };\r\n        proxy.bindForAll(_all);\r\n    }\r\n\r\n\r\n    public all(eventname1: string | string[], eventname2: string | string[], callback: Function): EventProxy {\r\n        var names: string[] = [];\r\n        if (typeof eventname1 === 'string') {\r\n            names.push(eventname1);\r\n        } else {\r\n            names = this.CONCAT.apply(names, <string[]>eventname1);\r\n        }\r\n        if (typeof eventname2 === 'string') {\r\n            names.push(eventname2);\r\n        } else {\r\n            names = this.CONCAT.apply(names, <string[]>eventname2);\r\n        }\r\n        this._assign.apply(this, [names, callback, true]);\r\n        return this;\r\n    }\r\n\r\n    public assign(eventname1: string | string[], eventname2: string | string[], callback: Function): EventProxy {\r\n        return this.all(eventname1, eventname2, callback);\r\n    }\r\n\r\n    public fail(callback: Function): EventProxy {\r\n        var that = this;\r\n        that.once('error', function () {\r\n            that.unbind();\r\n            // put all arguments to the error handler\r\n            // fail(function(err, args1, args2, ...){})\r\n            callback.apply(null, arguments);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    public throw(err: Error): void {\r\n        this.emit('error', err);\r\n    }\r\n\r\n    public tail(eventname1: string | string[], eventname2: string | string[], callback: Function): EventProxy {\r\n        var names: string[] = [];\r\n        if (typeof eventname1 === 'string') {\r\n            names.push(eventname1);\r\n        } else {\r\n            names = this.CONCAT.apply(names, <string[]>eventname1);\r\n        }\r\n        if (typeof eventname2 === 'string') {\r\n            names.push(eventname2);\r\n        } else {\r\n            names = this.CONCAT.apply(names, <string[]>eventname2);\r\n        }\r\n        this._assign.apply(this, [names, callback, false]);\r\n        return this;\r\n    }\r\n\r\n    public assignAll(eventname1: string | string[], eventname2: string | string[], callback: Function): EventProxy {\r\n        return this.tail(eventname1, eventname2, callback);\r\n    }\r\n\r\n    public assignAlways(eventname1: string | string[], eventname2: string | string[], callback: Function): EventProxy {\r\n        return this.tail(eventname1, eventname2, callback);\r\n    }\r\n\r\n    /**\r\n     * The callback will be executed after the event be fired N times.\r\n     * @param {String} eventname Event name.\r\n     * @param {Number} times N times.\r\n     * @param {Function} callback Callback, that will be called after event was fired N times.\r\n     */\r\n    public after(eventname: string, times: number, callback: Function): EventProxy {\r\n        if (times === 0) {\r\n            callback.call(null, []);\r\n            return this;\r\n        }\r\n        var proxy = this,\r\n            firedData: any[] = [];\r\n        this._after = this._after || {};\r\n        var group = eventname + '_group';\r\n        this._after[group] = {\r\n            index: 0,\r\n            results: []\r\n        };\r\n        this.debug('After emit %s times, event %s\\'s listenner will execute', times, eventname);\r\n        var all = function (name: string, data: any) {\r\n            if (name === eventname) {\r\n                times--;\r\n                firedData.push(data);\r\n                if (times < 1) {\r\n                    proxy.debug('Event %s was emit %s, and execute the listenner', eventname, times);\r\n                    proxy.unbindForAll(all);\r\n                    callback.apply(null, [firedData]);\r\n                }\r\n            }\r\n            if (name === group) {\r\n                times--;\r\n                proxy._after[group].results[data.index] = data.result;\r\n                if (times < 1) {\r\n                    proxy.debug('Event %s was emit %s, and execute the listenner', eventname, times);\r\n                    proxy.unbindForAll(all);\r\n                    callback.call(null, proxy._after[group].results);\r\n                }\r\n            }\r\n        };\r\n        proxy.bindForAll(all);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * The `after` method's helper. Use it will return ordered results.\r\n     * If you need manipulate result, you need callback\r\n     * Examples:\r\n     * ```js\r\n     * var ep = new EventProxy();\r\n     * ep.after('file', files.length, function (list) {\r\n     *   // Ordered results\r\n     * });\r\n     * for (var i = 0; i < files.length; i++) {\r\n     *   fs.readFile(files[i], 'utf-8', ep.group('file'));\r\n     * }\r\n     * ```\r\n     * @param {String} eventname Event name, shoule keep consistent with `after`.\r\n     * @param {Function} callback Callback function, should return the final result.\r\n     */\r\n    public group(eventname: string, callback: Function) {\r\n        var that = this;\r\n        var group = eventname + '_group';\r\n        var index = that._after[group].index;\r\n        that._after[group].index++;\r\n        return function (err: Error, data: any) {\r\n            if (err) {\r\n                // put all arguments to the error handler\r\n                that.throw(err);\r\n            }\r\n            that.emit(group, {\r\n                index: index,\r\n                // callback(err, args1, args2, ...)\r\n                result: callback ? callback.apply(null, that.SLICE.call(arguments, 1)) : data\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * The callback will be executed after any registered event was fired. It only executed once.\r\n     * @param {String} eventname1 Event name.\r\n     * @param {String} eventname2 Event name.\r\n     * @param {Function} callback The callback will get a map that has data and eventname attributes.\r\n     */\r\n    public any(eventname1: string | string[], eventname2: string | string[], callback: Function) {\r\n        var proxy = this,\r\n            events = proxy.SLICE.call(arguments, 0, -1),\r\n            _eventname = events.join(\"_\");\r\n\r\n        proxy.debug('Add listenner for Any of events %j emit', events);\r\n        proxy.once(_eventname, callback);\r\n\r\n        var _bind = function (key: string) {\r\n            proxy.bind(key, function (data: any) {\r\n                proxy.debug('One of events %j emited, execute the listenner');\r\n                proxy.trigger(_eventname, { \"data\": data, eventName: key });\r\n            });\r\n        };\r\n\r\n        for (var index = 0; index < events.length; index++) {\r\n            _bind(events[index]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The callback will be executed when the event name not equals with assigned event.\r\n     * @param {String} eventname Event name.\r\n     * @param {Function} callback Callback.\r\n     */\r\n    public not(eventname: string, callback: Function) {\r\n        var proxy = this;\r\n        proxy.debug('Add listenner for not event %s', eventname);\r\n        proxy.bindForAll(function (name: string, data: any) {\r\n            if (name !== eventname) {\r\n                proxy.debug('listenner execute of event %s emit, but not event %s.', name, eventname);\r\n                callback(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Success callback wrapper, will handler err for you.\r\n     *\r\n     * ```js\r\n     * fs.readFile('foo.txt', ep.done('content'));\r\n     *\r\n     * // equal to =>\r\n     *\r\n     * fs.readFile('foo.txt', function (err, content) {\r\n     *   if (err) {\r\n     *     return ep.emit('error', err);\r\n     *   }\r\n     *   ep.emit('content', content);\r\n     * });\r\n     * ```\r\n     *\r\n     * ```js\r\n     * fs.readFile('foo.txt', ep.done('content', function (content) {\r\n     *   return content.trim();\r\n     * }));\r\n     *\r\n     * // equal to =>\r\n     *\r\n     * fs.readFile('foo.txt', function (err, content) {\r\n     *   if (err) {\r\n     *     return ep.emit('error', err);\r\n     *   }\r\n     *   ep.emit('content', content.trim());\r\n     * });\r\n     * ```\r\n     * @param {Function|String} handler, success callback or event name will be emit after callback.\r\n     * @return {Function}\r\n     */\r\n    public done(handler: Function | String, callback?: Function) {\r\n        var that = this;\r\n        return function (err: Error, data: any) {\r\n            if (err) {\r\n                // put all arguments to the error handler\r\n                return that.emit.apply(that, ['error', err]);\r\n            }\r\n\r\n            // callback(err, args1, args2, ...)\r\n            var args = that.SLICE.call(arguments, 1);\r\n\r\n            if (typeof handler === 'string') {\r\n                if (callback) {\r\n                    // only replace the args when it really return a result\r\n                    return that.emit(handler, callback.apply(null, args));\r\n                } else {\r\n                    // put all arguments to the done handler\r\n                    //ep.done('some');\r\n                    //ep.on('some', function(args1, args2, ...){});\r\n                    return that.emit.apply(that, [handler, args]);\r\n                }\r\n            }\r\n\r\n            // speed improve for mostly case: `callback(err, data)`\r\n            if (arguments.length <= 2) {\r\n                return (<Function>handler)(data);\r\n            }\r\n\r\n            // callback(err, args1, args2, ...)\r\n            (<Function>handler).apply(null, args);\r\n        };\r\n    }\r\n\r\n    //     /**\r\n    //    * make done async\r\n    //    * @return {Function} delay done\r\n    //    */\r\n    //     EventProxy.prototype.doneLater = function (handler, callback) {\r\n    //         var _doneHandler = this.done(handler, callback);\r\n    //         return function (err, data) {\r\n    //             var args = arguments;\r\n    //             later(function () {\r\n    //                 _doneHandler.apply(null, args);\r\n    //             });\r\n    //         };\r\n    //     };\r\n\r\n    /**\r\n     * Create a new EventProxy\r\n     * Examples:\r\n     * ```js\r\n     * var ep = EventProxy.create();\r\n     * ep.assign('user', 'articles', function(user, articles) {\r\n     *   // do something...\r\n     * });\r\n     * // or one line ways: Create EventProxy and Assign\r\n     * var ep = EventProxy.create('user', 'articles', function(user, articles) {\r\n     *   // do something...\r\n     * });\r\n     * ```\r\n     * @return {EventProxy} EventProxy instance\r\n     */\r\n    public static create(): EventProxy {\r\n        var ep = new EventProxy();\r\n        return ep;\r\n    }\r\n\r\n    public static createWithArgs(eventname1: string | string[], eventname2: string | string[], callback: Function): EventProxy {\r\n        var ep = new EventProxy();\r\n        var names: string[] = [];\r\n        if (typeof eventname1 === 'string') {\r\n            names.push(eventname1);\r\n        } else {\r\n            names = ep.CONCAT.apply(names, <string[]>eventname1);\r\n        }\r\n        if (typeof eventname2 === 'string') {\r\n            names.push(eventname2);\r\n        } else {\r\n            names = ep.CONCAT.apply(names, <string[]>eventname2);\r\n        }\r\n        ep._assign.apply(this, [names, callback, true]);\r\n        return ep;\r\n    }\r\n\r\n\r\n}","export class GUID {\r\n\r\n  /**\r\n   * 创建GUID唯一标志，注意：采用大数法，有很小的可能性会重复，一般够用；\r\n   */\r\n  public static create(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c: string) {\r\n      let r = Math.random() * 16 | 0,\r\n        v = (c === 'x') ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n\r\n}","export * from './components-logos';\r\nexport * from './context-menu';\r\nexport * from './guid';\r\nexport * from './eventproxy';\r\nexport * from './debug';","export * from './viewport';\r\nexport * from './viewport-expand';\r\nexport * from './viewport-application';\r\nexport * from './viewport-instance-create';","export class ViewportApplication {\r\n\r\n\r\n\r\n\r\n    public constructor() {\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { Panel } from \"../../ui\";\r\nimport { VeryEngine } from \"../../engine\";\r\n\r\n/* \r\n*  viewport窗口最大化显示控制；\r\n*/\r\nexport class ViewportExpand {\r\n\r\n  public constructor() {\r\n    let panels: Panel[] = [];\r\n    panels.push(VeryEngine.hierarchyPanel);\r\n    panels.push(VeryEngine.assetPanel);\r\n    panels.push(VeryEngine.attributesPanel);\r\n\r\n    let expanded: boolean = false;\r\n\r\n    window.editor.method('viewport:expand', function (state: boolean) {\r\n      if (state === undefined)\r\n        state = !expanded;\r\n\r\n      if (expanded === state)\r\n        return;\r\n\r\n      expanded = state;\r\n\r\n      for (var i = 0; i < panels.length; i++)\r\n        panels[i].hidden = expanded;\r\n\r\n      window.editor.emit('viewport:expand', state);\r\n    });\r\n\r\n\r\n    window.editor.method('viewport:expand:state', function () {\r\n      return expanded;\r\n    });\r\n\r\n\r\n    // expand hotkey\r\n    window.editor.call('hotkey:register', 'viewport:expand', {\r\n      key: 'space',\r\n      callback: function () {\r\n        window.editor.call('viewport:expand');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","export class ViewportInstanceCreate{\r\n\r\n\r\n    // 注册事件到相关脚本\r\n    public constructor() {\r\n\r\n    }\r\n\r\n\r\n\r\n    public addEntity(): void {\r\n\r\n    }\r\n\r\n\r\n    \r\n}","import { Canvas } from '../../ui';\r\nimport { VeryEngine } from '../../engine';\r\nimport { ToolbarTopControl } from '../toolbar';\r\nimport { ViewportExpand } from './viewport-expand';\r\n\r\nexport class Viewport {\r\n\r\n  public canvas: Canvas;\r\n\r\n  private _engine: BABYLON.Engine;\r\n  private _scene: BABYLON.Scene;\r\n  private _canvas: HTMLCanvasElement;\r\n\r\n\r\n  public constructor() {\r\n\r\n    let self = this;\r\n\r\n    this.canvas = new Canvas('canvas-3d');\r\n    VeryEngine.viewCanvas = this.canvas;\r\n\r\n    this._canvas = <HTMLCanvasElement>this.canvas.element;\r\n    // 去掉Babylon的蓝色边框\r\n    this._canvas.style.outline = 'none';\r\n    // add canvas\r\n    editor.call('layout.viewport').prepend(this.canvas);\r\n\r\n    // get canvas\r\n    editor.method('viewport:canvas', function () {\r\n      return self.canvas;\r\n    });\r\n\r\n    // update viewpot 视窗大小\r\n    setInterval(function () {\r\n      let rect = VeryEngine.viewPanel.element!.getBoundingClientRect();\r\n      self.canvas.resize(Math.floor(rect.width), Math.floor(rect.height));\r\n    }, 100 / 6);\r\n\r\n    // if(this._engine) this._engine.dispose();\r\n\r\n    this._engine = new BABYLON.Engine(this._canvas, true);\r\n    let engine = this._engine;\r\n    window.addEventListener(\"resize\", function () {\r\n      engine.resize();\r\n    });\r\n    this._scene = new BABYLON.Scene(this._engine);\r\n\r\n    // TODO: 设定相机\r\n    var camera = new BABYLON.ArcRotateCamera(\"MainCamera\", 0, 0, 10, new BABYLON.Vector3(0, 0, 0), this._scene);\r\n    camera.setPosition(new BABYLON.Vector3(20, 200, 400));\r\n    camera.attachControl(this._canvas, true);\r\n    camera.lowerBetaLimit = 0.1;\r\n    camera.upperBetaLimit = (Math.PI / 2) * 0.99;\r\n    camera.lowerRadiusLimit = 150;\r\n\r\n\r\n    // this._scen\r\n\r\n    // 加载过度动画开\r\n    // engine.loadingScreen.hideLoadingUI();\r\n    // engine.displayLoadingUI();\r\n\r\n    let inputMap: { [key: string]: boolean } = {};\r\n\r\n    // TODO: 加载scene.babylon场景文件，当前为默认\r\n    // 默认Editor场景，加载保存的某一个场景资源\r\n    // 资源的父子关系以及模型\r\n    BABYLON.SceneLoader.Append(\"./scene/\", \"scene.babylon\", this._scene, function (scene) {\r\n      // do something with the scene\r\n      // 加载过度动画关\r\n      // engine.hideLoadingUI();\r\n\r\n      // Keyboard events\r\n      var blue = scene.getMeshByName('blue')!;\r\n\r\n      scene.actionManager = new BABYLON.ActionManager(scene);\r\n      scene.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyDownTrigger, function (evt) {\r\n        inputMap[evt.sourceEvent.key] = evt.sourceEvent.type == \"keydown\";\r\n      }));\r\n      scene.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyUpTrigger, function (evt) {\r\n        inputMap[evt.sourceEvent.key] = evt.sourceEvent.type == \"keydown\";\r\n      }));\r\n\r\n\r\n      // // Game/Render loop\r\n      scene.onBeforeRenderObservable.add(() => {\r\n\r\n        if (inputMap[\"w\"] || inputMap[\"ArrowUp\"]) {\r\n          blue.position.z -= 100 * engine.getDeltaTime() / 1000;\r\n        }\r\n        if (inputMap[\"a\"] || inputMap[\"ArrowLeft\"]) {\r\n          blue.position.x += 100 * engine.getDeltaTime() / 1000;\r\n        }\r\n        if (inputMap[\"s\"] || inputMap[\"ArrowDown\"]) {\r\n          blue.position.z += 100 * engine.getDeltaTime() / 1000;\r\n        }\r\n        if (inputMap[\"d\"] || inputMap[\"ArrowRight\"]) {\r\n          blue.position.x -= 100 * engine.getDeltaTime() / 1000;\r\n        }\r\n      })\r\n\r\n      // sphere\r\n      var sphere = scene.getMeshByName('sphere')!;\r\n      sphere.actionManager = new BABYLON.ActionManager(scene);\r\n\r\n      sphere.actionManager.registerAction(new BABYLON.SetValueAction(\r\n        { trigger: BABYLON.ActionManager.OnIntersectionEnterTrigger, parameter: blue },\r\n        sphere, \"scaling\", new BABYLON.Vector3(2, 2, 2)));\r\n\r\n      sphere.actionManager.registerAction(new BABYLON.SetValueAction(\r\n        { trigger: BABYLON.ActionManager.OnIntersectionExitTrigger, parameter: blue }\r\n        , sphere, \"scaling\", new BABYLON.Vector3(1, 1, 1)));\r\n\r\n      let i: number = 0;\r\n\r\n      // WebSocket 测试\r\n      // scene.onKeyboardObservable.add( kbInfo => {\r\n      //   if(kbInfo.type === BABYLON.KeyboardEventTypes.KEYUP) {\r\n      //     if(kbInfo.event.keyCode === 65) {\r\n      //       // editor.call('send', '按下次数：' + (i++) + \"!\");\r\n      //       editor.call('send', '{\"data\": {\"a\": 123, \"b\": \"qwe\"}}');\r\n      //     }\r\n      //   }\r\n      // });\r\n\r\n    });\r\n\r\n    this._engine.runRenderLoop(() => {\r\n      if (this._canvas.width !== this._canvas.clientWidth) {\r\n        this._engine.resize();\r\n      }\r\n\r\n      if (this._scene) {\r\n        this._scene.render();\r\n      }\r\n\r\n      // if (this._showFps) {\r\n      // \tthis.updateFpsPos();\r\n      // }\r\n\r\n\r\n    });\r\n    // return this;\r\n\r\n\r\n    this.expandControl();\r\n  }\r\n\r\n\r\n\r\n  private expandControl(): void {\r\n    let control: ToolbarTopControl = new ToolbarTopControl();\r\n    let expandView: ViewportExpand = new ViewportExpand();\r\n  }\r\n\r\n\r\n\r\n\r\n}","import { EventProxy } from \"../utility\";\r\nimport { EntityLoad } from \"../entity\";\r\n\r\nexport class Realtime {\r\n\r\n  private load: EntityLoad = new EntityLoad();\r\n\r\n  public constructor() {\r\n\r\n    let self = this;\r\n\r\n    let ep = EventProxy.create();\r\n    ep.all('settings', ['assets', 'scenes'], (data1: any, data2: any, data3: any) => {\r\n      console.log(data1);\r\n      console.log(data2);\r\n      // console.error(data2[\"data\"][\"18818365\"][\"data\"][\"aoMapTiling\"][0]);\r\n      console.log(data3);\r\n    });\r\n\r\n    ep.bind('ok', (msg: any) => {\r\n      console.warn('ok');\r\n      console.warn(msg);\r\n    });\r\n\r\n    axios.get('/api/settings')\r\n      .then(response => {\r\n        // console.log('response: ' + response.data);\r\n        ep.emit('settings', response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      }\r\n\r\n      );\r\n\r\n    axios.get('/api/assets')\r\n      .then(response => {\r\n        // console.log('response: ' + response.data);\r\n        ep.emit('assets', response.data);\r\n        // 解析\r\n\r\n      })\r\n      .catch(\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      );\r\n\r\n    axios.get('/api/scenes')\r\n      .then(response => {\r\n        // console.log('response: ' + response.data);\r\n        ep.emit('scenes', response.data);\r\n        self.getScene(response.data.data.scenes[0].id);\r\n        \r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      }\r\n\r\n      );\r\n\r\n    // var ws = new WebSocket(\"ws://localhost:1024\");\r\n\r\n    // ws.onopen = function (evt) {\r\n    //   console.log(\"Connection open ...\");\r\n    //   ws.send(\"Hello WebSockets!\");\r\n    // };\r\n\r\n    // ws.onmessage = function (evt) {\r\n    //   console.log(\"Received Message: \" + evt.data);\r\n    //   ws.close();\r\n    // };\r\n\r\n    // ws.onclose = function (evt) {\r\n    //   console.log(\"Connection closed.\");\r\n    // \r\n    // };\r\n\r\n\r\n    // 打开一个WebSocket:\r\n    // console.log('websocket');\r\n    // var ws = new WebSocket('ws://localhost:1024/VeRyEngine');\r\n    // // 响应onmessage事件:\r\n    // ws.onmessage = function (msg: MessageEvent) {\r\n    //   console.log(msg.data);\r\n    // };\r\n\r\n\r\n    // // 给服务器发送一个字符串:\r\n    // ws.onopen = function (evt) {\r\n    //   console.log(\"Connection open ...\");\r\n    //   ws.send(`{\"str\": \"Hello WebSockets!\"}`);\r\n    // };\r\n\r\n\r\n    // /**\r\n    // * \r\n    // */\r\n    // editor.method('send', (msg: string) => {\r\n    //   ws.send(msg);\r\n    // });\r\n\r\n\r\n    // 获取表格数据\r\n    // axios\r\n    //   .get(\"./data/exhibits.json\")\r\n    //   .then(function (response) {\r\n    //     that._data = response.data;\r\n    //     that._success = true;\r\n    //     // console.log(that._data);\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     console.log(\"load error: \" + error);\r\n    //   });\r\n\r\n\r\n  }\r\n\r\n\r\n  public getScene(id: string): void {\r\n    let self = this;\r\n    axios.post(\"/api/getScene\", { scene: id })\r\n      .then(response => {\r\n        // console.log(response.data);\r\n        // 加载场景，json数据\r\n\r\n        // 如何关联到其他脚本\r\n        debug.error(typeof response.data.data);\r\n        debug.error(response.data.data);\r\n        self.load.scene_raw(response.data.data);\r\n        \r\n\r\n        // for (var key in response.data.data) {\r\n        //   if (typeof (response.data.data[key]) === 'object') {\r\n        //     // 对象\r\n        //     // this._prepare(this, key, data[key]);\r\n        //     console.log(\"object: \" + key);\r\n        //     console.warn(response.data.data[key]);\r\n        //   } else {\r\n        //     // 字符串等一般属性\r\n        //     console.log(typeof (response.data.data[key]) + \": \" + key);\r\n        //     console.warn(response.data.data[key]);\r\n        //   }\r\n        // }\r\n\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      })\r\n  }\r\n\r\n\r\n}","export class BabylonEngine {\r\n  public static Canvas: HTMLCanvasElement;\r\n  public static Engine: BABYLON.Engine;\r\n  public static Scene: BABYLON.Scene;\r\n}","export * from './babylon-engine';\r\nexport * from './very-engine';","import { Viewport } from \"../editor\";\r\nimport { Canvas, Panel, Tree } from \"../ui\";\r\n\r\nexport class VeryEngine {\r\n\r\n  public static viewPanel: Panel;\r\n  public static rootPanel: Panel;\r\n  public static toolbarPanel: Panel;\r\n\r\n  public static hierarchyPanel: Panel;\r\n  public static hierarchyTree: Tree;\r\n\r\n  public static assetPanel: Panel;\r\n  public static attributesPanel: Panel;\r\n\r\n  public static viewport: Viewport;\r\n\r\n  public static viewCanvas: Canvas;\r\n\r\n\r\n\r\n  public constructor() {\r\n\r\n  }\r\n\r\n\r\n}","export * from './lib';\r\nexport * from './editor';\r\nexport * from './ui';\r\n\r\n\r\nexport * from './engine';\r\n","export class Events {\r\n\r\n  // 相较于Editor，同一个函数名可包含一系列函数，不仅仅是一个，且有once功能；\r\n\r\n  public get suspendEvents(): boolean {\r\n    return this._suspendEvents;\r\n  }\r\n  public set suspendEvents(val: boolean) {\r\n    this._suspendEvents = val;\r\n  }\r\n  private _suspendEvents: boolean = false;\r\n\r\n  // 某个name对应的事件数组，name与Function是1对多的关系；\r\n  private _events: { [key: string]: Function[] } = {};\r\n\r\n  public constructor() {\r\n\r\n  }\r\n\r\n  /**\r\n   * 添加事件数组，若name相同，则在数组末尾继续添加；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public on(name: string, fn: Function): EventHandle {\r\n    let events: Function[] = this._events[name];\r\n    if (events === undefined) {\r\n      this._events[name] = [fn];\r\n    } else {\r\n      if (events.indexOf(fn) == -1) {\r\n        events.push(fn);\r\n      }\r\n    }\r\n    return new EventHandle(this, name, fn);\r\n  }\r\n\r\n  /**\r\n   * emit后只执行一次；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public once(name: string, fn: Function): EventHandle {\r\n    let self = this;\r\n    let evt: EventHandle = this.on(name, function (\r\n      arg0: any,\r\n      arg1: any,\r\n      arg2: any,\r\n      arg3: any,\r\n      arg4: any,\r\n      arg5: any,\r\n      arg6: any,\r\n      arg7: any\r\n    ) {\r\n      fn.call(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n      evt.unbind();\r\n    });\r\n    return evt;\r\n  }\r\n\r\n  /**\r\n   * 执行事件；\r\n   * @param name 函数名；\r\n   * @param arg0 函数参数1，可选；\r\n   * @param arg1 函数参数2，可选；\r\n   * @param arg2 函数参数3，可选；\r\n   * @param arg3 函数参数4，可选；\r\n   * @param arg4 函数参数5，可选；\r\n   * @param arg5 函数参数6，可选；\r\n   * @param arg6 函数参数7，可选；\r\n   * @param arg7 函数参数8，可选；\r\n   */\r\n  public emit(name: string,\r\n    arg0?: any,\r\n    arg1?: any,\r\n    arg2?: any,\r\n    arg3?: any,\r\n    arg4?: any,\r\n    arg5?: any,\r\n    arg6?: any,\r\n    arg7?: any\r\n  ): Events {\r\n    if (this._suspendEvents) return this;\r\n\r\n    let events: Function[] = this._events[name];\r\n    if (!events) return this;\r\n\r\n    // 返回新数组\r\n    events = events.slice(0);\r\n\r\n    for (let i: number = 0; i < events.length; i++) {\r\n      if (!events[i]) continue;\r\n      try {\r\n        events[i].call(this, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n      } catch (ex) {\r\n        console.info(\"%c%s %c(event error)\", \"color: #06f\", name, \"color: #f00\");\r\n        console.log(ex.stack);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * 取消Events事件绑定，若name为空，则清空events；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public unbind(name?: string, fn?: Function): Events {\r\n    if (name) {\r\n      let events: Function[] = this._events[name];\r\n      if (!events) return this;\r\n\r\n      if (fn) {\r\n        let i: number = events.indexOf(fn);\r\n        if (i !== -1) {\r\n          if (events.length === 1) {\r\n            delete this._events[name];\r\n          } else {\r\n            events.splice(i, 1);\r\n          }\r\n        }\r\n      } else {\r\n        delete this._events[name];\r\n      }\r\n    } else {\r\n      this._events = {};\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n}\r\n\r\n\r\nexport class EventHandle {\r\n\r\n  public name: Nullable<string>;\r\n\r\n  public owner: Nullable<Events>;\r\n\r\n  public fn: Nullable<Function>;\r\n\r\n  public constructor(owner: Events, name: string, fn: Function) {\r\n    this.owner = owner;\r\n    this.name = name;\r\n    this.fn = fn;\r\n  }\r\n\r\n  public unbind(): void {\r\n    if (!this.owner) return;\r\n\r\n    this.owner.unbind(this.name!, this.fn!);\r\n\r\n    this.owner = null;\r\n    this.name = null;\r\n    this.fn = null;\r\n  }\r\n\r\n  public call(): void {\r\n    if (!this.fn) return;\r\n\r\n    this.fn.call(\r\n      this.owner!,\r\n      arguments[0],\r\n      arguments[1],\r\n      arguments[2],\r\n      arguments[3],\r\n      arguments[4],\r\n      arguments[5],\r\n      arguments[6],\r\n      arguments[7]\r\n    );\r\n  }\r\n\r\n  public on(name: string, fn: Function): EventHandle {\r\n    return this.owner!.on(name, fn);\r\n  }\r\n\r\n}","export * from './events';\r\nexport * from './observer';\r\nexport * from './observer-list';","import { Events } from \"./events\";\r\nimport { Observer } from \"./observer\";\r\n\r\nexport class ObserverList extends Events {\r\n\r\n  public data: Observer[];\r\n\r\n  public index: string;\r\n  public sorted: boolean;\r\n  private _indexed: { [key: number]: Observer };\r\n\r\n  public type: string;\r\n\r\n\r\n  public get length(): number {\r\n    return this.data.length;\r\n  }\r\n\r\n\r\n  public constructor(options?: any) {\r\n    super();\r\n\r\n    options = options || {};\r\n\r\n    this.type = '';\r\n    this.data = [];\r\n    this._indexed = {};\r\n    this.sorted = options.sorted || null;\r\n    this.index = options.index || null;\r\n\r\n  }\r\n\r\n\r\n  public get(index: number): Nullable<Observer> {\r\n    if (this.index) {\r\n      return this._indexed[index] || null;\r\n    } else {\r\n      return this.data[index] || null;\r\n    }\r\n  }\r\n\r\n  public set(index: number, val: Observer): void {\r\n    if (this.index) {\r\n      this._indexed[index] = val;\r\n    } else {\r\n      this.data[index] = val;\r\n    }\r\n  }\r\n\r\n  // public indexof(item: Observer): number {\r\n  //   if (this.index) {\r\n  //     let index: number =\r\n  //       (item instanceof Observer && item.get(this.index)) || item[this.index];\r\n  //     return (this._indexed[index] && index) || null;\r\n  //   } else {\r\n  //     let ind = this.data.indexOf(item);\r\n  //     return ind !== -1 ? ind : null;\r\n  //   }\r\n  // }\r\n\r\n  // public position = function (b: any, fn: any) {\r\n  //   let l = this.data;\r\n  //   let min = 0;\r\n  //   let max = l.length - 1;\r\n  //   let cur;\r\n  //   let a, i;\r\n  //   fn = fn || this.sorted;\r\n\r\n  //   while (min <= max) {\r\n  //     cur = Math.floor((min + max) / 2);\r\n  //     a = l[cur];\r\n\r\n  //     i = fn(a, b);\r\n\r\n  //     if (i === 1) {\r\n  //       max = cur - 1;\r\n  //     } else if (i === -1) {\r\n  //       min = cur + 1;\r\n  //     } else {\r\n  //       return cur;\r\n  //     }\r\n  //   }\r\n\r\n  //   return -1;\r\n  // };\r\n\r\n  // 2分法求最近距离\r\n  public positionNextClosest(b: any, fn: any): number {\r\n    let l = this.data;\r\n    let min = 0;\r\n    let max = l.length - 1;\r\n    let cur: number = 0;\r\n    let a, i;\r\n    fn = fn || this.sorted;\r\n\r\n    if (l.length === 0) return -1;\r\n\r\n    if (fn(l[0], b) === 0) return 0;\r\n\r\n    while (min <= max) {\r\n      cur = Math.floor((min + max) / 2);\r\n      a = l[cur];\r\n\r\n      i = fn(a, b);\r\n\r\n      if (i === 1) {\r\n        max = cur - 1;\r\n      } else if (i === -1) {\r\n        min = cur + 1;\r\n      } else {\r\n        return cur;\r\n      }\r\n    }\r\n\r\n    if (fn(a, b) === 1) return cur;\r\n\r\n    if (cur! + 1 === l.length) return -1;\r\n\r\n    return cur! + 1;\r\n  };\r\n\r\n\r\n  public has(item: Observer): boolean {\r\n    // if (this.index) {\r\n    //   let index =\r\n    //     (item instanceof Observer && item.get(this.index)) || item[this.index];\r\n    //   return !!this._indexed[index];\r\n    // } else {\r\n    //   return this.data.indexOf(item) !== -1;\r\n    // }\r\n    return this.data.indexOf(item) !== -1;\r\n  };\r\n\r\n  public add(item: Observer): number {\r\n    if (this.has(item)) return -1;\r\n\r\n    // let index = this.data.length;\r\n    // if (this.index) {\r\n    //   index =\r\n    //     (item instanceof Observer && item.get(this.index)) || item[this.index];\r\n    //   this._indexed[index] = item;\r\n    // }\r\n\r\n    let pos = 0;\r\n\r\n    this.data.push(item);\r\n    pos = this.data.length - 1;\r\n\r\n    // if (this.sorted) {\r\n    //   pos = this.positionNextClosest(item);\r\n    //   if (pos !== -1) {\r\n    //     this.data.splice(pos, 0, item);\r\n    //   } else {\r\n    //     this.data.push(item);\r\n    //   }\r\n    // } else {\r\n    //   this.data.push(item);\r\n    //   pos = this.data.length - 1;\r\n    // }\r\n\r\n    this.emit('add', item, this.data.length);\r\n\r\n    return pos;\r\n  };\r\n\r\n  public move(item: Observer, pos: number): void {\r\n    let ind = this.data.indexOf(item);\r\n    this.data.splice(ind, 1);\r\n    if (pos === -1) {\r\n      this.data.push(item);\r\n    } else {\r\n      this.data.splice(pos, 0, item);\r\n    }\r\n  };\r\n\r\n  // TODO\r\n  public remove(item: Observer): void {\r\n    if (!this.has(item)) return;\r\n\r\n    let ind = this.data.indexOf(item);\r\n\r\n    // let index = ind;\r\n    // if (this.index) {\r\n    //   index =\r\n    //     (item instanceof Observer && item.get(this.index)) || item[this.index];\r\n    //   delete this._indexed[index];\r\n    // }\r\n\r\n    this.data.splice(ind, 1);\r\n\r\n    this.emit(\"remove\", item, ind);\r\n  };\r\n\r\n  public removeByKey(index: number): void {\r\n    if (this.index) {\r\n      let item = this._indexed[index];\r\n\r\n      if (!item) return;\r\n\r\n      let ind = this.data.indexOf(item);\r\n      this.data.splice(ind, 1);\r\n\r\n      delete this._indexed[index];\r\n\r\n      this.emit(\"remove\", item, ind);\r\n    } else {\r\n      if (this.data.length < index) return;\r\n\r\n      let item = this.data[index];\r\n\r\n      this.data.splice(index, 1);\r\n\r\n      this.emit(\"remove\", item, index);\r\n    }\r\n  };\r\n\r\n  // public removeBy(fn: Function) {\r\n  //   let i = this.data.length;\r\n  //   while (i--) {\r\n  //     if (!fn(this.data[i])) continue;\r\n\r\n  //     if (this.index) {\r\n  //       delete this._indexed[this.data[i][this.index]];\r\n  //     }\r\n  //     this.data.splice(i, 1);\r\n\r\n  //     this.emit(\"remove\", this.data[i], i);\r\n  //   }\r\n  // };\r\n\r\n  public clear(): void {\r\n    let items = this.data.slice(0);\r\n\r\n    this.data = [];\r\n    this._indexed = {};\r\n\r\n    let i = items.length;\r\n    while (i--) {\r\n      this.emit(\"remove\", items[i], i);\r\n    }\r\n  };\r\n\r\n  // public forEach(fn: Function) {\r\n  //   for (let i = 0; i < this.data.length; i++) {\r\n  //     fn(this.data[i], (this.index && this.data[i][this.index]) || i);\r\n  //   }\r\n  // };\r\n\r\n  // public find(fn: Function) {\r\n  //   let items = [];\r\n  //   for (let i = 0; i < this.data.length; i++) {\r\n  //     if (!fn(this.data[i])) continue;\r\n\r\n  //     let index = i;\r\n  //     if (this.index) index = this.data[i][this.index];\r\n\r\n  //     items.push([index, this.data[i]]);\r\n  //   }\r\n  //   return items;\r\n  // };\r\n\r\n  // public findOne(fn: Function) {\r\n  //   for (let i = 0; i < this.data.length; i++) {\r\n  //     if (!fn(this.data[i])) continue;\r\n\r\n  //     let index = i;\r\n  //     if (this.index) index = this.data[i][this.index];\r\n\r\n  //     return [index, this.data[i]];\r\n  //   }\r\n  //   return null;\r\n  // };\r\n\r\n  // public map(fn: Function) {\r\n  //   return this.data.map(fn);\r\n  // };\r\n\r\n  // public sort(fn: Function) {\r\n  //   this.data.sort(fn);\r\n  // };\r\n\r\n  public array() {\r\n    return this.data.slice(0);\r\n  };\r\n\r\n  // public json() {\r\n  //   let items = this.array();\r\n  //   for (let i = 0; i < items.length; i++) {\r\n  //     if (items[i] instanceof Observer) {\r\n  //       items[i] = items[i].json();\r\n  //     }\r\n  //   }\r\n  //   return items;\r\n  // };\r\n\r\n}","import { Events } from \"./events\";\r\n\r\n/**\r\n * json数据解析工具；\r\n * 要求：\r\n *  1.保存原始json数据；\r\n *  2.存储信息，根据路径快速索引到对应数据，包括数组，包括嵌套的对象，保持原始数据类型不变；\r\n *  3.插入、删除、clone数据；\r\n * \r\n */\r\nexport class Observer extends Events {\r\n\r\n  public get className(): string {\r\n    return \"Observer\";\r\n  }\r\n\r\n  public origin: any;\r\n\r\n  private SEPARATOR: string = '.';\r\n\r\n\r\n  private _destroyed: boolean;\r\n  public _path: string;\r\n  // TODO\r\n  public _keys: string[]; // 记录对象的key、value值；\r\n\r\n\r\n  public _data: { [key: string]: any }; // 采用此对象，完整记录所有值；\r\n\r\n\r\n\r\n  public _parent: any; // 当前父物体\r\n  // public _parentPath: string;\r\n  private _parentField: any;\r\n  private _parentKey: any;\r\n\r\n  private _silent: boolean;\r\n\r\n  private history!: History;\r\n  private sync!: History;\r\n\r\n  // entity, assets, components: script, 一般components, selector, history\r\n  public constructor(data: any, options?: any) {\r\n    super();\r\n\r\n    this.origin = data;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this._destroyed = false;\r\n    this._path = \"\";\r\n    this._keys = [];\r\n    this._data = {};\r\n\r\n    // array paths where duplicate entries are allowed - normally\r\n    // we check if an array already has a value before inserting it\r\n    // but if the array path is in here we'll allow it\r\n    // this._pathsWithDuplicates = null;\r\n    // if (options.pathsWithDuplicates) {\r\n    //     this._pathsWithDuplicates = {};\r\n    //     for (let i = 0; i < options.pathsWithDuplicates.length; i++) {\r\n    //         this._pathsWithDuplicates[options.pathsWithDuplicates[i]] = true;\r\n    //     }\r\n    // }\r\n\r\n    this.patchData(data);\r\n\r\n    // for (let ke in this._data) {\r\n    //   debug.log(\"key: \" + ke);\r\n    //   debug.log(this._data[ke]);\r\n    // }\r\n\r\n    // this._parent = options.parent || null;\r\n    // this._parentPath = options.parentPath || \"\";\r\n    // this._parentField = options.parentField || null;\r\n    // this._parentKey = options.parentKey || null;\r\n\r\n    this._silent = false;\r\n  }\r\n\r\n  public patchData(data: any): void {\r\n    if (typeof data !== \"object\") {\r\n      debug.warn(this.className + ': 不是正确的json对象，打印：\\n' + data);\r\n      return;\r\n    }\r\n\r\n    for (let key in data) {\r\n\r\n\r\n      if (typeof data[key] === \"object\") {\r\n        // 对象属性\r\n        // debug.log('对象属性：' + key);\r\n        // debug.log(data[key]);\r\n        // this._prepare(this, key, data[key]);\r\n        this.parserObject(key, key, data[key]);\r\n      } else {\r\n        // 一般属性\r\n        // debug.log('一般属性：' + key);\r\n        // debug.log(data[key]);\r\n        this.set(key, data[key]);\r\n        // this.set(key, data[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public set(path: string, value: any): void {\r\n    this._data[path] = value;\r\n  }\r\n\r\n\r\n  public parserObject(prefix: string, key: string, value: any): void {\r\n    // 先保存一份\r\n    this.set(prefix, value);\r\n\r\n    let path: string;\r\n    let type: string = typeof value;\r\n\r\n    if (type === \"object\" && value instanceof Array) {\r\n\r\n      for (let i = 0; i < value.length; i++) {\r\n        path = prefix + this.SEPARATOR + i.toString();\r\n        this.set(path, value[i]);\r\n        // 数组元素还是对象的情况暂时不处理\r\n      }\r\n    } else if (type === \"object\" && value instanceof Object) {\r\n\r\n      for (let key2 in value) {\r\n        if (typeof value[key2] === \"object\") {\r\n          // 递归解析\r\n          this.parserObject(prefix + this.SEPARATOR + key2, key2, value[key2]);\r\n        } else {\r\n          path = prefix + this.SEPARATOR + key2;\r\n          this.set(path, value[key2]);\r\n        }\r\n      }\r\n    } else {\r\n      debug.warn(this.className + '.parserObject, 为止数据类型:' + value);\r\n      // this.set(key, );\r\n    }\r\n  }\r\n\r\n\r\n  public has(path: string): boolean {\r\n    return this._data[path] ? true : false;\r\n  }\r\n\r\n  public get(path: string): any {\r\n    return this._data[path];\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  public propagate(evt: any) {\r\n    let that = this;\r\n    return function (path: string, arg1: any, arg2: any, arg3: any) {\r\n      if (!that._parent) return;\r\n\r\n      let key = that._parentKey;\r\n      if (!key && that._parentField instanceof Array) {\r\n        key = that._parentField.indexOf(that);\r\n\r\n        if (key === -1) return;\r\n      }\r\n\r\n      // path = that._parentPath + \".\" + key + \".\" + path;\r\n\r\n      let state;\r\n      if (that._silent) state = that._parent.silence();\r\n\r\n      that._parent.emit(path + \":\" + evt, arg1, arg2, arg3);\r\n      that._parent.emit(\"*:\" + evt, path, arg1, arg2, arg3);\r\n\r\n      if (that._silent) that._parent.silenceRestore(state);\r\n    };\r\n  }\r\n\r\n  // key => object\r\n  private _prepare(target: Observer, key: string, value: any, silent?: boolean, remote?: any) {\r\n    let self = this;\r\n    let state: boolean[];\r\n    let path = (target._path ? target._path + \".\" : \"\") + key;\r\n    let type = typeof value;\r\n\r\n    target._keys.push(key);\r\n\r\n    if (type === \"object\" && value instanceof Array) {\r\n      target._data[key] = value.slice(0); // 复制一份新的数组\r\n\r\n      // 子一层数据\r\n      for (let i = 0; i < target._data[key].length; i++) {\r\n        if (typeof target._data[key][i] === \"object\" && target._data[key][i] !== null) {\r\n          if (target._data[key][i] instanceof Array) {\r\n            target._data[key][i].slice(0);\r\n          } else {\r\n            // observer? 这里不需要递归吗？\r\n            target._data[key][i] = new Observer(\r\n              target._data[key][i],\r\n              {\r\n                parent: this,\r\n                parentPath: path,\r\n                parentField: target._data[key],\r\n                parentKey: null\r\n              }\r\n            );\r\n          }\r\n        } else {\r\n          state = this.silence();\r\n          this.emit(path + \".\" + i + \":set\", target._data[key][i], null, remote);\r\n          this.emit(\"*:set\", path + \".\" + i, target._data[key][i], null, remote);\r\n          this.silenceRestore(state);\r\n        }\r\n      }\r\n\r\n      if (silent) state = this.silence();\r\n\r\n      this.emit(path + \":set\", target._data[key], null, remote);\r\n      this.emit(\"*:set\", path, target._data[key], null, remote);\r\n\r\n      if (silent) this.silenceRestore(state!);\r\n    } else if (type === \"object\" && value instanceof Object) {\r\n      if (typeof target._data[key] !== \"object\") {\r\n        target._data[key] = {\r\n          _path: path,\r\n          _keys: [],\r\n          _data: {}\r\n        };\r\n      }\r\n\r\n      for (let i in value) {\r\n        if (typeof value[i] === \"object\") {\r\n          // 递归\r\n          this._prepare(target._data[key], i, value[i], true, remote);\r\n        } else {\r\n          state = this.silence();\r\n\r\n          target._data[key]._data[i] = value[i];\r\n          target._data[key]._keys.push(i);\r\n\r\n          this.emit(path + \".\" + i + \":set\", value[i], null, remote);\r\n          this.emit(\"*:set\", path + \".\" + i, value[i], null, remote);\r\n\r\n          this.silenceRestore(state);\r\n        }\r\n      }\r\n\r\n      if (silent) state = this.silence();\r\n\r\n      // passing undefined as valueOld here\r\n      // but we should get the old value to be consistent\r\n      this.emit(path + \":set\", value, undefined, remote);\r\n      this.emit(\"*:set\", path, value, undefined, remote);\r\n\r\n      if (silent) this.silenceRestore(state!);\r\n    } else {\r\n      if (silent) state = this.silence();\r\n\r\n      target._data[key] = value;\r\n\r\n      this.emit(path + \":set\", value, undefined, remote);\r\n      this.emit(\"*:set\", path, value, undefined, remote);\r\n\r\n      if (silent) this.silenceRestore(state!);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public silence(): boolean[] {\r\n    this._silent = true;\r\n\r\n    // history hook to prevent array values to be recorded\r\n    let historyState: boolean =\r\n      this.history !== undefined && this.history.enabled !== undefined;\r\n    if (historyState) this.history.enabled = false;\r\n\r\n    // sync hook to prevent array values to be recorded as array root already did\r\n    let syncState: boolean =\r\n      this.sync !== undefined && this.sync.enabled !== undefined;\r\n    if (syncState) this.sync.enabled = false;\r\n\r\n    return [historyState, syncState];\r\n  }\r\n\r\n  public silenceRestore(state: boolean[]): void {\r\n    this._silent = false;\r\n\r\n    if (state[0]) this.history.enabled = true;\r\n\r\n    if (state[1]) this.sync.enabled = true;\r\n  }\r\n\r\n  // public has(path: string): boolean {\r\n  //   let keys = path.split(\".\");\r\n  //   let node = this;\r\n  //   for (let i = 0, len = keys.length; i < len; i++) {\r\n  //     if (node === undefined) return false;\r\n  //     if (node._data) {\r\n  //       node = node._data[keys[i]];\r\n  //     } else {\r\n  //       // node = node[keys[i]];\r\n  //     }\r\n  //   }\r\n  //   return node !== undefined;\r\n  // }\r\n\r\n  // public get(path: string, raw?: boolean): Nullable<Observer> {\r\n  //   let keys = path.split('.');\r\n  //   let node = this;\r\n  //   for (let i = 0; i < keys.length; i++) {\r\n  //     if (node === undefined)\r\n  //       return null;\r\n\r\n  //     if (node._data) {\r\n  //       node = node._data[keys[i]];\r\n  //     } else {\r\n  //       // node = node[keys[i]];\r\n  //     }\r\n  //   }\r\n\r\n  //   if (raw !== undefined && raw)\r\n  //     return node;\r\n\r\n  //   if (node === null) {\r\n  //     return null;\r\n  //   } else {\r\n  //     return this.json(node);\r\n  //   }\r\n  // }\r\n\r\n  // public move(path: string, indOld: number, indNew: number, silent: boolean, remote: boolean): void {\r\n  //   let keys = path.split('.');\r\n  //   let key = keys[keys.length - 1];\r\n  //   let node = this;\r\n  //   let obj = this;\r\n\r\n  //   for (let i = 0; i < keys.length - 1; i++) {\r\n  //     if (node instanceof Array) {\r\n  //       node = node[parseInt(keys[i], 10)];\r\n  //       if (node instanceof Observer) {\r\n  //         path = keys.slice(i + 1).join('.');\r\n  //         obj = node;\r\n  //       }\r\n  //     } else if (node._data && node._data.hasOwnProperty(keys[i])) {\r\n  //       node = node._data[keys[i]];\r\n  //     } else {\r\n  //       return;\r\n  //     }\r\n  //   }\r\n\r\n  //   if (!node._data || !node._data.hasOwnProperty(key) || !(node._data[key] instanceof Array))\r\n  //     return;\r\n\r\n  //   let arr = node._data[key];\r\n\r\n  //   if (arr.length < indOld || arr.length < indNew || indOld === indNew)\r\n  //     return;\r\n\r\n  //   let value = arr[indOld];\r\n\r\n  //   arr.splice(indOld, 1);\r\n\r\n  //   if (indNew === -1)\r\n  //     indNew = arr.length;\r\n\r\n  //   arr.splice(indNew, 0, value);\r\n\r\n  //   if (!(value instanceof Observer))\r\n  //     value = obj.json(value);\r\n\r\n  //   let state: boolean[];\r\n  //   if (silent)\r\n  //     state = obj.silence();\r\n\r\n  //   obj.emit(path + ':move', value, indNew, indOld, remote);\r\n  //   obj.emit('*:move', path, value, indNew, indOld, remote);\r\n\r\n  //   if (silent)\r\n  //     obj.silenceRestore(state!);\r\n\r\n  //   return;\r\n  // };\r\n\r\n  // 将json对象复制解析出来\r\n  public patch(data: any): void {\r\n    if (typeof data !== \"object\") {\r\n      debug.warn(this.className + ': 不是正确的json对象，打印：\\n' + data);\r\n      return;\r\n    }\r\n\r\n    for (let key in data) {\r\n      if (typeof data[key] === \"object\" && !this._data.hasOwnProperty(key)) {\r\n        // 对象属性\r\n        debug.log('对象属性：' + key);\r\n        debug.log(data[key]);\r\n        // this._prepare(this, key, data[key]);\r\n      } else if (this._data[key] !== data[key]) {\r\n        // 一般属性\r\n        debug.log('一般属性：' + key);\r\n        debug.log(data[key]);\r\n        // this.set(key, data[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n  public set2(path: string, value: any, silent?: boolean, remote?: boolean, force?: boolean): void {\r\n    var keys = path.split('.');\r\n    var length = keys.length;\r\n    var key = keys[length - 1];\r\n    var node: any = this;\r\n    var nodePath = '';\r\n    var obj: any = this;\r\n    var state;\r\n\r\n    for (var i = 0; i < length - 1; i++) {\r\n      if (node instanceof Array) {\r\n        // TODO: 这是啥啊？\r\n        // node = node[keys[i]];\r\n\r\n        if (node instanceof Observer) {\r\n          path = keys.slice(i + 1).join('.');\r\n          obj = node;\r\n        }\r\n      } else {\r\n        if (i < length && typeof (node._data[keys[i]]) !== 'object') {\r\n          if (node._data[keys[i]])\r\n            obj.unset((node.__path ? node.__path + '.' : '') + keys[i]);\r\n\r\n          node._data[keys[i]] = {\r\n            _path: path,\r\n            _keys: [],\r\n            _data: {}\r\n          };\r\n          node._keys.push(keys[i]);\r\n        }\r\n\r\n        if (i === length - 1 && node.__path)\r\n          nodePath = node.__path + '.' + keys[i];\r\n\r\n        node = node._data[keys[i]];\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // public json(target?: Observer): Observer {\r\n  //   let obj: { [key: string]: any } = {};\r\n  //   let node = target === undefined ? this : target;\r\n  //   let len, nlen;\r\n\r\n  //   if (node instanceof Object && node._keys) {\r\n  //     len = node._keys.length;\r\n  //     for (let i = 0; i < len; i++) {\r\n  //       let key = node._keys[i];\r\n  //       let value = node._data[key];\r\n  //       let type = typeof (value);\r\n\r\n  //       if (type === 'object' && (value instanceof Array)) {\r\n  //         obj[key] = value.slice(0);\r\n\r\n  //         nlen = obj[key].length;\r\n  //         for (let n = 0; n < nlen; n++) {\r\n  //           if (typeof (obj[key][n]) === 'object')\r\n  //             obj[key][n] = this.json(obj[key][n]);\r\n  //         }\r\n  //       } else if (type === 'object' && (value instanceof Object)) {\r\n  //         obj[key] = this.json(value);\r\n  //       } else {\r\n  //         obj[key] = value;\r\n  //       }\r\n  //     }\r\n  //   } else {\r\n  //     if (node === null) {\r\n  //       return null;\r\n  //     } else if (typeof (node) === 'object' && (node instanceof Array)) {\r\n  //       obj = node.slice(0);\r\n\r\n  //       len = obj.length;\r\n  //       for (let n = 0; n < len; n++) {\r\n  //         obj[n] = this.json(obj[n]);\r\n  //       }\r\n  //     } else if (typeof (node) === 'object') {\r\n  //       for (let key in node) {\r\n  //         if (node.hasOwnProperty(key))\r\n  //           obj[key] = node[key];\r\n  //       }\r\n  //     } else {\r\n  //       obj = node;\r\n  //     }\r\n  //   }\r\n  //   return obj;\r\n  // }\r\n\r\n  // public forEach(fn: Function, target: Observer, path: string): void {\r\n  //   let node = target || this;\r\n  //   path = path || '';\r\n\r\n  //   for (let i = 0; i < node._keys.length; i++) {\r\n  //     let key = node._keys[i];\r\n  //     let value = node._data[key];\r\n  //     let type = (this.schema && this.schema.has(path + key) && this.schema.get(path + key).type.name.toLowerCase()) || typeof (value);\r\n\r\n  //     if (type === 'object' && (value instanceof Array)) {\r\n  //       fn(path + key, 'array', value, key);\r\n  //     } else if (type === 'object' && (value instanceof Object)) {\r\n  //       fn(path + key, 'object', value, key);\r\n  //       this.forEach(fn, value, path + key + '.');\r\n  //     } else {\r\n  //       fn(path + key, type, value, key);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  public destroy(): void {\r\n    if (this._destroyed) return;\r\n    this._destroyed = true;\r\n    this.emit(\"destroy\");\r\n    this.unbind();\r\n  }\r\n}\r\n\r\nexport interface History {\r\n  enabled?: boolean;\r\n}\r\n","import { Editor, Layout, Viewport, Hierarchy, Assets, InitializeBefore, InitializeAfter, Debug } from './editor';\r\nimport { Element, Canvas } from './ui';\r\nimport { VeryEngine } from './engine';\r\n\r\nexport * from './index';\r\n\r\n// 添加到全局变量\r\nwindow.editor = new Editor();\r\n\r\n// 全局注册debug类\r\nwindow.debug = new Debug();\r\n\r\n// 初始化全局信息类\r\nlet initialize: InitializeBefore = new InitializeBefore();\r\n\r\n// 后期可以修改为load、start等string表示的事件，通过event来实现\r\n// 打开project或者scene，1对多的关系，记录一下默认的scene（上一次打开的scene），一开始就打开默认的scene；\r\n// 当前project的编辑器设置，如摄像机等，各种设置数据；\r\n// assets数据；\r\n// scene的数据，可能会多个，当前scene，不同scene之间还有顺序关系；\r\n\r\n// 整体布局\r\nlet layout = new Layout();\r\nlayout.init();\r\n\r\n// 编辑视窗\r\nlet viewport = new Viewport();\r\nVeryEngine.viewport = viewport;\r\n\r\n// 层级菜单\r\nlet hierarchy = new Hierarchy();\r\n\r\n// 资源菜单\r\nlet assets = new Assets();\r\n\r\n// 初始化全局信息类\r\nlet initializeAfter: InitializeAfter = new InitializeAfter();\r\n\r\n// 加载资源\r\n\r\n// 关联资源\r\n\r\n\r\n\r\n/* TEST\r\neditor.once('load', () => {\r\n  console.log('once');\r\n});\r\n\r\neditor.on('array', () => {\r\n  console.log('1');\r\n});\r\neditor.on('array', () => {\r\n  console.log('2');\r\n});\r\neditor.on('array', () => {\r\n  console.log('3');\r\n});\r\n\r\neditor.on('array', (args0: any, args1: any) => {\r\n  console.log(args0 + ' +++ ' +  args1);\r\n});\r\n\r\neditor.method('method', (a: any) => {\r\n  console.log(a);\r\n});\r\n\r\n\r\neditor.emit('load');\r\neditor.emit('load');\r\n\r\neditor.emit('array', 'abc', 'dfg');\r\neditor.emit('array');\r\n\r\neditor.call('method', 123);\r\n*/\r\n\r\n// let parent: HTMLElement = document.getElementById('test')!;\r\n\r\n// console.log('children');\r\n\r\n// console.log(parent);\r\n// console.log(parent.childNodes);\r\n\r\n// for(let i: number = 0; i < parent.children.length; i++) {\r\n//   (<HTMLElement>(parent.children[i])).ui = new Element();\r\n//   console.warn((<HTMLElement>(parent.children[i])).ui === undefined);\r\n//   console.log((<HTMLElement>(parent.children[i])).ui);\r\n//   (<HTMLElement>(parent.children[i])).ui.destroy();\r\n//   console.log(parent.children[i] instanceof HTMLElement);\r\n// }\r\n\r\n// console.log('childNodes');\r\n\r\n// for(let i: number = 0; i < parent.childNodes.length; i++) {\r\n//   console.log(parent.childNodes[i] instanceof HTMLElement);\r\n// }\r\n","import { Element } from \"./element\";\r\n\r\nexport class Bubble extends Element {\r\n\r\n\r\n  public constructor(id?: string, tabindex?: number) {\r\n    super();\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-bubble');\r\n\r\n    let pulseCircle: HTMLDivElement = document.createElement('div');\r\n    pulseCircle.classList.add('pulse');\r\n    this.element.appendChild(pulseCircle);\r\n\r\n    let centerCircle: HTMLDivElement = document.createElement('div');\r\n    centerCircle.classList.add('center');\r\n    this.element.appendChild(centerCircle);\r\n\r\n    this.on('click', this._onClick);\r\n\r\n    if (id !== undefined)\r\n      this.element.id = id;\r\n\r\n    if (tabindex !== undefined)\r\n      this.element.setAttribute('tabindex', tabindex.toString());\r\n  }\r\n\r\n  private _onClick(): void {\r\n    if (this.class!.contains('active')) {\r\n      this.deactivate();\r\n    } else {\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  public activate(): void {\r\n    this.class!.add('active');\r\n    this.emit('activate');\r\n  }\r\n\r\n  public deactivate(): void {\r\n    this.class!.remove('active');\r\n    this.emit('deactivate');\r\n  }\r\n\r\n  public position(x: number, y: number) {\r\n    let rect = this.element!.getBoundingClientRect();\r\n\r\n    let left = x || 0;\r\n    let top = y || 0;\r\n\r\n    this.element!.style.left = (typeof left === 'number') ? left + 'px' : left;\r\n    this.element!.style.top = (typeof top === 'number') ? top + 'px' : top;\r\n  }\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class Button extends Element {\r\n\r\n\r\n  private _text: string;\r\n  public get text(): string {\r\n    return this._text;\r\n  }\r\n  public set text(val: string) {\r\n    if (this._text === val) return;\r\n    this._text = val;\r\n    this.element!.innerHTML = this._text;\r\n  }\r\n\r\n\r\n  public constructor(text?: string) {\r\n    super();\r\n\r\n    this._text = text ? text : '';\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-button');\r\n    this.element.innerHTML = this._text;\r\n    this.element.ui = this;\r\n    this.element.tabIndex = 0;\r\n\r\n    // space > click\r\n    // 鼠标抬起时完成keydown，才会触发；\r\n    this.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n    this.on('click', this._onClick);\r\n    // this.element.addEventListener('mousedown', this._onClick.bind(this));\r\n\r\n  }\r\n\r\n\r\n  private _onKeyDown(evt: KeyboardEvent): void {\r\n    // console.log('c');\r\n    if (evt.keyCode === 27)  // 27: Escape\r\n      return (<HTMLElement>evt.target).blur();\r\n\r\n    if (evt.keyCode !== 32 || this.disabled)  // 32: Space\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    this.emit('click');\r\n  }\r\n\r\n  private _onClick(): void {\r\n    this.element!.blur();\r\n  };\r\n\r\n  // TODO\r\n  public _onLinkChange(value: any): void {\r\n    (<HTMLButtonElement>this.element).value = value;\r\n  };\r\n\r\n\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class Canvas extends Element {\r\n\r\n  public get width(): number {\r\n    return this.element ? (<HTMLCanvasElement>this.element).width : 0;\r\n  }\r\n  public set width(val: number) {\r\n    if (!this.element) return;\r\n    if ((<HTMLCanvasElement>this.element).width === val) return;\r\n\r\n    (<HTMLCanvasElement>this.element).width = val;\r\n    this.emit(\"resize\", (<HTMLCanvasElement>this.element).width, (<HTMLCanvasElement>this.element).height);\r\n  }\r\n\r\n  public get height(): number {\r\n    return this.element ? (<HTMLCanvasElement>this.element).height : 0;\r\n  }\r\n  public set height(val: number) {\r\n    if (!this.element) return;\r\n    if ((<HTMLCanvasElement>this.element).height === val) return;\r\n\r\n    (<HTMLCanvasElement>this.element).height = val;\r\n    this.emit(\"resize\", (<HTMLCanvasElement>this.element).width, (<HTMLCanvasElement>this.element).height);\r\n  }\r\n\r\n  public constructor(id?: string) {\r\n    super();\r\n\r\n    this.element = document.createElement('canvas');\r\n    this.element.classList.add('ui-canvas');\r\n\r\n    if (id !== undefined) this.element.id = id;\r\n\r\n    this.element.onselectstart = this.onselectstart;\r\n\r\n  }\r\n\r\n  private onselectstart(): boolean {\r\n    return false;\r\n  };\r\n\r\n  public resize(width: number, height: number): void {\r\n    if ((<HTMLCanvasElement>this.element).width === width && (<HTMLCanvasElement>this.element).height === height) return;\r\n\r\n    (<HTMLCanvasElement>this.element).width = width;\r\n    (<HTMLCanvasElement>this.element).height = height;\r\n    this.emit(\"resize\", (<HTMLCanvasElement>this.element).width, (<HTMLCanvasElement>this.element).height);\r\n  };\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class Checkbox extends Element {\r\n\r\n\r\n  private _text: string;\r\n\r\n  public get value(): boolean {\r\n    if (this._link) {\r\n      return this._link.get(this.path);\r\n    } else {\r\n      return this.element!.classList.contains('checked');\r\n    }\r\n  }\r\n  public set value(val: boolean) {\r\n    if (this._link) {\r\n      this._link.set(this.path, val);\r\n    } else {\r\n      if (this.element!.classList.contains('checked') !== val)\r\n        this._onLinkChange(val);\r\n    }\r\n  }\r\n\r\n  public constructor(text?: string) {\r\n    super();\r\n\r\n    this._text = text || '';\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-checkbox', 'noSelect');\r\n    this.element.tabIndex = 0;\r\n\r\n    this.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n\r\n    this.on('click', this._onClick);\r\n    this.on('change', this._onChange);\r\n\r\n  }\r\n\r\n  private _onClick(): void {\r\n    this.value = !this.value;\r\n    this.element!.blur();\r\n  }\r\n\r\n  private _onChange(): void {\r\n    if (!this.renderChanges)\r\n      return;\r\n\r\n    this.flash();\r\n  }\r\n\r\n  private _onKeyDown(evt: KeyboardEvent): void {\r\n    if (evt.keyCode === 27)  // Escape\r\n      return (<HTMLElement>evt.target).blur();\r\n\r\n    // Space\r\n    if (evt.keyCode !== 32 || this.disabled)\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    this.value = !this.value;\r\n  }\r\n\r\n  // TODO\r\n  public _onLinkChange(value: boolean) {\r\n    if (value === null) {\r\n      this.element!.classList.remove('checked');\r\n      this.element!.classList.add('null');\r\n    } else if (value) {\r\n      this.element!.classList.add('checked');\r\n      this.element!.classList.remove('null');\r\n    } else {\r\n      this.element!.classList.remove('checked', 'null');\r\n    }\r\n    this.emit('change', value);\r\n  }\r\n\r\n\r\n}","import { ContainerElement } from \"./container-element\";\r\n\r\nexport class Code extends ContainerElement {\r\n\r\n  public get text(): string {\r\n    return this.element!.textContent || '';\r\n  }\r\n  public set text(val: string) {\r\n    this.element!.textContent = val;\r\n  }\r\n\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    this.element = document.createElement('pre');\r\n    this.element.classList.add('ui-code');\r\n\r\n  }\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class ColorField extends Element {\r\n\r\n  public elementColor: HTMLElement;\r\n\r\n  private _values: number[];\r\n\r\n  public evtLinkChannels: EventHandle[];\r\n\r\n  private _channels: number;\r\n  public get channels(): number {\r\n    return this._channels;\r\n  }\r\n  public set channels(val: number) {\r\n    if (this._channels === val)\r\n      return;\r\n\r\n    this._channels = val;\r\n    this.emit('channels', this._channels);\r\n  }\r\n\r\n  public get r(): number {\r\n    if (this._link) {\r\n      return Math.floor(this._link.get(this.path + '.0') * 255);\r\n    } else {\r\n      return this._values[0];\r\n    }\r\n  }\r\n  public set r(val: number) {\r\n    val = Math.min(0, Math.max(255, val));\r\n\r\n    if (this._values[0] === val)\r\n      return;\r\n\r\n    this._values[0] = val;\r\n    this.emit('r', this._values[0]);\r\n    this.emit('change', this._values.slice(0, this._channels));\r\n  }\r\n\r\n  public get g(): number {\r\n    if (this._link) {\r\n      return Math.floor(this._link.get(this.path + '.1') * 255);\r\n    } else {\r\n      return this._values[1];\r\n    }\r\n  }\r\n  public set g(val: number) {\r\n    val = Math.min(0, Math.max(255, val));\r\n\r\n    if (this._values[1] === val)\r\n      return;\r\n\r\n    this._values[1] = val;\r\n\r\n    if (this._channels >= 2) {\r\n      this.emit('g', this._values[1]);\r\n      this.emit('change', this._values.slice(0, this._channels));\r\n    }\r\n  }\r\n\r\n  public get b(): number {\r\n    if (this._link) {\r\n      return Math.floor(this._link.get(this.path + '.2') * 255);\r\n    } else {\r\n      return this._values[2];\r\n    }\r\n  }\r\n  public set b(val: number) {\r\n    val = Math.min(0, Math.max(255, val));\r\n\r\n    if (this._values[2] === val)\r\n      return;\r\n\r\n    this._values[2] = val;\r\n\r\n    if (this._channels >= 3) {\r\n      this.emit('b', this._values[2]);\r\n      this.emit('change', this._values.slice(0, this._channels));\r\n    }\r\n  }\r\n\r\n  public get a(): number {\r\n    if (this._link) {\r\n      return Math.floor(this._link.get(this.path + '.3') * 255);\r\n    } else {\r\n      return this._values[3];\r\n    }\r\n  }\r\n  public set a(val: number) {\r\n    val = Math.min(0, Math.max(255, val));\r\n\r\n    if (this._values[3] === val)\r\n      return;\r\n\r\n    this._values[3] = val;\r\n\r\n    if (this._channels >= 4) {\r\n      this.emit('a', this._values[3]);\r\n      this.emit('change', this._values.slice(0, this._channels));\r\n    }\r\n  }\r\n\r\n  public get hex(): string {\r\n    var values = this._values;\r\n\r\n    if (this._link) {\r\n      values = this._link.get(this.path).map(function (channel: number) {\r\n        return Math.floor(channel * 255);\r\n      });\r\n    }\r\n\r\n    var hex = '';\r\n    for (var i = 0; i < this._channels; i++) {\r\n      hex += ('00' + values[i].toString(16)).slice(-2);\r\n    }\r\n    return hex;\r\n  }\r\n  public set hex(val: string) {\r\n    console.log('todo color-field: ' + val);\r\n  }\r\n\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.tabIndex = 0;\r\n    this.element.classList.add('ui-color-field', 'rgb');\r\n\r\n    this.elementColor = document.createElement('span');\r\n    this.elementColor.classList.add('color');\r\n    this.element.appendChild(this.elementColor);\r\n\r\n    this._channels = 3;\r\n    this._values = [0, 0, 0, 0];\r\n\r\n    // space > click\r\n    this.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n\r\n    // render color back\r\n    this.on('change', this._onChange);\r\n\r\n    // link to channels\r\n    this.evtLinkChannels = [];\r\n    this.on('link', this._onLink);\r\n    this.on('unlink', this._onUnlink);\r\n\r\n  }\r\n\r\n\r\n  private _onKeyDown(evt: KeyboardEvent) {\r\n    if (evt.keyCode === 27) // ESC按键\r\n      return this.element!.blur();\r\n\r\n    if (evt.keyCode !== 13 || this.disabled)  // Enter回车键\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    this.emit('click');\r\n  };\r\n\r\n  private _onChange(color: any) {\r\n    if (this._channels === 1) {\r\n      this.elementColor.style.backgroundColor = 'rgb(' + [this.r, this.r, this.r].join(',') + ')';\r\n    } else if (this._channels === 3) {\r\n      this.elementColor.style.backgroundColor = 'rgb(' + this._values.slice(0, 3).join(',') + ')';\r\n    } else if (this._channels === 4) {\r\n      var rgba = this._values.slice(0, 4);\r\n      rgba[3] /= 255;\r\n      this.elementColor.style.backgroundColor = 'rgba(' + rgba.join(',') + ')';\r\n    } else {\r\n      console.log('unknown channels', color);\r\n    }\r\n  };\r\n\r\n  private _onLink(): void {\r\n    let that = this;\r\n    for (var i = 0; i < 4; i++) {\r\n      this.evtLinkChannels[i] = this._link!.on(this.path + '.' + i + ':set', function (value: any) {\r\n        that._setValue(that._link!.get(that.path));\r\n      }.bind(that));\r\n    }\r\n  };\r\n\r\n  private _onUnlink(): void {\r\n    for (var i = 0; i < this.evtLinkChannels.length; i++)\r\n      this.evtLinkChannels[i].unbind();\r\n\r\n    this.evtLinkChannels = [];\r\n  };\r\n\r\n  public _onLinkChange(value: number[]) {\r\n    if (!value)\r\n      return;\r\n\r\n    this._setValue(value);\r\n  };\r\n\r\n\r\n  private _setValue(value: number[]) {\r\n    var changed = false;\r\n\r\n    if (!value)\r\n      return;\r\n\r\n    if (value.length !== this._channels) {\r\n      changed = true;\r\n      this.channels = value.length;\r\n    }\r\n\r\n    for (var i = 0; i < this._channels; i++) {\r\n      if (this._values[i] === Math.floor(value[i]))\r\n        continue;\r\n\r\n      changed = true;\r\n      this._values[i] = Math.floor(value[i]);\r\n    }\r\n\r\n    if (changed)\r\n      this.emit('change', this._values.slice(0, this._channels));\r\n  };\r\n\r\n\r\n}","import { Element } from './element';\r\n\r\nexport class ContainerElement extends Element {\r\n\r\n\r\n  private _innerElement: Nullable<HTMLElement> = null;\r\n  public get innerElement(): Nullable<HTMLElement> {\r\n    return this._innerElement;\r\n  }\r\n  public set innerElement(val: Nullable<HTMLElement>) {\r\n    if (this._innerElement) {\r\n      this._observer.disconnect();\r\n    }\r\n\r\n    this._innerElement = val;\r\n\r\n    this._observer.observe(this._innerElement!, this._observerOptions);\r\n  }\r\n\r\n  private _observerChanged: boolean = false;\r\n\r\n  private _observer: MutationObserver;\r\n\r\n  private _observerOptions: {} = {\r\n    childList: true,\r\n    attributes: true,\r\n    characterData: false,\r\n    subtree: true,\r\n    attributeOldValue: false,\r\n    characterDataOldValue: false\r\n  };\r\n\r\n\r\n  public get flexible(): boolean {\r\n    return this.element ? this.element.classList.contains('flexible') : false;\r\n  }\r\n  public set flexible(val: boolean) {\r\n    if (!this.element || this.element.classList.contains('flexible') === val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.element.classList.add('flexible');\r\n    } else {\r\n      this.element.classList.remove('flexible');\r\n    }\r\n  }\r\n\r\n  public get flex(): boolean {\r\n    return this.element ? this.element.classList.contains('flex') : false;\r\n  }\r\n  public set flex(val: boolean) {\r\n    if (!this.element || this.element.classList.contains('flex') === val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.element.classList.add('flex');\r\n    } else {\r\n      this.element.classList.remove('flex');\r\n    }\r\n  }\r\n\r\n  public get flexDirection(): string {\r\n    return this._innerElement ? (this._innerElement!.style.flexDirection || '') : '';\r\n  }\r\n  public set flexDirection(val: string) {\r\n    if (this._innerElement) {\r\n      this._innerElement.style.flexDirection = val;\r\n      this._innerElement.style.webkitFlexDirection = val!;\r\n    }\r\n  }\r\n\r\n  public get flexWrap(): string {\r\n    return this._innerElement ? (this._innerElement!.style.flexWrap || '') : '';\r\n  }\r\n  public set flexWrap(val: string) {\r\n    if (this._innerElement) {\r\n      this._innerElement.style.flexWrap = val;\r\n      this._innerElement.style.webkitFlexWrap = val!;\r\n    }\r\n  }\r\n\r\n  public get flexGrow(): string {\r\n    return this.element ? (this.element.style.flexGrow || '') : '';\r\n  }\r\n  public set flexGrow(val: string) {\r\n    if (!!val) this.flex = true;\r\n\r\n    if (this.element) {\r\n      this.element.style.flexGrow = val;\r\n      this.element.style.webkitFlexGrow = val!;\r\n    }\r\n\r\n    if (this._innerElement) {\r\n      this._innerElement.style.flexGrow = val;\r\n      this._innerElement.style.webkitFlexGrow = val!;\r\n    }\r\n  }\r\n\r\n  public get flexShrink(): string {\r\n    return this.element ? (this.element.style.flexShrink || '') : '';\r\n  }\r\n  public set flexShrink(val: string) {\r\n    if (!!val) this.flex = true;\r\n\r\n    if (this.element) {\r\n      this.element.style.flexShrink = val;\r\n      this.element.style.webkitFlexShrink = val!;\r\n    }\r\n\r\n    if (this._innerElement) {\r\n      this._innerElement.style.flexShrink = val;\r\n      this._innerElement.style.webkitFlexShrink = val!;\r\n    }\r\n  }\r\n\r\n  public get scroll(): boolean {\r\n    return this.class ? this.class.contains('scrollable') : false;\r\n  }\r\n  public set scroll(val: boolean) {\r\n    if (this.class) this.class.add('scrollable');\r\n  }\r\n\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    let self = this;\r\n\r\n    let observerTimeout = function() {\r\n      self._observerChanged = false;\r\n      self.emit('nodesChanged');\r\n      // console.warn('nodesChanged');\r\n    };\r\n\r\n    this._observer = new MutationObserver(function () {\r\n      if (self._observerChanged)\r\n        return;\r\n      self._observerChanged = true;\r\n      setTimeout(observerTimeout, 0);\r\n    });\r\n\r\n  }\r\n\r\n  public append(element: HTMLElement | Element): void {\r\n    let html: boolean = element instanceof HTMLElement;\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n    this._innerElement!.appendChild(node);\r\n\r\n    if (!html) {\r\n      (<Element>element).parent = this;\r\n      this.emit('append', element);\r\n    }\r\n  }\r\n\r\n\r\n  public appendBefore(element: HTMLElement | Element, reference: HTMLElement | Element | null): void {\r\n    let html: boolean = (element instanceof HTMLElement);\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n\r\n    if (reference instanceof Element) reference = reference.element;\r\n\r\n    this._innerElement!.insertBefore(node, reference);\r\n\r\n    if (!html) {\r\n      (<Element>element).parent = this;\r\n      this.emit('append', element);\r\n    }\r\n  };\r\n\r\n  public appendAfter(element: HTMLElement | Element, reference: HTMLElement | Element | null): void {\r\n    let html: boolean = (element instanceof HTMLElement);\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n\r\n    if (reference instanceof Element) reference = reference.element;\r\n\r\n    if (reference) {\r\n      this._innerElement!.insertBefore(node, reference.nextSibling);\r\n    } else {\r\n      this._innerElement!.appendChild(node);\r\n    }\r\n\r\n    if (!html) {\r\n      (<Element>element).parent = this;\r\n      this.emit('append', element);\r\n    }\r\n  };\r\n\r\n\r\n  public prepend(element: HTMLElement | Element): void {\r\n    let first = this._innerElement!.firstChild;\r\n    let html: boolean = (element instanceof HTMLElement);\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n\r\n    if (first) {\r\n      this._innerElement!.insertBefore(node, first);\r\n    } else {\r\n      this._innerElement!.appendChild(node);\r\n    }\r\n\r\n    if (!html) {\r\n      (<Element>element).parent = this;\r\n      this.emit('append', element);\r\n    }\r\n  };\r\n\r\n  public remove(element: HTMLElement | Element): void {\r\n    let html: boolean = (element instanceof HTMLElement);\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n\r\n    if (!node.parentElement || node.parentElement !== this._innerElement)\r\n      return;\r\n\r\n    this._innerElement.removeChild(node);\r\n\r\n    if (!html) {\r\n      (<Element>element).parent = null;\r\n      this.emit('remove', element);\r\n    }\r\n  };\r\n\r\n  // TODO：怕不对\r\n  public clear(): void {\r\n    console.log('clear');\r\n    let node: HTMLElement;\r\n    this._observer.disconnect();\r\n    // console.log(this._innerElement);\r\n    let i: number = this._innerElement!.children.length;\r\n    while (i--) {\r\n      node = <HTMLElement>(this._innerElement!.children[i]);\r\n\r\n      if (!node.ui)\r\n        continue;\r\n\r\n      node.ui.destroy();\r\n    }\r\n    this._innerElement!.innerHTML = '';\r\n\r\n    this._observer.observe(this._innerElement!, this._observerOptions);\r\n  };\r\n\r\n\r\n}","import { Events, EventHandle } from \"../lib\";\r\nimport { Link } from \"./link\";\r\n\r\nexport class Element extends Events {\r\n\r\n  private _parent: Nullable<Element> = null;\r\n  private _destroyed: boolean = false;\r\n\r\n  // TODO\r\n  public _link: Nullable<Link> = null;\r\n  /*\r\n    on get set .schema.has .schema.get .history .history.combine .entity\r\n  */\r\n  private _linkOnSet: Nullable<EventHandle> = null;\r\n  private _linkOnUnset: Nullable<EventHandle> = null;\r\n  public path: string = '';\r\n\r\n  public renderChanges = false;\r\n  // TODO\r\n  // // render changes only from next ticks\r\n  // setTimeout(function() {\r\n  //   if (self.renderChanges === null) self.renderChanges = true;\r\n  // }, 0);\r\n\r\n  public disabledClick = false;\r\n  private _disabled = false;\r\n  private _disabledParent = false;\r\n\r\n  private _evtParentDestroy: Nullable<EventHandle> = null;\r\n  private _evtParentDisable: Nullable<EventHandle> = null;\r\n  private _evtParentEnable: Nullable<EventHandle> = null;\r\n\r\n  // public get selected(): boolean {\r\n  //   return this.class!.contains('selected');\r\n  // }\r\n\r\n  // HTMLElement \r\n  private _element: Nullable<HTMLElement> = null;\r\n  // public innerElement: Nullable<HTMLElement> = null;\r\n  public get element(): Nullable<HTMLElement> {\r\n    return this._element;\r\n  }\r\n  public set element(val: Nullable<HTMLElement>) {\r\n    if (this._element) return;\r\n\r\n    this._element = val;\r\n    this._element!.ui = this;\r\n\r\n    if (!this._element) return;\r\n\r\n    let self = this;\r\n    // click 事件\r\n    this._element.addEventListener('click', (evt) => {\r\n      if (self.disabled && !self.disabledClick) return;\r\n      self.emit(\"click\", evt);\r\n    }, false);\r\n    // hover 事件\r\n    this._element.addEventListener('mouseover', (evt) => {\r\n      self.emit('hover', evt);\r\n    }, false);\r\n    // blur 事件，mouse out\r\n    this._element.addEventListener('mouseout', (evt) => {\r\n      self.emit('blur', evt);\r\n    }, false);\r\n\r\n    // if (!this.innerElement) this.innerElement = this._element;\r\n  }\r\n\r\n  public get parent(): Nullable<Element> {\r\n    return this._parent;\r\n  }\r\n  public set parent(val: Nullable<Element>) {\r\n    if (this._parent) {\r\n      this._parent = null;\r\n      this._evtParentDestroy!.unbind();\r\n      this._evtParentDisable!.unbind();\r\n      this._evtParentEnable!.unbind();\r\n    }\r\n\r\n    if (val) {\r\n      this._parent = val;\r\n      this._evtParentDestroy = this._parent.once(\r\n        \"destroy\",\r\n        this._parentDestroy\r\n      );\r\n      this._evtParentDisable = this._parent.on(\"disable\", this._parentDisable);\r\n      this._evtParentEnable = this._parent.on(\"enable\", this._parentEnable);\r\n\r\n      if (this._disabledParent !== this._parent.disabled) {\r\n        this._disabledParent = this._parent.disabled;\r\n\r\n        if (this._disabledParent) {\r\n          this.class!.add(\"disabled\");\r\n          this.emit(\"disable\");\r\n        } else {\r\n          this.class!.remove(\"disabled\");\r\n          this.emit(\"enable\");\r\n        }\r\n        \r\n      }\r\n    }\r\n\r\n    this.emit(\"parent\");\r\n  }\r\n\r\n  public get disabled(): boolean {\r\n    return this._disabled || this._disabledParent;\r\n  }\r\n  public set disabled(val: boolean) {\r\n    if (this._disabled === val) return;\r\n\r\n    this._disabled = !!val;\r\n    this.emit(this._disabled || this._disabledParent ? 'disable' : 'enable');\r\n\r\n    if (this._disabled || this._disabledParent) {\r\n      if (this.class) this.class.add('disabled');\r\n    } else {\r\n      if (this.class) this.class.remove('disabled');\r\n    }\r\n  }\r\n\r\n  public get disabledSelf(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  public get enabled(): boolean {\r\n    return !this._disabled;\r\n  }\r\n  public set enabled(val: boolean) {\r\n    this.disabled = !val;\r\n  }\r\n\r\n  public get hidden(): boolean {\r\n    return this._element ? this._element.classList.contains('hidden') : false;\r\n  }\r\n  public set hidden(val: boolean) {\r\n    if (!this._element) return;\r\n\r\n    if (this._element.classList.contains('hidden') === !!val) return;\r\n\r\n    if (val) {\r\n      this._element.classList.add('hidden');\r\n      this.emit('hide');\r\n    } else {\r\n      this._element.classList.remove('hidden');\r\n      this.emit('show');\r\n\r\n    }\r\n  }\r\n\r\n  // TODO\r\n  public get value(): any {\r\n    if (!this._link) return null;\r\n    return this._link.get(this.path);\r\n  }\r\n  public set value(val: any) {\r\n    if (!this._link) return;\r\n    this._link.set(this.path, val);\r\n  }\r\n\r\n  /* DOM Element */\r\n\r\n  public get class(): Nullable<DOMTokenList> {\r\n    if (this._element) {\r\n      return this._element.classList;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public get style(): Nullable<CSSStyleDeclaration> {\r\n    if (this._element) {\r\n      return this._element.style;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // flex-grow 属性用于设置或检索弹性盒子的扩展比率，用作css动画效果\r\n  public get flexGrow(): string {\r\n    return this._element ? (this._element.style.flexGrow || '') : '';\r\n  }\r\n  public set flexGrow(val: string) {\r\n    if (this._element) {\r\n      this._element.style.flexGrow = val;\r\n      this._element.style.webkitFlexGrow = val;\r\n    }\r\n  }\r\n\r\n  // flex-shrink 属性规定项目将相对于同一容器内其他灵活的项目进行收缩的量，用作css动画效果\r\n  public get flexShrink(): string {\r\n    return this._element ? (this._element.style.flexShrink || '') : '';\r\n  }\r\n  public set flexShrink(val: string) {\r\n    if (this._element) {\r\n      this._element.style.flexShrink = val;\r\n      this._element.style.webkitFlexShrink = val!;\r\n    }\r\n  }\r\n\r\n\r\n  public constructor() {\r\n    super();\r\n    // this._element!.addEventListener('click', )\r\n\r\n    this._parent = null;\r\n    // let self = this;\r\n    // this._parentDestroy = function () {\r\n    //   self.destroy();\r\n    // };\r\n  }\r\n\r\n  // 设置元素闪烁效果\r\n  public flash(): void {\r\n    if (this.class) {\r\n      this.class.add('flash');\r\n      setTimeout(this._onFlashDelay, 200);\r\n    }\r\n  }\r\n\r\n\r\n  private _onFlashDelay(): void {\r\n    if (this.class) {\r\n      this.class.remove('flash');\r\n    }\r\n  }\r\n\r\n  public link(link: Link, path: string): void {\r\n    let self = this;\r\n\r\n    if (this._link) this.unlink();\r\n    this._link = link;\r\n    this.path = path;\r\n\r\n    this.emit(\"link\", path);\r\n\r\n    // add :set link\r\n    if (this._onLinkChange) {\r\n      let renderChanges = this.renderChanges;\r\n      this.renderChanges = false;\r\n      this._linkOnSet = this._link.on(this.path + \":set\", function (value: any) {\r\n        self._onLinkChange(value);\r\n      });\r\n      this._linkOnUnset = this._link.on(this.path + \":unset\", function (value: any) {\r\n        self._onLinkChange(value);\r\n      });\r\n      this._onLinkChange(this._link.get(this.path));\r\n      this.renderChanges = renderChanges;\r\n    }\r\n  };\r\n\r\n\r\n  public unlink(): void {\r\n    if (!this._link) return;\r\n\r\n    this.emit(\"unlink\", this.path);\r\n\r\n    // remove :set link\r\n    if (this._linkOnSet) {\r\n      this._linkOnSet.unbind();\r\n      this._linkOnSet = null;\r\n\r\n      this._linkOnUnset!.unbind();\r\n      this._linkOnUnset = null;\r\n    }\r\n\r\n    this._link = null;\r\n    this.path = \"\";\r\n  };\r\n\r\n  public _onLinkChange(value: any): void {\r\n\r\n  }\r\n\r\n\r\n  public destroy(): void {\r\n    if (this._destroyed) return;\r\n\r\n    this._destroyed = true;\r\n\r\n    if (this._parent) {\r\n      this._evtParentDestroy!.unbind();\r\n      this._evtParentDisable!.unbind();\r\n      this._evtParentEnable!.unbind();\r\n      this._parent = null;\r\n    }\r\n\r\n    if (this._element && this._element.parentNode) {\r\n      this._element.parentNode.removeChild(this._element);\r\n    }\r\n\r\n    this.unlink();\r\n\r\n    this.emit('destroy');\r\n\r\n    this.unbind();\r\n\r\n    console.error('destroy');\r\n  };\r\n\r\n  private _parentDestroy(): void {\r\n    this.destroy();\r\n  };\r\n\r\n  private _parentDisable(): void {\r\n    if (this._disabledParent) return;\r\n\r\n    this._disabledParent = true;\r\n\r\n    if (!this._disabled) {\r\n      this.emit(\"disable\");\r\n      this.class!.add(\"disabled\");\r\n    }\r\n  };\r\n\r\n  private _parentEnable(): void {\r\n    if (!this._disabledParent) return;\r\n\r\n    this._disabledParent = false;\r\n\r\n    if (!this._disabled) {\r\n      this.emit(\"enable\");\r\n      this.class!.remove(\"disabled\");\r\n    }\r\n  };\r\n\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class GridItem extends Element {\r\n\r\n  private _clicked: boolean;\r\n  public _selectPending: boolean;\r\n  private _toggleSelectOnClick: boolean;\r\n\r\n  private _text: string;\r\n  public get text(): string {\r\n    return this._text;\r\n  }\r\n  public set text(val: string) {\r\n    if (this._text === val) return;\r\n    this._text = val;\r\n    this.element!.innerHTML = this._text;\r\n  }\r\n\r\n  private _selected: boolean;\r\n  public get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n  public set selected(val: boolean) {\r\n    if (this._selected === val)\r\n      return;\r\n\r\n    this._selectPending = val;\r\n\r\n    if (this.parent && this._clicked)\r\n      this.parent.emit('before' + (val ? 'Select' : 'Deselect'), this, this._clicked);\r\n\r\n    if (this._selected === this._selectPending)\r\n      return;\r\n\r\n    this._selected = this._selectPending;\r\n\r\n    if (this._selected) {\r\n      this.element!.classList.add('selected');\r\n    } else {\r\n      this.element!.classList.remove('selected');\r\n    }\r\n\r\n    this.emit(this.selected ? 'select' : 'deselect');\r\n    this.emit('change', this.selected);\r\n\r\n    if (this.parent)\r\n      this.parent.emit(this.selected ? 'select' : 'deselect', this, this._clicked);\r\n  }\r\n\r\n\r\n  public constructor(args?: GridItemArgs) {\r\n    super();\r\n    args = args || {};\r\n\r\n    this._text = args.text || '';\r\n    this._selectPending = false;\r\n    this._selected = args.selected || false;\r\n    this._toggleSelectOnClick = args && args.toggleSelectOnClick !== undefined ? args.toggleSelectOnClick : true;\r\n    this._clicked = false;\r\n\r\n    this.element = document.createElement('li');\r\n    this.element.ui = this;\r\n    this.element.tabIndex = 0;\r\n    this.element.classList.add('ui-grid-item');\r\n    this.element.innerHTML = this._text;\r\n\r\n    // this.element.removeEventListener('click', this._evtClick);\r\n    this.element.addEventListener('click', this._onClick.bind(this), false);\r\n\r\n    this.on('select', this._onSelect);\r\n    this.on('deselect', this._onDeselect);\r\n\r\n  }\r\n\r\n\r\n  private _onClick() {\r\n    this.emit('click');\r\n    this._clicked = true;\r\n    if (this._toggleSelectOnClick) {\r\n      this.selected = !this.selected;\r\n    } else {\r\n      this.selected = true;\r\n    }\r\n    this._clicked = false;\r\n  };\r\n\r\n  private _onSelect() {\r\n    this.element!.focus();\r\n  };\r\n\r\n  private _onDeselect() {\r\n    this.element!.blur();\r\n  };\r\n\r\n}\r\n\r\n\r\nexport class GridItemArgs {\r\n  text?: string;\r\n  selected?: boolean;\r\n  toggleSelectOnClick?: boolean;\r\n}","import { ContainerElement } from \"./container-element\";\r\nimport { GridItem } from \"./grid-item\";\r\nimport { Hotkeys } from \"../editor\";\r\n\r\nexport class Grid extends ContainerElement {\r\n\r\n\r\n  private _lastSelect: Nullable<GridItem>;\r\n\r\n  private _selecting: boolean;\r\n  private _multiSelect: boolean;\r\n\r\n\r\n  public get selected(): GridItem[] {\r\n    var items: GridItem[] = [];\r\n    var elements = this.element!.querySelectorAll('.ui-grid-item.selected');\r\n\r\n    for (var i = 0; i < elements.length; i++)\r\n      items.push(<GridItem>((<HTMLElement>elements[i]).ui));\r\n\r\n    return items;\r\n  }\r\n\r\n  public constructor(multiSelect?: boolean) {\r\n    super();\r\n\r\n    this.element = document.createElement('ul');\r\n    this.element.tabIndex = 0;\r\n    this.element.classList.add('ui-grid');\r\n\r\n    this._lastSelect = null;\r\n    this._selecting = false;\r\n    this._multiSelect = multiSelect !== undefined ? multiSelect : true;\r\n\r\n    this.on('select', this._onSelect);\r\n    this.on('beforeDeselect', this._onBeforeDeselect);\r\n\r\n    this.on('append', this._onAppend);\r\n    this.on('remove', this._onRemove);\r\n\r\n  }\r\n\r\n  public static _ctrl(): boolean {\r\n    return Hotkeys.ctrl;\r\n  }\r\n\r\n  public static _shift(): boolean {\r\n    return Hotkeys.shift;\r\n  }\r\n\r\n  private _onAppend(): void {\r\n\r\n  }\r\n\r\n  private _onRemove(): void {\r\n\r\n  }\r\n\r\n  private _onSelect(item: GridItem) {\r\n    if (this._selecting)\r\n      return;\r\n\r\n    if (this._multiSelect && Grid._shift && Grid._shift()) {\r\n      var children = Array.prototype.slice.call(this.element!.childNodes, 0);\r\n\r\n      // multi select from-to\r\n      if (this._lastSelect) {\r\n        this._selecting = true;\r\n\r\n        var startInd = children.indexOf(this._lastSelect.element);\r\n        var endInd = children.indexOf(item.element);\r\n\r\n        // swap if backwards\r\n        if (startInd > endInd) {\r\n          var t = startInd;\r\n          startInd = endInd;\r\n          endInd = t;\r\n        }\r\n\r\n        for (var i = startInd; i < endInd; i++) {\r\n          if (!children[i] || !children[i].ui || children[i].ui.hidden)\r\n            continue;\r\n\r\n          children[i].ui.selected = true;\r\n        }\r\n\r\n        this._selecting = false;\r\n      } else {\r\n        this._lastSelect = item;\r\n      }\r\n    } else if (this._multiSelect && Grid._ctrl && Grid._ctrl()) {\r\n      // multi select\r\n      this._lastSelect = item;\r\n    } else {\r\n      // single select\r\n      var items = this.element!.querySelectorAll('.ui-grid-item.selected');\r\n\r\n      if (items.length > 1) {\r\n        for (var i = 0; i < items.length; i++) {\r\n          if ((<HTMLElement>items[i]).ui === item)\r\n            continue;\r\n\r\n          (<GridItem>(<HTMLElement>items[i]).ui).selected = false;\r\n        }\r\n      }\r\n\r\n      this._lastSelect = item;\r\n    }\r\n  };\r\n\r\n  private _onBeforeDeselect(item: GridItem) {\r\n    if (this._selecting)\r\n      return;\r\n\r\n    this._selecting = true;\r\n\r\n    if (this._multiSelect && Grid._shift && Grid._shift()) {\r\n      this._lastSelect = null;\r\n    } else if (this._multiSelect && Grid._ctrl && Grid._ctrl()) {\r\n      this._lastSelect = null;\r\n    } else {\r\n      var items = this.element!.querySelectorAll('.ui-grid-item.selected');\r\n      if (items.length > 1) {\r\n        for (var i = 0; i < items.length; i++) {\r\n          if ((<HTMLElement>items[i]).ui === item)\r\n            continue;\r\n          (<GridItem>(<HTMLElement>items[i]).ui).selected = false;\r\n        }\r\n        item._selectPending = true;\r\n        this._lastSelect = item;\r\n      }\r\n    }\r\n\r\n    this._selecting = false;\r\n  };\r\n\r\n  public filter(fn: Function) {\r\n    this.forEach(function (item: HTMLElement) {\r\n      item.hidden = !fn(item);\r\n    });\r\n  };\r\n\r\n  public forEach(fn: Function) {\r\n    var child = this.element!.firstChild;\r\n    while (child) {\r\n      if ((<HTMLElement>child).ui)\r\n        fn((<HTMLElement>child).ui);\r\n\r\n      child = child.nextSibling;\r\n    };\r\n  };\r\n\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class ImageField extends Element {\r\n\r\n  private _value: any;\r\n\r\n  public elementImage: HTMLImageElement | HTMLCanvasElement;\r\n\r\n\r\n  public get image(): string {\r\n    if (this.elementImage instanceof HTMLCanvasElement) {\r\n      return '';\r\n    } else {\r\n      return (<HTMLImageElement>this.elementImage).src;\r\n    }\r\n  }\r\n  public set image(val: string) {\r\n    if (this.elementImage instanceof HTMLImageElement) {\r\n      this.elementImage.src = val;\r\n    }\r\n  }\r\n\r\n  public get empty(): boolean {\r\n    return this.class!.contains('empty');\r\n  }\r\n  public set empty(val: boolean) {\r\n    if (this.class!.contains('empty') === !!val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.class!.add('empty');\r\n      this.image = '';\r\n    } else {\r\n      this.class!.remove('empty');\r\n    }\r\n  }\r\n\r\n  public get value(): any {\r\n    if (this._link) {\r\n      return this._link.get(this.path);\r\n    } else {\r\n      return this._value;\r\n    }\r\n  }\r\n  public set value(val: any) {\r\n    val = val && parseInt(val) || null;\r\n\r\n    if (this._link) {\r\n      if (!this._link.set(this.path, val))\r\n        this._value = this._link.get(this.path);\r\n    } else {\r\n      if (this._value === val && !this.class!.contains('null'))\r\n        return;\r\n\r\n      this._value = val;\r\n      this.emit('change', val);\r\n    }\r\n  }\r\n\r\n\r\n  public constructor(canvas?: boolean) {\r\n    super();\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-image-field', 'empty');\r\n\r\n    if (canvas) {\r\n      this.elementImage = document.createElement('canvas');\r\n      this.elementImage.width = 64;\r\n      this.elementImage.height = 64;\r\n    } else {\r\n      this.elementImage = new Image();\r\n    }\r\n\r\n    this.elementImage.classList.add('preview');\r\n    this.element.appendChild(this.elementImage);\r\n\r\n    this._value = null;\r\n\r\n    // this.element.removeEventListener('click', this._evtClick);\r\n    this.element.addEventListener('click', this._onClick.bind(this), false);\r\n    this.on('change', this._onChange.bind(this));\r\n\r\n    // space > click\r\n    this.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n\r\n  }\r\n\r\n  private _onClick(evt: MouseEvent) {\r\n    this.emit('click', evt);\r\n  };\r\n\r\n  private _onChange() {\r\n    if (!this.renderChanges)\r\n      return;\r\n\r\n    this.flash();\r\n  };\r\n\r\n  private _onKeyDown(evt: KeyboardEvent) {\r\n    if (evt.keyCode === 27)\r\n      return this.element!.blur();\r\n\r\n    if (evt.keyCode !== 32 || this.disabled)\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    this.emit('pick');\r\n  };\r\n\r\n  public _onLinkChange(value: any) {\r\n    this._value = value;\r\n    this.emit('change', value);\r\n  };\r\n\r\n}","export * from './link';\r\nexport * from './element';\r\nexport * from './container-element';\r\nexport * from './panel';\r\nexport * from './canvas';\r\nexport * from './button';\r\nexport * from './label';\r\nexport * from './text-field';\r\nexport * from './textarea-field';\r\nexport * from './tree';\r\nexport * from './tree-item';\r\nexport * from './list';\r\nexport * from './list-item';\r\nexport * from './checkbox';\r\nexport * from './bubble';\r\nexport * from './overlay';\r\nexport * from './tooltip';\r\nexport * from './progress';\r\nexport * from './menu-item';\r\nexport * from './menu';\r\nexport * from './code';\r\nexport * from './color-field';\r\nexport * from './grid-item';\r\nexport * from './grid';\r\nexport * from './image-field';\r\nexport * from './number-field';\r\nexport * from './slider';\r\nexport * from './select-field';","import { Element } from \"./element\";\r\nimport { Tooltip } from \"./tooltip\";\r\n\r\nexport class Label extends Element {\r\n\r\n  private _text: string;\r\n  public get text(): string {\r\n    if (this._link) {\r\n      return this._link.get(this.path);\r\n    } else {\r\n      return this._text;\r\n    }\r\n  }\r\n  public set text(val: string) {\r\n    if (this._link) {\r\n      // TODO \r\n      this._link.set(this.path, val)\r\n      val = this._link.get(this.path);\r\n      this._setText(val);\r\n    } else {\r\n      if (this._text === val) return;\r\n\r\n      if (val === undefined || val === null) {\r\n        this._text = '';\r\n      } else {\r\n        this._text = val;\r\n      }\r\n\r\n      this._setText(this._text);\r\n      this.emit('change', val);\r\n    }\r\n  }\r\n\r\n  // if unsafe is true then use innerHTML for the\r\n  // contents\r\n  private _unsafe: boolean;\r\n\r\n  public get placeholder(): string {\r\n    return this.element!.getAttribute('placeholder') || '';\r\n  }\r\n  public set placeholder(val: string) {\r\n    this.element!.setAttribute('placeholder', val);\r\n  }\r\n\r\n  public get value(): string {\r\n    return this.text;\r\n  }\r\n  public set value(val: string) {\r\n    this.text = val;\r\n  }\r\n\r\n\r\n  public tooltip!: Tooltip;\r\n\r\n\r\n  public constructor(text?: string, placeholder?: string, unsafe?: boolean) {\r\n    super();\r\n\r\n    this._text = text ? text : '';\r\n    this._unsafe = unsafe ? unsafe : false;\r\n\r\n    this.element = document.createElement('span');\r\n    this.element.classList.add('ui-label');\r\n\r\n    if (this._text)\r\n      this._setText(this._text);\r\n\r\n    this.on('change', this._onChange);\r\n\r\n    if (placeholder) {\r\n      this.placeholder = placeholder;\r\n    }\r\n  }\r\n\r\n  private _setText(text: string): void {\r\n    if (this._unsafe) {\r\n      this.element!.innerHTML = text;\r\n    } else {\r\n      this.element!.textContent = text;\r\n    }\r\n  }\r\n\r\n  private _onChange(): void {\r\n    if (!this.renderChanges)\r\n      return;\r\n\r\n    this.flash();\r\n  };\r\n\r\n  public _onLinkChange(value: any) {\r\n    this.text = value;\r\n    this.emit('change', value);\r\n  };\r\n\r\n\r\n\r\n}","import { Element } from '../ui';\r\nimport { EventHandle } from '../lib';\r\n\r\n// TODO\r\nexport class Link {\r\n\r\n  private _element: Element;\r\n\r\n  private _value: { [key: string]: any } = {};\r\n\r\n  public history: any;\r\n\r\n  public schema!: LinkSchema;\r\n\r\n  public constructor(ele: Element) {\r\n    this._element = ele;\r\n  }\r\n\r\n  public get(path: string): any {\r\n    return this._value[path];\r\n  }\r\n\r\n  // TODO\r\n  public set(path: string, value: any): boolean {\r\n    this._value[path] = value;\r\n    return true;\r\n  }\r\n\r\n  public on(name: string, fn: Function): EventHandle {\r\n    return this._element.on(name, fn);\r\n  }\r\n}\r\n\r\n\r\nexport class LinkSchema {\r\n\r\n  public constructor() {\r\n\r\n  }\r\n\r\n  public has(path: string): boolean {\r\n    return true;\r\n  }\r\n\r\n  public get(path: string): any {\r\n    return true;\r\n  }\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class ListItem extends Element {\r\n\r\n  private _text: string;\r\n  public get text(): string {\r\n    return this._text;\r\n  }\r\n  public set text(val: string) {\r\n    if (this._text === val) return;\r\n    this._text = val;\r\n    this.elementText.textContent = this._text;\r\n  }\r\n\r\n  private _selected: boolean;\r\n  public get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n  public set selected(val: boolean) {\r\n    if (this._selected === val)\r\n      return;\r\n\r\n    this._selected = val;\r\n\r\n    if (this._selected) {\r\n      this.element!.classList.add('selected');\r\n    } else {\r\n      this.element!.classList.remove('selected');\r\n    }\r\n\r\n    this.emit(this.selected ? 'select' : 'deselect');\r\n\r\n    if (this.parent)\r\n      this.parent.emit(this.selected ? 'select' : 'deselect', this);\r\n\r\n    this.emit('change', this.selected);\r\n  }\r\n\r\n  private _allowDeselect: boolean;\r\n\r\n  public elementText: HTMLElement;\r\n\r\n  public constructor(text?: string, selected?: boolean, allowDeselect?: boolean) {\r\n    super();\r\n\r\n    this._text = text || '';\r\n    this._selected = selected || false;\r\n    this._allowDeselect = allowDeselect || false;\r\n\r\n    this.element = document.createElement('li');\r\n    this.element.classList.add('ui-list-item');\r\n\r\n    this.elementText = document.createElement('span');\r\n    this.elementText.textContent = this._text;\r\n    this.element.appendChild(this.elementText);\r\n\r\n    this.on('click', this._onClick);\r\n  }\r\n\r\n\r\n  private _onClick(): void {\r\n    if (!this.selected) {\r\n      this.selected = true;\r\n    } else if (this._allowDeselect) {\r\n      this.selected = false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}","import { ContainerElement } from \"./container-element\";\r\nimport { ListItem } from \"./list-item\";\r\nimport { Hotkeys } from \"../editor\";\r\n\r\nexport class List extends ContainerElement {\r\n\r\n\r\n  private _selectable: boolean;\r\n  public get selectable(): boolean {\r\n    return this._selectable;\r\n  }\r\n  public set selectable(val: boolean) {\r\n    if (this._selectable === !!val)\r\n      return;\r\n\r\n    this._selectable = val;\r\n\r\n    if (this._selectable) {\r\n      this.class!.add('selectable');\r\n    } else {\r\n      this.class!.remove('selectable');\r\n    }\r\n  }\r\n\r\n  public _changing: boolean;\r\n\r\n  private _selected: ListItem[];\r\n  public get selected(): ListItem[] {\r\n    return this._selected.slice(0);\r\n  }\r\n  public set selected(val: ListItem[]) {\r\n    this._changing = true;\r\n\r\n    // deselecting\r\n    let items: ListItem[] = this.selected;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (val.indexOf(items[i]) !== -1)\r\n        continue;\r\n\r\n      items[i].selected = false;\r\n    }\r\n\r\n    // selecting\r\n    for (let i = 0; i < val.length; i++) {\r\n      val[i].selected = true;\r\n    }\r\n\r\n    this._changing = false;\r\n  }\r\n\r\n  public constructor(selectable?: boolean) {\r\n    super();\r\n\r\n    this.element = document.createElement('ul');\r\n    this.element.classList.add('ui-list');\r\n\r\n    this._selectable = selectable || true;\r\n\r\n    this._changing = false;\r\n    this._selected = [];\r\n\r\n    this.on('select', this._onSelect);\r\n    this.on('deselect', this._onDeselect);\r\n    this.on('append', this._onAppend);\r\n  }\r\n\r\n  private _onSelect(item: ListItem): void {\r\n    let ind: number = this._selected.indexOf(item);\r\n    if (ind === -1)\r\n      this._selected.push(item);\r\n\r\n    if (this._changing)\r\n      return;\r\n\r\n    if (List._ctrl && List._ctrl()) {\r\n\r\n    } else if (List._shift && List._shift() && this.selected.length) {\r\n\r\n    } else {\r\n      this._changing = true;\r\n\r\n      let items: ListItem[] = this.selected;\r\n\r\n      if (items.length > 1) {\r\n        for (let i = 0; i < items.length; i++) {\r\n          if (items[i] === item)\r\n            continue;\r\n\r\n          items[i].selected = false;\r\n        }\r\n      }\r\n\r\n      this._changing = false;\r\n    }\r\n\r\n    this.emit('change');\r\n  }\r\n\r\n  public _onDeselect(item: ListItem): void {\r\n    let ind: number = this._selected.indexOf(item);\r\n    if (ind !== -1) this._selected.splice(ind, 1);\r\n\r\n    if (this._changing)\r\n      return;\r\n\r\n    if (List._ctrl && List._ctrl()) {\r\n\r\n    } else {\r\n      this._changing = true;\r\n\r\n      let items: ListItem[] = this.selected;\r\n\r\n      if (items.length) {\r\n        for (let i = 0; i < items.length; i++)\r\n          items[i].selected = false;\r\n\r\n        item.selected = true;\r\n      }\r\n\r\n      this._changing = false;\r\n    }\r\n\r\n    this.emit('change');\r\n  }\r\n\r\n  private _onAppend(item: ListItem): void {\r\n    if (!item.selected)\r\n      return;\r\n\r\n    let ind = this._selected.indexOf(item);\r\n    if (ind === -1) this._selected.push(item);\r\n  }\r\n\r\n  public clear(): void {\r\n    this._selected = [];\r\n    ContainerElement.prototype.clear.call(this);\r\n  }\r\n\r\n  public static _ctrl(): boolean {\r\n    return Hotkeys.ctrl;\r\n  }\r\n\r\n  public static _shift(): boolean {\r\n    return Hotkeys.shift;\r\n  }\r\n\r\n}","import { ContainerElement } from './container-element';\r\n\r\nexport class MenuItem extends ContainerElement {\r\n\r\n\r\n  private _hasChildren: boolean;\r\n  private _clickableSubmenus: boolean = false;\r\n  private _container: boolean;\r\n\r\n  public _index: { [key: string]: MenuItem } = {};\r\n\r\n  public elementTitle: HTMLElement;\r\n  public elementIcon: Nullable<HTMLElement>;\r\n  public elementText: HTMLElement;\r\n\r\n  private _value: string;\r\n  public get value(): string {\r\n    return this._value;\r\n  }\r\n  public set value(val: string) {\r\n    if (this._value === val)\r\n      return;\r\n\r\n    let valueOld = this._value;\r\n    this._value = val;\r\n    this.emit('value', val, valueOld);\r\n  }\r\n\r\n  public get text(): string {\r\n    return this.elementText.textContent || '';\r\n  }\r\n  public set text(val: string) {\r\n    if (this.elementText.textContent === val)\r\n      return;\r\n\r\n    this.elementText.textContent = val;\r\n  }\r\n\r\n  public get icon(): string {\r\n    if (this.elementIcon !== null) {\r\n      return this.elementIcon.textContent || '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n  public set icon(val: string) {\r\n    if ((!val && !this.elementIcon) || (this.elementIcon && this.elementIcon.textContent === val))\r\n      return;\r\n\r\n    if (!val) {\r\n      if (this.elementIcon && this.elementIcon.parentNode)\r\n        this.elementIcon.parentNode.removeChild(this.elementIcon);\r\n      this.elementIcon = null;\r\n    } else {\r\n      if (!this.elementIcon) {\r\n        this.elementIcon = document.createElement('span');\r\n        this.elementIcon.classList.add('icon');\r\n        this.elementTitle.insertBefore(this.elementIcon, this.elementText);\r\n      }\r\n\r\n      this.elementIcon.innerHTML = val;\r\n    }\r\n  }\r\n\r\n  public constructor(args?: MenuItemArgs) {\r\n    super();\r\n\r\n    args = args || {};\r\n    this._value = args.value || '';\r\n    this._hasChildren = args.hasChildren || false;\r\n    this._clickableSubmenus = args.clickableSubmenus || false;\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-menu-item');\r\n\r\n    if (args.className) {\r\n      this.element.classList.add(args.className);\r\n    }\r\n\r\n    this.elementTitle = document.createElement('div');\r\n    this.elementTitle.classList.add('title');\r\n    this.elementTitle.ui = this;\r\n    this.element.appendChild(this.elementTitle);\r\n\r\n    this.elementIcon = null;\r\n\r\n    this.elementText = document.createElement('span');\r\n    this.elementText.classList.add('text');\r\n    this.elementText.textContent = args.text || 'Untitled';\r\n    this.elementTitle.appendChild(this.elementText);\r\n\r\n    this.innerElement = document.createElement('div');\r\n    this.innerElement.classList.add('content');\r\n    this.element.appendChild(this.innerElement);\r\n\r\n    this._index = {};\r\n\r\n    this._container = false;\r\n\r\n    this.elementTitle.addEventListener('mouseenter', this._onMouseEnter.bind(this), false);\r\n    this.elementTitle.addEventListener('touchstart', this._onTouchStart, false);\r\n    this.elementTitle.addEventListener('touchend', this._onTouchEnd, false);\r\n    this.elementTitle.addEventListener('click', this._onClick.bind(this), false);\r\n\r\n    this.on('over', this._onOver.bind(this));\r\n    this.on('select-propagate', this._onSelectPropagate.bind(this));\r\n    this.on('append', this._onAppend.bind(this));\r\n\r\n    if (args.icon)\r\n      this.icon = args.icon;\r\n\r\n  }\r\n\r\n\r\n  private _onMouseEnter(evt: MouseEvent): void {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n    (<MenuItem>(htmlEle.ui)).parent!.emit('over', [this._value]);\r\n  }\r\n\r\n  private _onTouchStart(evt: TouchEvent): void {\r\n    let item: MenuItem = (<MenuItem>(<HTMLElement>evt.target).ui);\r\n\r\n    if (!item.parent || item.disabled)\r\n      return;\r\n\r\n    if (!item._container || item.class!.contains('hover')) {\r\n      item.emit('select', item._value, item._hasChildren);\r\n      item.parent.emit('select-propagate', [item._value], item._hasChildren);\r\n      item.class!.remove('hover');\r\n    } else {\r\n      item.parent.emit('over', [item._value]);\r\n    }\r\n  }\r\n\r\n  private _onTouchEnd(evt: TouchEvent): void {\r\n    let item: MenuItem = (<MenuItem>(<HTMLElement>evt.target).ui);\r\n\r\n    if (!item.parent || item.disabled)\r\n      return;\r\n\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  private _onClick(): void {\r\n\r\n    if (!this.parent || this.disabled)\r\n      return;\r\n\r\n    this.emit('select', this._value, this._hasChildren);\r\n    this.parent.emit('select-propagate', [this._value], this._hasChildren);\r\n\r\n    if (!this._clickableSubmenus || !this._hasChildren) {\r\n      this.class!.remove('hover');\r\n    }\r\n  }\r\n\r\n  private _onOver(path: string[]): void {\r\n    if (!this.parent)\r\n      return;\r\n    path.splice(0, 0, this._value);\r\n    this.parent.emit('over', path);\r\n  }\r\n\r\n  private _onSelectPropagate(path: string[], selectedItemHasChildren: boolean): void {\r\n    if (!this.parent)\r\n      return;\r\n\r\n    path.splice(0, 0, this._value);\r\n    this.parent.emit('select-propagate', path, selectedItemHasChildren);\r\n\r\n    if (!this._clickableSubmenus || !selectedItemHasChildren) {\r\n      this.class!.remove('hover');\r\n    }\r\n  }\r\n\r\n  private _onAppend(item: MenuItem) {\r\n    let self = this;\r\n\r\n    this._container = true;\r\n    this.class!.add('container');\r\n\r\n    this._index[item.value] = item;\r\n\r\n    item.on('value', function (value: string, valueOld: string) {\r\n      delete self._index[valueOld];\r\n      self._index[value] = item;\r\n    });\r\n    item.once('destroy', function () {\r\n      delete self._index[item.value];\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface MenuItemArgs {\r\n  text?: string;\r\n  className?: string;\r\n  value?: string;\r\n  icon?: string;\r\n  hasChildren?: boolean;\r\n  clickableSubmenus?: boolean;\r\n}","import { ContainerElement } from \"./container-element\";\r\nimport { MenuItem } from \"./menu-item\";\r\n\r\nexport class Menu extends ContainerElement {\r\n\r\n\r\n  public elementOverlay: HTMLElement;\r\n  private _clickableSubmenus: boolean = false;\r\n  private _hovered: MenuItem[] = [];\r\n  public _index: { [key: string]: MenuItem } = {};\r\n\r\n\r\n  public get open(): boolean {\r\n    return this.class!.contains('open');\r\n  }\r\n  public set open(val: boolean) {\r\n    if (this.class!.contains('open') === !!val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.class!.add('open');\r\n      this.element!.focus();\r\n    } else {\r\n      this.class!.remove('open');\r\n    }\r\n\r\n    this.emit('open', !!val);\r\n  }\r\n\r\n\r\n  public constructor(args?: any) {\r\n    super();\r\n\r\n    args = args || {};\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.tabIndex = 1;\r\n    this.element.classList.add('ui-menu');\r\n    this.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n\r\n    this.elementOverlay = document.createElement('div');\r\n    this.elementOverlay.ui = this;\r\n    this.elementOverlay.classList.add('overlay');\r\n    this.elementOverlay.addEventListener('click', this._onClick.bind(this), false);\r\n    this.elementOverlay.addEventListener('contextmenu', this._onContextMenu.bind(this), false);\r\n    this.element.appendChild(this.elementOverlay);\r\n\r\n    this.innerElement = document.createElement('div');\r\n    this.innerElement.classList.add('inner');\r\n    this.elementOverlay.appendChild(this.innerElement);\r\n\r\n    // this._index = { };\r\n    // this._hovered = [ ];\r\n    this._clickableSubmenus = args.clickableSubmenus;\r\n\r\n    this.on('select-propagate', this._onSelectPropagate.bind(this));\r\n    this.on('append', this._onAppend.bind(this));\r\n    this.on('over', this._onOver.bind(this));\r\n    this.on('open', this._onOpen.bind(this));\r\n\r\n  }\r\n\r\n  private _onClick(): void {\r\n    this.open = false;\r\n  }\r\n\r\n  private _onContextMenu(): void {\r\n    this.open = false;\r\n  }\r\n\r\n  private _onKeyDown(evt: KeyboardEvent): void {\r\n    if (this.open && evt.keyCode === 27)\r\n      this.open = false;\r\n  }\r\n\r\n  private _onAppend(item: MenuItem) {\r\n    let self = this;\r\n    this._index[item.value] = item;\r\n\r\n    item.on('value', function (value: string, valueOld: string) {\r\n      delete self._index[valueOld];\r\n      self._index[value] = item;\r\n    });\r\n    item.once('destroy', function () {\r\n      delete self._index[item.value];\r\n    });\r\n  }\r\n\r\n  private _onOver(path: string[]): void {\r\n    this._updatePath(path);\r\n  }\r\n\r\n  private _onOpen(state: boolean): void {\r\n    if (state) return;\r\n    this._updatePath([]);\r\n  }\r\n\r\n  private _onSelectPropagate(path: string[], selectedItemHasChildren: boolean): void {\r\n    if (this._clickableSubmenus && selectedItemHasChildren) {\r\n      this._updatePath(path);\r\n    } else {\r\n      this.open = false;\r\n      this.emit(path.join('.') + ':select', path);\r\n      this.emit('select', path);\r\n    }\r\n  }\r\n\r\n  public findByPath(path: string[] | string): Nullable<MenuItem> {\r\n    if (!(path instanceof Array))\r\n      path = path.split('.');\r\n\r\n    let item: Nullable<MenuItem> = null;\r\n\r\n    for (let i = 0; i < path.length; i++) {\r\n      if (i === 0) {\r\n        item = this._index[path[i]];\r\n      } else {\r\n        item = item!._index[path[i]];\r\n      }\r\n      if (!item)\r\n        return null;\r\n    }\r\n\r\n    return item;\r\n  }\r\n\r\n  private _updatePath(path: string[]): void {\r\n    let node: Nullable<MenuItem>;\r\n\r\n    // 把之前hover的取消\r\n    for (let i = 0; i < this._hovered.length; i++) {\r\n      node = this._hovered[i];\r\n      if (!node) continue;\r\n      // if (path.length <= i || path[i] !== this._hovered[i]) {\r\n      node.class!.remove('hover');\r\n      node.innerElement!.style.top = '';\r\n      node.innerElement!.style.left = '';\r\n      node.innerElement!.style.right = '';\r\n      // }\r\n    }\r\n\r\n    this._hovered = [];\r\n    // node = this;\r\n\r\n    for (let i = 0; i < path.length; i++) {\r\n      node = this.findByPath(path.slice(0, i + 1));\r\n\r\n      if (!node)\r\n        continue;\r\n\r\n      this._hovered.push(node);\r\n\r\n      node.class!.add('hover');\r\n      node.innerElement!.style.top = '';\r\n      node.innerElement!.style.left = '';\r\n      node.innerElement!.style.right = '';\r\n\r\n      let rect = node.innerElement!.getBoundingClientRect();\r\n\r\n      // limit to bottom / top of screen\r\n      if (rect.bottom > window.innerHeight) {\r\n        node.innerElement!.style.top = -(rect.bottom - window.innerHeight) + 'px';\r\n      }\r\n      if (rect.right > window.innerWidth) {\r\n        node.innerElement!.style.left = 'auto';\r\n        // TODO\r\n        node.innerElement!.style.right = (node.parent!.element!.clientWidth) + 'px';\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public position(x: number, y: number): void {\r\n\r\n    this.element!.style.display = 'block';\r\n    this.innerElement!.style.width = '158px';\r\n    let rect = this.innerElement!.getBoundingClientRect();\r\n    let left = (x || 0);\r\n    let top = (y || 0);\r\n\r\n    // limit to bottom / top of screen\r\n    if (top + rect.height > window.innerHeight) {\r\n      top = window.innerHeight - rect.height;\r\n    } else if (top < 0) {\r\n      top = 0;\r\n    }\r\n    if (left + rect.width > window.innerWidth) {\r\n      left = window.innerWidth - rect.width;\r\n    } else if (left < 0) {\r\n      left = 0;\r\n    }\r\n\r\n    this.innerElement!.style.left = left + 'px';\r\n    this.innerElement!.style.top = top + 'px';\r\n\r\n    this.element!.style.display = '';\r\n  }\r\n\r\n  public createItem(key: string, data: any): MenuItem {\r\n    let item = new MenuItem({\r\n      text: data.title || key,\r\n      className: data.className || null,\r\n      value: key,\r\n      icon: data.icon,\r\n      hasChildren: !!(data.items && Object.keys(data.items).length > 0),\r\n      clickableSubmenus: this._clickableSubmenus\r\n    });\r\n\r\n    if (data.select) {\r\n      item.on('select', data.select);\r\n    }\r\n\r\n    if (data.filter) {\r\n      this.on('open', function () {\r\n        item.enabled = data.filter();\r\n      });\r\n    }\r\n\r\n    if (data.hide) {\r\n      this.on('open', function () {\r\n        item.hidden = data.hide();\r\n      });\r\n    }\r\n\r\n    return item;\r\n  }\r\n\r\n\r\n  public static fromData(data: any, args: any) {\r\n    let menu = new Menu(args);\r\n\r\n    let listItems = function (data: any, parent: ContainerElement): void {\r\n      for (let key in data) {\r\n        let item = menu.createItem(key, data[key]);\r\n        parent.append(item);\r\n        // console.warn(item.parent);\r\n        if (data[key].items)\r\n          listItems(data[key].items, item);\r\n      }\r\n    };\r\n\r\n    listItems(data, menu);\r\n\r\n    return menu;\r\n  }\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class NumberField extends Element {\r\n\r\n  public precision: Nullable<number>;\r\n  public step: Nullable<number>;\r\n  public max: Nullable<number>;\r\n  public min: Nullable<number>;\r\n\r\n  public allowNull: boolean;\r\n\r\n  public elementInput: HTMLInputElement;\r\n\r\n  private _lastValue: number = -1;\r\n\r\n  public blurOnEnter: boolean;\r\n  public refocusable: boolean;\r\n  public _dragging: boolean;\r\n\r\n  private _dragDiff: number;\r\n  private _dragStart: number;\r\n\r\n  public get value(): number {\r\n    if (this._link) {\r\n      return this._link.get(this.path);\r\n    } else {\r\n      return this.elementInput.value !== '' ? parseFloat(this.elementInput.value) : -1;\r\n    }\r\n  }\r\n  public set value(val: number) {\r\n    if (this._link) {\r\n      if (!this._link.set(this.path, val)) {\r\n        this.elementInput.value = this._link.get(this.path);\r\n      }\r\n    } else {\r\n      if (val !== null) {\r\n        if (this.max !== null && this.max < val)\r\n          val = this.max;\r\n\r\n        if (this.min !== null && this.min > val)\r\n          val = this.min;\r\n      }\r\n\r\n      val = (val !== null && val !== undefined && (this.precision !== null) ? parseFloat(val.toFixed(this.precision)) : val);\r\n      if (val === undefined)\r\n        val = -1;\r\n\r\n      let different = this._lastValue !== val;\r\n\r\n      this._lastValue = val;\r\n      this.elementInput.value = val.toString();\r\n\r\n      if (different) {\r\n        this.emit('change', val);\r\n      }\r\n    }\r\n  }\r\n\r\n  public get placeholder(): string {\r\n    return this.element!.getAttribute('placeholder') || '';\r\n  }\r\n  public set placeholder(val: string) {\r\n    if (!val) {\r\n      this.element!.removeAttribute('placeholder');\r\n    } else {\r\n      this.element!.setAttribute('placeholder', val);\r\n    }\r\n  }\r\n\r\n  public get proxy(): string {\r\n    return this.element!.getAttribute('proxy') || '';\r\n  }\r\n  public set proxy(val: string) {\r\n    if (!val) {\r\n      this.element!.removeAttribute('proxy');\r\n    } else {\r\n      this.element!.setAttribute('proxy', val);\r\n    }\r\n  }\r\n\r\n\r\n  public constructor(args?: NumberFieldArgs) {\r\n    super();\r\n\r\n    args = args || {};\r\n\r\n    this.precision = (args.precision !== undefined) ? args.precision : null;\r\n    this.step = (args.step != undefined) ? args.step : ((args.precision != null) ? 1 / Math.pow(10, args.precision) : 1);\r\n\r\n    this.max = (args.max !== undefined) ? args.max : null;\r\n    this.min = (args.min !== undefined) ? args.min : null;\r\n\r\n    this.allowNull = !!args.allowNull;\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-number-field');\r\n\r\n    this.elementInput = document.createElement('input');\r\n    this.elementInput.ui = this;\r\n    this.elementInput.tabIndex = 0;\r\n    this.elementInput.classList.add('field');\r\n    this.elementInput.type = 'text';\r\n    this.elementInput.addEventListener('focus', this._onInputFocus.bind(this), false);\r\n    this.elementInput.addEventListener('blur', this._onInputBlur.bind(this), false);\r\n    this.elementInput.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n    this.elementInput.addEventListener('dblclick', this._onFullSelect.bind(this), false);\r\n    this.elementInput.addEventListener('contextmenu', this._onFullSelect.bind(this), false);\r\n    this.element.appendChild(this.elementInput);\r\n\r\n    if (args.default !== undefined)\r\n      this.value = args.default;\r\n\r\n    this.elementInput.addEventListener('change', this._onChange.bind(this), false);\r\n    // this._element.addEventListener('mousedown', this._onMouseDown.bind(this), false);\r\n    // this._element.addEventListener('mousewheel', this._onMouseDown.bind(this), false);\r\n\r\n    this.blurOnEnter = true;\r\n    this.refocusable = true;\r\n\r\n    this._lastValue = this.value;\r\n    // this._mouseMove = null;\r\n    this._dragging = false;\r\n    this._dragDiff = 0;\r\n    this._dragStart = 0;\r\n\r\n    this.on('disable', this._onDisable);\r\n    this.on('enable', this._onEnable);\r\n    this.on('change', this._onChangeField);\r\n\r\n    if (args.placeholder)\r\n      this.placeholder = args.placeholder;\r\n\r\n  }\r\n\r\n\r\n  public _onLinkChange(value: string) {\r\n    this.elementInput.value = value || '0';\r\n    this.emit('change', value || '0');\r\n  };\r\n\r\n  public _onChange(): void {\r\n    let value = parseFloat(this.elementInput.value);\r\n    if (isNaN(value)) {\r\n      if (this.allowNull) {\r\n        this.value = -1;\r\n      } else {\r\n        this.elementInput.value = '0';\r\n        this.value = 0;\r\n      }\r\n    } else {\r\n      // this.elementInput.value = value;\r\n      this.value = value;\r\n    }\r\n  };\r\n\r\n\r\n  public focus(select?: boolean) {\r\n    this.elementInput.focus();\r\n    if (select) this.elementInput.select();\r\n  };\r\n\r\n  private _onInputFocus() {\r\n    this.class!.add('focus');\r\n  };\r\n\r\n  private _onInputBlur() {\r\n    this.class!.remove('focus');\r\n  };\r\n\r\n  private _onKeyDown(evt: KeyboardEvent) {\r\n    if (evt.keyCode === 27)\r\n      return this.elementInput.blur();\r\n\r\n    if (this.blurOnEnter && evt.keyCode === 13) {\r\n      let focused = false;\r\n\r\n      let parent = this.parent;\r\n      while (parent) {\r\n        if (parent.element && parent.element.focus) {\r\n          parent.element.focus();\r\n          focused = true;\r\n          break;\r\n        }\r\n\r\n        parent = parent.parent;\r\n      }\r\n\r\n      if (!focused)\r\n        this.elementInput.blur();\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.disabled || [38, 40].indexOf(evt.keyCode) === -1)\r\n      return;\r\n\r\n    let inc = evt.keyCode === 40 ? -1 : 1;\r\n\r\n    if (evt.shiftKey)\r\n      inc *= 10;\r\n\r\n    let value = this.value + (this.step || 1) * inc;\r\n\r\n    if (this.max != null)\r\n      value = Math.min(this.max, value);\r\n\r\n    if (this.min != null)\r\n      value = Math.max(this.min, value);\r\n\r\n    if (this.precision != null)\r\n      value = parseFloat(value.toFixed(this.precision));\r\n\r\n    this.value = value;\r\n    // this.ui.value = value;\r\n  };\r\n\r\n  private _onFullSelect() {\r\n    this.elementInput.select();\r\n  };\r\n\r\n  private _onDisable() {\r\n    this.elementInput.readOnly = true;\r\n  };\r\n\r\n  private _onEnable() {\r\n    this.elementInput.readOnly = false;\r\n  };\r\n\r\n  private _onChangeField() {\r\n    if (!this.renderChanges)\r\n      return;\r\n\r\n    this.flash();\r\n  };\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport interface NumberFieldArgs {\r\n  default?: number;\r\n  placeholder?: string;\r\n  precision?: number;\r\n  step?: number;\r\n  min?: number;\r\n  max?: number;\r\n  allowNull?: boolean;\r\n}","import { ContainerElement } from \"./container-element\";\r\n\r\nexport class Overlay extends ContainerElement {\r\n\r\n\r\n  public elementOverlay: HTMLElement;\r\n\r\n\r\n  public get clickable(): boolean {\r\n    return this.elementOverlay.classList.contains('clickable');\r\n  }\r\n  public set clickable(val: boolean) {\r\n    if (val) {\r\n      this.elementOverlay.classList.add('clickable');\r\n    } else {\r\n      this.elementOverlay.classList.remove('clickable');\r\n    }\r\n  }\r\n\r\n  public get rect(): ClientRect | DOMRect {\r\n    return this.innerElement!.getBoundingClientRect();\r\n  }\r\n\r\n  public get center(): boolean {\r\n    return this.element!.classList.contains('center');\r\n  }\r\n  public set center(val: boolean) {\r\n    if (val) {\r\n      this.element!.classList.add('center');\r\n      this.innerElement!.style.left = '';\r\n      this.innerElement!.style.top = '';\r\n    } else {\r\n      this.element!.classList.remove('center');\r\n    }\r\n  }\r\n\r\n  public get transparent(): boolean {\r\n    return this.element!.classList.contains('transparent');\r\n  }\r\n  public set transparent(val: boolean) {\r\n    if (val) {\r\n      this.element!.classList.add('transparent');\r\n    } else {\r\n      this.element!.classList.remove('transparent');\r\n    }\r\n  }\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-overlay', 'center');\r\n\r\n    this.elementOverlay = document.createElement('div');\r\n    this.elementOverlay.ui = this;\r\n    this.elementOverlay.classList.add('overlay', 'clickable');\r\n    this.element.appendChild(this.elementOverlay);\r\n\r\n    this.elementOverlay.addEventListener('mousedown', this._onMouseDown.bind(this), false);\r\n\r\n    this.innerElement = document.createElement('div');\r\n    this.innerElement.classList.add('content');\r\n    this.element.appendChild(this.innerElement);\r\n\r\n  }\r\n\r\n  private _onMouseDown(evt: MouseEvent): void {\r\n    if (!this.clickable)\r\n      return;\r\n\r\n    let self = this;\r\n\r\n    // some field might be in focus\r\n    document.body.blur();\r\n\r\n    // wait till blur takes in account\r\n    requestAnimationFrame(function () {\r\n      // hide overlay\r\n      self.hidden = true;\r\n    });\r\n\r\n    evt.preventDefault();\r\n  }\r\n\r\n  public position(x: number, y: number): void {\r\n    let area = this.elementOverlay.getBoundingClientRect();\r\n    let rect = this.innerElement!.getBoundingClientRect();\r\n\r\n    x = Math.max(0, Math.min(area.width - rect.width, x));\r\n    y = Math.max(0, Math.min(area.height - rect.height, y));\r\n\r\n    this.innerElement!.style.left = x + 'px';\r\n    this.innerElement!.style.top = y + 'px';\r\n  }\r\n\r\n\r\n}","import { ContainerElement } from './container-element';\r\nimport { Element } from './element';\r\n\r\nexport class Panel extends ContainerElement {\r\n\r\n  private headerElement: Nullable<HTMLElement> = null;\r\n  private headerElementTitle: Nullable<HTMLElement> = null;\r\n  private _handleElement: Nullable<HTMLElement> = null;\r\n\r\n  private _resizeEvtMove: any;\r\n  private _resizeEvtEnd: any;\r\n  private _resizeEvtTouchMove: any;\r\n  private _resizeEvtTouchEnd: any;\r\n\r\n  private _resizeData: { [key: string]: number } = { end: 0 };\r\n  private _resizeLimits: { [key: string]: number } = {\r\n    min: 0,\r\n    max: Infinity\r\n  };\r\n  private _handle: string = '';\r\n  public headerSize: number = 0;\r\n  private _resizeTouchId: number = -100;\r\n\r\n  public title: string = '';\r\n\r\n  public get folded(): boolean {\r\n    return this.class ? this.class.contains('foldable') && this.class.contains('folded') : false;\r\n  }\r\n  public set folded(val: boolean) {\r\n    if (this.hidden)\r\n      return;\r\n\r\n    if (this.class!.contains('folded') === !!val)\r\n      return;\r\n\r\n    if (this.headerElement && this.headerSize === 0)\r\n      this.headerSize = this.headerElement.clientHeight;\r\n\r\n    if (val) {\r\n      this.class!.add('folded');\r\n\r\n      if (this.class!.contains('foldable'))\r\n        this.emit('fold');\r\n    } else {\r\n      this.class!.remove('folded');\r\n\r\n      if (this.class!.contains('foldable'))\r\n        this.emit('unfold');\r\n    }\r\n\r\n    this._reflow();\r\n  }\r\n\r\n  public get horizontal(): boolean {\r\n    return this.class ? this.class.contains('horizontal') : false;\r\n  }\r\n  public set horizontal(val: boolean) {\r\n    if (val) {\r\n      this.class!.add('horizontal');\r\n    } else {\r\n      this.class!.remove('horizontal');\r\n    }\r\n    this._reflow();\r\n  }\r\n\r\n  public get resizable(): string {\r\n    return this._handle;\r\n  }\r\n  public set resizable(val: string) {\r\n    if (this._handle === val)\r\n      return;\r\n\r\n    var oldHandle = this._handle;\r\n    this._handle = val;\r\n\r\n    if (this._handle !== '') {\r\n      if (!this._handleElement) {\r\n        this._handleElement = document.createElement('div');\r\n        this._handleElement.ui = this;\r\n        this._handleElement.classList.add('handle');\r\n        this._handleElement.addEventListener('mousedown', this._resizeStart.bind(this), false);\r\n        this._handleElement.addEventListener('touchstart', this._resizeStart.bind(this), false);\r\n      }\r\n\r\n      if (this._handleElement.parentNode)\r\n        this.element!.removeChild(this._handleElement);\r\n      // TODO\r\n      // append in right place\r\n      this.element!.appendChild(this._handleElement);\r\n      this.class!.add('resizable', 'resizable-' + this._handle);\r\n    } else {\r\n      if (this._handleElement) this.element!.removeChild(this._handleElement);\r\n\r\n      this.class!.remove('resizable', 'resizable-' + oldHandle);\r\n    }\r\n\r\n    this._reflow();\r\n  }\r\n\r\n  public get resizeMin(): number {\r\n    return this._resizeLimits.min;\r\n  }\r\n  public set resizeMin(val: number) {\r\n    this._resizeLimits.min = Math.max(0, Math.min(this._resizeLimits.max, val));\r\n  }\r\n\r\n  public get resizeMax(): number {\r\n    return this._resizeLimits.max;\r\n  }\r\n  public set resizeMax(val: number) {\r\n    this._resizeLimits.max = Math.max(this._resizeLimits.min, val);\r\n  }\r\n\r\n  public get foldable(): boolean {\r\n    return this.class ? this.class.contains('foldable') : false;\r\n  }\r\n  public set foldable(val: boolean) {\r\n    if (val) {\r\n      this.class!.add('foldable');\r\n\r\n      if (this.class!.contains('folded'))\r\n        this.emit('fold');\r\n    } else {\r\n      this.class!.remove('foldable');\r\n\r\n      if (this.class!.contains('folded'))\r\n        this.emit('unfold');\r\n    }\r\n\r\n    this._reflow();\r\n  }\r\n\r\n  public get header(): string {\r\n    return this.headerElementTitle ? (this.headerElementTitle.textContent || '') : '';\r\n  }\r\n  public set header(val: string) {\r\n    if (!this.headerElement && val) {\r\n      this.headerElement = document.createElement('header');\r\n      this.headerElement.classList.add('ui-header');\r\n\r\n      this.headerElementTitle = document.createElement('span');\r\n      this.headerElementTitle.classList.add('title');\r\n      this.headerElementTitle.textContent = val;\r\n      this.headerElement.appendChild(this.headerElementTitle);\r\n\r\n      let first = this.element!.firstChild;\r\n      if (first) {\r\n        this.element!.insertBefore(this.headerElement, first);\r\n      } else {\r\n        this.element!.appendChild(this.headerElement);\r\n      }\r\n\r\n      this.class!.remove('noHeader');\r\n\r\n      let self = this;\r\n\r\n      // folding\r\n      this.headerElement.addEventListener('click', function (evt) {\r\n        if (!self.foldable || (evt.target !== self.headerElement && evt.target !== self.headerElementTitle))\r\n          return;\r\n\r\n        self.folded = !self.folded;\r\n      }, false);\r\n    } else if (this.headerElement && !val) {\r\n      if (this.headerElement.parentNode) {\r\n        this.headerElement.parentNode.removeChild(this.headerElement);\r\n      }\r\n      this.headerElement = null;\r\n      this.headerElementTitle = null;\r\n      this.class!.add('noHeader');\r\n    } else {\r\n      this.headerElementTitle!.textContent = val || '';\r\n      this.class!.remove('noHeader');\r\n    }\r\n  }\r\n\r\n  public constructor(title?: string) {\r\n    super();\r\n\r\n    let self = this;\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-panel', 'noHeader', 'noAnimation');\r\n\r\n    // this.on('nodesChanged', this._onNodesChanged);\r\n\r\n    // content\r\n    this.innerElement = document.createElement('div');\r\n    this.innerElement.ui = this;\r\n    this.innerElement.classList.add('content');\r\n    this.element.appendChild(this.innerElement);\r\n\r\n    if (title) {\r\n      this.title = title;\r\n      this.header = title;\r\n    }\r\n\r\n    // this.innerElement.addEventListener('scroll', this._onScroll, false);\r\n\r\n    this._resizeEvtMove = function (evt: MouseEvent) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      self._resizeMove(evt.clientX, evt.clientY);\r\n    };\r\n\r\n    this._resizeEvtEnd = function (evt: MouseEvent) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      self._resizeEnd();\r\n    };\r\n\r\n    this._resizeEvtTouchMove = function (evt: TouchEvent) {\r\n      for (let i = 0; i < evt.changedTouches.length; i++) {\r\n        let touch = evt.changedTouches[i];\r\n\r\n        if (touch.identifier !== self._resizeTouchId)\r\n          continue;\r\n\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        self._resizeMove(touch.clientX, touch.clientY);\r\n\r\n        return;\r\n      }\r\n    };\r\n\r\n    this._resizeEvtTouchEnd = function (evt: TouchEvent) {\r\n      for (let i = 0; i < evt.changedTouches.length; i++) {\r\n        let touch = evt.changedTouches[i];\r\n\r\n        if (touch.identifier !== self._resizeTouchId)\r\n          continue;\r\n\r\n        self._resizeTouchId = -100;\r\n\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        self._resizeEnd();\r\n\r\n        return;\r\n      }\r\n    };\r\n\r\n    // HACK\r\n    // skip 2 frames before enabling transitions\r\n    requestAnimationFrame(function () {\r\n      requestAnimationFrame(function () {\r\n        self.class!.remove('noAnimation');\r\n      });\r\n    });\r\n\r\n    // on parent change\r\n    this.on('parent', this._onParent);\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  private _resizeMove(x: number, y: number): void {\r\n    if (this._resizeData.end === 0) {\r\n      this._resizeData = {\r\n        x: x,\r\n        y: y,\r\n        width: this.innerElement!.clientWidth,\r\n        height: this.innerElement!.clientHeight,\r\n        end: 1\r\n      };\r\n    } else {\r\n      if (this._handle === 'left' || this._handle === 'right') {\r\n        // horizontal\r\n        let offsetX = this._resizeData.x - x;\r\n\r\n        if (this._handle === 'right')\r\n          offsetX = -offsetX;\r\n\r\n        let width = Math.max(this._resizeLimits.min, Math.min(this._resizeLimits.max, (this._resizeData.width + offsetX)));\r\n\r\n        this.style!.width = (width + 4) + 'px';\r\n        this.innerElement!.style.width = (width + 4) + 'px';\r\n      } else {\r\n        // vertical\r\n        let offsetY = this._resizeData.y - y;\r\n\r\n        if (this._handle === 'bottom')\r\n          offsetY = -offsetY;\r\n\r\n        let height = Math.max(this._resizeLimits.min, Math.min(this._resizeLimits.max, (this._resizeData.height + offsetY)));\r\n\r\n        this.style!.height = (height + (this.headerSize === -1 ? 0 : this.headerSize || 32)) + 'px';\r\n        this.innerElement!.style.height = height + 'px';\r\n      }\r\n    }\r\n\r\n    this.emit('resize');\r\n  };\r\n\r\n  private _resizeEnd(): void {\r\n    window.removeEventListener('mousemove', this._resizeEvtMove, false);\r\n    window.removeEventListener('mouseup', this._resizeEvtEnd, false);\r\n\r\n    // window.removeEventListener('touchmove', this._resizeEvtTouchMove, false);\r\n    // window.removeEventListener('touchend', this._resizeEvtTouchEnd, false);\r\n\r\n    this.class!.remove('noAnimation', 'resizing');\r\n    this._resizeData.end = 0;\r\n  };\r\n\r\n  private _resizeStart(evt: Event): void {\r\n    if (this._handle === '')\r\n      return;\r\n    if ((<TouchEvent>evt).changedTouches) {\r\n      for (let i = 0; i < (<TouchEvent>evt).changedTouches.length; i++) {\r\n        let touch = (<TouchEvent>evt).changedTouches[i];\r\n        if (<HTMLElement>touch.target !== this.element)\r\n          continue;\r\n\r\n        this._resizeTouchId = touch.identifier;\r\n      }\r\n    }\r\n\r\n    this.class!.add('noAnimation', 'resizing');\r\n    this._resizeData.end = 0;\r\n\r\n    window.addEventListener('mousemove', this._resizeEvtMove, false);\r\n    window.addEventListener('mouseup', this._resizeEvtEnd, false);\r\n\r\n    window.addEventListener('touchmove', this._resizeEvtTouchMove, false);\r\n    window.addEventListener('touchend', this._resizeEvtTouchEnd, false);\r\n\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n  };\r\n\r\n  private _onParent(): void {\r\n    // HACK\r\n    // wait till DOM parses, then reflow\r\n    requestAnimationFrame(this._reflow.bind(this));\r\n  };\r\n\r\n  private _reflow(): void {\r\n    if (this.hidden)\r\n      return;\r\n\r\n    if (this.folded) {\r\n      if (this.horizontal) {\r\n        this.style!.height = '';\r\n        this.style!.width = (this.headerSize || 32) + 'px';\r\n      } else {\r\n        this.style!.height = (this.headerSize || 32) + 'px';\r\n      }\r\n    } else if (this.foldable) {\r\n      if (this.horizontal) {\r\n        this.style!.height = '';\r\n        this.style!.width = this.innerElement!.clientWidth + 'px';\r\n      } else {\r\n        this.style!.height = ((this.headerSize || 32) + this.innerElement!.clientHeight) + 'px';\r\n      }\r\n    }\r\n  };\r\n\r\n  private _onNodesChanged(): void {\r\n    if (!this.foldable || this.folded || this.horizontal || this.hidden)\r\n      return;\r\n\r\n    this.style!.height = (Math.max(0, (this.headerSize || 32)) + this.innerElement!.clientHeight) + 'px';\r\n  };\r\n\r\n  public headerAppend(element: HTMLElement | Element): void {\r\n    if (!this.headerElement)\r\n      return;\r\n\r\n    let html: boolean = (element instanceof HTMLElement);\r\n    let node: HTMLElement = html ? <HTMLElement>element : (<Element>element).element!;\r\n\r\n    this.headerElement.insertBefore(node, this.headerElementTitle);\r\n\r\n    if (!html)\r\n      (<Element>element).parent = this;\r\n  };\r\n\r\n  // TODO\r\n  private _onScroll(evt: any) {\r\n    this.emit('scroll', evt);\r\n  };\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class Progress extends Element {\r\n\r\n\r\n  private _progress: number;\r\n  private _targetProgress: number;\r\n  private _lastProgress: number;\r\n  private _speed: number;\r\n\r\n  private _inner: HTMLElement;\r\n\r\n  private _now: number;\r\n  private _animating: boolean;\r\n  private _failed: boolean;\r\n\r\n  public get progress(): number {\r\n    return this._progress;\r\n  }\r\n  public set progress(val: number) {\r\n    let self = this;\r\n\r\n    val = Math.max(0, Math.min(1, val));\r\n\r\n    if (this._targetProgress === val)\r\n      return;\r\n\r\n    this._targetProgress = val;\r\n\r\n    if (this._speed === 0 || this._speed === 1) {\r\n      this._progress = this._targetProgress;\r\n      this._inner.style.width = (this._progress * 100) + '%';\r\n\r\n      let progress: number = Math.max(0, Math.min(100, Math.round(this._progress * 100)));\r\n      if (progress !== this._lastProgress) {\r\n        this._lastProgress = progress;\r\n        this.emit('progress:' + progress);\r\n        this.emit('progress', progress);\r\n      }\r\n    } else if (!this._animating) {\r\n      requestAnimationFrame(function () {\r\n        self._animate();\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  public get speed(): number {\r\n    return this._speed;\r\n  }\r\n  public set speed(val: number) {\r\n    this._speed = Math.max(0, Math.min(1, val));\r\n  }\r\n\r\n  public get failed(): boolean {\r\n    return this._failed;\r\n  }\r\n  public set failed(val: boolean) {\r\n    this._failed = val;\r\n    if (this._failed) {\r\n      this.class!.add('failed');\r\n    } else {\r\n      this.class!.remove('failed');\r\n    }\r\n  }\r\n\r\n\r\n  public constructor(progress?: number, speed?: number) {\r\n    super();\r\n\r\n    this._progress = progress ? Math.max(0, Math.min(1, progress)) : 0;\r\n    this._targetProgress = this._progress;\r\n    this._lastProgress = Math.floor(this._progress * 100);\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-progress');\r\n\r\n    this._inner = document.createElement('div');\r\n    this._inner.classList.add('inner');\r\n    this._inner.style.width = (this._progress * 100) + '%';\r\n    this.element.appendChild(this._inner);\r\n\r\n    this._speed = speed || 1;\r\n\r\n    this._now = Date.now();\r\n    this._animating = false;\r\n \r\n    this._failed = false;\r\n\r\n  }\r\n\r\n  /**\r\n   *  websocket link -> best way;\r\n   *  information format -> many kinds of information to be transformed;\r\n   * \r\n   *  think about the process:\r\n   *     1. access permission check;\r\n   *     2. a data structure of scene detail;\r\n   *     3. a data structure for assets detail;\r\n   *     4. keep the original file no change so there will be only one source file;\r\n   *     5. link to any information;\r\n   * \r\n   * \r\n   * \r\n\r\n   *  \r\n   */\r\n  private _animate(): void {\r\n    let self = this;\r\n\r\n    if (Math.abs(this._targetProgress - this._progress) < 0.01) {\r\n      this._progress = this._targetProgress;\r\n      this._animating = false;\r\n    } else {\r\n      if (!this._animating) {\r\n        this._now = Date.now() - (1000 / 60);\r\n        this._animating = true;\r\n      }\r\n      requestAnimationFrame(function () {\r\n        self._animate();\r\n      });\r\n\r\n      let dt: number = Math.max(0.1, Math.min(3, (Date.now() - this._now) / (1000 / 60)));\r\n      this._now = Date.now();\r\n      this._progress = this._progress + (this._targetProgress - this._progress) * (this._speed * dt);\r\n    }\r\n\r\n    let progress: number = Math.max(0, Math.min(100, Math.round(this._progress * 100)));\r\n    if (progress !== this._lastProgress) {\r\n      this._lastProgress = progress;\r\n      this.emit('progress:' + progress);\r\n      this.emit('progress', progress);\r\n    }\r\n\r\n    this._inner.style.width = (this._progress * 100) + '%';\r\n  }\r\n\r\n\r\n}","import { Element } from \"./element\"\r\n\r\n// 下拉选择列表\r\nexport class SelectField extends Element {\r\n\r\n\r\n  public elementValue: HTMLElement;\r\n  public elementOptions: HTMLElement;\r\n\r\n  public options: any;\r\n  public optionsKeys: string[];\r\n\r\n  private _oldValue: any;\r\n  private _value: any;\r\n  private _type: string;\r\n  private _optionClassNamePrefix: string;\r\n  private timerClickAway: any;\r\n  private evtTouchId: number;\r\n  private evtTouchSecond: boolean;\r\n  private evtMouseDist: number[] = [0, 0];\r\n\r\n  private optionElements: { [key: string]: HTMLElement };\r\n\r\n\r\n  public get value(): any {\r\n    if (this._link) {\r\n      return this._link.get(this.path);\r\n    } else {\r\n      return this._value;\r\n    }\r\n  }\r\n  public set value(raw: any) {\r\n    var value = this.valueToType(raw);\r\n\r\n    if (this._link) {\r\n      this._oldValue = this._value;\r\n      this.emit('change:before', value);\r\n      this._link.set(this.path, value);\r\n    } else {\r\n      if ((value === null || value === undefined || raw === '') && this.optionElements[''])\r\n        value = '';\r\n\r\n      if (this._oldValue === value) return;\r\n      if (value !== null && this.options[value] === undefined) return;\r\n\r\n      // deselect old one\r\n      if (this.optionElements[this._oldValue])\r\n        this.optionElements[this._oldValue].classList.remove('selected');\r\n\r\n      this._value = value;\r\n      if (value !== '')\r\n        this._value = this.valueToType(this._value);\r\n\r\n      this.emit('change:before', this._value);\r\n      this._oldValue = this._value;\r\n      if (this.options[this._value]) {\r\n        this.elementValue.textContent = this.options[this._value];\r\n        this.optionElements[this._value].classList.add('selected');\r\n      } else {\r\n        this.elementValue.textContent = '';\r\n      }\r\n      this.emit('change', this._value);\r\n    }\r\n  }\r\n\r\n  public get placeholder(): string {\r\n    return this.elementValue.getAttribute('placeholder') || '';\r\n  }\r\n  public set placeholder(val: string) {\r\n    if (!val) {\r\n      this.elementValue.removeAttribute('placeholder');\r\n    } else {\r\n      this.elementValue.setAttribute('placeholder', val);\r\n    }\r\n  }\r\n\r\n  public constructor(args: any) {\r\n    super();\r\n\r\n    // let self = this;\r\n\r\n    args = args || {};\r\n    this.options = args.options || {};\r\n    this.optionsKeys = [];\r\n\r\n    if (this.options instanceof Array) {\r\n      var options: any = {};\r\n      for (var i = 0; i < this.options.length; i++) {\r\n        this.optionsKeys.push(this.options[i].v);\r\n        options[this.options[i].v] = this.options[i].t;\r\n      }\r\n      this.options = options;\r\n    } else {\r\n      this.optionsKeys = Object.keys(this.options);\r\n    }\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.tabIndex = 0;\r\n    this.element.classList.add('ui-select-field', 'noSelect');\r\n\r\n    this.elementValue = document.createElement('div');\r\n    this.elementValue.ui = this;\r\n    this.elementValue.classList.add('value');\r\n    this.element.appendChild(this.elementValue);\r\n\r\n    this._oldValue = null;\r\n    this._value = null;\r\n    this._type = args.type || 'string';\r\n\r\n    this._optionClassNamePrefix = args.optionClassNamePrefix || '';\r\n\r\n    this.timerClickAway = null;\r\n    this.evtTouchId = -9;\r\n    this.evtTouchSecond = false;\r\n    this.evtMouseDist = [0, 0];\r\n\r\n    this.elementValue.addEventListener('mousedown', this._onMouseDown.bind(this), false);\r\n    this.elementValue.addEventListener('touchstart', this._onTouchStart.bind(this), false);\r\n\r\n    this.elementOptions = document.createElement('ul');\r\n    this.element.appendChild(this.elementOptions);\r\n\r\n    this.optionElements = {};\r\n\r\n    if (args.default !== undefined && this.options[args.default] !== undefined) {\r\n      this._value = this.valueToType(args.default);\r\n      this._oldValue = this._value;\r\n    }\r\n\r\n    this.on('link', this._onLink);\r\n    this._updateOptions();\r\n\r\n    this.on('change', this._onChange.bind(this));\r\n\r\n    // arrows - change\r\n    this.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n\r\n    if (args.placeholder)\r\n      this.placeholder = args.placeholder;\r\n  }\r\n\r\n\r\n  private _onHoldSelect(target: HTMLElement, x: number, y: number, evt?: TouchEvent) {\r\n    if (target && target.uiElement && target.uiElement === this && target.classList.contains('selected'))\r\n      return;\r\n\r\n    if ((Math.abs(x - this.evtMouseDist[0]) + Math.abs(y - this.evtMouseDist[1])) < 8)\r\n      return;\r\n\r\n    if (target && target.uiElement && target.uiElement === this && evt !== undefined)\r\n      this._onOptionSelect.call(target, evt);\r\n\r\n    this.close();\r\n  };\r\n\r\n  private _onMouseDown(evt: MouseEvent): void {\r\n    if (this.disabled && !this.disabledClick)\r\n      return;\r\n\r\n    if (this.element!.classList.contains('active')) {\r\n      this.close();\r\n    } else {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      this.evtMouseDist[0] = evt.pageX;\r\n      this.evtMouseDist[1] = evt.pageY;\r\n      this.element!.focus();\r\n      this.open();\r\n      window.addEventListener('mouseup', this.evtMouseUp.bind(this));\r\n    }\r\n  };\r\n\r\n  private _onTouchStart(evt: TouchEvent): void {\r\n    if (this.disabled && !this.disabledClick)\r\n      return;\r\n\r\n    if (this.element!.classList.contains('active')) {\r\n      this.close();\r\n    } else {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n\r\n      var touch;\r\n\r\n      for (var i = 0; i < evt.changedTouches.length; i++) {\r\n        if ((<HTMLElement>(evt.changedTouches[i].target)).uiElement !== this)\r\n          continue;\r\n\r\n        touch = evt.changedTouches[i];\r\n\r\n        break;\r\n      }\r\n\r\n      if (!touch) return;\r\n\r\n      this.evtTouchId = touch.identifier;\r\n      this.evtMouseDist[0] = touch.pageX;\r\n      this.evtMouseDist[1] = touch.pageY;\r\n      this.element!.focus();\r\n      this.open();\r\n      window.addEventListener('touchend', this.evtTouchEnd.bind(this));\r\n    }\r\n  };\r\n\r\n  private _onLink(path: string): void {\r\n    if (this._link!.schema && this._link!.schema.has(path)) {\r\n      var field = this._link!.schema.get(path);\r\n      var options = field.options || {};\r\n      this._updateOptions(options);\r\n    }\r\n  };\r\n\r\n  private _onChange(): void {\r\n    if (!this.renderChanges)\r\n      return;\r\n\r\n    this.flash();\r\n  };\r\n\r\n  private _onKeyDown(evt: KeyboardEvent): void {\r\n    if (evt.keyCode === 27) {\r\n      this.close();\r\n      (<HTMLElement>evt.target).blur();\r\n      return;\r\n    }\r\n\r\n    if ((this.disabled && !this.disabledClick) || [38, 40].indexOf(evt.keyCode) === -1)\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    var keys = Object.keys(this.options);\r\n    var ind = keys.indexOf(this.value !== undefined ? this.value.toString() : null);\r\n\r\n    var y = evt.keyCode === 38 ? -1 : 1;\r\n\r\n    // already first item\r\n    if (y === -1 && ind <= 0)\r\n      return;\r\n\r\n    // already last item\r\n    if (y === 1 && ind === (keys.length - 1))\r\n      return\r\n\r\n    // set new item\r\n    this.value = keys[ind + y];\r\n  };\r\n\r\n  private valueToType(value: any): any {\r\n    switch (this._type) {\r\n      case 'boolean':\r\n        return !!value;\r\n        break;\r\n      case 'number':\r\n        return parseInt(value, 10);\r\n        break;\r\n      case 'string':\r\n        return '' + value;\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  private evtMouseUp(evt: MouseEvent): void {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this._onHoldSelect(<HTMLElement>evt.target, evt.pageX, evt.pageY);\r\n  };\r\n\r\n  private evtTouchEnd(evt: TouchEvent): void {\r\n    for (var i = 0; i < evt.changedTouches.length; i++) {\r\n      var touch = evt.changedTouches[i];\r\n      if (touch.identifier !== this.evtTouchId)\r\n        continue;\r\n\r\n      this.evtTouchId = -9;\r\n\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n\r\n      var target = document.elementFromPoint(touch.pageX, touch.pageY);\r\n\r\n      this._onHoldSelect(<HTMLElement>target, touch.pageX, touch.pageY, evt);\r\n    }\r\n\r\n    if (this.evtTouchSecond) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      self.close();\r\n    } else if (this.element!.classList.contains('active')) {\r\n      this.evtTouchSecond = true;\r\n    }\r\n  };\r\n\r\n\r\n  private open(): void {\r\n    if ((this.disabled && !this.disabledClick) || this.element!.classList.contains('active'))\r\n      return;\r\n\r\n    this.element!.classList.add('active');\r\n\r\n    var rect = this.element!.getBoundingClientRect();\r\n\r\n    // left\r\n    var left = Math.round(rect.left) + ((Math.round(rect.width) - this.element!.clientWidth) / 2);\r\n\r\n    // top\r\n    var top = rect.top;\r\n    if (this.optionElements[this._value]) {\r\n      top -= this.optionElements[this._value].offsetTop;\r\n      top += (Math.round(rect.height) - this.optionElements[this._value].clientHeight) / 2;\r\n    }\r\n\r\n    // limit to bottom / top of screen\r\n    if (top + this.elementOptions.clientHeight > window.innerHeight) {\r\n      top = window.innerHeight - this.elementOptions.clientHeight + 1;\r\n    } else if (top < 0) {\r\n      top = 0;\r\n    }\r\n\r\n    // top\r\n    this.elementOptions.style.top = Math.max(0, top) + 'px';\r\n    // left\r\n    this.elementOptions.style.left = left + 'px';\r\n    // right\r\n    this.elementOptions.style.width = Math.round(this.element!.clientWidth) + 'px';\r\n    // bottom\r\n    if (top <= 0 && this.elementOptions.offsetHeight >= window.innerHeight) {\r\n      this.elementOptions.style.bottom = '0';\r\n      this.elementOptions.style.height = 'auto';\r\n\r\n      // scroll to item\r\n      if (this.optionElements[this._value]) {\r\n        var off = this.optionElements[this._value].offsetTop - rect.top;\r\n        this.elementOptions.scrollTop = off;\r\n      }\r\n    } else {\r\n      this.elementOptions.style.bottom = '';\r\n      this.elementOptions.style.height = '';\r\n    }\r\n\r\n    var self = this;\r\n    this.timerClickAway = setTimeout(function () {\r\n      var looseActive = function () {\r\n        self.element!.classList.remove('active');\r\n        self.element!.blur();\r\n        window.removeEventListener('click', looseActive);\r\n      };\r\n\r\n      window.addEventListener('click', looseActive);\r\n    }, 300);\r\n\r\n    this.emit('open');\r\n  };\r\n\r\n\r\n  private close(): void {\r\n    if ((this.disabled && !this.disabledClick) || !this.element!.classList.contains('active'))\r\n      return;\r\n\r\n    window.removeEventListener('mouseup', this.evtMouseUp.bind(this));\r\n    window.removeEventListener('touchend', this.evtTouchEnd.bind(this));\r\n\r\n    if (this.timerClickAway) {\r\n      clearTimeout(this.timerClickAway);\r\n      this.timerClickAway = null;\r\n    }\r\n\r\n    this.element!.classList.remove('active');\r\n\r\n    this.elementOptions.style.top = '';\r\n    this.elementOptions.style.right = '';\r\n    this.elementOptions.style.bottom = '';\r\n    this.elementOptions.style.left = '';\r\n    this.elementOptions.style.width = '';\r\n    this.elementOptions.style.height = '';\r\n\r\n    this.emit('close');\r\n\r\n    this.evtTouchSecond = false;\r\n  };\r\n\r\n  private toggle(): void {\r\n    if (this.element!.classList.contains('active')) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  };\r\n\r\n  private _updateOptions(options?: any) {\r\n    if (options !== undefined) {\r\n      if (options instanceof Array) {\r\n        this.options = {};\r\n        this.optionsKeys = [];\r\n        for (var i = 0; i < options.length; i++) {\r\n          this.optionsKeys.push(options[i].v);\r\n          this.options[options[i].v] = options[i].t;\r\n        }\r\n      } else {\r\n        this.options = options;\r\n        this.optionsKeys = Object.keys(options);\r\n      }\r\n    }\r\n\r\n    this.optionElements = {};\r\n    this.elementOptions.innerHTML = '';\r\n\r\n    for (var i = 0; i < this.optionsKeys.length; i++) {\r\n      if (!this.options.hasOwnProperty(this.optionsKeys[i]))\r\n        continue;\r\n\r\n      var element = document.createElement('li');\r\n      element.textContent = this.options[this.optionsKeys[i]];\r\n      element.uiElement = this;\r\n      element.uiValue = this.optionsKeys[i];\r\n      element.addEventListener('touchstart', this._onOptionSelect.bind(this));\r\n      element.addEventListener('mouseover', this._onOptionHover.bind(this));\r\n      element.addEventListener('mouseout', this._onOptionOut.bind(this));\r\n\r\n      if (this._optionClassNamePrefix) {\r\n        element.classList.add(this._optionClassNamePrefix + '-' + element.textContent!.toLowerCase());\r\n      }\r\n\r\n      this.elementOptions.appendChild(element);\r\n      this.optionElements[this.optionsKeys[i]] = element;\r\n    }\r\n  };\r\n\r\n  private _onOptionSelect(evt: TouchEvent): void {\r\n    this.value = (<HTMLElement>evt.target).uiValue;\r\n  };\r\n\r\n  private _onOptionHover(): void {\r\n    this.element!.classList.add('hover');\r\n  };\r\n\r\n  private _onOptionOut(): void {\r\n    this.element!.classList.remove('hover');\r\n  };\r\n\r\n  public _onLinkChange(value: any) {\r\n    if (this.optionElements[value] === undefined)\r\n      return;\r\n\r\n    if (this.optionElements[this._oldValue]) {\r\n      this.optionElements[this._oldValue].classList.remove('selected');\r\n    }\r\n\r\n    this._value = this.valueToType(value);\r\n    this.elementValue.textContent = this.options[value];\r\n    this.optionElements[value].classList.add('selected');\r\n    this.emit('change', value);\r\n  };\r\n\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class Slider extends Element {\r\n\r\n  private _value: number;\r\n  private _lastValue: number;\r\n  public precision: number;\r\n\r\n  public elementBar: HTMLElement;\r\n  public elementHandle: HTMLElement;\r\n  public evtTouchId: any;\r\n\r\n  private _min: number;\r\n  public get min(): number {\r\n    return this._min;\r\n  }\r\n  public set min(val: number) {\r\n    if (this._min === val)\r\n      return;\r\n\r\n    this._min = val;\r\n    this._updateHandle(this._value);\r\n  }\r\n\r\n  private _max: number;\r\n  public get max(): number {\r\n    return this._max;\r\n  }\r\n  public set max(val: number) {\r\n    if (this._max === val)\r\n      return;\r\n\r\n    this._max = val;\r\n    this._updateHandle(this._value);\r\n  }\r\n\r\n  public get value(): number {\r\n    if (this._link) {\r\n      return this._link.get(this.path);\r\n    } else {\r\n      return this._value;\r\n    }\r\n  }\r\n  public set value(val: number) {\r\n    if (this._link) {\r\n      if (!this._link.set(this.path, val))\r\n        this._updateHandle(this._link.get(this.path));\r\n    } else {\r\n      if (this._max !== null && this._max < val)\r\n        val = this._max;\r\n\r\n      if (this._min !== null && this._min > val)\r\n        val = this._min;\r\n\r\n      // TODO\r\n      if (val === null) {\r\n        this.class!.add('null');\r\n      } else {\r\n        if (typeof val !== 'number')\r\n          val = 0;\r\n\r\n        val = (val !== undefined && this.precision !== null) ? parseFloat(val.toFixed(this.precision)) : val;\r\n        this.class!.remove('null');\r\n      }\r\n\r\n      this._updateHandle(val);\r\n      this._value = val;\r\n\r\n      if (this._lastValue !== val) {\r\n        this._lastValue = val;\r\n        this.emit('change', val);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public constructor(args?: SliderArgs) {\r\n    super();\r\n\r\n    args = args || {};\r\n    this._value = 0;\r\n    this._lastValue = 0;\r\n\r\n    this.precision = (args.precision === undefined) ? 2 : args.precision;\r\n    this._min = (args.min === undefined) ? 0 : args.min;\r\n    this._max = (args.max === undefined) ? 1 : args.max;\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-slider');\r\n\r\n    this.elementBar = document.createElement('div');\r\n    this.elementBar.ui = this;\r\n    this.elementBar.classList.add('bar');\r\n    this.element.appendChild(this.elementBar);\r\n\r\n    this.elementHandle = document.createElement('div');\r\n    this.elementHandle.ui = this;\r\n    this.elementHandle.tabIndex = 0;\r\n    this.elementHandle.classList.add('handle');\r\n    this.elementBar.appendChild(this.elementHandle);\r\n\r\n    this.element.addEventListener('mousedown', this._onMouseDown.bind(this), false);\r\n    this.element.addEventListener('touchstart', this._onTouchStart.bind(this), false);\r\n\r\n    this.evtTouchId = null;\r\n\r\n    this.on('change', this._onChange);\r\n\r\n    // arrows - change\r\n    this.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n\r\n  }\r\n\r\n\r\n  private evtMouseMove(evt: MouseEvent) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    this._onSlideMove(evt.pageX);\r\n  };\r\n\r\n  private evtMouseUp(evt: MouseEvent) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    this._onSlideEnd(evt.pageX);\r\n  };\r\n\r\n  private evtTouchMove(evt: TouchEvent) {\r\n    for (let i = 0; i < evt.changedTouches.length; i++) {\r\n      let touch = evt.changedTouches[i];\r\n\r\n      if (touch.identifier !== this.evtTouchId)\r\n        continue;\r\n\r\n      evt.stopPropagation();\r\n      evt.preventDefault();\r\n\r\n      this._onSlideMove(touch.pageX);\r\n      break;\r\n    }\r\n  };\r\n\r\n  private evtTouchEnd(evt: TouchEvent) {\r\n    for (let i = 0; i < evt.changedTouches.length; i++) {\r\n      let touch = evt.changedTouches[i];\r\n\r\n      if (touch.identifier !== this.evtTouchId)\r\n        continue;\r\n\r\n      evt.stopPropagation();\r\n      evt.preventDefault();\r\n\r\n      this._onSlideEnd(touch.pageX);\r\n      this.evtTouchId = null;\r\n      break;\r\n    }\r\n  };\r\n\r\n  private _onChange() {\r\n    if (!this.renderChanges)\r\n      return;\r\n\r\n    this.flash();\r\n  };\r\n\r\n  private _onKeyDown(evt: KeyboardEvent) {\r\n    if (evt.keyCode === 27)\r\n      return this.elementHandle.blur();\r\n\r\n    if (this.disabled || [37, 39].indexOf(evt.keyCode) === -1)\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    let x = evt.keyCode === 37 ? -1 : 1;\r\n\r\n    if (evt.shiftKey)\r\n      x *= 10;\r\n\r\n    let rect = this.element!.getBoundingClientRect();\r\n    let step = (this._max - this._min) / rect.width;\r\n    let value = Math.max(this._min, Math.min(this._max, this.value + x * step));\r\n    value = parseFloat(value.toFixed(this.precision));\r\n\r\n    this.renderChanges = false;\r\n    this._updateHandle(value);\r\n    this.value = value;\r\n    this.renderChanges = true;\r\n  };\r\n\r\n  public _onLinkChange(value: number) {\r\n    this._updateHandle(value);\r\n    this._value = value;\r\n    this.emit('change', value || 0);\r\n  };\r\n\r\n  private _updateHandle(value: number) {\r\n    this.elementHandle.style.left = (Math.max(0, Math.min(1, ((value || 0) - this._min) / (this._max - this._min))) * 100) + '%';\r\n  };\r\n\r\n  private _onMouseDown(evt: MouseEvent) {\r\n    if (evt.button !== 0 || this.disabled)\r\n      return;\r\n\r\n    this._onSlideStart(evt.pageX);\r\n  };\r\n\r\n  private _onTouchStart(evt: TouchEvent) {\r\n    if (this.disabled)\r\n      return;\r\n\r\n    for (let i = 0; i < evt.changedTouches.length; i++) {\r\n      let touch = evt.changedTouches[i];\r\n      if (!(<HTMLElement>(touch.target)).ui || (<HTMLElement>(touch.target)).ui !== this)\r\n        continue;\r\n\r\n      this.evtTouchId = touch.identifier;\r\n      this._onSlideStart(touch.pageX);\r\n      break;\r\n    }\r\n  };\r\n\r\n  private _onSlideStart(pageX: number) {\r\n    this.elementHandle.focus();\r\n\r\n    this.renderChanges = false;\r\n\r\n    if (this.evtTouchId === null) {\r\n      window.addEventListener('mousemove', this.evtMouseMove.bind(this), false);\r\n      window.addEventListener('mouseup', this.evtMouseUp.bind(this), false);\r\n    } else {\r\n      window.addEventListener('touchmove', this.evtTouchMove.bind(this), false);\r\n      window.addEventListener('touchend', this.evtTouchEnd.bind(this), false);\r\n    }\r\n\r\n    this.class!.add('active');\r\n\r\n    this.emit('start', this.value);\r\n\r\n    this._onSlideMove(pageX);\r\n\r\n    if (this._link && this._link.history)\r\n      this._link.history.combine = true;\r\n  };\r\n\r\n  private _onSlideMove(pageX: number) {\r\n    let rect = this.element!.getBoundingClientRect();\r\n    let x = Math.max(0, Math.min(1, (pageX - rect.left) / rect.width));\r\n\r\n    let range = this._max - this._min;\r\n    let value = (x * range) + this._min;\r\n    value = parseFloat(value.toFixed(this.precision));\r\n\r\n    this._updateHandle(value);\r\n    this.value = value;\r\n  };\r\n\r\n  private _onSlideEnd(pageX: number) {\r\n    this._onSlideMove(pageX);\r\n\r\n    this.renderChanges = true;\r\n\r\n    this.class!.remove('active');\r\n\r\n    if (this.evtTouchId === null) {\r\n      window.removeEventListener('mousemove', this.evtMouseMove.bind(this));\r\n      window.removeEventListener('mouseup', this.evtMouseUp.bind(this));\r\n    } else {\r\n      window.removeEventListener('touchmove', this.evtTouchMove.bind(this));\r\n      window.removeEventListener('touchend', this.evtTouchEnd.bind(this));\r\n    }\r\n\r\n    if (this._link && this._link.history)\r\n      this._link.history.combine = false;\r\n\r\n    this.emit('end', this.value);\r\n  };\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport interface SliderArgs {\r\n  precision?: number;\r\n  min?: number;\r\n  max?: number;\r\n}","import { Element } from \"./element\";\r\n\r\nexport class TextField extends Element {\r\n\r\n  public elementInput: HTMLInputElement;\r\n\r\n  public evtKeyChange: boolean;\r\n  public ignoreChange: boolean;\r\n  public blurOnEnter: boolean;\r\n  public refocusable: boolean;\r\n\r\n\r\n  public get value(): string {\r\n    if (this._link) {\r\n      return this._link.get(this.path);\r\n    } else {\r\n      return this.elementInput.value;\r\n    }\r\n  }\r\n  public set value(val: string) {\r\n    if (this._link) {\r\n      // TODO\r\n      // if (!this._link.set(this.path, value)) {\r\n      //   this.elementInput.value = this._link.get(this.path);\r\n      // }\r\n    } else {\r\n      if (this.elementInput.value === val)\r\n        return;\r\n\r\n      this.elementInput.value = val || '';\r\n      this.emit('change', val);\r\n    }\r\n  }\r\n\r\n\r\n  public get placeholder(): string {\r\n    return this.element!.getAttribute('placeholder') || '';\r\n  }\r\n  public set placeholder(val: string) {\r\n    if (!val) {\r\n      this.element!.removeAttribute('placeholder');\r\n    } else {\r\n      this.element!.setAttribute('placeholder', val);\r\n    }\r\n  }\r\n\r\n  public get proxy(): string {\r\n    return this.element!.getAttribute('proxy') || '';\r\n  }\r\n  public set proxy(val: string) {\r\n    if (!val) {\r\n      this.element!.removeAttribute('proxy');\r\n    } else {\r\n      this.element!.setAttribute('proxy', val);\r\n    }\r\n  }\r\n\r\n  public get keyChange(): boolean {\r\n    return this.evtKeyChange;\r\n  }\r\n  public set keyChange(val: boolean) {\r\n    if (this.evtKeyChange === !!val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.elementInput.addEventListener('keyup', this._onChange.bind(this), false);\r\n    } else {\r\n      this.elementInput.removeEventListener('keyup', this._onChange.bind(this));\r\n    }\r\n  }\r\n\r\n\r\n  public constructor(placeholder?: string, value?: string) {\r\n    super();\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-text-field');\r\n\r\n    this.elementInput = document.createElement('input');\r\n    this.elementInput.ui = this;\r\n    this.elementInput.classList.add('field');\r\n    this.elementInput.type = 'text';\r\n    this.elementInput.tabIndex = 0;\r\n    this.elementInput.addEventListener('focus', this._onInputFocus.bind(this), false);\r\n    this.elementInput.addEventListener('blur', this._onInputBlur.bind(this), false);\r\n    this.element.appendChild(this.elementInput);\r\n\r\n    if (value !== undefined)\r\n      this.value = value;\r\n\r\n    this.elementInput.addEventListener('change', this._onChange.bind(this), false);\r\n    this.elementInput.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n    this.elementInput.addEventListener('contextmenu', this._onFullSelect.bind(this), false);\r\n    this.evtKeyChange = false;\r\n    this.ignoreChange = false;\r\n\r\n    this.blurOnEnter = true;\r\n    this.refocusable = true;\r\n\r\n    this.on('disable', this._onDisable);\r\n    this.on('enable', this._onEnable);\r\n    this.on('change', this._onChangeField);\r\n\r\n    if (placeholder)\r\n      this.placeholder = placeholder;\r\n\r\n  }\r\n\r\n  public _onLinkChange(value: string): void {\r\n    this.elementInput.value = value;\r\n    this.emit('change', value);\r\n  }\r\n\r\n  private _onChange(): void {\r\n    if (this.ignoreChange) return;\r\n\r\n    this.value = this.value || '';\r\n\r\n    if (!this._link)\r\n      this.emit('change', this.value);\r\n  }\r\n\r\n  private _onKeyDown(evt: KeyboardEvent) {\r\n    if (evt.keyCode === 27) {\r\n      (<HTMLInputElement>evt.target).blur();\r\n    } else if (this.blurOnEnter && evt.keyCode === 13) {\r\n      let focused: boolean = false;\r\n\r\n      let parent: Nullable<Element> = this.parent;\r\n      while (parent) {\r\n        if (parent.element && parent.element.focus) {\r\n          parent.element.focus();\r\n          focused = true;\r\n          break;\r\n        }\r\n        parent = parent.parent;\r\n      }\r\n\r\n      if (!focused)\r\n        (<HTMLElement>evt.target).blur();\r\n    }\r\n  }\r\n\r\n  private _onFullSelect(): void {\r\n    this.elementInput.select();\r\n  }\r\n\r\n  public focus(select: boolean): void {\r\n    this.elementInput.focus();\r\n    if (select) this.elementInput.select();\r\n  }\r\n\r\n  private _onInputFocus(): void {\r\n    this.class!.add('focus');\r\n    this.emit('input:focus');\r\n  }\r\n\r\n  private _onInputBlur(): void {\r\n    this.class!.remove('focus');\r\n    this.emit('input:blur');\r\n  }\r\n\r\n  private _onDisable(): void {\r\n    this.elementInput.readOnly = true;\r\n  }\r\n\r\n  private _onEnable(): void {\r\n    this.elementInput.readOnly = false;\r\n  }\r\n\r\n  private _onChangeField(): void {\r\n    if (!this.renderChanges)\r\n      return;\r\n\r\n    this.flash();\r\n  }\r\n\r\n}","import { Element } from \"./element\";\r\n\r\nexport class TextAreaField extends Element {\r\n\r\n  public elementInput: HTMLTextAreaElement;\r\n  public evtKeyChange: boolean;\r\n  public ignoreChange: boolean;\r\n  public blurOnEnter: boolean;\r\n  public refocusable: boolean;\r\n\r\n  public get value(): string {\r\n    if (this._link) {\r\n      return this._link.get(this.path);\r\n    } else {\r\n      return this.elementInput.value;\r\n    }\r\n  }\r\n  public set value(val: string) {\r\n    if (this._link) {\r\n      // TODO\r\n      // if (!this._link.set(this.path, value)) {\r\n      //   this.elementInput.value = this._link.get(this.path);\r\n      // }\r\n\r\n      this._link.set(this.path, val);\r\n      this.elementInput.value = this._link.get(this.path);\r\n    } else {\r\n      if (this.elementInput.value === val)\r\n        return;\r\n\r\n      this.elementInput.value = val || '';\r\n      this.emit('change', val);\r\n    }\r\n  }\r\n\r\n  public get placeholder(): string {\r\n    return this.element!.getAttribute('placeholder') || '';\r\n  }\r\n  public set placeholder(val: string) {\r\n    if (!val) {\r\n      this.element!.removeAttribute('placeholder');\r\n    } else {\r\n      this.element!.setAttribute('placeholder', val);\r\n    }\r\n  }\r\n\r\n  public get keyChange(): boolean {\r\n    return this.evtKeyChange;\r\n  }\r\n  public set keyChange(val: boolean) {\r\n    if (this.evtKeyChange === !!val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.elementInput.addEventListener('keyup', this._onChange.bind(this), false);\r\n    } else {\r\n      this.elementInput.removeEventListener('keyup', this._onChange.bind(this));\r\n    }\r\n  }\r\n\r\n  public get proxy(): string {\r\n    return this.element!.getAttribute('proxy') || '';\r\n  }\r\n  public set proxy(val: string) {\r\n    if (!val) {\r\n      this.element!.removeAttribute('proxy');\r\n    } else {\r\n      this.element!.setAttribute('proxy', val);\r\n    }\r\n  }\r\n\r\n  public constructor(placeholder?: string, value?: string, blurOnEnter?: boolean) {\r\n    super();\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-textarea-field');\r\n\r\n    this.elementInput = document.createElement('textarea');\r\n    this.elementInput.ui = this;\r\n    this.elementInput.classList.add('field');\r\n    this.elementInput.tabIndex = 0;\r\n    this.elementInput.addEventListener('focus', this._onInputFocus.bind(this), false);\r\n    this.elementInput.addEventListener('blur', this._onInputBlur.bind(this), false);\r\n    this.element.appendChild(this.elementInput);\r\n\r\n    if (value !== undefined)\r\n      this.value = value;\r\n\r\n    this.elementInput.addEventListener('change', this._onChange.bind(this), false);\r\n    this.elementInput.addEventListener('keydown', this._onKeyDown.bind(this), false);\r\n    this.elementInput.addEventListener('contextmenu', this._onFullSelect.bind(this), false);\r\n    this.evtKeyChange = false;\r\n    this.ignoreChange = false;\r\n\r\n    this.blurOnEnter = blurOnEnter !== undefined ? blurOnEnter : true;\r\n    this.refocusable = true;\r\n\r\n    this.on('disable', this._onDisable);\r\n    this.on('enable', this._onEnable);\r\n    this.on('change', this._onChangeField);\r\n\r\n    if (placeholder)\r\n      this.placeholder = placeholder;\r\n\r\n  }\r\n\r\n  private _onChange(): void {\r\n    if (this.ignoreChange) return;\r\n\r\n    this.value = this.value || '';\r\n\r\n    if (!this._link)\r\n      this.emit('change', this.value);\r\n  }\r\n\r\n  private _onKeyDown(evt: KeyboardEvent): void {\r\n    if (evt.keyCode === 27) {\r\n      (<HTMLElement>evt.target).blur();\r\n    } else if (this.blurOnEnter && evt.keyCode === 13 && !evt.shiftKey) {\r\n      let focused: boolean = false;\r\n\r\n      let parent: Nullable<Element> = this.parent;\r\n      while (parent) {\r\n        if (parent.element && parent.element.focus) {\r\n          parent.element.focus();\r\n          focused = true;\r\n          break;\r\n        }\r\n        parent = parent.parent;\r\n      }\r\n\r\n      if (!focused)\r\n        (<HTMLElement>evt.target).blur();\r\n    }\r\n  }\r\n\r\n  private _onFullSelect(): void {\r\n    this.elementInput.select();\r\n  }\r\n\r\n  private _onInputFocus(): void {\r\n    this.class!.add('focus');\r\n    this.emit('input:focus');\r\n  }\r\n\r\n  private _onInputBlur(): void {\r\n    this.class!.remove('focus');\r\n    this.emit('input:blur');\r\n  }\r\n\r\n  private _onDisable(): void {\r\n    this.elementInput.readOnly = true;\r\n  }\r\n\r\n  private _onEnable() {\r\n    this.elementInput.readOnly = false;\r\n  }\r\n\r\n  private _onChangeField(): void {\r\n    if (!this.renderChanges)\r\n      return;\r\n\r\n    this.flash();\r\n  };\r\n\r\n  public focus(select: boolean) {\r\n    this.elementInput.focus();\r\n    if (select) this.elementInput.select();\r\n  }\r\n\r\n  public _onLinkChange(value: string) {\r\n    this.elementInput.value = value;\r\n    this.emit('change', value);\r\n  }\r\n\r\n\r\n\r\n}","import { ContainerElement } from \"./container-element\";\r\n\r\nexport class Tooltip extends ContainerElement {\r\n\r\n  public arrow: HTMLElement;\r\n  public hoverable: boolean;\r\n  public x: number;\r\n  public y: number;\r\n\r\n  private _align: string;\r\n  public get align(): string {\r\n    return this._align;\r\n  }\r\n  public set align(val: string) {\r\n    if (this._align === val)\r\n      return;\r\n\r\n    this.class!.remove('align-' + this._align);\r\n    this._align = val;\r\n    this.class!.add('align-' + this._align);\r\n\r\n    this._reflow();\r\n  }\r\n\r\n  public get html(): string {\r\n    return this.innerElement!.innerHTML;\r\n  }\r\n  public set html(val: string) {\r\n    if (this.innerElement!.innerHTML === val)\r\n      return;\r\n\r\n    this.innerElement!.innerHTML = val;\r\n  }\r\n\r\n  public get text(): string {\r\n    return this.innerElement!.textContent || '';\r\n  }\r\n  public set text(val: string) {\r\n    if (this.innerElement!.textContent === val)\r\n      return;\r\n\r\n    this.innerElement!.textContent = val;\r\n  }\r\n\r\n  public get flip(): boolean {\r\n    return this.class!.contains('flip');\r\n  }\r\n  public set flip(val: boolean) {\r\n    if (this.class!.contains('flip') === val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.class!.add('flip');\r\n    } else {\r\n      this.class!.remove('flip');\r\n    }\r\n\r\n    this._reflow();\r\n  }\r\n\r\n  public constructor(args?: TooltipArgs) {\r\n    super();\r\n    args = args || {};\r\n    let self = this;\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-tooltip', 'align-left');\r\n\r\n    this.innerElement = document.createElement('div');\r\n    this.innerElement.classList.add('inner');\r\n    this.element.appendChild(this.innerElement);\r\n\r\n    this.arrow = document.createElement('div');\r\n    this.arrow.classList.add('arrow');\r\n    this.element.appendChild(this.arrow);\r\n\r\n    this.hoverable = args.hoverable || false;\r\n    this.x = args.x || 0;\r\n    this.y = args.y || 0;\r\n    this._align = 'left';\r\n    this.align = args.align || 'left';\r\n\r\n    this.on('show', this._reflow);\r\n    this.hidden = args.hidden !== undefined ? args.hidden : true;\r\n    if (args.html) {\r\n      this.html = args.html;\r\n    } else {\r\n      this.text = args.text || '';\r\n    }\r\n\r\n    this.element.addEventListener('mouseover', this._onMouseOver.bind(this), false);\r\n    this.element.addEventListener('mouseleave', this._onMouseLeave.bind(this), false);\r\n\r\n  }\r\n\r\n  private _onMouseOver(evt: MouseEvent): void {\r\n    if (!this.hoverable)\r\n      return;\r\n\r\n    this.hidden = false;\r\n    this.emit('hover', evt);\r\n  }\r\n\r\n  private _onMouseLeave(): void {\r\n    if (!this.hoverable)\r\n      return;\r\n\r\n    this.hidden = true;\r\n  }\r\n\r\n  public position(x: number, y: number): void {\r\n    x = Math.floor(x);\r\n    y = Math.floor(y);\r\n\r\n    if (this.x === x && this.y === y)\r\n      return;\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this._reflow();\r\n  }\r\n\r\n  private _reflow(): void {\r\n    if (this.hidden)\r\n      return;\r\n\r\n    this.element!.style.top = '';\r\n    this.element!.style.right = '';\r\n    this.element!.style.bottom = '';\r\n    this.element!.style.left = '';\r\n\r\n    this.arrow.style.top = '';\r\n    this.arrow.style.right = '';\r\n    this.arrow.style.bottom = '';\r\n    this.arrow.style.left = '';\r\n\r\n    this.element!.style.display = 'block';\r\n\r\n    // alignment\r\n    switch (this._align) {\r\n      case 'top':\r\n        this.element!.style.top = this.y + 'px';\r\n        if (this.flip) {\r\n          this.element!.style.right = 'calc(100% - ' + this.x + 'px)';\r\n        } else {\r\n          this.element!.style.left = this.x + 'px';\r\n        }\r\n        break;\r\n      case 'right':\r\n        this.element!.style.top = this.y + 'px';\r\n        this.element!.style.right = 'calc(100% - ' + this.x + 'px)';\r\n        break;\r\n      case 'bottom':\r\n        this.element!.style.bottom = 'calc(100% - ' + this.y + 'px)';\r\n        if (this.flip) {\r\n          this.element!.style.right = 'calc(100% - ' + this.x + 'px)';\r\n        } else {\r\n          this.element!.style.left = this.x + 'px';\r\n        }\r\n        break;\r\n      case 'left':\r\n        this.element!.style.top = this.y + 'px';\r\n        this.element!.style.left = this.x + 'px';\r\n        break;\r\n    }\r\n\r\n    // limit to screen bounds\r\n    let rect = this.element!.getBoundingClientRect();\r\n\r\n    if (rect.left < 0) {\r\n      this.element!.style.left = '0px';\r\n      this.element!.style.right = '';\r\n    }\r\n    if (rect.top < 0) {\r\n      this.element!.style.top = '0px';\r\n      this.element!.style.bottom = '';\r\n    }\r\n    if (rect.right > window.innerWidth) {\r\n      this.element!.style.right = '0px';\r\n      this.element!.style.left = '';\r\n      this.arrow.style.left = Math.floor(rect.right - window.innerWidth + 8) + 'px';\r\n    }\r\n    if (rect.bottom > window.innerHeight) {\r\n      this.element!.style.bottom = '0px';\r\n      this.element!.style.top = '';\r\n      this.arrow.style.top = Math.floor(rect.bottom - window.innerHeight + 8) + 'px';\r\n    }\r\n\r\n    this.element!.style.display = '';\r\n  }\r\n\r\n  public evtHover(): void {\r\n\r\n  }\r\n\r\n  public evtBlur(): void {\r\n\r\n  }\r\n\r\n\r\n  public static attach(args: TooltipArgs): Tooltip {\r\n    let data: TooltipArgs = {\r\n      align: args.align,\r\n      hoverable: args.hoverable\r\n    }\r\n\r\n    if (args.html) {\r\n      data.html = args.html;\r\n    } else {\r\n      data.text = args.text || '';\r\n    }\r\n\r\n    let item: Tooltip = new Tooltip(data);\r\n\r\n    item.evtHover = function () {\r\n      let rect = args.target!.getBoundingClientRect();\r\n      let off = 16;\r\n\r\n      switch (item.align) {\r\n        case 'top':\r\n          if (rect.width < 64) off = rect.width / 2;\r\n          item.flip = rect.left + off > window.innerWidth / 2;\r\n          if (item.flip) {\r\n            item.position(rect.right - off, rect.bottom);\r\n          } else {\r\n            item.position(rect.left + off, rect.bottom);\r\n          }\r\n          break;\r\n        case 'right':\r\n          if (rect.height < 64) off = rect.height / 2;\r\n          item.flip = false;\r\n          item.position(rect.left, rect.top + off);\r\n          break;\r\n        case 'bottom':\r\n          if (rect.width < 64) off = rect.width / 2;\r\n          item.flip = rect.left + off > window.innerWidth / 2;\r\n          if (item.flip) {\r\n            item.position(rect.right - off, rect.top);\r\n          } else {\r\n            item.position(rect.left + off, rect.top);\r\n          }\r\n          break;\r\n        case 'left':\r\n          if (rect.height < 64) off = rect.height / 2;\r\n          item.flip = false;\r\n          item.position(rect.right, rect.top + off);\r\n          break;\r\n      }\r\n\r\n      item.hidden = false;\r\n    };\r\n\r\n    item.evtBlur = function () {\r\n      item.hidden = true;\r\n    };\r\n\r\n    args.target!.addEventListener('mouseover', item.evtHover, false);\r\n    args.target!.addEventListener('mouseout', item.evtBlur, false);\r\n\r\n    item.on('destroy', function () {\r\n      args.target!.removeEventListener('mouseover', item.evtHover);\r\n      args.target!.removeEventListener('mouseout', item.evtBlur);\r\n    });\r\n\r\n    args.root!.append(item);\r\n\r\n    return item;\r\n  }\r\n\r\n\r\n  public attachReference(args: any): void {\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport interface TooltipArgs {\r\n\r\n  target?: HTMLElement;\r\n  text?: string;\r\n  align?: string;\r\n  root?: ContainerElement;\r\n  hoverable?: boolean;\r\n  html?: string;\r\n  x?: number;\r\n  y?: number;\r\n  hidden?: boolean;\r\n\r\n}","import { Element } from \"./element\";\r\nimport { Tree } from \"./tree\";\r\nimport { TextField } from \"./text-field\";\r\nimport { Observer } from \"../lib\";\r\n\r\nexport class TreeItem extends Element {\r\n\r\n  public tree: Nullable<Tree>;\r\n\r\n  public elementTitle: HTMLElement;\r\n  public elementIcon: HTMLElement;\r\n  public elementText: HTMLElement;\r\n\r\n  public _children: number;\r\n  public selectable: boolean;\r\n\r\n  public _onMouseUp: any;\r\n  private _dragRelease: any;\r\n\r\n  private _dragging: boolean;\r\n  private _allowDrop: boolean;\r\n\r\n  public _dragId: number = -1;\r\n\r\n  public entity!: Observer;\r\n\r\n  public get selected(): boolean {\r\n    return this.class!.contains('selected');\r\n  }\r\n  public set selected(val: boolean) {\r\n    if (this.class!.contains('selected') === !!val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.class!.add('selected');\r\n\r\n      this.emit('select');\r\n      if (this.tree)\r\n        this.tree.emit('select', this);\r\n\r\n    } else {\r\n      this.class!.remove('selected');\r\n\r\n      this.emit('deselect');\r\n      if (this.tree)\r\n        this.tree.emit('deselect', this);\r\n    }\r\n  }\r\n\r\n  public get text(): string {\r\n    return this.elementText.textContent || '';\r\n  }\r\n  public set text(val: string) {\r\n    if (this.elementText.textContent === val)\r\n      return;\r\n    this.elementText.textContent = val;\r\n  }\r\n\r\n  public get open(): boolean {\r\n    return this.class!.contains('open');\r\n  }\r\n  public set open(val: boolean) {\r\n    if (this.class!.contains('open') === !!val)\r\n      return;\r\n\r\n    if (val) {\r\n      this.class!.add('open');\r\n      this.emit('open');\r\n      this.tree!.emit('open', this);\r\n    } else {\r\n      this.class!.remove('open');\r\n      this.emit('close');\r\n      this.tree!.emit('close', this);\r\n    }\r\n\r\n    if(this.element) {\r\n      \r\n    }\r\n  }\r\n\r\n  public get prev(): Nullable<TreeItem> {\r\n    if ((<HTMLElement>this.element).previousElementSibling && (<HTMLElement>(<HTMLElement>this.element).previousElementSibling).ui && (<HTMLElement>(<HTMLElement>this.element).previousElementSibling).ui instanceof TreeItem) {\r\n      return (<TreeItem>(<HTMLElement>(<HTMLElement>this.element).previousElementSibling).ui);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public get next(): Nullable<TreeItem> {\r\n    if ((<HTMLElement>this.element).nextElementSibling && (<HTMLElement>(<HTMLElement>this.element).nextElementSibling).ui && (<HTMLElement>(<HTMLElement>this.element).nextElementSibling).ui instanceof TreeItem) {\r\n      return (<TreeItem>(<HTMLElement>(<HTMLElement>this.element).nextElementSibling).ui);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  public get allowDrop(): boolean {\r\n    return this._allowDrop;\r\n  }\r\n  public set allowDrop(val: boolean) {\r\n    this._allowDrop = val;\r\n  }\r\n\r\n\r\n  public constructor(args: TreeItemArgs) {\r\n    super();\r\n\r\n    let self = this;\r\n    args = args || {};\r\n\r\n    this.tree = null;\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-tree-item');\r\n\r\n    if (args.classList) {\r\n      args.classList.forEach(function (className: string): void {\r\n        self.element!.classList.add(className);\r\n      }, this);\r\n    }\r\n\r\n    this.elementTitle = document.createElement('div');\r\n    this.elementTitle.classList.add('title');\r\n    this.elementTitle.draggable = true;\r\n    this.elementTitle.tabIndex = 0;\r\n    this.elementTitle.ui = this;\r\n    this.element.appendChild(this.elementTitle);\r\n\r\n    this.elementIcon = document.createElement('span');\r\n    this.elementIcon.classList.add('icon');\r\n    this.elementTitle.appendChild(this.elementIcon);\r\n\r\n    this.elementText = document.createElement('span');\r\n    this.elementText.textContent = args.text || '';\r\n    this.elementText.classList.add('text');\r\n    this.elementTitle.appendChild(this.elementText);\r\n\r\n    this._children = 0;\r\n    this.selectable = true;\r\n\r\n    this._onMouseUp = function (evt: MouseEvent) {\r\n      window.removeEventListener('mouseup', self._dragRelease);\r\n      self._dragRelease = null;\r\n\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n\r\n      self._dragging = false;\r\n      self.emit('dragend');\r\n    };\r\n\r\n    this.elementTitle.addEventListener('click', this._onClick, false);\r\n    this.elementTitle.addEventListener('dblclick', this._onDblClick, false);\r\n\r\n    this._dragRelease = null;\r\n    this._dragging = false;\r\n    this._allowDrop = (args.allowDrop !== undefined ? !!args.allowDrop : true);\r\n\r\n    this.elementTitle.addEventListener('mousedown', this._onMouseDown, false);\r\n    this.elementTitle.addEventListener('dragstart', this._onDragStart, false);\r\n    this.elementTitle.addEventListener('mouseover', this._onMouseOver, false);\r\n\r\n    this.on('destroy', this._onDestroy);\r\n    this.on('append', this._onAppend);\r\n    this.on('remove', this._onRemove);\r\n    this.on('select', this._onSelect);\r\n    this.on('deselect', this._onDeselect);\r\n\r\n    this.elementTitle.addEventListener('keydown', this._onKeyDown, false);\r\n\r\n\r\n  }\r\n\r\n  // TODO\r\n  public child(index: number): HTMLElement {\r\n    return <HTMLElement>this.element!.children[index + 1];\r\n  };\r\n\r\n  private _onClick(evt: MouseEvent): void {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n\r\n    // 可能点击title或者title子项\r\n    if (!(<TreeItem>htmlEle.ui)) {\r\n      if (htmlEle.parentElement && <TreeItem>(htmlEle.parentElement).ui) {\r\n        htmlEle = htmlEle.parentElement;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (evt.button !== 0 || !(<TreeItem>htmlEle.ui).selectable)\r\n      return;\r\n\r\n    let rect = htmlEle.getBoundingClientRect();\r\n\r\n    if ((<TreeItem>htmlEle.ui)._children && (evt.clientX - rect.left) < 0) {\r\n      (<TreeItem>htmlEle.ui).open = !(<TreeItem>htmlEle.ui).open;\r\n    } else {\r\n      (<TreeItem>htmlEle.ui).tree!._onItemClick((<TreeItem>htmlEle.ui));\r\n      evt.stopPropagation();\r\n    }\r\n  };\r\n\r\n  private _onDblClick(evt: MouseEvent): void {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n\r\n    // 可能点击title或者title子项\r\n    if (!(<TreeItem>htmlEle.ui)) {\r\n      if (htmlEle.parentElement && <TreeItem>(htmlEle.parentElement).ui) {\r\n        htmlEle = htmlEle.parentElement;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!(<TreeItem>htmlEle.ui).tree!.allowRenaming || evt.button !== 0)\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n    let rect = htmlEle.getBoundingClientRect();\r\n\r\n    if ((<TreeItem>htmlEle.ui)._children && (evt.clientX - rect.left) < 0) {\r\n      return;\r\n    } else {\r\n      (<TreeItem>htmlEle.ui)._onRename(true);\r\n    }\r\n  };\r\n\r\n  private _onMouseDown(evt: MouseEvent): void {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n\r\n    // 可能点击title或者title子项\r\n    if (!(<TreeItem>htmlEle.ui)) {\r\n      if (htmlEle.parentElement && <TreeItem>(htmlEle.parentElement).ui) {\r\n        htmlEle = htmlEle.parentElement;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if ((<TreeItem>htmlEle.ui).tree && !(<TreeItem>htmlEle.ui).tree!.draggable)\r\n      return;\r\n\r\n    evt.stopPropagation();\r\n\r\n  };\r\n\r\n  private _onDragStart = function (evt: MouseEvent): void {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n    \r\n    // 可能点击title或者title子项\r\n    if (!(<TreeItem>htmlEle.ui)) {\r\n      if (htmlEle.parentElement && <TreeItem>(htmlEle.parentElement).ui) {\r\n        htmlEle = htmlEle.parentElement;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!(<TreeItem>htmlEle.ui).tree!.draggable) {\r\n      evt.stopPropagation();\r\n      evt.preventDefault();\r\n      return;\r\n    }\r\n\r\n    (<TreeItem>htmlEle.ui)._dragging = true;\r\n\r\n    if ((<TreeItem>htmlEle.ui)._dragRelease)\r\n      window.removeEventListener('mouseup', (<TreeItem>htmlEle.ui)._dragRelease);\r\n\r\n    (<TreeItem>htmlEle.ui)._dragRelease = (<TreeItem>htmlEle.ui)._onMouseUp;\r\n    window.addEventListener('mouseup', (<TreeItem>htmlEle.ui)._dragRelease, false);\r\n\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    console.log('drag start');\r\n\r\n    (<TreeItem>htmlEle.ui).emit('dragstart');\r\n  };\r\n\r\n  private _onMouseOver(evt: MouseEvent): void {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n\r\n    // 可能点击title或者title子项\r\n    if (!(<TreeItem>htmlEle.ui)) {\r\n      if (htmlEle.parentElement && <TreeItem>(htmlEle.parentElement).ui) {\r\n        htmlEle = htmlEle.parentElement;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    evt.stopPropagation();\r\n    (<TreeItem>htmlEle.ui).emit('mouseover', evt);\r\n\r\n  };\r\n\r\n\r\n  private _onSelect(): void {\r\n    this.elementTitle.focus();\r\n  };\r\n\r\n  private _onDeselect(): void {\r\n    this.elementTitle.blur();\r\n  };\r\n\r\n\r\n  private _onKeyDown(evt: KeyboardEvent) {\r\n    let htmlEle: HTMLElement = <HTMLElement>evt.target;\r\n\r\n    if (!(<TreeItem>htmlEle.ui)) return;\r\n\r\n    let currentItem: TreeItem = <TreeItem>htmlEle.ui;\r\n\r\n    if (evt.target && htmlEle.tagName.toLowerCase() === 'input')\r\n      return;\r\n\r\n    if ([9, 38, 40, 37, 39].indexOf(evt.keyCode) === -1)\r\n      return;\r\n\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n\r\n    let selectedItem: Nullable<TreeItem> = null;\r\n    let item: Nullable<TreeItem> = null;\r\n    switch (evt.keyCode) {\r\n      case 9: // tab\r\n        break;\r\n      case 40: // down\r\n        let downItem = currentItem.element!.nextElementSibling;\r\n        if (downItem)\r\n          item = <TreeItem>(<HTMLElement>downItem).ui;\r\n\r\n        if (currentItem._children && currentItem.open) {\r\n          let first = currentItem.element!.firstElementChild!.nextElementSibling;\r\n          if (first && (<HTMLElement>first).ui) {\r\n            selectedItem = <TreeItem>(<HTMLElement>first).ui;\r\n            // first.ui.selected = true;\r\n          } else if (item) {\r\n            selectedItem = item;\r\n            // item.selected = true;\r\n          }\r\n        } else if (item) {\r\n          selectedItem = item;\r\n          // item.selected = true;\r\n        } else if (currentItem.parent && currentItem.parent instanceof TreeItem) {\r\n          let parent: Nullable<TreeItem> = currentItem.parent;\r\n\r\n          let findNext = function (from: TreeItem): Nullable<TreeItem> {\r\n            let next = from.next;\r\n            if (next) {\r\n              selectedItem = next;\r\n              // next.selected = true;\r\n            } else if (from.parent instanceof TreeItem) {\r\n              return from.parent;\r\n            }\r\n            return null;\r\n          };\r\n          parent = findNext(parent);\r\n          while (parent) {\r\n            parent = findNext(parent);\r\n          }\r\n        }\r\n        break;\r\n      case 38: // up\r\n        let itemUp = currentItem.element!.previousElementSibling;\r\n        if (itemUp)\r\n          item = <TreeItem>(<HTMLElement>itemUp).ui;\r\n\r\n        if (item) {\r\n          if (item._children && item.open && item !== currentItem.parent) {\r\n            let lastItem = item.element!.lastElementChild;\r\n            let last: Nullable<TreeItem> = null;\r\n            if (lastItem && (<HTMLElement>lastItem).ui)\r\n              last = <TreeItem>(<HTMLElement>lastItem).ui;\r\n\r\n            if (last) {\r\n              let findLast = function (inside: TreeItem): Nullable<TreeItem> {\r\n                if (inside._children && inside.open) {\r\n                  if (inside.element!.lastElementChild && (<HTMLElement>inside.element!.lastElementChild).ui) {\r\n                    return <TreeItem>(<HTMLElement>inside.element!.lastElementChild).ui;\r\n                  }\r\n                  return null;\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n\r\n              let found: boolean = false;\r\n              while (!found) {\r\n                let deeper: Nullable<TreeItem> = findLast(last);\r\n                if (deeper) {\r\n                  last = deeper\r\n                } else {\r\n                  found = true;\r\n                }\r\n              }\r\n\r\n              selectedItem = last;\r\n              // last.selected = true;\r\n            } else {\r\n              selectedItem = item;\r\n              // item.selected = true;\r\n            }\r\n          } else {\r\n            selectedItem = item;\r\n            // item.selected = true;\r\n          }\r\n        } else if (currentItem.parent && currentItem.parent instanceof TreeItem) {\r\n          selectedItem = currentItem.parent;\r\n          // this.ui.parent.selected = true;\r\n        }\r\n\r\n        break;\r\n      case 37: // left (close)\r\n        if (currentItem.parent !== currentItem.tree && currentItem.open)\r\n          currentItem.open = false;\r\n        break;\r\n      case 39: // right (open)\r\n        if (currentItem._children && !currentItem.open)\r\n          currentItem.open = true;\r\n        break;\r\n    }\r\n\r\n    if (selectedItem) {\r\n      if (!(Tree._ctrl && Tree._ctrl()) && !(Tree._shift && Tree._shift()))\r\n        currentItem.tree!.clear();\r\n      selectedItem.selected = true;\r\n    }\r\n  }\r\n\r\n  // TODO,关联En\r\n  private _onRename(select: boolean): void {\r\n    if (select) {\r\n      this.tree!.clear();\r\n      this.tree!._onItemClick(this);\r\n    }\r\n\r\n    var self = this;\r\n    this.class!.add('rename');\r\n    console.log('rename');\r\n    // add remaning field\r\n    var field = new TextField();\r\n    field.parent = this;\r\n    field.renderChanges = false;\r\n    field.value = this.text;\r\n    field.elementInput.readOnly = !this.tree!.allowRenaming;\r\n    field.elementInput.addEventListener('blur', function () {\r\n      field.destroy();\r\n      self.class!.remove('rename');\r\n    }, false);\r\n    field.on('click', function (evt: MouseEvent) {\r\n      evt.stopPropagation();\r\n    });\r\n    field.element!.addEventListener('dblclick', function (evt) {\r\n      evt.stopPropagation();\r\n    });\r\n    field.on('change', function (value: string) {\r\n      value = value.trim();\r\n      if (value) {\r\n        // TODO\r\n        // if (self.entity) {\r\n        //   self.entity.set('name', value);\r\n        // }\r\n\r\n        self.emit('rename', value);\r\n      }\r\n\r\n      field.destroy();\r\n      self.class!.remove('rename');\r\n    });\r\n    this.elementTitle.appendChild(field.element!);\r\n    field.elementInput.focus();\r\n    field.elementInput.select();\r\n  }\r\n\r\n  private _onDestroy(): void {\r\n    this.elementTitle.removeEventListener('click', this._onClick);\r\n    this.elementTitle.removeEventListener('dblclick', this._onDblClick);\r\n    this.elementTitle.removeEventListener('mousedown', this._onMouseDown);\r\n    this.elementTitle.removeEventListener('dragstart', this._onDragStart);\r\n    this.elementTitle.removeEventListener('mouseover', this._onMouseOver);\r\n    this.elementTitle.removeEventListener('keydown', this._onKeyDown);\r\n  }\r\n\r\n  private _onAppend(item: TreeItem): void {\r\n    if (this.parent)\r\n      this.parent.emit('append', item);\r\n  }\r\n\r\n  private _onRemove(item: TreeItem): void {\r\n    if (this.parent)\r\n      this.parent.emit('remove', item);\r\n  }\r\n\r\n\r\n  public focus(): void {\r\n    this.elementTitle.focus();\r\n  }\r\n\r\n  public append(item: TreeItem): void {\r\n    if (this._children === 1) {\r\n      this.element!.children[1].classList.remove('single');\r\n    }\r\n\r\n    item.parent = this;\r\n    this.element!.appendChild(item.element!);\r\n    this._children++;\r\n\r\n    if (this._children === 1) {\r\n      item.class!.add('single');\r\n      this.class!.add('container');\r\n    } else if (this._children > 1) {\r\n      item.class!.remove('single');\r\n    }\r\n\r\n    let appendChildren = function (treeItem: TreeItem): void {\r\n      treeItem.emit('append', treeItem);\r\n\r\n      if (treeItem._children) {\r\n        for (let i = 1; i < treeItem.element!.children.length; i++) {\r\n          appendChildren(<TreeItem>(<HTMLElement>treeItem.element!.children[i]).ui);\r\n        }\r\n      }\r\n    };\r\n    appendChildren(item);\r\n  }\r\n\r\n  public appendBefore(item: TreeItem, referenceItem: TreeItem): void {\r\n    if (this._children === 1) {\r\n      this.element!.children[1].classList.remove('single');\r\n    }\r\n\r\n    item.parent = this;\r\n    this.element!.insertBefore(item.element!, referenceItem.element);\r\n    this._children++;\r\n\r\n    if (this._children === 1) {\r\n      item.class!.add('single');\r\n      this.class!.add('container');\r\n    } else if (this._children > 1) {\r\n      item.class!.remove('single');\r\n    }\r\n\r\n    var appendChildren = function (treeItem: TreeItem): void {\r\n      treeItem.emit('append', treeItem);\r\n\r\n      if (treeItem._children) {\r\n        for (var i = 1; i < treeItem.element!.children.length; i++) {\r\n          appendChildren(<TreeItem>(<HTMLElement>treeItem.element!.children[i]).ui);\r\n        }\r\n      }\r\n    };\r\n    appendChildren(item);\r\n  }\r\n\r\n  public appendAfter(item: TreeItem, referenceItem: TreeItem): void {\r\n    item.parent = this;\r\n\r\n    // might be last\r\n    if (!referenceItem)\r\n      this.append(item);\r\n\r\n    this.element!.insertBefore(item.element!, referenceItem.element!.nextElementSibling);\r\n    this._children++;\r\n\r\n    if (this._children === 1) {\r\n      item.class!.add('single');\r\n      this.class!.add('container');\r\n    } else if (this._children === 2) {\r\n      this.element!.children[1].classList.remove('single');\r\n    }\r\n\r\n    var appendChildren = function (treeItem: TreeItem): void {\r\n      treeItem.emit('append', treeItem);\r\n\r\n      if (treeItem._children) {\r\n        for (var i = 1; i < treeItem.element!.children.length; i++) {\r\n          appendChildren(<TreeItem>(<HTMLElement>treeItem.element!.children[i]).ui);\r\n        }\r\n      }\r\n    };\r\n    appendChildren(item);\r\n  }\r\n\r\n\r\n  public remove(item: TreeItem): void {\r\n    if (!this._children || !this.element!.contains(item.element))\r\n      return;\r\n\r\n    this.element!.removeChild(item.element!);\r\n    this._children--;\r\n\r\n    if (this._children === 0) {\r\n      this.class!.remove('container');\r\n    } else if (this._children === 1 && this.element!.children.length > 2) {\r\n      this.element!.children[1].classList.add('single');\r\n    }\r\n\r\n    let removeChildren = function (treeItem: TreeItem): void {\r\n      treeItem.emit('remove', treeItem);\r\n\r\n      if (treeItem._children) {\r\n        for (let i: number = 1; i < treeItem.element!.children.length; i++) {\r\n          if ((<HTMLElement>treeItem.element!.children[i]).ui && (<HTMLElement>treeItem.element!.children[i]).ui instanceof TreeItem) {\r\n            removeChildren(<TreeItem>(<HTMLElement>treeItem.element!.children[i]).ui);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    removeChildren(item);\r\n  }\r\n}","import { ContainerElement } from \"./container-element\";\r\nimport { TreeItem } from \"./tree-item\";\r\nimport { Hotkeys } from \"../editor\";\r\nimport { Element } from \"./element\";\r\n\r\nexport class Tree extends ContainerElement {\r\n\r\n  private elementDrag: HTMLElement;\r\n  public draggable: boolean;\r\n  public _dragging: boolean;\r\n  public _dragItems: TreeItem[] = [];\r\n  public _dragOver: Nullable<TreeItem>;\r\n  private _dragArea: string;\r\n  private _evtDragMove: any;\r\n  public reordering: boolean;\r\n  public dragInstant: boolean;\r\n  private _selected: TreeItem[] = [];\r\n\r\n  public allowRenaming: boolean = true;\r\n\r\n  public get selected(): TreeItem[] {\r\n    return this._selected.slice(0);\r\n  }\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('ui-tree');\r\n\r\n\r\n    this.elementDrag = document.createElement('div');\r\n    this.elementDrag.classList.add('drag-handle');\r\n    this.element.appendChild(this.elementDrag);\r\n\r\n    let self = this;\r\n    this.elementDrag.addEventListener('mousemove', function (evt: MouseEvent): void {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n\r\n      self._onDragMove(evt);\r\n    });\r\n    this.element.addEventListener('mouseleave', function (evt: MouseEvent): void {\r\n      self._onDragOut();\r\n    });\r\n\r\n    this.on('select', this._onSelect);\r\n    this.on('deselect', this._onDeselect);\r\n    this.on('append', this._onAppend);\r\n    this.on('remove', this._onRemove);\r\n\r\n    this.draggable = true;\r\n    this._dragging = false;\r\n    this._dragItems = [];\r\n    this._dragOver = null;\r\n    this._dragArea = 'inside';\r\n    this._evtDragMove = null;\r\n    this.reordering = true;\r\n    this.dragInstant = true;\r\n\r\n    this._selected = [];\r\n\r\n  }\r\n\r\n  public static _ctrl(): boolean {\r\n    return Hotkeys.ctrl;\r\n  }\r\n\r\n  public static _shift(): boolean {\r\n    return Hotkeys.shift;\r\n  }\r\n\r\n\r\n  private _onDragMove(evt: MouseEvent): void {\r\n    if (!this.draggable)\r\n      return;\r\n\r\n    this._hoverCalculate(evt);\r\n    this.emit('dragmove', evt);\r\n  }\r\n\r\n  private _hoverCalculate(evt: MouseEvent): void {\r\n    if (!this.draggable || !this._dragOver)\r\n      return;\r\n\r\n    let rect = this.elementDrag.getBoundingClientRect();\r\n    let area: number = Math.floor((evt.clientY - rect.top) / rect.height * 5);\r\n\r\n    let oldArea = this._dragArea;\r\n    let oldDragOver = this._dragOver;\r\n\r\n    if (this._dragOver.parent === this) {\r\n      let parent = false;\r\n      for (let i = 0; i < this._dragItems.length; i++) {\r\n        if (this._dragItems[i].parent === this._dragOver) {\r\n          parent = true;\r\n          this._dragOver = null;\r\n          break;\r\n        }\r\n      }\r\n      if (!parent)\r\n        this._dragArea = 'inside';\r\n    } else {\r\n      // check if we are trying to drag item inside any of its children\r\n      let invalid = false;\r\n      for (let i = 0; i < this._dragItems.length; i++) {\r\n        let parent = this._dragOver.parent;\r\n        while (parent) {\r\n          if (parent === this._dragItems[i]) {\r\n            invalid = true;\r\n            break;\r\n          }\r\n\r\n          parent = parent.parent;\r\n        }\r\n      }\r\n\r\n      if (invalid) {\r\n        this._dragOver = null;\r\n      } else if (this.reordering && area <= 1 && this._dragItems.indexOf(this._dragOver.prev!) === -1) {\r\n        this._dragArea = 'before';\r\n      } else if (this.reordering && area >= 4 && this._dragItems.indexOf(this._dragOver.next!) === -1 && (this._dragOver._children === 0 || !this._dragOver.open)) {\r\n        this._dragArea = 'after';\r\n      } else {\r\n        let parent = false;\r\n        if (this.reordering && this._dragOver.open) {\r\n          for (let i = 0; i < this._dragItems.length; i++) {\r\n            if (this._dragItems[i].parent === this._dragOver) {\r\n              parent = true;\r\n              this._dragArea = 'before';\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (!parent)\r\n          this._dragArea = 'inside';\r\n      }\r\n    }\r\n\r\n    if (oldArea !== this._dragArea || oldDragOver !== this._dragOver)\r\n      this._updateDragHandle();\r\n  }\r\n\r\n\r\n  public _onItemClick(item: TreeItem): void {\r\n    if (Tree._ctrl && Tree._ctrl()) {\r\n      // 按住ctrl键，针对某个item，按第1次选中，按第2次取消选中\r\n      item.selected = !item.selected;\r\n    } else if (Tree._shift && Tree._shift() && this._selected.length) {\r\n      // shift按住以后，往上往下都可进行选择，不断添加选择项，不减少\r\n      console.log('shift按钮')\r\n      let from: TreeItem = this._selected[this._selected.length - 1];\r\n      let to: TreeItem = item;\r\n\r\n      let up: TreeItem[] = [];\r\n      let down: TreeItem[] = [];\r\n\r\n      let prev = function (refItem: TreeItem): Nullable<TreeItem> {\r\n        if (!refItem) return null;\r\n        let result: Nullable<TreeItem> = null;\r\n        let prevItem = refItem.element!.previousElementSibling;\r\n        let item: Nullable<TreeItem> = null;\r\n        if (prevItem) item = <TreeItem>(<HTMLElement>prevItem).ui;\r\n\r\n        if (item) {\r\n          if (refItem.parent && refItem.parent === item && refItem.parent instanceof TreeItem) {\r\n            result = refItem.parent;\r\n          } else if (item.open && item._children) {  // 没有open貌似就没有选中\r\n            // element above is open, find last available element\r\n            let lastItem = item.element!.lastElementChild;\r\n            let last: Nullable<TreeItem> = null;\r\n            if (lastItem && (<HTMLElement>lastItem).ui)\r\n              last = <TreeItem>(<HTMLElement>lastItem).ui;\r\n\r\n            if (last) {\r\n              let findLast = function (inside: Nullable<TreeItem>) {\r\n                if (inside && inside.open && inside._children) {\r\n                  if (inside.element!.lastElementChild && (<HTMLElement>inside.element!.lastChild).ui) {\r\n                    return <TreeItem>(<HTMLElement>inside.element!.lastChild).ui;\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                } else {\r\n                  return null;\r\n                }\r\n              }\r\n\r\n              let found: boolean = false;\r\n              while (!found) {\r\n                let deeper: Nullable<TreeItem> = findLast(last);\r\n                if (deeper) {\r\n                  last = deeper;\r\n                } else {\r\n                  found = true;\r\n                }\r\n              }\r\n\r\n              result = last;\r\n            } else {\r\n              result = item;\r\n            }\r\n          } else {\r\n            result = item;\r\n          }\r\n        }\r\n\r\n        return result;\r\n      };\r\n\r\n      let next = function (refItem: TreeItem): Nullable<TreeItem> {\r\n        let result: Nullable<TreeItem> = null;\r\n        let nextItem = refItem.element!.nextElementSibling;\r\n        let item: Nullable<TreeItem> = null;\r\n        if (nextItem) item = <TreeItem>(<HTMLElement>nextItem).ui;\r\n\r\n        if (refItem.open && refItem._children) {\r\n          // select a child\r\n          let first = refItem.element!.firstElementChild!.nextElementSibling;\r\n          if (first && (<HTMLElement>first).ui) {\r\n            result = <TreeItem>(<HTMLElement>first).ui;\r\n          } else if (item) {\r\n            result = item;\r\n          }\r\n        } else if (item) {\r\n          // select next item\r\n          result = item;\r\n        } else if (refItem.parent && refItem.parent instanceof TreeItem) {\r\n          // no next element, go to parent\r\n          let parent: Nullable<TreeItem> = refItem.parent;\r\n\r\n          let findNext = function (from: TreeItem): Nullable<TreeItem> {\r\n            let next: Nullable<TreeItem> = from.next;\r\n            if (next) {\r\n              result = next;\r\n            } else if (from.parent instanceof TreeItem) {\r\n              return from.parent;\r\n            }\r\n            return null;\r\n          }\r\n          parent = findNext(parent);\r\n          while (parent) {\r\n            parent = findNext(parent);\r\n          }\r\n        }\r\n\r\n        return result;\r\n      };\r\n\r\n      let done: boolean = false;\r\n      let path: TreeItem[] = [];\r\n      let lookUp: boolean = true;\r\n      let lookDown: boolean = true;\r\n      let lookingUp: boolean = true;\r\n      // TODO\r\n      while (!done) {\r\n        lookingUp = !lookingUp;\r\n\r\n        let item: Nullable<TreeItem> = null;\r\n        let lookFrom: TreeItem = from;\r\n        if ((!lookDown || lookingUp) && lookUp) {\r\n          // up\r\n          if (up.length)\r\n            lookFrom = up[up.length - 1];\r\n\r\n          item = prev(lookFrom);\r\n          if (item) {\r\n            up.push(item);\r\n\r\n            if (item === to) {\r\n              done = true;\r\n              path = up;\r\n              break;\r\n            }\r\n          } else {\r\n            lookUp = false;\r\n          }\r\n        } else if (lookDown) {\r\n          // down\r\n          if (down.length)\r\n            lookFrom = down[down.length - 1];\r\n\r\n          item = next(lookFrom);\r\n          if (item) {\r\n            down.push(item);\r\n\r\n            if (item === to) {\r\n              done = true;\r\n              path = down;\r\n              break;\r\n            }\r\n          } else {\r\n            lookDown = false;\r\n          }\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n\r\n      if (path) {\r\n        for (let i = 0; i < path.length; i++) {\r\n          path[i].selected = true;\r\n        }\r\n      }\r\n\r\n\r\n    } else {\r\n      let selected: boolean = item.selected && ((this._selected.indexOf(item) === -1) || (this._selected.length === 1 && this._selected[0] === item));\r\n      this.clear();\r\n\r\n      if (!selected)\r\n        item.selected = true;\r\n    }\r\n  }\r\n\r\n  private _onSelect(item: TreeItem): void {\r\n    this._selected.push(item);\r\n  }\r\n\r\n  private _onDeselect(item: TreeItem): void {\r\n    let index: number = this._selected.indexOf(item);\r\n    if (index === -1)\r\n      return;\r\n\r\n    this._selected.splice(index, 1);\r\n  }\r\n\r\n\r\n  private _onDragStart(item: TreeItem): void {\r\n    if (!this.draggable || this._dragging)\r\n      return;\r\n\r\n    this._dragItems = [];\r\n\r\n    if (this._selected && this._selected.length > 1 && this._selected.indexOf(item) !== -1) {\r\n      let items: TreeItem[] = [];\r\n      let index: { [key: number]: TreeItem } = {};\r\n      let defaultLevel = -1;\r\n\r\n      // build index\r\n      for (let i: number = 0; i < this._selected.length; i++) {\r\n        // cant drag parent\r\n        if (this._selected[i].parent === this)\r\n          return;\r\n\r\n        this._selected[i]._dragId = i + 1;\r\n        index[this._selected[i]._dragId] = this._selected[i];\r\n      }\r\n\r\n      for (let i: number = 0; i < this._selected.length; i++) {\r\n        let s: TreeItem = this._selected[i];\r\n        let level: number = 0;\r\n        let child: boolean = false;\r\n        let parent: Nullable<Element> = this._selected[i].parent;\r\n        if (!parent || !(parent instanceof TreeItem))\r\n          parent = null;\r\n\r\n        while (parent) {\r\n          if (parent._dragId && index[parent._dragId]) {\r\n            // child, to be ignored\r\n            child = true;\r\n            break;\r\n          }\r\n\r\n          parent = parent.parent;\r\n          if (!(parent instanceof TreeItem)) {\r\n            parent = null;\r\n            break;\r\n          }\r\n\r\n          level++;\r\n        }\r\n\r\n        if (!child) {\r\n          if (defaultLevel === -1) {\r\n            defaultLevel = level;\r\n          } else if (defaultLevel !== level) {\r\n            // multi-level drag no allowed\r\n            return;\r\n          }\r\n\r\n          items.push(this._selected[i]);\r\n        }\r\n      }\r\n\r\n      // clean ids\r\n      for (let i: number = 0; i < this._selected.length; i++)\r\n        this._selected[i]._dragId = -1;\r\n\r\n      this._dragItems = items;\r\n\r\n      // sort items by their number of apperance in hierarchy\r\n      if (items.length > 1) {\r\n        let commonParent: Nullable<TreeItem> = null;\r\n\r\n        // find common parent\r\n        let findCommonParent = function (items: TreeItem[]): TreeItem[] {\r\n          let parents: TreeItem[] = [];\r\n          for (let i: number = 0; i < items.length; i++) {\r\n            if (items[i].parent && items[i].parent instanceof TreeItem) {\r\n              if (parents.indexOf(<TreeItem>items[i].parent) === -1)\r\n                parents.push(<TreeItem>items[i].parent);\r\n            }\r\n          }\r\n          if (parents.length === 1) {\r\n            commonParent = parents[0];\r\n          }\r\n          return parents;\r\n        };\r\n        let parents: TreeItem[] = items;\r\n        while (!commonParent && parents)\r\n          parents = findCommonParent(parents);\r\n\r\n        // calculate ind number\r\n        for (let i: number = 0; i < items.length; i++) {\r\n          let ind: number = 0;\r\n\r\n          let countChildren = function (item: TreeItem): number {\r\n            if (!item._children) {\r\n              return 0;\r\n            } else {\r\n              let count: number = 0;\r\n              let children = item.element!.children;\r\n              for (let i: number = 0; i < children.length; i++) {\r\n                if ((<HTMLElement>children[i]).ui && (<HTMLElement>children[i]).ui instanceof TreeItem)\r\n                  count += countChildren(<TreeItem>(<HTMLElement>children[i]).ui) + 1;\r\n              }\r\n              return count;\r\n            }\r\n          };\r\n\r\n          let scanUpForIndex = function (item: TreeItem): Nullable<TreeItem> {\r\n            ind++;\r\n            let sibling = item.element!.previousElementSibling;\r\n            let siblingItem: Nullable<TreeItem> = null;\r\n            if (sibling && (<HTMLElement>sibling).ui && (<HTMLElement>sibling).ui instanceof TreeItem) {\r\n              siblingItem = <TreeItem>(<HTMLElement>sibling).ui;\r\n            }\r\n\r\n            if (siblingItem) {\r\n              ind += countChildren(siblingItem);\r\n              return siblingItem;\r\n            } else if (item.parent === commonParent) {\r\n              return null;\r\n            } else {\r\n              if (item.parent instanceof TreeItem) {\r\n                return <TreeItem>item.parent;\r\n              } else {\r\n                return null;\r\n              }\r\n            }\r\n          };\r\n\r\n          let prev: Nullable<TreeItem> = scanUpForIndex(items[i]);\r\n          while (prev)\r\n            prev = scanUpForIndex(prev);\r\n\r\n          items[i]._dragId = ind;\r\n        }\r\n\r\n        items.sort(function (a, b) {\r\n          return a._dragId - b._dragId;\r\n        });\r\n      }\r\n    } else {\r\n      // single drag\r\n      this._dragItems = [item];\r\n    }\r\n\r\n    if (this._dragItems.length) {\r\n      this._dragging = true;\r\n\r\n      this.class!.add('dragging');\r\n      for (let i: number = 0; i < this._dragItems.length; i++) {\r\n        this._dragItems[i].class!.add('dragged');\r\n      }\r\n\r\n      this._updateDragHandle();\r\n      this.emit('dragstart');\r\n    }\r\n  }\r\n\r\n  private _onDragOver(item: TreeItem, evt: MouseEvent): void {\r\n    if (!this.draggable || !this._dragging || (this._dragItems.indexOf(item) !== -1 && !this._dragOver) || this._dragOver === item)\r\n      return;\r\n\r\n    let dragOver = null;\r\n\r\n    if (item.allowDrop) {\r\n      if (this._dragItems.indexOf(item) === -1)\r\n        dragOver = item;\r\n\r\n      if (this._dragOver === null && dragOver)\r\n        this.emit('dragin');\r\n    }\r\n\r\n\r\n\r\n    this._dragOver = dragOver;\r\n\r\n    this._updateDragHandle();\r\n    this._onDragMove(evt);\r\n  }\r\n\r\n  private _onDragEnd(): void {\r\n    if (!this.draggable || !this._dragging)\r\n      return;\r\n\r\n    // TODO\r\n    let reparentedItems: ReparentDragItems[] = [];\r\n    this._dragging = false;\r\n    this.class!.remove('dragging');\r\n\r\n    let lastDraggedItem: Nullable<TreeItem> = this._dragOver;\r\n\r\n    for (let i: number = 0; i < this._dragItems.length; i++) {\r\n      this._dragItems[i].class!.remove('dragged');\r\n\r\n      if (this._dragOver && this._dragOver !== this._dragItems[i]) {\r\n\r\n        let oldParent: Nullable<Element> = this._dragItems[i].parent;\r\n\r\n        if (oldParent !== this._dragOver || this._dragArea !== 'inside') {\r\n          let newParent: Nullable<Element> = null;\r\n\r\n          if (this.dragInstant) {\r\n            if (this._dragItems[i].parent)\r\n              (<TreeItem>(this._dragItems[i].parent!)).remove(this._dragItems[i]);\r\n          }\r\n\r\n          if (this._dragArea === 'before') {\r\n            newParent = this._dragOver.parent;\r\n            if (this.dragInstant)\r\n              (<TreeItem>this._dragOver.parent).appendBefore(this._dragItems[i], this._dragOver);\r\n          } else if (this._dragArea === 'inside') {\r\n            newParent = this._dragOver;\r\n            if (this.dragInstant) {\r\n              this._dragOver.open = true;\r\n              this._dragOver.append(this._dragItems[i]);\r\n            }\r\n          } else if (this._dragArea === 'after') {\r\n            newParent = this._dragOver.parent;\r\n            if (this.dragInstant) {\r\n              (<TreeItem>this._dragOver.parent).appendAfter(this._dragItems[i], lastDraggedItem!);\r\n              lastDraggedItem = this._dragItems[i];\r\n            }\r\n          }\r\n\r\n          reparentedItems.push({\r\n            item: this._dragItems[i],\r\n            old: oldParent,\r\n            new: newParent\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.emit('reparent', reparentedItems);\r\n\r\n    this._dragItems = [];\r\n\r\n    if (this._dragOver)\r\n      this._dragOver = null;\r\n\r\n    this.emit('dragend');\r\n  }\r\n\r\n  private _onDragOut(): void {\r\n    if (!this.draggable || !this._dragging || !this._dragOver)\r\n      return;\r\n\r\n    this._dragOver = null;\r\n    this._updateDragHandle();\r\n    this.emit('dragout');\r\n  }\r\n\r\n  public _updateDragHandle(): void {\r\n    if (!this.draggable || !this._dragging)\r\n      return;\r\n\r\n    if (!this._dragOver) {\r\n      this.elementDrag.classList.add('hidden');\r\n    } else {\r\n      let rect = this._dragOver.elementTitle.getBoundingClientRect();\r\n\r\n      this.elementDrag.classList.remove('before', 'inside', 'after', 'hidden')\r\n      this.elementDrag.classList.add(this._dragArea);\r\n\r\n      this.elementDrag.style.top = rect.top + 'px';\r\n      this.elementDrag.style.left = rect.left + 'px';\r\n      this.elementDrag.style.width = (rect.width - 4) + 'px';\r\n    }\r\n  }\r\n\r\n  private _onAppend(item: TreeItem): void {\r\n    item.tree = this;\r\n\r\n    let self = this;\r\n\r\n    item.on('dragstart', function () {\r\n      // can't drag root  TODO\r\n      if (item.parent === self)\r\n        return;\r\n\r\n      self._onDragStart(item);\r\n    });\r\n\r\n    item.on('mouseover', function (evt: MouseEvent) {\r\n      self._onDragOver(item, evt);\r\n    });\r\n\r\n    item.on('dragend', function () {\r\n      self._onDragEnd();\r\n    });\r\n  }\r\n\r\n  private _onRemove(item: TreeItem): void {\r\n    item.tree = null;\r\n    item.unbind('dragstart');\r\n    item.unbind('mouseover');\r\n    item.unbind('dragend');\r\n  }\r\n\r\n\r\n  public clear(): void {\r\n    if (!this._selected.length)\r\n      return;\r\n\r\n    let i: number = this._selected.length;\r\n    while (i--) {\r\n      this._selected[i].selected = false;\r\n    }\r\n    this._selected = [];\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport interface ReparentDragItems {\r\n  item: TreeItem;\r\n  old: Nullable<Element>;\r\n  new: Nullable<Element>;\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9fYnJvd3Nlci1wYWNrQDYuMS4wQGJyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIm5vZGVfbW9kdWxlcy9fcHJvY2Vzc0AwLjExLjEwQHByb2Nlc3MvYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9fdGltZXJzLWJyb3dzZXJpZnlAMS40LjJAdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcyIsInNyYy9lZGl0b3IvYXNzZXRzL2Fzc2V0cy50cyIsInNyYy9lZGl0b3IvYXNzZXRzL2luZGV4LnRzIiwic3JjL2VkaXRvci9hdHRyaWJ1dGVzL2F0dHJpYnV0ZXMtZW50aXR5LnRzIiwic3JjL2VkaXRvci9hdHRyaWJ1dGVzL2F0dHJpYnV0ZXMtaGlzdG9yeS50cyIsInNyYy9lZGl0b3IvYXR0cmlidXRlcy9hdHRyaWJ1dGVzLXBhbmVsLnRzIiwic3JjL2VkaXRvci9hdHRyaWJ1dGVzL2F0dHJpYnV0ZXMtcmVmZXJlbmNlLnRzIiwic3JjL2VkaXRvci9hdHRyaWJ1dGVzL2luZGV4LnRzIiwic3JjL2VkaXRvci9lZGl0b3IudHMiLCJzcmMvZWRpdG9yL2VudGl0eS9lbnRpdGllcy50cyIsInNyYy9lZGl0b3IvZW50aXR5L2VudGl0eS1sb2FkLnRzIiwic3JjL2VkaXRvci9lbnRpdHkvZW50aXR5LnRzIiwic3JjL2VkaXRvci9lbnRpdHkvaW5kZXgudHMiLCJzcmMvZWRpdG9yL2hpZXJhcmNoeS9oaWVyYXJjaHktY29udGV4dC1tZW51LnRzIiwic3JjL2VkaXRvci9oaWVyYXJjaHkvaGllcmFyY2h5LW1lbnUudHMiLCJzcmMvZWRpdG9yL2hpZXJhcmNoeS9oaWVyYXJjaHktcGFuZWwudHMiLCJzcmMvZWRpdG9yL2hpZXJhcmNoeS9oaWVyYXJjaHktc2VhcmNoLnRzIiwic3JjL2VkaXRvci9oaWVyYXJjaHkvaGllcmFyY2h5LnRzIiwic3JjL2VkaXRvci9oaWVyYXJjaHkvaW5kZXgudHMiLCJzcmMvZWRpdG9yL2hvdGtleXMudHMiLCJzcmMvZWRpdG9yL2luZGV4LnRzIiwic3JjL2VkaXRvci9pbml0aWFsaXplLWFmdGVyLnRzIiwic3JjL2VkaXRvci9pbml0aWFsaXplLWJlZm9yZS50cyIsInNyYy9lZGl0b3IvbGF5b3V0LnRzIiwic3JjL2VkaXRvci9taWRkbGV3YXJlL2NvbXBvbmVudC50cyIsInNyYy9lZGl0b3IvbWlkZGxld2FyZS9nYW1lb2JqZWN0LnRzIiwic3JjL2VkaXRvci9taWRkbGV3YXJlL2luZGV4LnRzIiwic3JjL2VkaXRvci9taWRkbGV3YXJlL21pZGRsZS1jb250YWluZXIudHMiLCJzcmMvZWRpdG9yL21pZGRsZXdhcmUvdHJhbnNmb3JtLnRzIiwic3JjL2VkaXRvci9zZWxlY3Rvci9pbmRleC50cyIsInNyYy9lZGl0b3Ivc2VsZWN0b3Ivc2VsZWN0b3ItaGlzdG9yeS50cyIsInNyYy9lZGl0b3Ivc2VsZWN0b3Ivc2VsZWN0b3IudHMiLCJzcmMvZWRpdG9yL3Rvb2xiYXIvaW5kZXgudHMiLCJzcmMvZWRpdG9yL3Rvb2xiYXIvdG9vbGJhci10b3AtY29udHJvbC50cyIsInNyYy9lZGl0b3IvdXRpbGl0eS9jb21wb25lbnRzLWxvZ29zLnRzIiwic3JjL2VkaXRvci91dGlsaXR5L2NvbnRleHQtbWVudS50cyIsInNyYy9lZGl0b3IvdXRpbGl0eS9kZWJ1Zy50cyIsInNyYy9lZGl0b3IvdXRpbGl0eS9ldmVudHByb3h5LnRzIiwic3JjL2VkaXRvci91dGlsaXR5L2d1aWQudHMiLCJzcmMvZWRpdG9yL3V0aWxpdHkvaW5kZXgudHMiLCJzcmMvZWRpdG9yL3ZpZXdwb3J0L2luZGV4LnRzIiwic3JjL2VkaXRvci92aWV3cG9ydC92aWV3cG9ydC1hcHBsaWNhdGlvbi50cyIsInNyYy9lZGl0b3Ivdmlld3BvcnQvdmlld3BvcnQtZXhwYW5kLnRzIiwic3JjL2VkaXRvci92aWV3cG9ydC92aWV3cG9ydC1pbnN0YW5jZS1jcmVhdGUudHMiLCJzcmMvZWRpdG9yL3ZpZXdwb3J0L3ZpZXdwb3J0LnRzIiwic3JjL2VkaXRvci93ZWIvcmVhbHRpbWUudHMiLCJzcmMvZW5naW5lL2JhYnlsb24tZW5naW5lLnRzIiwic3JjL2VuZ2luZS9pbmRleC50cyIsInNyYy9lbmdpbmUvdmVyeS1lbmdpbmUudHMiLCJzcmMvaW5kZXgudHMiLCJzcmMvbGliL2V2ZW50cy50cyIsInNyYy9saWIvaW5kZXgudHMiLCJzcmMvbGliL29ic2VydmVyLWxpc3QudHMiLCJzcmMvbGliL29ic2VydmVyLnRzIiwic3JjL21haW4udHMiLCJzcmMvdWkvYnViYmxlLnRzIiwic3JjL3VpL2J1dHRvbi50cyIsInNyYy91aS9jYW52YXMudHMiLCJzcmMvdWkvY2hlY2tib3gudHMiLCJzcmMvdWkvY29kZS50cyIsInNyYy91aS9jb2xvci1maWVsZC50cyIsInNyYy91aS9jb250YWluZXItZWxlbWVudC50cyIsInNyYy91aS9lbGVtZW50LnRzIiwic3JjL3VpL2dyaWQtaXRlbS50cyIsInNyYy91aS9ncmlkLnRzIiwic3JjL3VpL2ltYWdlLWZpZWxkLnRzIiwic3JjL3VpL2luZGV4LnRzIiwic3JjL3VpL2xhYmVsLnRzIiwic3JjL3VpL2xpbmsudHMiLCJzcmMvdWkvbGlzdC1pdGVtLnRzIiwic3JjL3VpL2xpc3QudHMiLCJzcmMvdWkvbWVudS1pdGVtLnRzIiwic3JjL3VpL21lbnUudHMiLCJzcmMvdWkvbnVtYmVyLWZpZWxkLnRzIiwic3JjL3VpL292ZXJsYXkudHMiLCJzcmMvdWkvcGFuZWwudHMiLCJzcmMvdWkvcHJvZ3Jlc3MudHMiLCJzcmMvdWkvc2VsZWN0LWZpZWxkLnRzIiwic3JjL3VpL3NsaWRlci50cyIsInNyYy91aS90ZXh0LWZpZWxkLnRzIiwic3JjL3VpL3RleHRhcmVhLWZpZWxkLnRzIiwic3JjL3VpL3Rvb2x0aXAudHMiLCJzcmMvdWkvdHJlZS1pdGVtLnRzIiwic3JjL3VpL3RyZWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4TEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1VBaWdERTtRQVFGLE1BQU0sQ0FBQyxFQUFFLENBQUMsa0JBQWtCLEVBQUU7WUFDNUIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxjQUFj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QUUsRUFBRTtnQkFDWCxJQUFJLEVBQUUsTUFBTTthQUNiO1lBQ0QsR0FBRyxFQUFFO2dCQUNILE9BQU8sRUFBRSxFQUFFO2dCQUNYLElBQUksRUFBRSxNQUFNO2FBQ2I7WUFDRCxHQUFHLEVBQUU7Z0JBQ0gsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsSUFBSSxFQUFFLE1BQU07YUFDYjtZQUNELEdBQUcsRUFBRTtnQkFDSCxPQUFPLEVBQUUsRUFBRTtnQkFDWCxJQUFJLEVBQUUsTUFBTTthQUNiO1lBQ0QsR0FBRyxFQUFFO2dCQUNILE9BQU8sRUFBRSxFQUFFO2dCQUNYLElBQUksRUFBRSxNQUFNO2FBQ2I7WUFDRCxHQUFHLEVBQUU7Z0JBQ0gsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsSUFBSSxFQUFFLE1BQU07YUFDYjtZQUNELEdBQUcsRUFBRTtnQkFDSCxPQUFPLEVBQUUsRUFBRTtnQkFDWCxJQUFJLEVBQUUsTUFBTTthQUNiO1lBQ0QsR0FBRyxFQUFFO2dCQUNILE9BQU8sRUFBRSxFQUFFO2dCQUNYLElBQUksRUFBRSxNQUFNO2FBQ2I7WUFDRCxHQUFHLEVBQUU7Z0JBQ0gsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsSUFBSSxFQUFFLE1BQU07YUFDYjtZQUNELEdBQUcsRUFBRTtnQkFDSCxPQUFPLEVBQUUsRUFBRTtnQkFDWCxJQUFJLEVBQUUsTUFBTTthQUNiO1lBQ0QsR0FBRyxFQUFFO2dCQUNILE9BQU8sRUFBRSxFQUFFO2dCQUNYLElBQUksRUFBRSxNQUFNO2FBQ2I7WUFDRCxHQUFHLEVBQUU7Z0JBQ0gsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsSUFBSSxFQUFFLE1BQU07YUFDYjtZQUNELEdBQUcsRUFBRTtnQkFDSCxPQUFPLEVBQUUsRUFBRTtnQkFDWCxJQUFJLEVBQUUsTUFBTTthQUNiO1lBQ0QsR0FBRyxFQUFFO2dCQUNILE9BQU8sRUFBRSxFQUFFO2dCQUNYLElBQUksRUFBRSxNQUFNO2FBQ2I7WUFDRCxHQUFHLEVBQUU7Z0JBQ0gsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsSUFBSSxFQUFFLE1BQU07YUFD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QUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7U0FDcEM7UUFDRCxJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBR0gsV0FBQztBQUFELENBdG5CQSxBQXNuQkMsQ0F0bkJ5QixvQ0FBZ0IsR0FzbkJ6QztBQXRuQlksb0JBQUkiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwidmFyIG5leHRUaWNrID0gcmVxdWlyZSgncHJvY2Vzcy9icm93c2VyLmpzJykubmV4dFRpY2s7XG52YXIgYXBwbHkgPSBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHk7XG52YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG52YXIgaW1tZWRpYXRlSWRzID0ge307XG52YXIgbmV4dEltbWVkaWF0ZUlkID0gMDtcblxuLy8gRE9NIEFQSXMsIGZvciBjb21wbGV0ZW5lc3NcblxuZXhwb3J0cy5zZXRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldFRpbWVvdXQsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCB3aW5kb3csIGFyZ3VtZW50cyksIGNsZWFySW50ZXJ2YWwpO1xufTtcbmV4cG9ydHMuY2xlYXJUaW1lb3V0ID1cbmV4cG9ydHMuY2xlYXJJbnRlcnZhbCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHsgdGltZW91dC5jbG9zZSgpOyB9O1xuXG5mdW5jdGlvbiBUaW1lb3V0KGlkLCBjbGVhckZuKSB7XG4gIHRoaXMuX2lkID0gaWQ7XG4gIHRoaXMuX2NsZWFyRm4gPSBjbGVhckZuO1xufVxuVGltZW91dC5wcm90b3R5cGUudW5yZWYgPSBUaW1lb3V0LnByb3RvdHlwZS5yZWYgPSBmdW5jdGlvbigpIHt9O1xuVGltZW91dC5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fY2xlYXJGbi5jYWxsKHdpbmRvdywgdGhpcy5faWQpO1xufTtcblxuLy8gRG9lcyBub3Qgc3RhcnQgdGhlIHRpbWUsIGp1c3Qgc2V0cyB1cCB0aGUgbWVtYmVycyBuZWVkZWQuXG5leHBvcnRzLmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0sIG1zZWNzKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSBtc2Vjcztcbn07XG5cbmV4cG9ydHMudW5lbnJvbGwgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSAtMTtcbn07XG5cbmV4cG9ydHMuX3VucmVmQWN0aXZlID0gZXhwb3J0cy5hY3RpdmUgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcblxuICB2YXIgbXNlY3MgPSBpdGVtLl9pZGxlVGltZW91dDtcbiAgaWYgKG1zZWNzID49IDApIHtcbiAgICBpdGVtLl9pZGxlVGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiBvblRpbWVvdXQoKSB7XG4gICAgICBpZiAoaXRlbS5fb25UaW1lb3V0KVxuICAgICAgICBpdGVtLl9vblRpbWVvdXQoKTtcbiAgICB9LCBtc2Vjcyk7XG4gIH1cbn07XG5cbi8vIFRoYXQncyBub3QgaG93IG5vZGUuanMgaW1wbGVtZW50cyBpdCBidXQgdGhlIGV4cG9zZWQgYXBpIGlzIHRoZSBzYW1lLlxuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSB0eXBlb2Ygc2V0SW1tZWRpYXRlID09PSBcImZ1bmN0aW9uXCIgPyBzZXRJbW1lZGlhdGUgOiBmdW5jdGlvbihmbikge1xuICB2YXIgaWQgPSBuZXh0SW1tZWRpYXRlSWQrKztcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IGZhbHNlIDogc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuXG4gIGltbWVkaWF0ZUlkc1tpZF0gPSB0cnVlO1xuXG4gIG5leHRUaWNrKGZ1bmN0aW9uIG9uTmV4dFRpY2soKSB7XG4gICAgaWYgKGltbWVkaWF0ZUlkc1tpZF0pIHtcbiAgICAgIC8vIGZuLmNhbGwoKSBpcyBmYXN0ZXIgc28gd2Ugb3B0aW1pemUgZm9yIHRoZSBjb21tb24gdXNlLWNhc2VcbiAgICAgIC8vIEBzZWUgaHR0cDovL2pzcGVyZi5jb20vY2FsbC1hcHBseS1zZWd1XG4gICAgICBpZiAoYXJncykge1xuICAgICAgICBmbi5hcHBseShudWxsLCBhcmdzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZuLmNhbGwobnVsbCk7XG4gICAgICB9XG4gICAgICAvLyBQcmV2ZW50IGlkcyBmcm9tIGxlYWtpbmdcbiAgICAgIGV4cG9ydHMuY2xlYXJJbW1lZGlhdGUoaWQpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGlkO1xufTtcblxuZXhwb3J0cy5jbGVhckltbWVkaWF0ZSA9IHR5cGVvZiBjbGVhckltbWVkaWF0ZSA9PT0gXCJmdW5jdGlvblwiID8gY2xlYXJJbW1lZGlhdGUgOiBmdW5jdGlvbihpZCkge1xuICBkZWxldGUgaW1tZWRpYXRlSWRzW2lkXTtcbn07IiwiaW1wb3J0IHsgUGFuZWwsIFByb2dyZXNzIH0gZnJvbSBcIi4uLy4uL3VpXCI7XHJcbmltcG9ydCB7IFZlcnlFbmdpbmUgfSBmcm9tIFwiLi4vLi4vZW5naW5lXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQXNzZXRzIHtcclxuXHJcbiAgXHJcblxyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgbGV0IGFzc2V0c092ZXJsYXk6IFBhbmVsID0gbmV3IFBhbmVsKCk7XHJcbiAgICBhc3NldHNPdmVybGF5LmNsYXNzIS5hZGQoJ292ZXJsYXknKTtcclxuICAgIFZlcnlFbmdpbmUuYXNzZXRQYW5lbC5hcHBlbmQoYXNzZXRzT3ZlcmxheSk7XHJcblxyXG4gICAgbGV0IHA6IFByb2dyZXNzID0gbmV3IFByb2dyZXNzKCk7XHJcbiAgICBwLm9uKCdwcm9ncmVzczoxMDAnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGFzc2V0c092ZXJsYXkuaGlkZGVuID0gdHJ1ZTtcclxuICAgIH0pO1xyXG4gICAgYXNzZXRzT3ZlcmxheS5hcHBlbmQocCk7XHJcbiAgICBwLmhpZGRlbiA9IGZhbHNlO1xyXG4gICAgcC5wcm9ncmVzcyA9IDE7XHJcblxyXG4gICAgXHJcblxyXG4gIH1cclxuXHJcblxyXG5cclxuXHJcbn0iLCJleHBvcnQgKiBmcm9tICcuL2Fzc2V0cyc7IiwiaW1wb3J0IHsgUGFuZWwgfSBmcm9tICcuLi8uLi91aSc7XHJcbmltcG9ydCB7IE9ic2VydmVyIH0gZnJvbSAnLi4vLi4vbGliJztcclxuXHJcbmV4cG9ydCBjbGFzcyBBdHRyaWJ1dGVzRW50aXR5IHtcclxuXHJcblxyXG4gIHB1YmxpYyBwYW5lbENvbXBvbmVudHM6IFBhbmVsO1xyXG5cclxuICBwdWJsaWMgaXRlbXM6IGFueTtcclxuXHJcblxyXG4gIHB1YmxpYyBpbnNwZWN0RXZlbnRzOiBFdmVudEhhbmRsZVtdID0gW107XHJcblxyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLnBhbmVsQ29tcG9uZW50cyA9IGVkaXRvci5jYWxsKCdhdHRyaWJ1dGVzOmFkZFBhbmVsJyk7XHJcblxyXG4gICAgLyogKioqc2NlbmXnu5PmnoQqKipcclxuICAgICAqIDEuIOiHquWumuS5iee7k+aehO+8jOWFs+iBlGFzc2V0c+aVsOaNru+8jOmBv+WFjeaVsOaNruWGl+S9meS4i+i9ve+8m1xyXG4gICAgICogMi4gXHJcbiAgICAqL1xyXG5cclxuICAgIC8qICoqKmdhbWXnu5PmnoQqKipcclxuICAgICAqIDEuIGdhbWXkuI5zY2VuZemdnuW4uOexu+S8vO+8jOS9huaYr+S4jeW6lOivpeaYr+WQjOS4gOS4qu+8m1xyXG4gICAgICogMi4g5oOz5Yqe5rOV5LuOc2NlbmXkuK3lpI3liLblh7rkuIDkuKrkuIDmqKHkuIDmoLfnmoTlnLrmma/vvIznm7TmjqXov5DooYzvvIzkuI7ljp/lp4tzY2VuZeiEseemu+i/nuaOpeWFs+ezu++8m1xyXG4gICAgICogMy4g5pGE5YOP5py6562J57uE5Lu26Ieq5a6a5LmJ5pu05paw77ybXHJcbiAgICAgKiA0LiDov5DooYzml7bvvIxnYW1l5ZKMc2NlbmXlpoLkvZXljY/lkIzvvIznsbvkvLx1bml0eei/kOihjOi/h+eoi+S4ree8lui+ke+8m1xyXG4gICAgKi9cclxuXHJcbiAgICAvKiAqKiphc3NldHPnu5PmnoQqKipcclxuICAgICAqIDEuIOWkmuenjei1hOa6kO+8jOWmguaooeWei+OAgeWbvueJh+OAgeWjsOmfs+etie+8m1xyXG4gICAgICogMi4g5L2/55So6Ieq5a6a5LmJ5qC85byP77ybXHJcbiAgICAqL1xyXG5cclxuICAgIC8qKirljp/lp4vmlbDmja7vvJpcclxuICAgICAqIDEuYmFieWxvbjtcclxuICAgICAqICDvvIgx77yJYmFieWxvbueUqOS6juWujOaVtOeahHNjZW5l5o+P6L+w77yM5omA5Lul5YyF5ZCr5LqG6K645aSa5LiN5b+F6KaB55qE5L+h5oGv77yM6ZyA6KaB5Yig6Zmk77yM5q+U5aaC54Gv5YWJ44CB55u45py6562J77ybXHJcbiAgICAgKiAg77yIMu+8ieeUqOaIt+WPr+iDveWIhuWkmuasoeS4iuS8oOaooeWei++8jOWBh+iuvuS4iuS8oOeahOaYr2JhYnlsb27mgI7kuYjlip7vvJ/lkI7nu63kvb/nlKjml7bvvIzlj6/og73lj6rpnIDopoHpg6jliIbmqKHlnovvvIzlnKh1bml0eeS4re+8jOaYr+aKiuaVtOS4quaooeWei+S4oui/m3NjZW5l6YeM6Z2i77yM54S25ZCO5LuOc2NlbmXph4zpnaLmi5bliqjpooTliLbku7bliLBQcm9qZWN077yM5Yib5bu65Ye65paw55qE5pWw5o2u57uT5p6E77ybXHJcbiAgICAgKiAg77yIM++8ieWKoOi9veaooeWei++8jOS9v+eUqGJhYnlsb27nmoTnjrDmnInlh73mlbDvvIzmlK/mjIEuYmFieWxvbuOAgS5nbHRm44CBc3Rs44CBb2Jq77ybXHJcbiAgICAgKiAyLmdsVEY7XHJcbiAgICAgKiAzLmZieDtcclxuICAgICAqIDQub2JqL3N0bDtcclxuXHJcbiAgICAqL1xyXG5cclxuICAgIHRoaXMuaW5pdCgpO1xyXG5cclxuICB9XHJcblxyXG5cclxuICBwcml2YXRlIGluaXQoKTogdm9pZCB7XHJcblxyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuXHJcbiAgICBsZXQgaW5zcGVjdEV2ZW50cyA9IFtdO1xyXG5cclxuICAgIC8qKiBcclxuICAgIC8vIGxpbmsgZGF0YSB0byBmaWVsZHMgd2hlbiBpbnNwZWN0aW5nXHJcbiAgICBlZGl0b3Iub24oJ2F0dHJpYnV0ZXM6aW5zcGVjdFtlbnRpdHldJywgZnVuY3Rpb24gKGVudGl0aWVzOiBPYnNlcnZlcltdKSB7XHJcbiAgICAgIGlmIChlbnRpdGllcy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgZWRpdG9yLmNhbGwoJ2F0dHJpYnV0ZXM6aGVhZGVyJywgZW50aXRpZXMubGVuZ3RoICsgJyBFbnRpdGllcycpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGVkaXRvci5jYWxsKCdhdHRyaWJ1dGVzOmhlYWRlcicsICdFbnRpdHknKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCFzZWxmLml0ZW1zKVxyXG4gICAgICAgIHNlbGYuaW5pdGlhbGl6ZSgpO1xyXG5cclxuICAgICAgbGV0IHJvb3QgPSBlZGl0b3IuY2FsbCgnYXR0cmlidXRlcy5yb290UGFuZWwnKTtcclxuXHJcbiAgICAgIGlmICghc2VsZi5pdGVtcy5wYW5lbC5wYXJlbnQpXHJcbiAgICAgICAgcm9vdC5hcHBlbmQoc2VsZi5pdGVtcy5wYW5lbCk7XHJcblxyXG4gICAgICBpZiAoIXNlbGYuaXRlbXMucGFuZWxDb21wb25lbnRzLnBhcmVudClcclxuICAgICAgICByb290LmFwcGVuZChzZWxmLml0ZW1zLnBhbmVsQ29tcG9uZW50cyk7XHJcblxyXG4gICAgICAvLyBkaXNhYmxlIHJlbmRlckNoYW5nZXNcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcmdzRmllbGRzQ2hhbmdlcy5sZW5ndGg7IGkrKylcclxuICAgICAgICBhcmdzRmllbGRzQ2hhbmdlc1tpXS5yZW5kZXJDaGFuZ2VzID0gZmFsc2U7XHJcblxyXG4gICAgICAvLyBsaW5rIGZpZWxkc1xyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyZ3NMaXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgYXJnc0xpc3RbaV0ubGluayA9IGVudGl0aWVzO1xyXG4gICAgICAgIGFyZ3NMaXN0W2ldLmxpbmtGaWVsZCgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBlbmFibGUgcmVuZGVyQ2hhbmdlc1xyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyZ3NGaWVsZHNDaGFuZ2VzLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgIGFyZ3NGaWVsZHNDaGFuZ2VzW2ldLnJlbmRlckNoYW5nZXMgPSB0cnVlO1xyXG5cclxuICAgICAgLy8gZGlzYWJsZSBmaWVsZHMgaWYgbmVlZGVkXHJcbiAgICAgIHNlbGYudG9nZ2xlRmllbGRzKGVudGl0aWVzKTtcclxuXHJcbiAgICAgIHNlbGYub25JbnNwZWN0KGVudGl0aWVzKTtcclxuICAgIH0pO1xyXG4gICAgKi9cclxuXHJcbiAgICBlZGl0b3Iub24oJ2F0dHJpYnV0ZXM6Y2xlYXInLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHNlbGYub25Vbmluc3BlY3QoKTtcclxuICAgIH0pO1xyXG5cclxuICB9XHJcblxyXG5cclxuXHJcblxyXG4gIHByaXZhdGUgaW5pdGlhbGl6ZSgpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuXHJcbiAgcHJpdmF0ZSB0b2dnbGVGaWVsZHMoc2VsZWN0ZWRFbnRpdGllczogT2JzZXJ2ZXJbXSk6IHZvaWQge1xyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgbGV0IGRpc2FibGVQb3NpdGlvblhZID0gZmFsc2U7XHJcbiAgICBsZXQgZGlzYWJsZVJvdGF0aW9uID0gZmFsc2U7XHJcbiAgICBsZXQgZGlzYWJsZVNjYWxlID0gZmFsc2U7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IHNlbGVjdGVkRW50aXRpZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgbGV0IGVudGl0eSA9IHNlbGVjdGVkRW50aXRpZXNbaV07XHJcblxyXG4gICAgICAvLyBkaXNhYmxlIHJvdGF0aW9uIC8gc2NhbGUgZm9yIDJEIHNjcmVlbnNcclxuICAgICAgLy8gaWYgKGVudGl0eS5nZXQoJ2NvbXBvbmVudHMuc2NyZWVuLnNjcmVlblNwYWNlJykpIHtcclxuICAgICAgLy8gICBkaXNhYmxlUm90YXRpb24gPSB0cnVlO1xyXG4gICAgICAvLyAgIGRpc2FibGVTY2FsZSA9IHRydWU7XHJcbiAgICAgIC8vIH1cclxuXHJcbiAgICAgIC8vIGRpc2FibGUgcG9zaXRpb24gb24gdGhlIHgveSBheGlzIGZvciBlbGVtZW50cyB0aGF0IGFyZSBwYXJ0IG9mIGEgbGF5b3V0IGdyb3VwXHJcbiAgICAgIGlmIChlZGl0b3IuY2FsbCgnZW50aXRpZXM6bGF5b3V0OmlzVW5kZXJDb250cm9sT2ZMYXlvdXRHcm91cCcsIGVudGl0eSkpIHtcclxuICAgICAgICBkaXNhYmxlUG9zaXRpb25YWSA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzZWxmLml0ZW1zLmZpZWxkUG9zaXRpb25bMF0uZW5hYmxlZCA9ICFkaXNhYmxlUG9zaXRpb25YWTtcclxuICAgIHNlbGYuaXRlbXMuZmllbGRQb3NpdGlvblsxXS5lbmFibGVkID0gIWRpc2FibGVQb3NpdGlvblhZO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSsrKSB7XHJcbiAgICAgIHNlbGYuaXRlbXMuZmllbGRSb3RhdGlvbltpXS5lbmFibGVkID0gIWRpc2FibGVSb3RhdGlvbjtcclxuICAgICAgc2VsZi5pdGVtcy5maWVsZFNjYWxlW2ldLmVuYWJsZWQgPSAhZGlzYWJsZVNjYWxlO1xyXG5cclxuICAgICAgc2VsZi5pdGVtcy5maWVsZFJvdGF0aW9uW2ldLnJlbmRlckNoYW5nZXMgPSAhZGlzYWJsZVJvdGF0aW9uO1xyXG4gICAgICBzZWxmLml0ZW1zLmZpZWxkU2NhbGVbaV0ucmVuZGVyQ2hhbmdlcyA9ICFkaXNhYmxlU2NhbGU7XHJcbiAgICB9XHJcblxyXG4gIH07XHJcblxyXG5cclxuICBwcml2YXRlIG9uSW5zcGVjdChlbnRpdGllczogT2JzZXJ2ZXJbXSk6IHZvaWQge1xyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIHRoaXMub25Vbmluc3BlY3QoKTtcclxuXHJcbiAgICBsZXQgYWRkRXZlbnRzID0gZnVuY3Rpb24gKGVudGl0eTogT2JzZXJ2ZXIpIHtcclxuICAgICAgc2VsZi5pbnNwZWN0RXZlbnRzLnB1c2goZW50aXR5Lm9uKCcqOnNldCcsIGZ1bmN0aW9uIChwYXRoOiBzdHJpbmcpIHtcclxuICAgICAgICBpZiAoL2NvbXBvbmVudHMuc2NyZWVuLnNjcmVlblNwYWNlLy50ZXN0KHBhdGgpIHx8XHJcbiAgICAgICAgICAvXnBhcmVudC8udGVzdChwYXRoKSB8fFxyXG4gICAgICAgICAgL2NvbXBvbmVudHMubGF5b3V0Y2hpbGQuZXhjbHVkZUZyb21MYXlvdXQvLnRlc3QocGF0aCkpIHtcclxuICAgICAgICAgIHRvZ2dsZUZpZWxkc0lmTmVlZGVkKGVudGl0eSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KSk7XHJcbiAgICB9O1xyXG5cclxuICAgIGxldCB0b2dnbGVGaWVsZHNJZk5lZWRlZCA9IGZ1bmN0aW9uIChlbnRpdHk6IE9ic2VydmVyKSB7XHJcbiAgICAgIGlmIChlZGl0b3IuY2FsbCgnc2VsZWN0b3I6aGFzJywgZW50aXR5KSlcclxuICAgICAgICBzZWxmLnRvZ2dsZUZpZWxkcyhlZGl0b3IuY2FsbCgnc2VsZWN0b3I6aXRlbXMnKSk7XHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gZW50aXRpZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgYWRkRXZlbnRzKGVudGl0aWVzW2ldKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBwcml2YXRlIG9uVW5pbnNwZWN0KCk6IHZvaWQge1xyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZWxmLmluc3BlY3RFdmVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgc2VsZi5pbnNwZWN0RXZlbnRzW2ldLnVuYmluZCgpO1xyXG4gICAgfVxyXG4gICAgc2VsZi5pbnNwZWN0RXZlbnRzLmxlbmd0aCA9IDA7XHJcbiAgfTtcclxuXHJcbn1cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgQXR0cmlidXRlc0ZpZWxkQXJncyB7XHJcblxyXG5cclxuICBwdWJsaWMgcGFuZWwhOiBQYW5lbDtcclxuXHJcblxyXG5cclxuXHJcbn0iLCJleHBvcnQgY2xhc3MgQXR0cmlidXRlSGlzdG9yeSB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgfVxyXG5cclxufSIsImltcG9ydCB7IFBhbmVsLCBMYWJlbCwgUHJvZ3Jlc3MsIEVsZW1lbnQsIFRleHRGaWVsZCwgQnV0dG9uLCBUZXh0QXJlYUZpZWxkLCBTbGlkZXIsIE51bWJlckZpZWxkLCBDaGVja2JveCwgQ29sb3JGaWVsZCwgSW1hZ2VGaWVsZCwgQ29kZSwgU2VsZWN0RmllbGQgfSBmcm9tIFwiLi4vLi4vdWlcIjtcclxuaW1wb3J0IHsgVmVyeUVuZ2luZSB9IGZyb20gXCIuLi8uLi9lbmdpbmVcIjtcclxuaW1wb3J0IHsgT2JzZXJ2ZXIsIEV2ZW50SGFuZGxlIH0gZnJvbSBcIi4uLy4uL2xpYlwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEF0dHJpYnV0ZXNQYW5lbCB7XHJcblxyXG5cclxuICBwdWJsaWMgcm9vdDogUGFuZWw7XHJcblxyXG4gIHByaXZhdGUgaW5zcGVjdGVkSXRlbXM6IEV2ZW50SGFuZGxlW10gPSBbXTtcclxuXHJcbiAgcHVibGljIHRpdGxlOiBzdHJpbmcgPSAn5bGe5oCn6Z2i5p2/JztcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5yb290ID0gVmVyeUVuZ2luZS5hdHRyaWJ1dGVzUGFuZWw7XHJcblxyXG4gICAgdGhpcy5pbml0KCk7XHJcblxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBpbml0KCk6IHZvaWQge1xyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIC8vIGNsZWFyaW5nXHJcbiAgICBlZGl0b3IubWV0aG9kKCdhdHRyaWJ1dGVzOmNsZWFyJywgdGhpcy5jbGVhclBhbmVsKTtcclxuXHJcbiAgICAvLyBzZXQgaGVhZGVyXHJcbiAgICBlZGl0b3IubWV0aG9kKCdhdHRyaWJ1dGVzOmhlYWRlcicsICh0ZXh0OiBzdHJpbmcpID0+IHtcclxuICAgICAgc2VsZi5yb290LmhlYWRlciA9IHRleHQ7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyByZXR1cm4gcm9vdCBwYW5lbFxyXG4gICAgZWRpdG9yLm1ldGhvZCgnYXR0cmlidXRlcy5yb290UGFuZWwnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHJldHVybiBzZWxmLnJvb3Q7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBhZGQgcGFuZWxcclxuICAgIGVkaXRvci5tZXRob2QoJ2F0dHJpYnV0ZXM6YWRkUGFuZWwnLCBmdW5jdGlvbiAoYXJnczogQWRkUGFuZWxBcmdzKSB7XHJcbiAgICAgIGFyZ3MgPSBhcmdzIHx8IHt9O1xyXG5cclxuICAgICAgLy8gcGFuZWxcclxuICAgICAgbGV0IHBhbmVsID0gbmV3IFBhbmVsKGFyZ3MubmFtZSB8fCAnJyk7XHJcbiAgICAgIC8vIHBhcmVudFxyXG4gICAgICAoYXJncy5wYXJlbnQgfHwgc2VsZi5yb290KS5hcHBlbmQocGFuZWwpO1xyXG5cclxuICAgICAgLy8gZm9sZGluZ1xyXG4gICAgICBwYW5lbC5mb2xkYWJsZSA9IGFyZ3MuZm9sZGFibGUgfHwgYXJncy5mb2xkZWQgfHwgZmFsc2U7XHJcbiAgICAgIHBhbmVsLmZvbGRlZCA9IGFyZ3MuZm9sZGVkIHx8IGZhbHNlO1xyXG5cclxuICAgICAgcmV0dXJuIHBhbmVsO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gdmFyIGhpc3RvcnlTdGF0ZSA9IGZ1bmN0aW9uIChpdGVtLCBzdGF0ZSkge1xyXG4gICAgLy8gICBpZiAoaXRlbS5oaXN0b3J5ICE9PSB1bmRlZmluZWQpIHtcclxuICAgIC8vICAgICBpZiAodHlwZW9mIChpdGVtLmhpc3RvcnkpID09PSAnYm9vbGVhbicpIHtcclxuICAgIC8vICAgICAgIGl0ZW0uaGlzdG9yeSA9IHN0YXRlO1xyXG4gICAgLy8gICAgIH0gZWxzZSB7XHJcbiAgICAvLyAgICAgICBpdGVtLmhpc3RvcnkuZW5hYmxlZCA9IHN0YXRlO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgfSBlbHNlIHtcclxuICAgIC8vICAgICBpZiAoaXRlbS5fcGFyZW50ICYmIGl0ZW0uX3BhcmVudC5oaXN0b3J5ICE9PSB1bmRlZmluZWQpIHtcclxuICAgIC8vICAgICAgIGl0ZW0uX3BhcmVudC5oaXN0b3J5LmVuYWJsZWQgPSBzdGF0ZTtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgIH1cclxuICAgIC8vIH07XHJcblxyXG5cclxuXHJcbiAgICAvKiAqXHJcblxyXG4gICAgLy8g5bGe5oCn6Z2i5p2/5re75YqgZmllbGTvvIzlhbPogZTnm7jlhbPmlbDmja5cclxuICAgIGVkaXRvci5tZXRob2QoJ2F0dHJpYnV0ZXM6YWRkRmllbGQnLCBmdW5jdGlvbiAoYXJnczogYW55KSB7XHJcbiAgICAgIHZhciBwYW5lbCA9IGFyZ3MucGFuZWw7XHJcblxyXG4gICAgICBpZiAoIXBhbmVsKSB7XHJcbiAgICAgICAgcGFuZWwgPSBuZXcgUGFuZWwoKTtcclxuICAgICAgICBwYW5lbC5mbGV4V3JhcCA9ICdub3dyYXAnO1xyXG4gICAgICAgIHBhbmVsLldlYmtpdEZsZXhXcmFwID0gJ25vd3JhcCc7XHJcbiAgICAgICAgcGFuZWwuc3R5bGUhLmRpc3BsYXkgPSAnJztcclxuXHJcbiAgICAgICAgaWYgKGFyZ3MudHlwZSkge1xyXG4gICAgICAgICAgcGFuZWwuY2xhc3MhLmFkZCgnZmllbGQtJyArIGFyZ3MudHlwZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHBhbmVsLmNsYXNzIS5hZGQoJ2ZpZWxkJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAoYXJncy5wYXJlbnQgfHwgc2VsZi5yb290KS5hcHBlbmQocGFuZWwpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoYXJncy5uYW1lKSB7XHJcbiAgICAgICAgdmFyIGxhYmVsID0gbmV3IExhYmVsKGFyZ3MubmFtZSk7XHJcbiAgICAgICAgbGFiZWwuY2xhc3MhLmFkZCgnbGFiZWwtZmllbGQnKTtcclxuICAgICAgICBwYW5lbC5fbGFiZWwgPSBsYWJlbDtcclxuICAgICAgICBwYW5lbC5hcHBlbmQobGFiZWwpO1xyXG5cclxuICAgICAgICBpZiAoYXJncy5yZWZlcmVuY2UpIHtcclxuICAgICAgICAgIHZhciB0b29sdGlwID0gbGFiZWwudG9vbHRpcCA9IGVkaXRvci5jYWxsKCdhdHRyaWJ1dGVzOnJlZmVyZW5jZScsIHtcclxuICAgICAgICAgICAgZWxlbWVudDogbGFiZWwuZWxlbWVudCxcclxuICAgICAgICAgICAgdGl0bGU6IGFyZ3MucmVmZXJlbmNlLnRpdGxlLFxyXG4gICAgICAgICAgICBzdWJUaXRsZTogYXJncy5yZWZlcmVuY2Uuc3ViVGl0bGUsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBhcmdzLnJlZmVyZW5jZS5kZXNjcmlwdGlvblxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgdG9vbHRpcC5hdHRhY2goe1xyXG4gICAgICAgICAgICB0YXJnZXQ6IGxhYmVsLFxyXG4gICAgICAgICAgICBlbGVtZW50OiBsYWJlbC5lbGVtZW50XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciBmaWVsZDogRWxlbWVudDtcclxuXHJcbiAgICAgIGFyZ3MubGlua0V2ZW50cyA9IFtdO1xyXG5cclxuICAgICAgLy8gaWYgd2UgcHJvdmlkZSBtdWx0aXBsZSBwYXRocyBmb3IgYSBzaW5nbGUgT2JzZXJ2ZXIgdGhlbiB0dXJuIGFyZ3MubGluayBpbnRvIGFuIGFycmF5XHJcbiAgICAgIGlmIChhcmdzLnBhdGhzICYmIGFyZ3MucGF0aHMgaW5zdGFuY2VvZiBBcnJheSAmJiBhcmdzLmxpbmsgJiYgIShhcmdzLmxpbmsgaW5zdGFuY2VvZiBBcnJheSkpIHtcclxuICAgICAgICB2YXIgbGluayA9IGFyZ3MubGluaztcclxuICAgICAgICBhcmdzLmxpbmsgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MucGF0aHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGFyZ3MubGluay5wdXNoKGxpbmspO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIGxpbmtGaWVsZCA9IGFyZ3MubGlua0ZpZWxkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmIChhcmdzLmxpbmspIHtcclxuICAgICAgICAgIHZhciBsaW5rID0gZnVuY3Rpb24gKGZpZWxkOiBFbGVtZW50LCBwYXRoPzogc3RyaW5nIHwgc3RyaW5nW10pIHtcclxuICAgICAgICAgICAgdmFyIGRhdGEgPSB7XHJcbiAgICAgICAgICAgICAgZmllbGQ6IGZpZWxkLFxyXG4gICAgICAgICAgICAgIHR5cGU6IGFyZ3MudHlwZSxcclxuICAgICAgICAgICAgICBzbGlkZXI6IGFyZ3Muc2xpZGVyLFxyXG4gICAgICAgICAgICAgIGVudW06IGFyZ3MuZW51bSxcclxuICAgICAgICAgICAgICBsaW5rOiBhcmdzLmxpbmssXHJcbiAgICAgICAgICAgICAgdHJpbTogYXJncy50cmltLFxyXG4gICAgICAgICAgICAgIG5hbWU6IGFyZ3MubmFtZSxcclxuICAgICAgICAgICAgICBzdG9wSGlzdG9yeTogYXJncy5zdG9wSGlzdG9yeSxcclxuICAgICAgICAgICAgICBwYXRoczogWycnXSxcclxuICAgICAgICAgICAgICBwYXRoOiAnJ1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgaWYgKCFwYXRoKSB7XHJcbiAgICAgICAgICAgICAgcGF0aCA9IGFyZ3MucGF0aHMgfHwgYXJncy5wYXRoO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAocGF0aCBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgICAgICAgICAgZGF0YS5wYXRocyA9IHBhdGg7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgZGF0YS5wYXRoID0gcGF0aCB8fCAnJztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgYXJncy5saW5rRXZlbnRzID0gYXJncy5saW5rRXZlbnRzLmNvbmNhdChlZGl0b3IuY2FsbCgnYXR0cmlidXRlczpsaW5rRmllbGQnLCBkYXRhKSk7XHJcblxyXG4gICAgICAgICAgICAvLyBHaXZlIHRoZSBmaWVsZCBhIHVuaXF1ZWx5IGFkZHJlc3NhYmxlIGNzcyBjbGFzcyB0aGF0IHdlIGNhbiB0YXJnZXQgZnJvbSBTZWxlbml1bVxyXG4gICAgICAgICAgICBpZiAoZmllbGQuZWxlbWVudCAmJiB0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgICBmaWVsZC5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2ZpZWxkLXBhdGgtJyArIHBhdGgucmVwbGFjZSgvXFwuL2csICctJykpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIGlmIChmaWVsZCBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZmllbGQubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICB2YXIgcGF0aHMgPSBhcmdzLnBhdGhzO1xyXG5cclxuICAgICAgICAgICAgICBpZiAocGF0aHMpIHtcclxuICAgICAgICAgICAgICAgIHBhdGhzID0gcGF0aHMubWFwKGZ1bmN0aW9uIChwOiBzdHJpbmcpIHtcclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIHAgKyAnLicgKyBpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBsaW5rKGZpZWxkW2ldLCBwYXRocyB8fCAoYXJncy5wYXRoICsgJy4nICsgaSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsaW5rKGZpZWxkKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcblxyXG4gICAgICB2YXIgdW5saW5rRmllbGQgPSBhcmdzLnVubGlua0ZpZWxkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5saW5rRXZlbnRzLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgYXJncy5saW5rRXZlbnRzW2ldLnVuYmluZCgpO1xyXG5cclxuICAgICAgICBhcmdzLmxpbmtFdmVudHMgPSBbXTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHN3aXRjaCAoYXJncy50eXBlKSB7XHJcbiAgICAgICAgY2FzZSAnc3RyaW5nJzpcclxuICAgICAgICAgIGlmIChhcmdzLmVudW0pIHtcclxuICAgICAgICAgICAgZmllbGQgPSBuZXcgU2VsZWN0RmllbGQoe1xyXG4gICAgICAgICAgICAgIG9wdGlvbnM6IGFyZ3MuZW51bVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGZpZWxkID0gbmV3IFRleHRGaWVsZCgpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGZpZWxkLnZhbHVlID0gYXJncy52YWx1ZSB8fCAnJztcclxuICAgICAgICAgIGZpZWxkLmZsZXhHcm93ID0gJzEnO1xyXG5cclxuICAgICAgICAgIGlmIChhcmdzLnBsYWNlaG9sZGVyKSB7XHJcbiAgICAgICAgICAgIGlmIChmaWVsZCBpbnN0YW5jZW9mIFNlbGVjdEZpZWxkKSB7XHJcbiAgICAgICAgICAgICAgKDxTZWxlY3RGaWVsZD5maWVsZCkucGxhY2Vob2xkZXIgPSBhcmdzLnBsYWNlaG9sZGVyO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICg8VGV4dEZpZWxkPmZpZWxkKS5wbGFjZWhvbGRlciA9IGFyZ3MucGxhY2Vob2xkZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBsaW5rRmllbGQoKTtcclxuXHJcbiAgICAgICAgICBwYW5lbC5hcHBlbmQoZmllbGQpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ3RhZ3MnOlxyXG4gICAgICAgICAgLy8gVE9ETzogd2h5IGlzbid0IHRoaXMgaW4gYSBzZXBlcmF0ZSBjbGFzcy9maWxlPz8/XHJcblxyXG4gICAgICAgICAgdmFyIGlubmVyUGFuZWwgPSBuZXcgUGFuZWwoKTtcclxuICAgICAgICAgIHZhciB0YWdUeXBlID0gYXJncy50YWdUeXBlIHx8ICdzdHJpbmcnO1xyXG5cclxuICAgICAgICAgIGlmIChhcmdzLmVudW0pIHtcclxuICAgICAgICAgICAgZmllbGQgPSBuZXcgU2VsZWN0RmllbGQoe1xyXG4gICAgICAgICAgICAgIG9wdGlvbnM6IGFyZ3MuZW51bSxcclxuICAgICAgICAgICAgICB0eXBlOiB0YWdUeXBlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBmaWVsZC5yZW5kZXJDaGFuZ2VzID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGZpZWxkLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAodmFsdWU6IGFueSkge1xyXG4gICAgICAgICAgICAgIGlmICh0YWdUeXBlID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUudHJpbSgpO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgYWRkVGFnKHZhbHVlKTtcclxuICAgICAgICAgICAgICBmaWVsZC52YWx1ZSA9ICcnO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGlubmVyUGFuZWwuYXBwZW5kKGZpZWxkKTtcclxuXHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBmaWVsZCA9IG5ldyBUZXh0RmllbGQoKTtcclxuICAgICAgICAgICAgKDxUZXh0RmllbGQ+ZmllbGQpLmJsdXJPbkVudGVyID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGZpZWxkLnJlbmRlckNoYW5nZXMgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgIGZpZWxkLmVsZW1lbnQhLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgICAgICAgICAgaWYgKGV2dC5rZXlDb2RlICE9PSAxMyB8fCAhZmllbGQudmFsdWUpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICAgICAgIGFkZFRhZyhmaWVsZC52YWx1ZS50cmltKCkpO1xyXG4gICAgICAgICAgICAgIGZpZWxkLnZhbHVlID0gJyc7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgaW5uZXJQYW5lbC5hcHBlbmQoZmllbGQpO1xyXG5cclxuICAgICAgICAgICAgdmFyIGJ0bkFkZCA9IG5ldyBCdXR0b24oJyYjNTc2MzInKTtcclxuICAgICAgICAgICAgYnRuQWRkLmZsZXhHcm93ID0gJzAnO1xyXG4gICAgICAgICAgICBidG5BZGQub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIGlmICghZmllbGQudmFsdWUpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICAgICAgIGFkZFRhZyhmaWVsZC52YWx1ZS50cmltKCkpO1xyXG4gICAgICAgICAgICAgIGZpZWxkLnZhbHVlID0gJyc7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpbm5lclBhbmVsLmFwcGVuZChidG5BZGQpO1xyXG4gICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICB2YXIgdGFnc1BhbmVsID0gbmV3IFBhbmVsKCk7XHJcbiAgICAgICAgICB0YWdzUGFuZWwuY2xhc3MhLmFkZCgndGFncycpO1xyXG4gICAgICAgICAgdGFnc1BhbmVsLmZsZXggPSB0cnVlO1xyXG4gICAgICAgICAgaW5uZXJQYW5lbC5hcHBlbmQodGFnc1BhbmVsKTtcclxuXHJcbiAgICAgICAgICB2YXIgdGFnSXRlbXMgPSB7fTtcclxuICAgICAgICAgIHZhciB0YWdJbmRleCA9IHt9O1xyXG4gICAgICAgICAgdmFyIHRhZ0xpc3QgPSBbXTtcclxuXHJcbiAgICAgICAgICB2YXIgb25SZW1vdmVDbGljayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKGlubmVyUGFuZWwuZGlzYWJsZWQpXHJcbiAgICAgICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgcmVtb3ZlVGFnKHRoaXMudGFnKTtcclxuICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgdmFyIHJlbW92ZVRhZyA9IGZ1bmN0aW9uICh0YWcpIHtcclxuICAgICAgICAgICAgaWYgKHRhZ1R5cGUgPT09ICdzdHJpbmcnICYmICF0YWcpIHtcclxuICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGFnID09PSBudWxsIHx8IHRhZyA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoIXRhZ0luZGV4Lmhhc093blByb3BlcnR5KHRhZykpXHJcbiAgICAgICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgdmFyIHJlY29yZHMgPSBbXTtcclxuXHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5saW5rLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgdmFyIHBhdGggPSBwYXRoQXQoYXJncywgaSk7XHJcbiAgICAgICAgICAgICAgaWYgKGFyZ3MubGlua1tpXS5nZXQocGF0aCkuaW5kZXhPZih0YWcpID09PSAtMSlcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICAgICAgICByZWNvcmRzLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBhcmdzLmxpbmtbaV0uaGlzdG9yeSAhPT0gdW5kZWZpbmVkID8gYXJncy5saW5rW2ldLmhpc3RvcnkuX2dldEl0ZW1GbiA6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBpdGVtOiBhcmdzLmxpbmtbaV0sXHJcbiAgICAgICAgICAgICAgICBwYXRoOiBwYXRoLFxyXG4gICAgICAgICAgICAgICAgdmFsdWU6IHRhZ1xyXG4gICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICBoaXN0b3J5U3RhdGUoYXJncy5saW5rW2ldLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgYXJncy5saW5rW2ldLnJlbW92ZVZhbHVlKHBhdGgsIHRhZyk7XHJcbiAgICAgICAgICAgICAgaGlzdG9yeVN0YXRlKGFyZ3MubGlua1tpXSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICghYXJncy5zdG9wSGlzdG9yeSkge1xyXG4gICAgICAgICAgICAgIGVkaXRvci5jYWxsKCdoaXN0b3J5OmFkZCcsIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IHBhdGhBdChhcmdzLCAwKSxcclxuICAgICAgICAgICAgICAgIHVuZG86IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWNvcmRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlY29yZHNbaV0uZ2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBpdGVtID0gcmVjb3Jkc1tpXS5nZXQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgIGlmICghaXRlbSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gPSByZWNvcmRzW2ldLml0ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICBoaXN0b3J5U3RhdGUoaXRlbSwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uaW5zZXJ0KHJlY29yZHNbaV0ucGF0aCwgcmVjb3Jkc1tpXS52YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaGlzdG9yeVN0YXRlKGl0ZW0sIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcmVkbzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlY29yZHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVjb3Jkc1tpXS5nZXQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gPSByZWNvcmRzW2ldLmdldCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgaWYgKCFpdGVtKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgaXRlbSA9IHJlY29yZHNbaV0uaXRlbTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGhpc3RvcnlTdGF0ZShpdGVtLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5yZW1vdmVWYWx1ZShyZWNvcmRzW2ldLnBhdGgsIHJlY29yZHNbaV0udmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGhpc3RvcnlTdGF0ZShpdGVtLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIHZhciBhZGRUYWcgPSBmdW5jdGlvbiAodGFnKSB7XHJcbiAgICAgICAgICAgIHZhciByZWNvcmRzID0gW107XHJcblxyXG4gICAgICAgICAgICAvLyBjb252ZXJ0IHRvIG51bWJlciBpZiBuZWVkZWRcclxuICAgICAgICAgICAgaWYgKGFyZ3MudGFnVHlwZSA9PT0gJ251bWJlcicpIHtcclxuICAgICAgICAgICAgICB0YWcgPSBwYXJzZUludCh0YWcsIDEwKTtcclxuICAgICAgICAgICAgICBpZiAoaXNOYU4odGFnKSlcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxpbmsubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICB2YXIgcGF0aCA9IHBhdGhBdChhcmdzLCBpKTtcclxuICAgICAgICAgICAgICBpZiAoYXJncy5saW5rW2ldLmdldChwYXRoKS5pbmRleE9mKHRhZykgIT09IC0xKVxyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcblxyXG4gICAgICAgICAgICAgIHJlY29yZHMucHVzaCh7XHJcbiAgICAgICAgICAgICAgICBnZXQ6IGFyZ3MubGlua1tpXS5oaXN0b3J5ICE9PSB1bmRlZmluZWQgPyBhcmdzLmxpbmtbaV0uaGlzdG9yeS5fZ2V0SXRlbUZuIDogbnVsbCxcclxuICAgICAgICAgICAgICAgIGl0ZW06IGFyZ3MubGlua1tpXSxcclxuICAgICAgICAgICAgICAgIHBhdGg6IHBhdGgsXHJcbiAgICAgICAgICAgICAgICB2YWx1ZTogdGFnXHJcbiAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgIGhpc3RvcnlTdGF0ZShhcmdzLmxpbmtbaV0sIGZhbHNlKTtcclxuICAgICAgICAgICAgICBhcmdzLmxpbmtbaV0uaW5zZXJ0KHBhdGgsIHRhZyk7XHJcbiAgICAgICAgICAgICAgaGlzdG9yeVN0YXRlKGFyZ3MubGlua1tpXSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICghYXJncy5zdG9wSGlzdG9yeSkge1xyXG4gICAgICAgICAgICAgIGVkaXRvci5jYWxsKCdoaXN0b3J5OmFkZCcsIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IHBhdGhBdChhcmdzLCAwKSxcclxuICAgICAgICAgICAgICAgIHVuZG86IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWNvcmRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlY29yZHNbaV0uZ2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBpdGVtID0gcmVjb3Jkc1tpXS5nZXQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgIGlmICghaXRlbSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gPSByZWNvcmRzW2ldLml0ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICBoaXN0b3J5U3RhdGUoaXRlbSwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0ucmVtb3ZlVmFsdWUocmVjb3Jkc1tpXS5wYXRoLCByZWNvcmRzW2ldLnZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICBoaXN0b3J5U3RhdGUoaXRlbSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICByZWRvOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVjb3Jkcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpdGVtO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZWNvcmRzW2ldLmdldCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgaXRlbSA9IHJlY29yZHNbaV0uZ2V0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoIWl0ZW0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBpdGVtID0gcmVjb3Jkc1tpXS5pdGVtO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaGlzdG9yeVN0YXRlKGl0ZW0sIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtLmluc2VydChyZWNvcmRzW2ldLnBhdGgsIHJlY29yZHNbaV0udmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGhpc3RvcnlTdGF0ZShpdGVtLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIHZhciBvbkluc2VydCA9IGZ1bmN0aW9uICh0YWcpIHtcclxuICAgICAgICAgICAgaWYgKCF0YWdJbmRleC5oYXNPd25Qcm9wZXJ0eSh0YWcpKSB7XHJcbiAgICAgICAgICAgICAgdGFnSW5kZXhbdGFnXSA9IDA7XHJcbiAgICAgICAgICAgICAgdGFnTGlzdC5wdXNoKHRhZyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRhZ0luZGV4W3RhZ10rKztcclxuICAgICAgICAgICAgaW5zZXJ0RWxlbWVudCh0YWcpO1xyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICB2YXIgb25SZW1vdmUgPSBmdW5jdGlvbiAodGFnKSB7XHJcbiAgICAgICAgICAgIGlmICghdGFnSW5kZXhbdGFnXSlcclxuICAgICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICAgICB0YWdJbmRleFt0YWddLS07XHJcblxyXG4gICAgICAgICAgICBpZiAoIXRhZ0luZGV4W3RhZ10pIHtcclxuICAgICAgICAgICAgICB0YWdzUGFuZWwuaW5uZXJFbGVtZW50LnJlbW92ZUNoaWxkKHRhZ0l0ZW1zW3RhZ10pO1xyXG4gICAgICAgICAgICAgIHZhciBpbmQgPSB0YWdMaXN0LmluZGV4T2YodGFnKTtcclxuICAgICAgICAgICAgICBpZiAoaW5kICE9PSAtMSlcclxuICAgICAgICAgICAgICAgIHRhZ0xpc3Quc3BsaWNlKGluZCwgMSk7XHJcblxyXG4gICAgICAgICAgICAgIGRlbGV0ZSB0YWdJdGVtc1t0YWddO1xyXG4gICAgICAgICAgICAgIGRlbGV0ZSB0YWdJbmRleFt0YWddO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIGlmICh0YWdJbmRleFt0YWddID09PSBhcmdzLmxpbmsubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICB0YWdJdGVtc1t0YWddLmNsYXNzTGlzdC5yZW1vdmUoJ3BhcnRpYWwnKTtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGFnSXRlbXNbdGFnXS5jbGFzc0xpc3QuYWRkKCdwYXJ0aWFsJyk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIC8vIHdoZW4gdGFnIGZpZWxkIGlzIGluaXRpYWxpemVkXHJcbiAgICAgICAgICB2YXIgb25TZXQgPSBmdW5jdGlvbiAodmFsdWVzKSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsdWVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgdmFyIHZhbHVlID0gdmFsdWVzW2ldO1xyXG4gICAgICAgICAgICAgIG9uSW5zZXJ0KHZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICB2YXIgaW5zZXJ0RWxlbWVudCA9IGZ1bmN0aW9uICh0YWcpIHtcclxuICAgICAgICAgICAgaWYgKCF0YWdJdGVtc1t0YWddKSB7XHJcbiAgICAgICAgICAgICAgc29ydFRhZ3MoKTtcclxuXHJcbiAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgICB0YWdJdGVtc1t0YWddID0gaXRlbTtcclxuICAgICAgICAgICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ3RhZycpO1xyXG4gICAgICAgICAgICAgIHZhciBpdGVtVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICAgICAgICBpdGVtVGV4dC50ZXh0Q29udGVudCA9IGFyZ3MudGFnVG9TdHJpbmcgPyBhcmdzLnRhZ1RvU3RyaW5nKHRhZykgOiB0YWc7XHJcbiAgICAgICAgICAgICAgaXRlbS5hcHBlbmRDaGlsZChpdGVtVGV4dCk7XHJcblxyXG4gICAgICAgICAgICAgIC8vIHRoZSBvcmlnaW5hbCB0YWcgdmFsdWUgYmVmb3JlIHRhZ1RvU3RyaW5nIGlzIGNhbGxlZC4gVXNlZnVsXHJcbiAgICAgICAgICAgICAgLy8gaWYgdGhlIHRhZyB2YWx1ZSBpcyBhbiBpZCBmb3IgZXhhbXBsZVxyXG4gICAgICAgICAgICAgIGl0ZW0ub3JpZ2luYWxWYWx1ZSA9IHRhZztcclxuXHJcbiAgICAgICAgICAgICAgLy8gYXR0YWNoIGNsaWNrIGhhbmRsZXIgb24gdGV4dCBwYXJ0IG9mIHRoZSB0YWcgLSBiaW5kIHRoZSBsaXN0ZW5lclxyXG4gICAgICAgICAgICAgIC8vIHRvIHRoZSB0YWcgaXRlbSBzbyB0aGF0IGB0aGlzYCByZWZlcnMgdG8gdGhhdCB0YWcgaW4gdGhlIGxpc3RlbmVyXHJcbiAgICAgICAgICAgICAgaWYgKGFyZ3Mub25DbGlja1RhZykge1xyXG4gICAgICAgICAgICAgICAgaXRlbVRleHQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhcmdzLm9uQ2xpY2tUYWcuYmluZChpdGVtKSk7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICB2YXIgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICAgICAgICBpY29uLmlubmVySFRNTCA9ICcmIzU3NjUwOyc7XHJcbiAgICAgICAgICAgICAgaWNvbi5jbGFzc0xpc3QuYWRkKCdpY29uJyk7XHJcbiAgICAgICAgICAgICAgaWNvbi50YWcgPSB0YWc7XHJcbiAgICAgICAgICAgICAgaWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uUmVtb3ZlQ2xpY2ssIGZhbHNlKTtcclxuICAgICAgICAgICAgICBpdGVtLmFwcGVuZENoaWxkKGljb24pO1xyXG5cclxuICAgICAgICAgICAgICB2YXIgaW5kID0gdGFnTGlzdC5pbmRleE9mKHRhZyk7XHJcbiAgICAgICAgICAgICAgaWYgKHRhZ0l0ZW1zW3RhZ0xpc3RbaW5kICsgMV1dKSB7XHJcbiAgICAgICAgICAgICAgICB0YWdzUGFuZWwuYXBwZW5kQmVmb3JlKGl0ZW0sIHRhZ0l0ZW1zW3RhZ0xpc3RbaW5kICsgMV1dKTtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGFnc1BhbmVsLmFwcGVuZChpdGVtKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0YWdJbmRleFt0YWddID09PSBhcmdzLmxpbmsubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgdGFnSXRlbXNbdGFnXS5jbGFzc0xpc3QucmVtb3ZlKCdwYXJ0aWFsJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgdGFnSXRlbXNbdGFnXS5jbGFzc0xpc3QuYWRkKCdwYXJ0aWFsJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgdmFyIHNvcnRUYWdzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0YWdMaXN0LnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgICAgICAgICAgICBpZiAoYXJncy50YWdUb1N0cmluZykge1xyXG4gICAgICAgICAgICAgICAgYSA9IGFyZ3MudGFnVG9TdHJpbmcoYSk7XHJcbiAgICAgICAgICAgICAgICBiID0gYXJncy50YWdUb1N0cmluZyhiKTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIGlmIChhID4gYikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDE7XHJcbiAgICAgICAgICAgICAgfSBlbHNlIGlmIChhIDwgYikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICBpZiAoYXJncy5wbGFjZWhvbGRlcilcclxuICAgICAgICAgICAgZmllbGQucGxhY2Vob2xkZXIgPSBhcmdzLnBsYWNlaG9sZGVyO1xyXG5cclxuICAgICAgICAgIC8vIGxpc3RcclxuICAgICAgICAgIGFyZ3MubGlua0V2ZW50cyA9IFtdO1xyXG5cclxuICAgICAgICAgIGFyZ3MubGlua0ZpZWxkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoYXJncy5saW5rKSB7XHJcbiAgICAgICAgICAgICAgaWYgKCEoYXJncy5saW5rIGluc3RhbmNlb2YgQXJyYXkpKVxyXG4gICAgICAgICAgICAgICAgYXJncy5saW5rID0gW2FyZ3MubGlua107XHJcblxyXG4gICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5saW5rLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGF0aCA9IHBhdGhBdChhcmdzLCBpKTtcclxuICAgICAgICAgICAgICAgIHZhciB0YWdzID0gYXJncy5saW5rW2ldLmdldChwYXRoKTtcclxuXHJcbiAgICAgICAgICAgICAgICBhcmdzLmxpbmtFdmVudHMucHVzaChhcmdzLmxpbmtbaV0ub24ocGF0aCArICc6c2V0Jywgb25TZXQpKTtcclxuICAgICAgICAgICAgICAgIGFyZ3MubGlua0V2ZW50cy5wdXNoKGFyZ3MubGlua1tpXS5vbihwYXRoICsgJzppbnNlcnQnLCBvbkluc2VydCkpO1xyXG4gICAgICAgICAgICAgICAgYXJncy5saW5rRXZlbnRzLnB1c2goYXJncy5saW5rW2ldLm9uKHBhdGggKyAnOnJlbW92ZScsIG9uUmVtb3ZlKSk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCF0YWdzKVxyXG4gICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuXHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciB0ID0gMDsgdCA8IHRhZ3MubGVuZ3RoOyB0KyspIHtcclxuICAgICAgICAgICAgICAgICAgaWYgKHRhZ1R5cGUgPT09ICdzdHJpbmcnICYmICF0YWdzW3RdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGFnc1t0XSA9PT0gbnVsbCB8fCB0YWdzW3RdID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgaWYgKCF0YWdJbmRleC5oYXNPd25Qcm9wZXJ0eSh0YWdzW3RdKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhZ0luZGV4W3RhZ3NbdF1dID0gMDtcclxuICAgICAgICAgICAgICAgICAgICB0YWdMaXN0LnB1c2godGFnc1t0XSk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgIHRhZ0luZGV4W3RhZ3NbdF1dKys7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBzb3J0VGFncygpO1xyXG5cclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0YWdMaXN0Lmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICAgIGluc2VydEVsZW1lbnQodGFnTGlzdFtpXSk7XHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIGFyZ3MudW5saW5rRmllbGQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5saW5rRXZlbnRzLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICAgIGFyZ3MubGlua0V2ZW50c1tpXS51bmJpbmQoKTtcclxuXHJcbiAgICAgICAgICAgIGFyZ3MubGlua0V2ZW50cyA9IFtdO1xyXG5cclxuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHRhZ0l0ZW1zKVxyXG4gICAgICAgICAgICAgIHRhZ3NQYW5lbC5pbm5lckVsZW1lbnQucmVtb3ZlQ2hpbGQodGFnSXRlbXNba2V5XSk7XHJcblxyXG4gICAgICAgICAgICB0YWdMaXN0ID0gW107XHJcbiAgICAgICAgICAgIHRhZ0luZGV4ID0ge307XHJcbiAgICAgICAgICAgIHRhZ0l0ZW1zID0ge307XHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIGFyZ3MubGlua0ZpZWxkKCk7XHJcblxyXG4gICAgICAgICAgcGFuZWwub25jZSgnZGVzdHJveScsIGFyZ3MudW5saW5rRmllbGQpO1xyXG5cclxuICAgICAgICAgIHBhbmVsLmFwcGVuZChpbm5lclBhbmVsKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlICd0ZXh0JzpcclxuICAgICAgICAgIGZpZWxkID0gbmV3IFRleHRBcmVhRmllbGQoKTtcclxuXHJcbiAgICAgICAgICBmaWVsZC52YWx1ZSA9IGFyZ3MudmFsdWUgfHwgJyc7XHJcbiAgICAgICAgICBmaWVsZC5mbGV4R3JvdyA9ICcxJztcclxuXHJcbiAgICAgICAgICBpZiAoYXJncy5wbGFjZWhvbGRlcilcclxuICAgICAgICAgICAgZmllbGQucGxhY2Vob2xkZXIgPSBhcmdzLnBsYWNlaG9sZGVyO1xyXG5cclxuICAgICAgICAgIGxpbmtGaWVsZCgpO1xyXG5cclxuICAgICAgICAgIHBhbmVsLmFwcGVuZChmaWVsZCk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnbnVtYmVyJzpcclxuICAgICAgICAgIGlmIChhcmdzLmVudW0pIHtcclxuICAgICAgICAgICAgZmllbGQgPSBuZXcgU2VsZWN0RmllbGQoe1xyXG4gICAgICAgICAgICAgIG9wdGlvbnM6IGFyZ3MuZW51bSxcclxuICAgICAgICAgICAgICB0eXBlOiAnbnVtYmVyJ1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0gZWxzZSBpZiAoYXJncy5zbGlkZXIpIHtcclxuICAgICAgICAgICAgZmllbGQgPSBuZXcgU2xpZGVyKCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBmaWVsZCA9IG5ldyBOdW1iZXJGaWVsZCgpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGZpZWxkLnZhbHVlID0gYXJncy52YWx1ZSB8fCAwO1xyXG4gICAgICAgICAgZmllbGQuZmxleEdyb3cgPSAnMSc7XHJcblxyXG4gICAgICAgICAgaWYgKGFyZ3MuYWxsb3dOdWxsKSB7XHJcbiAgICAgICAgICAgIGZpZWxkLmFsbG93TnVsbCA9IHRydWU7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgaWYgKGFyZ3MucGxhY2Vob2xkZXIpXHJcbiAgICAgICAgICAgIGZpZWxkLnBsYWNlaG9sZGVyID0gYXJncy5wbGFjZWhvbGRlcjtcclxuXHJcbiAgICAgICAgICBpZiAoYXJncy5wcmVjaXNpb24gIT0gbnVsbClcclxuICAgICAgICAgICAgZmllbGQucHJlY2lzaW9uID0gYXJncy5wcmVjaXNpb247XHJcblxyXG4gICAgICAgICAgaWYgKGFyZ3Muc3RlcCAhPSBudWxsKVxyXG4gICAgICAgICAgICBmaWVsZC5zdGVwID0gYXJncy5zdGVwO1xyXG5cclxuICAgICAgICAgIGlmIChhcmdzLm1pbiAhPSBudWxsKVxyXG4gICAgICAgICAgICBmaWVsZC5taW4gPSBhcmdzLm1pbjtcclxuXHJcbiAgICAgICAgICBpZiAoYXJncy5tYXggIT0gbnVsbClcclxuICAgICAgICAgICAgZmllbGQubWF4ID0gYXJncy5tYXg7XHJcblxyXG4gICAgICAgICAgbGlua0ZpZWxkKCk7XHJcblxyXG4gICAgICAgICAgcGFuZWwuYXBwZW5kKGZpZWxkKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlICdjaGVja2JveCc6XHJcbiAgICAgICAgICBpZiAoYXJncy5lbnVtKSB7XHJcbiAgICAgICAgICAgIGZpZWxkID0gbmV3IFNlbGVjdEZpZWxkKHtcclxuICAgICAgICAgICAgICBvcHRpb25zOiBhcmdzLmVudW0sXHJcbiAgICAgICAgICAgICAgdHlwZTogJ2Jvb2xlYW4nXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBmaWVsZC5mbGV4R3JvdyA9ICcxJztcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGZpZWxkID0gbmV3IENoZWNrYm94KCk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgZmllbGQudmFsdWUgPSBhcmdzLnZhbHVlIHx8IDA7XHJcbiAgICAgICAgICBmaWVsZC5jbGFzcyEuYWRkKCd0aWNrJyk7XHJcblxyXG4gICAgICAgICAgbGlua0ZpZWxkKCk7XHJcblxyXG4gICAgICAgICAgcGFuZWwuYXBwZW5kKGZpZWxkKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlICd2ZWMyJzpcclxuICAgICAgICBjYXNlICd2ZWMzJzpcclxuICAgICAgICBjYXNlICd2ZWM0JzpcclxuICAgICAgICAgIHZhciBjaGFubmVscyA9IHBhcnNlSW50KGFyZ3MudHlwZVszXSwgMTApO1xyXG4gICAgICAgICAgZmllbGQgPSBbXTtcclxuXHJcbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNoYW5uZWxzOyBpKyspIHtcclxuICAgICAgICAgICAgZmllbGRbaV0gPSBuZXcgTnVtYmVyRmllbGQoKTtcclxuICAgICAgICAgICAgZmllbGRbaV0uZmxleEdyb3cgPSAnMSc7XHJcbiAgICAgICAgICAgIGZpZWxkW2ldLnN0eWxlIS53aWR0aCA9ICcyNHB4JztcclxuICAgICAgICAgICAgZmllbGRbaV0udmFsdWUgPSAoYXJncy52YWx1ZSAmJiBhcmdzLnZhbHVlW2ldKSB8fCAwO1xyXG4gICAgICAgICAgICBwYW5lbC5hcHBlbmQoZmllbGRbaV0pO1xyXG5cclxuICAgICAgICAgICAgaWYgKGFyZ3MucGxhY2Vob2xkZXIpXHJcbiAgICAgICAgICAgICAgZmllbGRbaV0ucGxhY2Vob2xkZXIgPSBhcmdzLnBsYWNlaG9sZGVyW2ldO1xyXG5cclxuICAgICAgICAgICAgaWYgKGFyZ3MucHJlY2lzaW9uICE9IG51bGwpXHJcbiAgICAgICAgICAgICAgZmllbGRbaV0ucHJlY2lzaW9uID0gYXJncy5wcmVjaXNpb247XHJcblxyXG4gICAgICAgICAgICBpZiAoYXJncy5zdGVwICE9IG51bGwpXHJcbiAgICAgICAgICAgICAgZmllbGRbaV0uc3RlcCA9IGFyZ3Muc3RlcDtcclxuXHJcbiAgICAgICAgICAgIGlmIChhcmdzLm1pbiAhPSBudWxsKVxyXG4gICAgICAgICAgICAgIGZpZWxkW2ldLm1pbiA9IGFyZ3MubWluO1xyXG5cclxuICAgICAgICAgICAgaWYgKGFyZ3MubWF4ICE9IG51bGwpXHJcbiAgICAgICAgICAgICAgZmllbGRbaV0ubWF4ID0gYXJncy5tYXg7XHJcblxyXG4gICAgICAgICAgICAvLyBpZiAoYXJncy5saW5rKVxyXG4gICAgICAgICAgICAvLyAgICAgZmllbGRbaV0ubGluayhhcmdzLmxpbmssIGFyZ3MucGF0aCArICcuJyArIGkpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGxpbmtGaWVsZCgpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ3JnYic6XHJcbiAgICAgICAgICBmaWVsZCA9IG5ldyBDb2xvckZpZWxkKCk7XHJcblxyXG4gICAgICAgICAgaWYgKGFyZ3MuY2hhbm5lbHMgIT0gbnVsbClcclxuICAgICAgICAgICAgZmllbGQuY2hhbm5lbHMgPSBhcmdzLmNoYW5uZWxzO1xyXG5cclxuICAgICAgICAgIGxpbmtGaWVsZCgpO1xyXG5cclxuICAgICAgICAgIHZhciBjb2xvclBpY2tlck9uID0gZmFsc2U7XHJcbiAgICAgICAgICBmaWVsZC5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGNvbG9yUGlja2VyT24gPSB0cnVlO1xyXG4gICAgICAgICAgICB2YXIgZmlyc3QgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgLy8gc2V0IHBpY2tlciBjb2xvclxyXG4gICAgICAgICAgICBlZGl0b3IuY2FsbCgncGlja2VyOmNvbG9yJywgZmllbGQudmFsdWUpO1xyXG5cclxuICAgICAgICAgICAgLy8gcGlja2luZyBzdGFydHNcclxuICAgICAgICAgICAgdmFyIGV2dENvbG9yUGlja1N0YXJ0ID0gZWRpdG9yLm9uKCdwaWNrZXI6Y29sb3I6c3RhcnQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgZmlyc3QgPSB0cnVlO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vIHBpY2tlZCBjb2xvclxyXG4gICAgICAgICAgICB2YXIgZXZ0Q29sb3JQaWNrID0gZWRpdG9yLm9uKCdwaWNrZXI6Y29sb3InLCBmdW5jdGlvbiAoY29sb3IpIHtcclxuICAgICAgICAgICAgICBmaXJzdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIGZpZWxkLnZhbHVlID0gY29sb3I7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8gcG9zaXRpb24gcGlja2VyXHJcbiAgICAgICAgICAgIHZhciByZWN0UGlja2VyID0gZWRpdG9yLmNhbGwoJ3BpY2tlcjpjb2xvcjpyZWN0Jyk7XHJcbiAgICAgICAgICAgIHZhciByZWN0RmllbGQgPSBmaWVsZC5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICAgICAgICBlZGl0b3IuY2FsbCgncGlja2VyOmNvbG9yOnBvc2l0aW9uJywgcmVjdEZpZWxkLmxlZnQgLSByZWN0UGlja2VyLndpZHRoLCByZWN0RmllbGQudG9wKTtcclxuXHJcbiAgICAgICAgICAgIC8vIGNvbG9yIGNoYW5nZWQsIHVwZGF0ZSBwaWNrZXJcclxuICAgICAgICAgICAgdmFyIGV2dENvbG9yVG9QaWNrZXIgPSBmaWVsZC5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIGVkaXRvci5jYWxsKCdwaWNrZXI6Y29sb3I6c2V0JywgdGhpcy52YWx1ZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8gcGlja2VyIGNsb3NlZFxyXG4gICAgICAgICAgICBlZGl0b3Iub25jZSgncGlja2VyOmNvbG9yOmNsb3NlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIGV2dENvbG9yUGljay51bmJpbmQoKTtcclxuICAgICAgICAgICAgICBldnRDb2xvclBpY2tTdGFydC51bmJpbmQoKTtcclxuICAgICAgICAgICAgICBldnRDb2xvclRvUGlja2VyLnVuYmluZCgpO1xyXG4gICAgICAgICAgICAgIGNvbG9yUGlja2VyT24gPSBmYWxzZTtcclxuICAgICAgICAgICAgICBmaWVsZC5lbGVtZW50LmZvY3VzKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgLy8gY2xvc2UgcGlja2VyIGlmIGZpZWxkIGRlc3Ryb3llZFxyXG4gICAgICAgICAgZmllbGQub24oJ2Rlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChjb2xvclBpY2tlck9uKVxyXG4gICAgICAgICAgICAgIGVkaXRvci5jYWxsKCdwaWNrZXI6Y29sb3I6Y2xvc2UnKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIHBhbmVsLmFwcGVuZChmaWVsZCk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnYXNzZXQnOlxyXG4gICAgICAgICAgZmllbGQgPSBuZXcgSW1hZ2VGaWVsZChhcmdzLmtpbmQgPT09ICdtYXRlcmlhbCcgfHwgYXJncy5raW5kID09PSAnbW9kZWwnIHx8IGFyZ3Mua2luZCA9PT0gJ2N1YmVtYXAnIHx8IGFyZ3Mua2luZCA9PT0gJ2ZvbnQnIHx8IGFyZ3Mua2luZCA9PT0gJ3Nwcml0ZScpO1xyXG4gICAgICAgICAgdmFyIGV2dFBpY2s7XHJcblxyXG4gICAgICAgICAgaWYgKGxhYmVsKSB7XHJcbiAgICAgICAgICAgIGxhYmVsLnJlbmRlckNoYW5nZXMgPSBmYWxzZTtcclxuICAgICAgICAgICAgZmllbGQuX2xhYmVsID0gbGFiZWw7XHJcblxyXG4gICAgICAgICAgICBsYWJlbC5zdHlsZSEud2lkdGggPSAnMzJweCc7XHJcbiAgICAgICAgICAgIGxhYmVsLmZsZXhHcm93ID0gJzEnO1xyXG4gICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICB2YXIgcGFuZWxGaWVsZHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgIHBhbmVsRmllbGRzLmNsYXNzTGlzdC5hZGQoJ3RvcCcpO1xyXG5cclxuICAgICAgICAgIHZhciBwYW5lbENvbnRyb2xzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICBwYW5lbENvbnRyb2xzLmNsYXNzTGlzdC5hZGQoJ2NvbnRyb2xzJyk7XHJcblxyXG4gICAgICAgICAgdmFyIGZpZWxkVGl0bGUgPSBmaWVsZC5fdGl0bGUgPSBuZXcgTGFiZWwoKTtcclxuICAgICAgICAgIGZpZWxkVGl0bGUudGV4dCA9ICdFbXB0eSc7XHJcbiAgICAgICAgICBmaWVsZFRpdGxlLnBhcmVudCA9IHBhbmVsO1xyXG4gICAgICAgICAgZmllbGRUaXRsZS5mbGV4R3JvdyA9ICcxJztcclxuICAgICAgICAgIGZpZWxkVGl0bGUucGxhY2Vob2xkZXIgPSAnLi4uJztcclxuXHJcbiAgICAgICAgICB2YXIgYnRuRWRpdCA9IG5ldyBCdXR0b24oJyYjNTc2NDg7Jyk7XHJcbiAgICAgICAgICBidG5FZGl0LmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgIGJ0bkVkaXQucGFyZW50ID0gcGFuZWw7XHJcbiAgICAgICAgICBidG5FZGl0LmZsZXhHcm93ID0gJzAnO1xyXG5cclxuICAgICAgICAgIHZhciBidG5SZW1vdmUgPSBuZXcgQnV0dG9uKCcmIzU3NjUwOycpO1xyXG4gICAgICAgICAgYnRuUmVtb3ZlLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgIGJ0blJlbW92ZS5wYXJlbnQgPSBwYW5lbDtcclxuICAgICAgICAgIGJ0blJlbW92ZS5mbGV4R3JvdyA9ICcwJztcclxuXHJcbiAgICAgICAgICBmaWVsZFRpdGxlLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGFzc2V0ID0gZWRpdG9yLmNhbGwoJ2Fzc2V0czpnZXQnLCBmaWVsZC52YWx1ZSk7XHJcbiAgICAgICAgICAgIGVkaXRvci5jYWxsKCdwaWNrZXI6YXNzZXQnLCB7XHJcbiAgICAgICAgICAgICAgdHlwZTogYXJncy5raW5kLFxyXG4gICAgICAgICAgICAgIGN1cnJlbnRBc3NldDogYXNzZXRcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBldnRQaWNrID0gZWRpdG9yLm9uY2UoJ3BpY2tlcjphc3NldCcsIGZ1bmN0aW9uIChhc3NldCkge1xyXG4gICAgICAgICAgICAgIHZhciBvbGRWYWx1ZXMgPSB7fTtcclxuICAgICAgICAgICAgICBpZiAoYXJncy5vblNldCAmJiBhcmdzLmxpbmsgJiYgYXJncy5saW5rIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5saW5rLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgIHZhciBpZCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgIGlmIChhcmdzLmxpbmtbaV0uX3R5cGUgPT09ICdhc3NldCcpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZCA9IGFyZ3MubGlua1tpXS5nZXQoJ2lkJyk7XHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYXJncy5saW5rW2ldLl90eXBlID09PSAnZW50aXR5Jykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlkID0gYXJncy5saW5rW2ldLmdldCgncmVzb3VyY2VfaWQnKTtcclxuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgb2xkVmFsdWVzW2lkXSA9IGFyZ3MubGlua1tpXS5nZXQocGF0aEF0KGFyZ3MsIGkpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIGZpZWxkLmVtaXQoJ2JlZm9yZWNoYW5nZScsIGFzc2V0LmdldCgnaWQnKSk7XHJcbiAgICAgICAgICAgICAgZmllbGQudmFsdWUgPSBhc3NldC5nZXQoJ2lkJyk7XHJcbiAgICAgICAgICAgICAgZXZ0UGljayA9IG51bGw7XHJcbiAgICAgICAgICAgICAgaWYgKGFyZ3Mub25TZXQpIGFyZ3Mub25TZXQoYXNzZXQsIG9sZFZhbHVlcyk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgZWRpdG9yLm9uY2UoJ3BpY2tlcjphc3NldDpjbG9zZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICBpZiAoZXZ0UGljaykge1xyXG4gICAgICAgICAgICAgICAgZXZ0UGljay51bmJpbmQoKTtcclxuICAgICAgICAgICAgICAgIGV2dFBpY2sgPSBudWxsO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBmaWVsZC5lbGVtZW50LmZvY3VzKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgZmllbGQub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMudmFsdWUpXHJcbiAgICAgICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgdmFyIGFzc2V0ID0gZWRpdG9yLmNhbGwoJ2Fzc2V0czpnZXQnLCB0aGlzLnZhbHVlKTtcclxuICAgICAgICAgICAgaWYgKCFhc3NldCkgcmV0dXJuO1xyXG4gICAgICAgICAgICBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6c2V0JywgJ2Fzc2V0JywgW2Fzc2V0XSk7XHJcblxyXG4gICAgICAgICAgICBpZiAobGVnYWN5U2NyaXB0cyAmJiBhc3NldC5nZXQoJ3R5cGUnKSA9PT0gJ3NjcmlwdCcpIHtcclxuICAgICAgICAgICAgICBlZGl0b3IuY2FsbCgnYXNzZXRzOnBhbmVsOmN1cnJlbnRGb2xkZXInLCAnc2NyaXB0cycpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHZhciBwYXRoID0gYXNzZXQuZ2V0KCdwYXRoJyk7XHJcbiAgICAgICAgICAgICAgaWYgKHBhdGgubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICBlZGl0b3IuY2FsbCgnYXNzZXRzOnBhbmVsOmN1cnJlbnRGb2xkZXInLCBlZGl0b3IuY2FsbCgnYXNzZXRzOmdldCcsIHBhdGhbcGF0aC5sZW5ndGggLSAxXSkpO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBlZGl0b3IuY2FsbCgnYXNzZXRzOnBhbmVsOmN1cnJlbnRGb2xkZXInLCBudWxsKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgYnRuRWRpdC5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGZpZWxkLmVtaXQoJ2NsaWNrJyk7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBidG5SZW1vdmUub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBmaWVsZC5lbWl0KCdiZWZvcmVjaGFuZ2UnLCBudWxsKTtcclxuICAgICAgICAgICAgZmllbGQudmFsdWUgPSBudWxsO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgdmFyIHdhdGNoID0gbnVsbDtcclxuICAgICAgICAgIHZhciB3YXRjaEFzc2V0ID0gbnVsbDtcclxuICAgICAgICAgIHZhciByZW5kZXJRdWV1ZWQ7XHJcbiAgICAgICAgICB2YXIgcXVldWVSZW5kZXI7XHJcblxyXG4gICAgICAgICAgdmFyIGV2dFRodW1ibmFpbENoYW5nZTtcclxuICAgICAgICAgIHZhciB1cGRhdGVUaHVtYm5haWwgPSBmdW5jdGlvbiAoZW1wdHkpIHtcclxuICAgICAgICAgICAgdmFyIGFzc2V0ID0gZWRpdG9yLmNhbGwoJ2Fzc2V0czpnZXQnLCBmaWVsZC52YWx1ZSk7XHJcblxyXG4gICAgICAgICAgICBpZiAod2F0Y2gpIHtcclxuICAgICAgICAgICAgICBlZGl0b3IuY2FsbCgnYXNzZXRzOicgKyB3YXRjaEFzc2V0LmdldCgndHlwZScpICsgJzp1bndhdGNoJywgd2F0Y2hBc3NldCwgd2F0Y2gpO1xyXG4gICAgICAgICAgICAgIHdhdGNoQXNzZXQgPSB3YXRjaCA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChlbXB0eSkge1xyXG4gICAgICAgICAgICAgIGZpZWxkLmltYWdlID0gJyc7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIWFzc2V0KSB7XHJcbiAgICAgICAgICAgICAgZmllbGQuaW1hZ2UgPSBjb25maWcudXJsLmhvbWUgKyAnL2VkaXRvci9zY2VuZS9pbWcvYXNzZXQtcGxhY2Vob2xkZXItdGV4dHVyZS5wbmcnO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIGlmIChhc3NldC5oYXMoJ3RodW1ibmFpbHMubScpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3JjID0gYXNzZXQuZ2V0KCd0aHVtYm5haWxzLm0nKTtcclxuICAgICAgICAgICAgICAgIGlmIChzcmMuc3RhcnRzV2l0aCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0JykpIHtcclxuICAgICAgICAgICAgICAgICAgZmllbGQuaW1hZ2UgPSBhc3NldC5nZXQoJ3RodW1ibmFpbHMubScpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgZmllbGQuaW1hZ2UgPSBjb25maWcudXJsLmhvbWUgKyBhc3NldC5nZXQoJ3RodW1ibmFpbHMubScpLmFwcGVuZFF1ZXJ5KCd0PScgKyBhc3NldC5nZXQoJ2ZpbGUuaGFzaCcpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZmllbGQuaW1hZ2UgPSAnL2VkaXRvci9zY2VuZS9pbWcvYXNzZXQtcGxhY2Vob2xkZXItJyArIGFzc2V0LmdldCgndHlwZScpICsgJy5wbmcnO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgaWYgKGFyZ3Mua2luZCA9PT0gJ21hdGVyaWFsJyB8fCBhcmdzLmtpbmQgPT09ICdtb2RlbCcgfHwgYXJncy5raW5kID09PSAnY3ViZW1hcCcgfHwgYXJncy5raW5kID09ICdmb250JyB8fCBhcmdzLmtpbmQgPT09ICdzcHJpdGUnKSB7XHJcbiAgICAgICAgICAgICAgICB3YXRjaEFzc2V0ID0gYXNzZXQ7XHJcbiAgICAgICAgICAgICAgICB3YXRjaCA9IGVkaXRvci5jYWxsKCdhc3NldHM6JyArIGFyZ3Mua2luZCArICc6d2F0Y2gnLCB7XHJcbiAgICAgICAgICAgICAgICAgIGFzc2V0OiB3YXRjaEFzc2V0LFxyXG4gICAgICAgICAgICAgICAgICBhdXRvTG9hZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IHF1ZXVlUmVuZGVyXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChxdWV1ZVJlbmRlcilcclxuICAgICAgICAgICAgICBxdWV1ZVJlbmRlcigpO1xyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICBpZiAoYXJncy5raW5kID09PSAnbWF0ZXJpYWwnIHx8IGFyZ3Mua2luZCA9PT0gJ21vZGVsJyB8fCBhcmdzLmtpbmQgPT09ICdmb250JyB8fCBhcmdzLmtpbmQgPT09ICdzcHJpdGUnKSB7XHJcbiAgICAgICAgICAgIGlmIChhcmdzLmtpbmQgIT09ICdzcHJpdGUnKSB7XHJcbiAgICAgICAgICAgICAgZmllbGQuZWxlbWVudEltYWdlLmNsYXNzTGlzdC5hZGQoJ2ZsaXBZJyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHZhciByZW5kZXJQcmV2aWV3ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIHJlbmRlclF1ZXVlZCA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgICBpZiAod2F0Y2hBc3NldCkge1xyXG4gICAgICAgICAgICAgICAgLy8gcmVuZGVyXHJcbiAgICAgICAgICAgICAgICBlZGl0b3IuY2FsbCgncHJldmlldzpyZW5kZXInLCB3YXRjaEFzc2V0LCAxMjgsIDEyOCwgZmllbGQuZWxlbWVudEltYWdlKTtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdmFyIGN0eCA9IGZpZWxkLmVsZW1lbnRJbWFnZS5jdHg7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWN0eClcclxuICAgICAgICAgICAgICAgICAgY3R4ID0gZmllbGQuZWxlbWVudEltYWdlLmN0eCA9IGZpZWxkLmVsZW1lbnRJbWFnZS5nZXRDb250ZXh0KCcyZCcpO1xyXG5cclxuICAgICAgICAgICAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgZmllbGQuZWxlbWVudEltYWdlLndpZHRoLCBmaWVsZC5lbGVtZW50SW1hZ2UuaGVpZ2h0KTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICByZW5kZXJQcmV2aWV3KCk7XHJcblxyXG4gICAgICAgICAgICBxdWV1ZVJlbmRlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICBpZiAocmVuZGVyUXVldWVkKSByZXR1cm47XHJcbiAgICAgICAgICAgICAgcmVuZGVyUXVldWVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVuZGVyUHJldmlldyk7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICB2YXIgZXZ0U2NlbmVTZXR0aW5ncyA9IGVkaXRvci5vbigncHJldmlldzpzY2VuZTpjaGFuZ2VkJywgcXVldWVSZW5kZXIpO1xyXG5cclxuICAgICAgICAgICAgZmllbGQub25jZSgnZGVzdHJveScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICBldnRTY2VuZVNldHRpbmdzLnVuYmluZCgpO1xyXG4gICAgICAgICAgICAgIGV2dFNjZW5lU2V0dGluZ3MgPSBudWxsO1xyXG5cclxuICAgICAgICAgICAgICBpZiAod2F0Y2gpIHtcclxuICAgICAgICAgICAgICAgIGVkaXRvci5jYWxsKCdhc3NldHM6JyArIHdhdGNoQXNzZXQuZ2V0KCd0eXBlJykgKyAnOnVud2F0Y2gnLCB3YXRjaEFzc2V0LCB3YXRjaCk7XHJcbiAgICAgICAgICAgICAgICB3YXRjaEFzc2V0ID0gd2F0Y2ggPSBudWxsO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKGFyZ3Mua2luZCA9PT0gJ2N1YmVtYXAnKSB7XHJcbiAgICAgICAgICAgIGZpZWxkLmVsZW1lbnRJbWFnZS53aWR0aCA9IDYwO1xyXG4gICAgICAgICAgICBmaWVsZC5lbGVtZW50SW1hZ2UuaGVpZ2h0ID0gNjA7XHJcblxyXG4gICAgICAgICAgICB2YXIgcG9zaXRpb25zID0gW1szMCwgMjJdLCBbMCwgMjJdLCBbMTUsIDddLCBbMTUsIDM3XSwgWzE1LCAyMl0sIFs0NSwgMjJdXTtcclxuICAgICAgICAgICAgdmFyIGltYWdlcyA9IFtudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsXTtcclxuXHJcbiAgICAgICAgICAgIHZhciByZW5kZXJQcmV2aWV3ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIHJlbmRlclF1ZXVlZCA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgICB2YXIgY3R4ID0gZmllbGQuZWxlbWVudEltYWdlLmN0eDtcclxuICAgICAgICAgICAgICBpZiAoIWN0eClcclxuICAgICAgICAgICAgICAgIGN0eCA9IGZpZWxkLmVsZW1lbnRJbWFnZS5jdHggPSBmaWVsZC5lbGVtZW50SW1hZ2UuZ2V0Q29udGV4dCgnMmQnKTtcclxuXHJcbiAgICAgICAgICAgICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBmaWVsZC5lbGVtZW50SW1hZ2Uud2lkdGgsIGZpZWxkLmVsZW1lbnRJbWFnZS5oZWlnaHQpO1xyXG5cclxuICAgICAgICAgICAgICBpZiAod2F0Y2hBc3NldCkge1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA2OyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgdmFyIGlkID0gd2F0Y2hBc3NldC5nZXQoJ2RhdGEudGV4dHVyZXMuJyArIGkpO1xyXG4gICAgICAgICAgICAgICAgICB2YXIgaW1hZ2UgPSBudWxsO1xyXG5cclxuICAgICAgICAgICAgICAgICAgaWYgKGlkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRleHR1cmUgPSBlZGl0b3IuY2FsbCgnYXNzZXRzOmdldCcsIGlkKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGV4dHVyZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgdmFyIGhhc2ggPSB0ZXh0dXJlLmdldCgnZmlsZS5oYXNoJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1hZ2VzW2ldICYmIGltYWdlc1tpXS5oYXNoID09PSBoYXNoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlID0gaW1hZ2VzW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVybCA9IHRleHR1cmUuZ2V0KCd0aHVtYm5haWxzLnMnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbWFnZXNbaV0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VzW2ldLm9ubG9hZCA9IG51bGw7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbWFnZXNbaV0gPSBudWxsO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVybCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlID0gaW1hZ2VzW2ldID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2UuaGFzaCA9IGhhc2g7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2Uub25sb2FkID0gcXVldWVSZW5kZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2Uuc3JjID0gdXJsLmFwcGVuZFF1ZXJ5KCd0PScgKyBoYXNoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaW1hZ2VzW2ldKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBpbWFnZXNbaV0ub25sb2FkID0gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICAgIGltYWdlc1tpXSA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGltYWdlc1tpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGltYWdlc1tpXS5vbmxvYWQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIGltYWdlc1tpXSA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgIGlmIChpbWFnZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2UoaW1hZ2UsIHBvc2l0aW9uc1tpXVswXSwgcG9zaXRpb25zW2ldWzFdLCAxNSwgMTUpO1xyXG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgICAgICAgICBjdHgucmVjdChwb3NpdGlvbnNbaV1bMF0sIHBvc2l0aW9uc1tpXVsxXSwgMTUsIDE1KTtcclxuICAgICAgICAgICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJyMwMDAnO1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5maWxsKCk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICByZW5kZXJQcmV2aWV3KCk7XHJcblxyXG4gICAgICAgICAgICBxdWV1ZVJlbmRlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICBpZiAocmVuZGVyUXVldWVkKSByZXR1cm47XHJcbiAgICAgICAgICAgICAgcmVuZGVyUXVldWVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVuZGVyUHJldmlldyk7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICBmaWVsZC5vbmNlKCdkZXN0cm95JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIGlmICh3YXRjaCkge1xyXG4gICAgICAgICAgICAgICAgZWRpdG9yLmNhbGwoJ2Fzc2V0czpjdWJlbWFwOnVud2F0Y2gnLCB3YXRjaEFzc2V0LCB3YXRjaCk7XHJcbiAgICAgICAgICAgICAgICB3YXRjaEFzc2V0ID0gd2F0Y2ggPSBudWxsO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgbGlua0ZpZWxkKCk7XHJcblxyXG4gICAgICAgICAgdmFyIHVwZGF0ZUZpZWxkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBmaWVsZC52YWx1ZTtcclxuXHJcbiAgICAgICAgICAgIGZpZWxkVGl0bGUudGV4dCA9IGZpZWxkLmNsYXNzIS5jb250YWlucygnbnVsbCcpID8gJ3ZhcmlvdXMnIDogJ0VtcHR5JztcclxuXHJcbiAgICAgICAgICAgIGJ0bkVkaXQuZGlzYWJsZWQgPSAhdmFsdWU7XHJcbiAgICAgICAgICAgIGJ0blJlbW92ZS5kaXNhYmxlZCA9ICF2YWx1ZSAmJiAhZmllbGQuY2xhc3MhLmNvbnRhaW5zKCdudWxsJyk7XHJcblxyXG4gICAgICAgICAgICBpZiAoZXZ0VGh1bWJuYWlsQ2hhbmdlKSB7XHJcbiAgICAgICAgICAgICAgZXZ0VGh1bWJuYWlsQ2hhbmdlLnVuYmluZCgpO1xyXG4gICAgICAgICAgICAgIGV2dFRodW1ibmFpbENoYW5nZSA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICghdmFsdWUpIHtcclxuICAgICAgICAgICAgICBpZiAoZmllbGQuY2xhc3MhLmNvbnRhaW5zKCdzdGFyJykpXHJcbiAgICAgICAgICAgICAgICBmaWVsZFRpdGxlLnRleHQgPSAnKiAnICsgZmllbGRUaXRsZS50ZXh0O1xyXG5cclxuICAgICAgICAgICAgICBmaWVsZC5lbXB0eSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgdXBkYXRlVGh1bWJuYWlsKHRydWUpO1xyXG5cclxuICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGZpZWxkLmVtcHR5ID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICB2YXIgYXNzZXQgPSBlZGl0b3IuY2FsbCgnYXNzZXRzOmdldCcsIHZhbHVlKTtcclxuXHJcbiAgICAgICAgICAgIGlmICghYXNzZXQpXHJcbiAgICAgICAgICAgICAgcmV0dXJuIHVwZGF0ZVRodW1ibmFpbCgpO1xyXG5cclxuICAgICAgICAgICAgZXZ0VGh1bWJuYWlsQ2hhbmdlID0gYXNzZXQub24oJ2ZpbGUuaGFzaC5tOnNldCcsIHVwZGF0ZVRodW1ibmFpbCk7XHJcbiAgICAgICAgICAgIHVwZGF0ZVRodW1ibmFpbCgpO1xyXG5cclxuICAgICAgICAgICAgZmllbGRUaXRsZS50ZXh0ID0gYXNzZXQuZ2V0KCduYW1lJyk7XHJcblxyXG4gICAgICAgICAgICBpZiAoZmllbGQuY2xhc3MhLmNvbnRhaW5zKCdzdGFyJykpXHJcbiAgICAgICAgICAgICAgZmllbGRUaXRsZS50ZXh0ID0gJyogJyArIGZpZWxkVGl0bGUudGV4dDtcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgICBmaWVsZC5vbignY2hhbmdlJywgdXBkYXRlRmllbGQpO1xyXG5cclxuICAgICAgICAgIGlmIChhcmdzLnZhbHVlKVxyXG4gICAgICAgICAgICBmaWVsZC52YWx1ZSA9IGFyZ3MudmFsdWU7XHJcblxyXG4gICAgICAgICAgdXBkYXRlRmllbGQoKTtcclxuXHJcbiAgICAgICAgICB2YXIgZHJvcFJlZiA9IGVkaXRvci5jYWxsKCdkcm9wOnRhcmdldCcsIHtcclxuICAgICAgICAgICAgcmVmOiBwYW5lbC5lbGVtZW50LFxyXG4gICAgICAgICAgICBmaWx0ZXI6IGZ1bmN0aW9uICh0eXBlLCBkYXRhKSB7XHJcbiAgICAgICAgICAgICAgdmFyIHJlY3RBID0gcm9vdC5pbm5lckVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgICAgICAgdmFyIHJlY3RCID0gcGFuZWwuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICAgICAgICByZXR1cm4gZGF0YS5pZCAmJiAoYXJncy5raW5kID09PSAnKicgfHwgdHlwZSA9PT0gJ2Fzc2V0LicgKyBhcmdzLmtpbmQpICYmIHBhcnNlSW50KGRhdGEuaWQsIDEwKSAhPT0gZmllbGQudmFsdWUgJiYgIWVkaXRvci5jYWxsKCdhc3NldHM6Z2V0JywgcGFyc2VJbnQoZGF0YS5pZCwgMTApKS5nZXQoJ3NvdXJjZScpICYmIHJlY3RCLnRvcCA+IHJlY3RBLnRvcCAmJiByZWN0Qi5ib3R0b20gPCByZWN0QS5ib3R0b207XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGRyb3A6IGZ1bmN0aW9uICh0eXBlLCBkYXRhKSB7XHJcbiAgICAgICAgICAgICAgaWYgKChhcmdzLmtpbmQgIT09ICcqJyAmJiB0eXBlICE9PSAnYXNzZXQuJyArIGFyZ3Mua2luZCkgfHwgZWRpdG9yLmNhbGwoJ2Fzc2V0czpnZXQnLCBwYXJzZUludChkYXRhLmlkLCAxMCkpLmdldCgnc291cmNlJykpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICAgICAgIHZhciBvbGRWYWx1ZXMgPSB7fTtcclxuICAgICAgICAgICAgICBpZiAoYXJncy5vblNldCAmJiBhcmdzLmxpbmsgJiYgYXJncy5saW5rIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5saW5rLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgIHZhciBpZCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgIGlmIChhcmdzLmxpbmtbaV0uX3R5cGUgPT09ICdhc3NldCcpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZCA9IGFyZ3MubGlua1tpXS5nZXQoJ2lkJyk7XHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYXJncy5saW5rW2ldLl90eXBlID09PSAnZW50aXR5Jykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlkID0gYXJncy5saW5rW2ldLmdldCgncmVzb3VyY2VfaWQnKTtcclxuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgb2xkVmFsdWVzW2lkXSA9IGFyZ3MubGlua1tpXS5nZXQocGF0aEF0KGFyZ3MsIGkpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIGZpZWxkLmVtaXQoJ2JlZm9yZWNoYW5nZScsIHBhcnNlSW50KGRhdGEuaWQsIDEwKSk7XHJcbiAgICAgICAgICAgICAgZmllbGQudmFsdWUgPSBwYXJzZUludChkYXRhLmlkLCAxMCk7XHJcblxyXG4gICAgICAgICAgICAgIGlmIChhcmdzLm9uU2V0KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXNzZXQgPSBlZGl0b3IuY2FsbCgnYXNzZXRzOmdldCcsIHBhcnNlSW50KGRhdGEuaWQsIDEwKSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoYXNzZXQpIGFyZ3Mub25TZXQoYXNzZXQsIG9sZFZhbHVlcyk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBvdmVyOiBmdW5jdGlvbiAodHlwZSwgZGF0YSkge1xyXG4gICAgICAgICAgICAgIGlmIChhcmdzLm92ZXIpXHJcbiAgICAgICAgICAgICAgICBhcmdzLm92ZXIodHlwZSwgZGF0YSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGxlYXZlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgaWYgKGFyZ3MubGVhdmUpXHJcbiAgICAgICAgICAgICAgICBhcmdzLmxlYXZlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgZmllbGQub24oJ2Rlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGRyb3BSZWYudW5yZWdpc3RlcigpO1xyXG4gICAgICAgICAgICBpZiAoZXZ0VGh1bWJuYWlsQ2hhbmdlKSB7XHJcbiAgICAgICAgICAgICAgZXZ0VGh1bWJuYWlsQ2hhbmdlLnVuYmluZCgpO1xyXG4gICAgICAgICAgICAgIGV2dFRodW1ibmFpbENoYW5nZSA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIC8vIHRodW1ibmFpbFxyXG4gICAgICAgICAgcGFuZWwuYXBwZW5kKGZpZWxkKTtcclxuICAgICAgICAgIC8vIHJpZ2h0IHNpZGVcclxuICAgICAgICAgIHBhbmVsLmFwcGVuZChwYW5lbEZpZWxkcyk7XHJcbiAgICAgICAgICAvLyBjb250cm9sc1xyXG4gICAgICAgICAgcGFuZWxGaWVsZHMuYXBwZW5kQ2hpbGQocGFuZWxDb250cm9scyk7XHJcbiAgICAgICAgICAvLyBsYWJlbFxyXG4gICAgICAgICAgaWYgKGxhYmVsKSB7XHJcbiAgICAgICAgICAgIHBhbmVsLmlubmVyRWxlbWVudC5yZW1vdmVDaGlsZChsYWJlbC5lbGVtZW50KTtcclxuICAgICAgICAgICAgcGFuZWxDb250cm9scy5hcHBlbmRDaGlsZChsYWJlbC5lbGVtZW50KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHBhbmVsQ29udHJvbHMuY2xhc3NMaXN0LnJlbW92ZSgnbGFiZWwtZmllbGQnKTtcclxuICAgICAgICAgIC8vIGVkaXRcclxuICAgICAgICAgIHBhbmVsQ29udHJvbHMuYXBwZW5kQ2hpbGQoYnRuRWRpdC5lbGVtZW50KTtcclxuICAgICAgICAgIC8vIHJlbW92ZVxyXG4gICAgICAgICAgcGFuZWxDb250cm9scy5hcHBlbmRDaGlsZChidG5SZW1vdmUuZWxlbWVudCk7XHJcblxyXG4gICAgICAgICAgLy8gdGl0bGVcclxuICAgICAgICAgIHBhbmVsRmllbGRzLmFwcGVuZENoaWxkKGZpZWxkVGl0bGUuZWxlbWVudCk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgLy8gZW50aXR5IHBpY2tlclxyXG4gICAgICAgIGNhc2UgJ2VudGl0eSc6XHJcbiAgICAgICAgICBmaWVsZCA9IG5ldyBMYWJlbCgpO1xyXG4gICAgICAgICAgZmllbGQuY2xhc3MhLmFkZCgnYWRkLWVudGl0eScpO1xyXG4gICAgICAgICAgZmllbGQuZmxleEdyb3cgPSAnMSc7XHJcbiAgICAgICAgICBmaWVsZC5jbGFzcyEuYWRkKCdudWxsJyk7XHJcblxyXG4gICAgICAgICAgZmllbGQudGV4dCA9ICdTZWxlY3QgRW50aXR5JztcclxuICAgICAgICAgIGZpZWxkLnBsYWNlaG9sZGVyID0gJy4uLic7XHJcblxyXG4gICAgICAgICAgcGFuZWwuYXBwZW5kKGZpZWxkKTtcclxuXHJcbiAgICAgICAgICB2YXIgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICAgIGljb24uY2xhc3NMaXN0LmFkZCgnaWNvbicpO1xyXG5cclxuICAgICAgICAgIGljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGVkaXRvci5jYWxsKCdwZXJtaXNzaW9uczp3cml0ZScpKVxyXG4gICAgICAgICAgICAgIGZpZWxkLnRleHQgPSAnJztcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGZpZWxkLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgdmFyIGVudGl0eSA9IGVkaXRvci5jYWxsKCdlbnRpdGllczpnZXQnLCB2YWx1ZSk7XHJcbiAgICAgICAgICAgICAgaWYgKCFlbnRpdHkpIHtcclxuICAgICAgICAgICAgICAgIGZpZWxkLnRleHQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgZmllbGQuZWxlbWVudC5pbm5lckhUTUwgPSBlbnRpdHkuZ2V0KCduYW1lJyk7XHJcbiAgICAgICAgICAgICAgZmllbGQuZWxlbWVudC5hcHBlbmRDaGlsZChpY29uKTtcclxuICAgICAgICAgICAgICBmaWVsZC5wbGFjZWhvbGRlciA9ICcnO1xyXG5cclxuICAgICAgICAgICAgICBpZiAodmFsdWUgIT09ICd2YXJpb3VzJylcclxuICAgICAgICAgICAgICAgIGZpZWxkLmNsYXNzLnJlbW92ZSgnbnVsbCcpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIGZpZWxkLmVsZW1lbnQuaW5uZXJIVE1MID0gJ1NlbGVjdCBFbnRpdHknO1xyXG4gICAgICAgICAgICAgIGZpZWxkLnBsYWNlaG9sZGVyID0gJy4uLic7XHJcbiAgICAgICAgICAgICAgZmllbGQuY2xhc3MhLmFkZCgnbnVsbCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBsaW5rRmllbGQoKTtcclxuXHJcbiAgICAgICAgICB2YXIgZ2V0Q3VycmVudEVudGl0eSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGVudGl0eSA9IG51bGw7XHJcbiAgICAgICAgICAgIGlmIChhcmdzLmxpbmspIHtcclxuICAgICAgICAgICAgICBpZiAoIShhcmdzLmxpbmsgaW5zdGFuY2VvZiBBcnJheSkpIHtcclxuICAgICAgICAgICAgICAgIGFyZ3MubGluayA9IFthcmdzLmxpbmtdO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgLy8gZ2V0IGluaXRpYWwgdmFsdWUgb25seSBpZiBpdCdzIHRoZSBzYW1lIGZvciBhbGxcclxuICAgICAgICAgICAgICAvLyBsaW5rcyBvdGhlcndpc2Ugc2V0IGl0IHRvIG51bGxcclxuICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gYXJncy5saW5rLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdmFsID0gYXJncy5saW5rW2ldLmdldChwYXRoQXQoYXJncywgaSkpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGVudGl0eSAhPT0gdmFsKSB7XHJcbiAgICAgICAgICAgICAgICAgIGlmIChlbnRpdHkpIHtcclxuICAgICAgICAgICAgICAgICAgICBlbnRpdHkgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGVudGl0eSA9IHZhbDtcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGVudGl0eTtcclxuICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgZmllbGQub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZXZ0RW50aXR5UGljayA9IGVkaXRvci5vbmNlKCdwaWNrZXI6ZW50aXR5JywgZnVuY3Rpb24gKGVudGl0eSkge1xyXG4gICAgICAgICAgICAgIGZpZWxkLnRleHQgPSBlbnRpdHkgPyBlbnRpdHkuZ2V0KCdyZXNvdXJjZV9pZCcpIDogbnVsbDtcclxuICAgICAgICAgICAgICBldnRFbnRpdHlQaWNrID0gbnVsbDtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICB2YXIgaW5pdGlhbFZhbHVlID0gZ2V0Q3VycmVudEVudGl0eSgpO1xyXG5cclxuICAgICAgICAgICAgZWRpdG9yLmNhbGwoJ3BpY2tlcjplbnRpdHknLCBpbml0aWFsVmFsdWUsIGFyZ3MuZmlsdGVyIHx8IG51bGwpO1xyXG5cclxuICAgICAgICAgICAgZWRpdG9yLm9uY2UoJ3BpY2tlcjplbnRpdHk6Y2xvc2UnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgaWYgKGV2dEVudGl0eVBpY2spIHtcclxuICAgICAgICAgICAgICAgIGV2dEVudGl0eVBpY2sudW5iaW5kKCk7XHJcbiAgICAgICAgICAgICAgICBldnRFbnRpdHlQaWNrID0gbnVsbDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgLy8gaGlnaGxpZ2h0IG9uIGhvdmVyXHJcbiAgICAgICAgICBmaWVsZC5vbignaG92ZXInLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBlbnRpdHkgPSBnZXRDdXJyZW50RW50aXR5KCk7XHJcbiAgICAgICAgICAgIGlmICghZW50aXR5KSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICBlZGl0b3IuY2FsbCgnZW50aXRpZXM6cGFuZWw6aGlnaGxpZ2h0JywgZW50aXR5LCB0cnVlKTtcclxuXHJcbiAgICAgICAgICAgIGZpZWxkLm9uY2UoJ2JsdXInLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgZWRpdG9yLmNhbGwoJ2VudGl0aWVzOnBhbmVsOmhpZ2hsaWdodCcsIGVudGl0eSwgZmFsc2UpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGZpZWxkLm9uY2UoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIGVkaXRvci5jYWxsKCdlbnRpdGllczpwYW5lbDpoaWdobGlnaHQnLCBlbnRpdHksIGZhbHNlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICB2YXIgZHJvcFJlZiA9IGVkaXRvci5jYWxsKCdkcm9wOnRhcmdldCcsIHtcclxuICAgICAgICAgICAgcmVmOiBmaWVsZC5lbGVtZW50LFxyXG4gICAgICAgICAgICBmaWx0ZXI6IGZ1bmN0aW9uICh0eXBlLCBkYXRhKSB7XHJcbiAgICAgICAgICAgICAgdmFyIHJlY3RBID0gcm9vdC5pbm5lckVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgICAgICAgdmFyIHJlY3RCID0gZmllbGQuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICAgICAgICByZXR1cm4gdHlwZSA9PT0gJ2VudGl0eScgJiYgZGF0YS5yZXNvdXJjZV9pZCAhPT0gZmllbGQudmFsdWUgJiYgcmVjdEIudG9wID4gcmVjdEEudG9wICYmIHJlY3RCLmJvdHRvbSA8IHJlY3RBLmJvdHRvbTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZHJvcDogZnVuY3Rpb24gKHR5cGUsIGRhdGEpIHtcclxuICAgICAgICAgICAgICBpZiAodHlwZSAhPT0gJ2VudGl0eScpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICAgICAgIGZpZWxkLnZhbHVlID0gZGF0YS5yZXNvdXJjZV9pZDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb3ZlcjogZnVuY3Rpb24gKHR5cGUsIGRhdGEpIHtcclxuICAgICAgICAgICAgICBpZiAoYXJncy5vdmVyKVxyXG4gICAgICAgICAgICAgICAgYXJncy5vdmVyKHR5cGUsIGRhdGEpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBsZWF2ZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIGlmIChhcmdzLmxlYXZlKVxyXG4gICAgICAgICAgICAgICAgYXJncy5sZWF2ZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIGZpZWxkLm9uKCdkZXN0cm95JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBkcm9wUmVmLnVucmVnaXN0ZXIoKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ2ltYWdlJzpcclxuICAgICAgICAgIHBhbmVsLmZsZXggPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICBmaWVsZCA9IG5ldyBJbWFnZSgpO1xyXG4gICAgICAgICAgZmllbGQuc3R5bGUhLm1heFdpZHRoID0gJzEwMCUnO1xyXG4gICAgICAgICAgZmllbGQuc3R5bGUhLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgICAgZmllbGQuc3JjID0gYXJncy5zcmM7XHJcblxyXG4gICAgICAgICAgcGFuZWwuYXBwZW5kKGZpZWxkKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlICdwcm9ncmVzcyc6XHJcbiAgICAgICAgICBmaWVsZCA9IG5ldyBQcm9ncmVzcygpO1xyXG4gICAgICAgICAgZmllbGQuZmxleEdyb3cgPSAnMSc7XHJcblxyXG4gICAgICAgICAgcGFuZWwuYXBwZW5kKGZpZWxkKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlICdjb2RlJzpcclxuICAgICAgICAgIGZpZWxkID0gbmV3IENvZGUoKTtcclxuICAgICAgICAgIGZpZWxkLmZsZXhHcm93ID0gJzEnO1xyXG5cclxuICAgICAgICAgIGlmIChhcmdzLnZhbHVlKVxyXG4gICAgICAgICAgICBmaWVsZC50ZXh0ID0gYXJncy52YWx1ZTtcclxuXHJcbiAgICAgICAgICBwYW5lbC5hcHBlbmQoZmllbGQpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ2J1dHRvbic6XHJcbiAgICAgICAgICBmaWVsZCA9IG5ldyBCdXR0b24oKTtcclxuICAgICAgICAgIGZpZWxkLmZsZXhHcm93ID0gJzEnO1xyXG4gICAgICAgICAgZmllbGQudGV4dCA9IGFyZ3MudGV4dCB8fCAnQnV0dG9uJztcclxuICAgICAgICAgIHBhbmVsLmFwcGVuZChmaWVsZCk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnZWxlbWVudCc6XHJcbiAgICAgICAgICBmaWVsZCA9IGFyZ3MuZWxlbWVudDtcclxuICAgICAgICAgIHBhbmVsLmFwcGVuZChmaWVsZCk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnY3VydmVzZXQnOlxyXG4gICAgICAgICAgZmllbGQgPSBuZXcgdWkuQ3VydmVGaWVsZChhcmdzKTtcclxuICAgICAgICAgIGZpZWxkLmZsZXhHcm93ID0gJzEnO1xyXG4gICAgICAgICAgZmllbGQudGV4dCA9IGFyZ3MudGV4dCB8fCAnJztcclxuXHJcbiAgICAgICAgICAvLyBXYXJuaW5nOiBDdXJ2ZSBmaWVsZHMgZG8gbm90IGN1cnJlbnRseSBzdXBwb3J0IG11bHRpc2VsZWN0XHJcbiAgICAgICAgICBpZiAoYXJncy5saW5rKSB7XHJcbiAgICAgICAgICAgIHZhciBsaW5rID0gYXJncy5saW5rO1xyXG4gICAgICAgICAgICBpZiAoYXJncy5saW5rIGluc3RhbmNlb2YgQXJyYXkpXHJcbiAgICAgICAgICAgICAgbGluayA9IGFyZ3MubGlua1swXTtcclxuXHJcbiAgICAgICAgICAgIHZhciBwYXRoID0gcGF0aEF0KGFyZ3MsIDApO1xyXG5cclxuICAgICAgICAgICAgZmllbGQubGluayhsaW5rLCBhcmdzLmNhblJhbmRvbWl6ZSA/IFtwYXRoLCBwYXRoICsgJzInXSA6IFtwYXRoXSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgdmFyIGN1cnZlUGlja2VyT24gPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICB2YXIgdG9nZ2xlQ3VydmVQaWNrZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICghZmllbGQuY2xhc3MhLmNvbnRhaW5zKCdkaXNhYmxlZCcpICYmICFjdXJ2ZVBpY2tlck9uKSB7XHJcbiAgICAgICAgICAgICAgZWRpdG9yLmNhbGwoJ3BpY2tlcjpjdXJ2ZScsIGZpZWxkLnZhbHVlLCBhcmdzKTtcclxuXHJcbiAgICAgICAgICAgICAgY3VydmVQaWNrZXJPbiA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICAgIC8vIHBvc2l0aW9uIHBpY2tlclxyXG4gICAgICAgICAgICAgIHZhciByZWN0UGlja2VyID0gZWRpdG9yLmNhbGwoJ3BpY2tlcjpjdXJ2ZTpyZWN0Jyk7XHJcbiAgICAgICAgICAgICAgdmFyIHJlY3RGaWVsZCA9IGZpZWxkLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgICAgICAgZWRpdG9yLmNhbGwoJ3BpY2tlcjpjdXJ2ZTpwb3NpdGlvbicsIHJlY3RGaWVsZC5yaWdodCAtIHJlY3RQaWNrZXIud2lkdGgsIHJlY3RGaWVsZC5ib3R0b20pO1xyXG5cclxuICAgICAgICAgICAgICBhcmdzLmtlZXBab29tID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICAgIHZhciBjb21iaW5lID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICAgIHZhciBldnRDaGFuZ2VTdGFydCA9IGVkaXRvci5vbigncGlja2VyOmN1cnZlOmNoYW5nZTpzdGFydCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGNvbWJpbmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICB2YXIgZXZ0Q2hhbmdlRW5kID0gZWRpdG9yLm9uKCdwaWNrZXI6Y3VydmU6Y2hhbmdlOmVuZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGNvbWJpbmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgdmFyIGV2dFBpY2tlckNoYW5nZWQgPSBlZGl0b3Iub24oJ3BpY2tlcjpjdXJ2ZTpjaGFuZ2UnLCBmdW5jdGlvbiAocGF0aHMsIHZhbHVlcykge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFmaWVsZC5fbGluaykgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBsaW5rID0gZmllbGQuX2xpbms7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIHByZXZpb3VzID0ge1xyXG4gICAgICAgICAgICAgICAgICBwYXRoczogW10sXHJcbiAgICAgICAgICAgICAgICAgIHZhbHVlczogW11cclxuICAgICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIHBhdGg7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gcGF0aHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgcGF0aCA9IHBhdGhBdChhcmdzLCAwKTsgLy8gYWx3YXlzIHVzZSAwIGJlY2F1c2Ugd2UgZG8gbm90IHN1cHBvcnQgbXVsdGlzZWxlY3RcclxuICAgICAgICAgICAgICAgICAgLy8gdXNlIHRoZSBzZWNvbmQgY3VydmUgcGF0aCBpZiBuZWVkZWRcclxuICAgICAgICAgICAgICAgICAgaWYgKGFyZ3MuY2FuUmFuZG9taXplICYmIHBhdGhzW2ldWzBdICE9PSAnMCcpIHtcclxuICAgICAgICAgICAgICAgICAgICBwYXRoICs9ICcyJztcclxuICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgcGF0aCArPSBwYXRoc1tpXS5zdWJzdHJpbmcoMSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICBwcmV2aW91cy5wYXRocy5wdXNoKHBhdGgpO1xyXG4gICAgICAgICAgICAgICAgICBwcmV2aW91cy52YWx1ZXMucHVzaChmaWVsZC5fbGluay5nZXQocGF0aCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgdW5kbyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBsaW5rO1xyXG4gICAgICAgICAgICAgICAgICBpZiAobGluay5oaXN0b3J5ICYmIGxpbmsuaGlzdG9yeS5fZ2V0SXRlbUZuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbSA9IGxpbmsuaGlzdG9yeS5fZ2V0SXRlbUZuKCk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgIGlmICghaXRlbSkgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgICAgICAgYXJncy5rZWVwWm9vbSA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICAgICAgICB2YXIgaGlzdG9yeSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICBpZiAoaXRlbS5oaXN0b3J5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaGlzdG9yeSA9IGl0ZW0uaGlzdG9yeS5lbmFibGVkO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uaGlzdG9yeS5lbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwcmV2aW91cy5wYXRocy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uc2V0KHByZXZpb3VzLnBhdGhzW2ldLCBwcmV2aW91cy52YWx1ZXNbaV0pO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICBpZiAoaXRlbS5oaXN0b3J5KVxyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uaGlzdG9yeS5lbmFibGVkID0gaGlzdG9yeTtcclxuXHJcbiAgICAgICAgICAgICAgICAgIGFyZ3Mua2VlcFpvb20gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIHJlZG8gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgIHZhciBpdGVtID0gbGluaztcclxuICAgICAgICAgICAgICAgICAgaWYgKGxpbmsuaGlzdG9yeSAmJiBsaW5rLmhpc3RvcnkuX2dldEl0ZW1Gbikge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0gPSBsaW5rLmhpc3RvcnkuX2dldEl0ZW1GbigpO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICBpZiAoIWl0ZW0pIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgICAgICAgIGFyZ3Mua2VlcFpvb20gPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgdmFyIGhpc3RvcnkgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uaGlzdG9yeSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGhpc3RvcnkgPSBpdGVtLmhpc3RvcnkuZW5hYmxlZDtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtLmhpc3RvcnkuZW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gcGF0aHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBwYXRoID0gcGF0aEF0KGFyZ3MsIDApOyAvLyBhbHdheXMgdXNlIDAgYmVjYXVzZSB3ZSBkbyBub3Qgc3VwcG9ydCBtdWx0aXNlbGVjdFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIHVzZSB0aGUgc2Vjb25kIGN1cnZlIHBhdGggaWYgbmVlZGVkXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ3MuY2FuUmFuZG9taXplICYmIHBhdGhzW2ldWzBdICE9PSAnMCcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgIHBhdGggKz0gJzInO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcGF0aCArPSBwYXRoc1tpXS5zdWJzdHJpbmcoMSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uc2V0KHBhdGgsIHZhbHVlc1tpXSk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmhpc3RvcnkpXHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5oaXN0b3J5LmVuYWJsZWQgPSBoaXN0b3J5O1xyXG5cclxuICAgICAgICAgICAgICAgICAgYXJncy5rZWVwWm9vbSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICByZWRvKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgLy8gYWRkIGN1c3RvbSBoaXN0b3J5IGV2ZW50XHJcbiAgICAgICAgICAgICAgICBlZGl0b3IuY2FsbCgnaGlzdG9yeTonICsgKGNvbWJpbmUgPyAndXBkYXRlJyA6ICdhZGQnKSwge1xyXG4gICAgICAgICAgICAgICAgICBuYW1lOiBwYXRoICsgJy5jdXJ2ZXMnLFxyXG4gICAgICAgICAgICAgICAgICB1bmRvOiB1bmRvLFxyXG4gICAgICAgICAgICAgICAgICByZWRvOiByZWRvXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgIHZhciBldnRSZWZyZXNoUGlja2VyID0gZmllbGQub24oJ2NoYW5nZScsIGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgZWRpdG9yLmNhbGwoJ3BpY2tlcjpjdXJ2ZTpzZXQnLCB2YWx1ZSwgYXJncyk7XHJcbiAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgIGVkaXRvci5vbmNlKCdwaWNrZXI6Y3VydmU6Y2xvc2UnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBldnRSZWZyZXNoUGlja2VyLnVuYmluZCgpO1xyXG4gICAgICAgICAgICAgICAgZXZ0UGlja2VyQ2hhbmdlZC51bmJpbmQoKTtcclxuICAgICAgICAgICAgICAgIGV2dENoYW5nZVN0YXJ0LnVuYmluZCgpO1xyXG4gICAgICAgICAgICAgICAgZXZ0Q2hhbmdlRW5kLnVuYmluZCgpO1xyXG4gICAgICAgICAgICAgICAgY3VydmVQaWNrZXJPbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIC8vIG9wZW4gY3VydmUgZWRpdG9yIG9uIGNsaWNrXHJcbiAgICAgICAgICBmaWVsZC5vbignY2xpY2snLCB0b2dnbGVDdXJ2ZVBpY2tlcik7XHJcblxyXG4gICAgICAgICAgLy8gY2xvc2UgcGlja2VyIGlmIGZpZWxkIGRlc3Ryb3llZFxyXG4gICAgICAgICAgZmllbGQub24oJ2Rlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChjdXJ2ZVBpY2tlck9uKSB7XHJcbiAgICAgICAgICAgICAgZWRpdG9yLmNhbGwoJ3BpY2tlcjpjdXJ2ZTpjbG9zZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBwYW5lbC5hcHBlbmQoZmllbGQpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGNhc2UgJ2dyYWRpZW50JzpcclxuICAgICAgICAgIGZpZWxkID0gbmV3IHVpLkN1cnZlRmllbGQoYXJncyk7XHJcbiAgICAgICAgICBmaWVsZC5mbGV4R3JvdyA9ICcxJztcclxuICAgICAgICAgIGZpZWxkLnRleHQgPSBhcmdzLnRleHQgfHwgJyc7XHJcblxyXG4gICAgICAgICAgaWYgKGFyZ3MubGluaykge1xyXG4gICAgICAgICAgICB2YXIgbGluayA9IGFyZ3MubGluaztcclxuICAgICAgICAgICAgaWYgKGFyZ3MubGluayBpbnN0YW5jZW9mIEFycmF5KVxyXG4gICAgICAgICAgICAgIGxpbmsgPSBhcmdzLmxpbmtbMF07XHJcbiAgICAgICAgICAgIHZhciBwYXRoID0gcGF0aEF0KGFyZ3MsIDApO1xyXG4gICAgICAgICAgICBmaWVsZC5saW5rKGxpbmssIFtwYXRoXSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgdmFyIGdyYWRpZW50UGlja2VyVmlzaWJsZSA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgIHZhciB0b2dnbGVHcmFkaWVudFBpY2tlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCFmaWVsZC5jbGFzcyEuY29udGFpbnMoJ2Rpc2FibGVkJykgJiYgIWdyYWRpZW50UGlja2VyVmlzaWJsZSkge1xyXG4gICAgICAgICAgICAgIGVkaXRvci5jYWxsKCdwaWNrZXI6Z3JhZGllbnQnLCBmaWVsZC52YWx1ZSwgYXJncyk7XHJcblxyXG4gICAgICAgICAgICAgIGdyYWRpZW50UGlja2VyVmlzaWJsZSA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICAgIC8vIHBvc2l0aW9uIHBpY2tlclxyXG4gICAgICAgICAgICAgIHZhciByZWN0UGlja2VyID0gZWRpdG9yLmNhbGwoJ3BpY2tlcjpncmFkaWVudDpyZWN0Jyk7XHJcbiAgICAgICAgICAgICAgdmFyIHJlY3RGaWVsZCA9IGZpZWxkLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgICAgICAgZWRpdG9yLmNhbGwoJ3BpY2tlcjpncmFkaWVudDpwb3NpdGlvbicsIHJlY3RGaWVsZC5yaWdodCAtIHJlY3RQaWNrZXIud2lkdGgsIHJlY3RGaWVsZC5ib3R0b20pO1xyXG5cclxuICAgICAgICAgICAgICB2YXIgZXZ0UGlja2VyQ2hhbmdlZCA9IGVkaXRvci5vbigncGlja2VyOmN1cnZlOmNoYW5nZScsIGZ1bmN0aW9uIChwYXRocywgdmFsdWVzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWZpZWxkLl9saW5rKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGxpbmsgPSBmaWVsZC5fbGluaztcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgcHJldmlvdXMgPSB7XHJcbiAgICAgICAgICAgICAgICAgIHBhdGhzOiBbXSxcclxuICAgICAgICAgICAgICAgICAgdmFsdWVzOiBbXVxyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgcGF0aDtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgLy8gYWx3YXlzIHVzZSAwIGJlY2F1c2Ugd2UgZG8gbm90IHN1cHBvcnQgbXVsdGlzZWxlY3RcclxuICAgICAgICAgICAgICAgICAgcGF0aCA9IHBhdGhBdChhcmdzLCAwKSArIHBhdGhzW2ldLnN1YnN0cmluZygxKTtcclxuICAgICAgICAgICAgICAgICAgcHJldmlvdXMucGF0aHMucHVzaChwYXRoKTtcclxuICAgICAgICAgICAgICAgICAgcHJldmlvdXMudmFsdWVzLnB1c2goZmllbGQuX2xpbmsuZ2V0KHBhdGgpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgdW5kbyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBsaW5rO1xyXG4gICAgICAgICAgICAgICAgICBpZiAobGluay5oaXN0b3J5ICYmIGxpbmsuaGlzdG9yeS5fZ2V0SXRlbUZuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbSA9IGxpbmsuaGlzdG9yeS5fZ2V0SXRlbUZuKCk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgIGlmICghaXRlbSkgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgICAgICAgdmFyIGhpc3RvcnkgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uaGlzdG9yeSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGhpc3RvcnkgPSBpdGVtLmhpc3RvcnkuZW5hYmxlZDtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtLmhpc3RvcnkuZW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByZXZpb3VzLnBhdGhzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5zZXQocHJldmlvdXMucGF0aHNbaV0sIHByZXZpb3VzLnZhbHVlc1tpXSk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmhpc3RvcnkpXHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5oaXN0b3J5LmVuYWJsZWQgPSBoaXN0b3J5O1xyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgcmVkbyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBsaW5rO1xyXG4gICAgICAgICAgICAgICAgICBpZiAobGluay5oaXN0b3J5ICYmIGxpbmsuaGlzdG9yeS5fZ2V0SXRlbUZuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbSA9IGxpbmsuaGlzdG9yeS5fZ2V0SXRlbUZuKCk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgIGlmICghaXRlbSkgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgICAgICAgdmFyIGhpc3RvcnkgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uaGlzdG9yeSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGhpc3RvcnkgPSBpdGVtLmhpc3RvcnkuZW5hYmxlZDtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtLmhpc3RvcnkuZW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGhzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gYWx3YXlzIHVzZSAwIGJlY2F1c2Ugd2UgZG8gbm90IHN1cHBvcnQgbXVsdGlzZWxlY3RcclxuICAgICAgICAgICAgICAgICAgICBwYXRoID0gcGF0aEF0KGFyZ3MsIDApICsgcGF0aHNbaV0uc3Vic3RyaW5nKDEpO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uc2V0KHBhdGgsIHZhbHVlc1tpXSk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmhpc3RvcnkpXHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5oaXN0b3J5LmVuYWJsZWQgPSBoaXN0b3J5O1xyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICByZWRvKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgZWRpdG9yLmNhbGwoJ2hpc3Rvcnk6JyArICdhZGQnLCB7XHJcbiAgICAgICAgICAgICAgICAgIG5hbWU6IHBhdGggKyAnLmN1cnZlcycsXHJcbiAgICAgICAgICAgICAgICAgIHVuZG86IHVuZG8sXHJcbiAgICAgICAgICAgICAgICAgIHJlZG86IHJlZG9cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICB2YXIgZXZ0UmVmcmVzaFBpY2tlciA9IGZpZWxkLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIGVkaXRvci5jYWxsKCdwaWNrZXI6Z3JhZGllbnQ6c2V0JywgdmFsdWUsIGFyZ3MpO1xyXG4gICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICBlZGl0b3Iub25jZSgncGlja2VyOmdyYWRpZW50OmNsb3NlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgZXZ0UmVmcmVzaFBpY2tlci51bmJpbmQoKTtcclxuICAgICAgICAgICAgICAgIGV2dFBpY2tlckNoYW5nZWQudW5iaW5kKCk7XHJcbiAgICAgICAgICAgICAgICBncmFkaWVudFBpY2tlclZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAvLyBvcGVuIGN1cnZlIGVkaXRvciBvbiBjbGlja1xyXG4gICAgICAgICAgZmllbGQub24oJ2NsaWNrJywgdG9nZ2xlR3JhZGllbnRQaWNrZXIpO1xyXG5cclxuICAgICAgICAgIHBhbmVsLmFwcGVuZChmaWVsZCk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnYXJyYXknOlxyXG4gICAgICAgICAgZmllbGQgPSBlZGl0b3IuY2FsbCgnYXR0cmlidXRlczphZGRBcnJheScsIGFyZ3MpO1xyXG4gICAgICAgICAgcGFuZWwuYXBwZW5kKGZpZWxkKTtcclxuXHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgIGZpZWxkID0gbmV3IExhYmVsKCk7XHJcbiAgICAgICAgICBmaWVsZC5mbGV4R3JvdyA9ICcxJztcclxuICAgICAgICAgICg8TGFiZWw+ZmllbGQpLnRleHQgPSBhcmdzLnZhbHVlIHx8ICcnO1xyXG4gICAgICAgICAgZmllbGQuY2xhc3MhLmFkZCgnc2VsZWN0YWJsZScpO1xyXG5cclxuICAgICAgICAgIGlmIChhcmdzLnBsYWNlaG9sZGVyKVxyXG4gICAgICAgICAgICAoPExhYmVsPmZpZWxkKS5wbGFjZWhvbGRlciA9IGFyZ3MucGxhY2Vob2xkZXI7XHJcblxyXG4gICAgICAgICAgbGlua0ZpZWxkKCk7XHJcblxyXG4gICAgICAgICAgcGFuZWwuYXBwZW5kKGZpZWxkKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoYXJncy5jbGFzc05hbWUgJiYgZmllbGQgaW5zdGFuY2VvZiBFbGVtZW50KSB7XHJcbiAgICAgICAgZmllbGQuY2xhc3MhLmFkZChhcmdzLmNsYXNzTmFtZSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBmaWVsZDtcclxuICAgIH0pO1xyXG5cclxuICAgICovXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4gICAgZWRpdG9yLm9uKCdhdHRyaWJ1dGVzOmNsZWFyJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlbGYuaW5zcGVjdGVkSXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBzZWxmLmluc3BlY3RlZEl0ZW1zW2ldLnVuYmluZCgpO1xyXG4gICAgICB9XHJcbiAgICAgIHNlbGYuaW5zcGVjdGVkSXRlbXMgPSBbXTtcclxuICAgIH0pO1xyXG5cclxuICAgIGVkaXRvci5tZXRob2QoJ2F0dHJpYnV0ZXM6aW5zcGVjdCcsIGZ1bmN0aW9uICh0eXBlOiBzdHJpbmcsIGl0ZW06IE9ic2VydmVyKSB7XHJcbiAgICAgIHNlbGYuY2xlYXJQYW5lbCgpO1xyXG5cclxuICAgICAgLy8gY2xlYXIgaWYgZGVzdHJveWVkXHJcbiAgICAgIHNlbGYuaW5zcGVjdGVkSXRlbXMucHVzaChpdGVtLm9uY2UoJ2Rlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZWRpdG9yLmNhbGwoJ2F0dHJpYnV0ZXM6Y2xlYXInKTtcclxuICAgICAgfSkpO1xyXG5cclxuICAgICAgc2VsZi5yb290LmhlYWRlciA9IHR5cGU7XHJcbiAgICAgIGVkaXRvci5lbWl0KCdhdHRyaWJ1dGVzOmluc3BlY3RbJyArIHR5cGUgKyAnXScsIFtpdGVtXSk7XHJcbiAgICAgIGVkaXRvci5lbWl0KCdhdHRyaWJ1dGVzOmluc3BlY3RbKl0nLCB0eXBlLCBbaXRlbV0pO1xyXG4gICAgfSk7XHJcblxyXG5cclxuICAgIGVkaXRvci5vbignc2VsZWN0b3I6Y2hhbmdlJywgZnVuY3Rpb24gKHR5cGU6IHN0cmluZywgaXRlbXM6IE9ic2VydmVyW10pIHtcclxuICAgICAgc2VsZi5jbGVhclBhbmVsKCk7XHJcblxyXG4gICAgICBjb25zb2xlLndhcm4oJ+mAieS4rWVudGl0eemVv+W6pu+8micgKyBpdGVtcy5sZW5ndGgpO1xyXG5cclxuICAgICAgLy8gbm90aGluZyBzZWxlY3RlZFxyXG4gICAgICBpZiAoaXRlbXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgbGV0IGxhYmVsID0gbmV3IExhYmVsKCfor7fpgInmi6nniankvZPmiJbotYTmupAnKTtcclxuICAgICAgICBsYWJlbC5zdHlsZSEuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICAgICAgbGFiZWwuc3R5bGUhLnRleHRBbGlnbiA9ICdjZW50ZXInO1xyXG4gICAgICAgIGxhYmVsLnN0eWxlIS53aWR0aCA9ICcxMDAlJztcclxuICAgICAgICAvLyBsYWJlbC5zdHlsZSEuaGVpZ2h0ID0gJzIycHgnO1xyXG4gICAgICAgIHNlbGYucm9vdC5hcHBlbmQobGFiZWwpO1xyXG5cclxuICAgICAgICBzZWxmLnJvb3QuaGVhZGVyID0gc2VsZi50aXRsZTtcclxuXHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBjbGVhciBpZiBkZXN0cm95ZWRcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIC8vIFRPRE/vvJrlvZPliY1pdGVt5Li656m6XHJcbiAgICAgICAgc2VsZi5pbnNwZWN0ZWRJdGVtcy5wdXNoKGl0ZW1zW2ldLm9uY2UoJ2Rlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBlZGl0b3IuY2FsbCgnYXR0cmlidXRlczpjbGVhcicpO1xyXG4gICAgICAgIH0pKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgc2VsZi5yb290LmhlYWRlciA9IHR5cGU7XHJcbiAgICAgIGVkaXRvci5lbWl0KCdhdHRyaWJ1dGVzOmluc3BlY3RbJyArIHR5cGUgKyAnXScsIGl0ZW1zKTtcclxuICAgICAgZWRpdG9yLmVtaXQoJ2F0dHJpYnV0ZXM6aW5zcGVjdFsqXScsIHR5cGUsIGl0ZW1zKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIOWIneWni+aXtu+8jOm7mOiupOayoeaciemAieS4reeJqeS9k1xyXG4gICAgZWRpdG9yLmVtaXQoJ3NlbGVjdG9yOmNoYW5nZScsIG51bGwsIFtdKTtcclxuXHJcbiAgfVxyXG5cclxuXHJcbiAgcHVibGljIGNsZWFyUGFuZWwoKTogdm9pZCB7XHJcbiAgICBlZGl0b3IuZW1pdCgnYXR0cmlidXRlczpiZWZvcmVDbGVhcicpO1xyXG4gICAgdGhpcy5yb290LmNsZWFyKCk7XHJcbiAgICBlZGl0b3IuZW1pdCgnYXR0cmlidXRlczpjbGVhcicpO1xyXG4gIH1cclxuXHJcblxyXG59XHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBBZGRQYW5lbEFyZ3Mge1xyXG4gIG5hbWU/OiBzdHJpbmc7XHJcbiAgcGFyZW50PzogUGFuZWw7XHJcbiAgZm9sZGFibGU/OiBib29sZWFuO1xyXG4gIGZvbGRlZD86IGJvb2xlYW47XHJcbn0iLCJpbXBvcnQgeyBUb29sdGlwLCBQYW5lbCwgRWxlbWVudCB9IGZyb20gXCIuLi8uLi91aVwiO1xyXG5pbXBvcnQgeyBWZXJ5RW5naW5lIH0gZnJvbSBcIi4uLy4uL2VuZ2luZVwiO1xyXG5cclxuLy8g5bGe5oCn5Y+C6ICD6K+05piOVG9vbHRpcFxyXG5leHBvcnQgY2xhc3MgQXR0cmlidXRlc1JlZmVyZW5jZSB7XHJcblxyXG4gIHB1YmxpYyByb290OiBQYW5lbDtcclxuICBwdWJsaWMgYXR0cmlidXRlc1BhbmVsOiBQYW5lbDtcclxuXHJcbiAgcHVibGljIGluZGV4OiB7IFtrZXk6IHN0cmluZ106IFRvb2x0aXAgfSA9IHt9O1xyXG4gIHB1YmxpYyBtaXNzaW5nOiB7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfSA9IHt9O1xyXG5cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIHRoaXMucm9vdCA9IFZlcnlFbmdpbmUucm9vdFBhbmVsO1xyXG4gICAgdGhpcy5hdHRyaWJ1dGVzUGFuZWwgPSBWZXJ5RW5naW5lLmF0dHJpYnV0ZXNQYW5lbDtcclxuXHJcbiAgICB0aGlzLmluaXQoKTtcclxuICB9XHJcblxyXG5cclxuICBwcml2YXRlIGluaXQoKTogdm9pZCB7XHJcblxyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIC8vIFRPRE9cclxuICAgIGVkaXRvci5tZXRob2QoJ2F0dHJpYnV0ZXM6cmVmZXJlbmNlOmFkZCcsIGZ1bmN0aW9uIChhcmdzOiBhbnkpIHtcclxuICAgICAgc2VsZi5pbmRleFthcmdzLm5hbWVdID0gZWRpdG9yLmNhbGwoJ2F0dHJpYnV0ZXM6cmVmZXJlbmNlJywgYXJncyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBlZGl0b3IubWV0aG9kKCdhdHRyaWJ1dGVzOnJlZmVyZW5jZTphdHRhY2gnLCBmdW5jdGlvbiAobmFtZTogc3RyaW5nLCB0YXJnZXQ6IEhUTUxFbGVtZW50LCBlbGVtZW50OiBFbGVtZW50LCBwYW5lbD86IFBhbmVsKSB7XHJcbiAgICAgIGxldCB0b29sdGlwID0gc2VsZi5pbmRleFtuYW1lXTtcclxuXHJcbiAgICAgIGlmICghdG9vbHRpcCkge1xyXG4gICAgICAgIGlmICghc2VsZi5taXNzaW5nW25hbWVdKSB7XHJcbiAgICAgICAgICBzZWxmLm1pc3NpbmdbbmFtZV0gPSB0cnVlO1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ3JlZmVyZW5jZScsIG5hbWUsICdpcyBub3QgZGVmaW5lZCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRvb2x0aXAuYXR0YWNoUmVmZXJlbmNlKHtcclxuICAgICAgICB0YXJnZXQ6IHRhcmdldCxcclxuICAgICAgICBwYW5lbDogcGFuZWwsXHJcbiAgICAgICAgZWxlbWVudDogZWxlbWVudCB8fCB0YXJnZXQudWlcclxuICAgICAgfSk7XHJcblxyXG4gICAgICByZXR1cm4gdG9vbHRpcDtcclxuICAgIH0pO1xyXG5cclxuICAgIGVkaXRvci5tZXRob2QoJ2F0dHJpYnV0ZXM6cmVmZXJlbmNlOnRlbXBsYXRlJywgZnVuY3Rpb24gKGFyZ3M6IGFueSkge1xyXG4gICAgICBsZXQgaHRtbCA9ICcnO1xyXG5cclxuICAgICAgaWYgKGFyZ3MudGl0bGUpXHJcbiAgICAgICAgaHRtbCArPSAnPGgxPicgKyBzZWxmLnNhbml0aXplKGFyZ3MudGl0bGUpICsgJzwvaDE+JztcclxuICAgICAgaWYgKGFyZ3Muc3ViVGl0bGUpXHJcbiAgICAgICAgaHRtbCArPSAnPGgyPicgKyBzZWxmLnNhbml0aXplKGFyZ3Muc3ViVGl0bGUpICsgJzwvaDI+JztcclxuICAgICAgaWYgKGFyZ3Mud2ViZ2wyKVxyXG4gICAgICAgIGh0bWwgKz0gJzxkaXYgY2xhc3M9XCJ0YWdcIj5XZWJHTCAyLjAgT25seTwvZGl2Pic7XHJcbiAgICAgIGlmIChhcmdzLmRlc2NyaXB0aW9uKSB7XHJcbiAgICAgICAgbGV0IGRlc2NyaXB0aW9uID0gc2VsZi5zYW5pdGl6ZShhcmdzLmRlc2NyaXB0aW9uKTtcclxuICAgICAgICBkZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uLnJlcGxhY2UoL1xcbi9nLCAnPGJyIC8+Jyk7IC8vIG5ldyBsaW5lc1xyXG4gICAgICAgIGRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb24ucmVwbGFjZSgvJmx0O2ImZ3Q7L2csICc8Yj4nKS5yZXBsYWNlKC8mbHQ7XFwvYiZndDsvZywgJzwvYj4nKTsgLy8gYm9sZFxyXG4gICAgICAgIGh0bWwgKz0gJzxwPicgKyBkZXNjcmlwdGlvbiArICc8L3A+JztcclxuICAgICAgfVxyXG4gICAgICBpZiAoYXJncy5jb2RlKVxyXG4gICAgICAgIGh0bWwgKz0gJzxwcmUgY2xhc3M9XCJ1aS1jb2RlXCI+JyArIHNlbGYuc2FuaXRpemUoYXJncy5jb2RlKSArICc8L3ByZT4nO1xyXG4gICAgICBpZiAoYXJncy51cmwpXHJcbiAgICAgICAgaHRtbCArPSAnPGEgY2xhc3M9XCJyZWZlcmVuY2VcIiBocmVmPVwiJyArIHNlbGYuc2FuaXRpemUoYXJncy51cmwpICsgJ1wiIHRhcmdldD1cIl9ibGFua1wiPkFQSSBSZWZlcmVuY2U8L2E+JztcclxuXHJcbiAgICAgIHJldHVybiBodG1sO1xyXG4gICAgfSk7XHJcblxyXG5cclxuICAgIGVkaXRvci5tZXRob2QoJ2F0dHJpYnV0ZXM6cmVmZXJlbmNlJywgZnVuY3Rpb24gKGFyZ3M6IGFueSkge1xyXG4gICAgICBsZXQgdG9vbHRpcCA9IG5ldyBUb29sdGlwKHtcclxuICAgICAgICBhbGlnbjogJ3JpZ2h0J1xyXG4gICAgICB9KTtcclxuICAgICAgdG9vbHRpcC5ob3ZlcmFibGUgPSB0cnVlO1xyXG4gICAgICB0b29sdGlwLmNsYXNzIS5hZGQoJ3JlZmVyZW5jZScpO1xyXG5cclxuICAgICAgdG9vbHRpcC5odG1sID0gZWRpdG9yLmNhbGwoJ2F0dHJpYnV0ZXM6cmVmZXJlbmNlOnRlbXBsYXRlJywgYXJncyk7XHJcblxyXG4gICAgICAvLyBsZXQgbGlua3MgPSB7fTtcclxuICAgICAgbGV0IHRpbWVySG92ZXI6IGFueSA9IG51bGw7XHJcbiAgICAgIGxldCB0aW1lckJsdXI6IGFueSA9IG51bGw7XHJcblxyXG4gICAgICAvLyDph43lhpnor6Xmlrnms5VcclxuICAgICAgdG9vbHRpcC5hdHRhY2hSZWZlcmVuY2UgPSBmdW5jdGlvbiAoYXJnczogYW55KSB7XHJcbiAgICAgICAgbGV0IHRhcmdldCA9IGFyZ3MudGFyZ2V0O1xyXG4gICAgICAgIGxldCBlbGVtZW50ID0gYXJncy5lbGVtZW50O1xyXG4gICAgICAgIGxldCB0YXJnZXRQYW5lbCA9IGFyZ3MucGFuZWwgfHwgc2VsZi5hdHRyaWJ1dGVzUGFuZWw7XHJcblxyXG4gICAgICAgIGxldCBzaG93ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgaWYgKCF0YXJnZXQgfHwgdGFyZ2V0LmhpZGRlbikgcmV0dXJuO1xyXG4gICAgICAgICAgdG9vbHRpcC5wb3NpdGlvbih0YXJnZXRQYW5lbC5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQsIGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wICsgMTYpO1xyXG4gICAgICAgICAgdG9vbHRpcC5oaWRkZW4gPSBmYWxzZTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBsZXQgZXZ0SGlkZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIGlmICh0aW1lckhvdmVyICE9PSBudWxsKSBjbGVhclRpbWVvdXQodGltZXJIb3Zlcik7XHJcbiAgICAgICAgICBpZiAodGltZXJCbHVyICE9PSBudWxsKSBjbGVhclRpbWVvdXQodGltZXJCbHVyKTtcclxuICAgICAgICAgIHRvb2x0aXAuaGlkZGVuID0gdHJ1ZTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBsZXQgZXZ0SG92ZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBpZiAodGltZXJCbHVyICE9PSBudWxsKSBjbGVhclRpbWVvdXQodGltZXJCbHVyKTtcclxuICAgICAgICAgIHRpbWVySG92ZXIgPSBzZXRUaW1lb3V0KHNob3csIDUwMCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgbGV0IGV2dEJsdXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBpZiAodGltZXJIb3ZlciAhPT0gbnVsbCkgY2xlYXJUaW1lb3V0KHRpbWVySG92ZXIpO1xyXG4gICAgICAgICAgdGltZXJCbHVyID0gc2V0VGltZW91dChoaWRlLCAyMDApO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGxldCBldnRDbGljayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIGlmICh0aW1lckhvdmVyICE9PSBudWxsKSBjbGVhclRpbWVvdXQodGltZXJIb3Zlcik7XHJcbiAgICAgICAgICBpZiAodGltZXJCbHVyICE9PSBudWxsKSBjbGVhclRpbWVvdXQodGltZXJCbHVyKTtcclxuICAgICAgICAgIHNob3coKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0YXJnZXQub24oJ2hpZGUnLCBldnRIaWRlKTtcclxuXHJcbiAgICAgICAgdGFyZ2V0Lm9uY2UoJ2Rlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIGV2dEhvdmVyKTtcclxuICAgICAgICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCBldnRCbHVyKTtcclxuICAgICAgICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldnRDbGljayk7XHJcbiAgICAgICAgICB0YXJnZXQudW5iaW5kKCdoaWRlJywgZXZ0SGlkZSk7XHJcbiAgICAgICAgICB0YXJnZXQgPSBudWxsO1xyXG4gICAgICAgICAgZWxlbWVudCA9IG51bGw7XHJcbiAgICAgICAgICBpZiAodGltZXJIb3ZlciAhPT0gbnVsbCkgY2xlYXJUaW1lb3V0KHRpbWVySG92ZXIpO1xyXG4gICAgICAgICAgaWYgKHRpbWVyQmx1ciAhPT0gbnVsbCkgY2xlYXJUaW1lb3V0KHRpbWVyQmx1cik7XHJcbiAgICAgICAgICB0b29sdGlwLmhpZGRlbiA9IHRydWU7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgZXZ0SG92ZXIsIGZhbHNlKTtcclxuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgZXZ0Qmx1ciwgZmFsc2UpO1xyXG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldnRDbGljaywgZmFsc2UpO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgbGV0IGhpZGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdG9vbHRpcC5oaWRkZW4gPSB0cnVlO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgdG9vbHRpcC5vbignaG92ZXInLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyQmx1cik7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgc2VsZi5yb290LmFwcGVuZCh0b29sdGlwKTtcclxuXHJcbiAgICAgIHJldHVybiB0b29sdGlwO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuXHJcbiAgcHJpdmF0ZSBzYW5pdGl6ZShzdHI6IHN0cmluZykge1xyXG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC88L2csICcmbHQ7JykucmVwbGFjZSgvPi9nLCAnJmd0OycpO1xyXG4gIH07XHJcblxyXG5cclxufSIsImV4cG9ydCAqIGZyb20gJy4vYXR0cmlidXRlcy1wYW5lbCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vYXR0cmlidXRlcy1lbnRpdHknO1xyXG5leHBvcnQgKiBmcm9tICcuL2F0dHJpYnV0ZXMtaGlzdG9yeSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vYXR0cmlidXRlcy1yZWZlcmVuY2UnOyIsImltcG9ydCB7IEV2ZW50cyB9IGZyb20gJy4uL2xpYic7XHJcblxyXG5leHBvcnQgY2xhc3MgRWRpdG9yIGV4dGVuZHMgRXZlbnRzIHtcclxuXHJcbiAgLy8g55u46L6D5LqORXZlbnRz77yM5ZCM5LiA5Liq5Ye95pWw5ZCN5Y+q5Y+v5Luj6KGo5LiA5Liq5Ye95pWw77ybXHJcblxyXG4gIC8vIOafkOS4qm5hbWXlr7nlupTnmoTmn5DkuKrkuovku7bvvIxuYW1l5LiORnVuY3Rpb27mmK8x5a+5MeeahOWFs+ezu++8m1xyXG4gIHByaXZhdGUgX2hvb2tzOiB7IFtrZXk6IHN0cmluZ106IEZ1bmN0aW9uIH0gPSB7fTtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOa3u+WKoOWFqOWxgOWHveaVsO+8jOWHveaVsOWQjeS4juWHveaVsOacrOS9k+S4gOS4gOWvueW6lO+8jOS4jeiDvemHjeWQje+8m1xyXG4gICAqIEBwYXJhbSBuYW1lIOWHveaVsOWQje+8m1xyXG4gICAqIEBwYXJhbSBmbiDlh73mlbDmnKzkvZPvvJtcclxuICAgKi9cclxuICBwdWJsaWMgbWV0aG9kKG5hbWU6IHN0cmluZywgZm46IEZ1bmN0aW9uKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5faG9va3NbbmFtZV0gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjYW4ndCBvdmVycmlkZSBob29rOiBcIiArIG5hbWUpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5faG9va3NbbmFtZV0gPSBmbjtcclxuICB9O1xyXG5cclxuICAvKipcclxuICAgKiDnp7vpmaTmn5DkuKrlh73mlbDvvJtcclxuICAgKiBAcGFyYW0gbmFtZSDlh73mlbDlkI3vvJtcclxuICAgKi9cclxuICBwdWJsaWMgbWV0aG9kUmVtb3ZlKG5hbWU6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgZGVsZXRlIHRoaXMuX2hvb2tzW25hbWVdO1xyXG4gIH07XHJcblxyXG4gIC8qKlxyXG4gICAqIOaJp+ihjOafkOS4quWHveaVsO+8m1xyXG4gICAqIEBwYXJhbSBuYW1lIOWHveaVsOWQje+8m1xyXG4gICAqL1xyXG4gIHB1YmxpYyBjYWxsKG5hbWU6IHN0cmluZywgLi4uYXJnczogYW55W10pOiBhbnkge1xyXG4gICAgaWYgKHRoaXMuX2hvb2tzW25hbWVdKSB7XHJcbiAgICAgIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcclxuXHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hvb2tzW25hbWVdLmFwcGx5KG51bGwsIGFyZ3MpO1xyXG4gICAgICB9IGNhdGNoIChleCkge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgICBcIiVjJXMgJWMoZWRpdG9yLm1ldGhvZCBlcnJvcilcIixcclxuICAgICAgICAgIFwiY29sb3I6ICMwNmZcIixcclxuICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICBcImNvbG9yOiAjZjAwXCJcclxuICAgICAgICApO1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXguc3RhY2spO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9O1xyXG59IiwiaW1wb3J0IHsgRW50aXR5IH0gZnJvbSBcIi4vZW50aXR5XCI7XHJcbmltcG9ydCB7IEdhbWVPYmplY3QsIE1pZGRsZUNvbnRhaW5lciB9IGZyb20gXCIuLi9taWRkbGV3YXJlXCI7XHJcbmltcG9ydCB7IE9ic2VydmVyIH0gZnJvbSBcIi4uLy4uL2xpYlwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEVudGl0aWVzIHtcclxuICAgIHB1YmxpYyBsaXN0czogRW50aXR5W10gPSBbXTtcclxuICAgIHByaXZhdGUgX2luZGV4ZWQ6IHsgW2tleTogc3RyaW5nXTogRW50aXR5IH0gPSB7fTtcclxuXHJcbiAgICBwcml2YXRlIGNvbnRhaW5lcjogTWlkZGxlQ29udGFpbmVyO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IG5ldyBNaWRkbGVDb250YWluZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyAxLuW7uueri+WfuuacrOeahOaVsOaNruagvOW8j++8m1xyXG4gICAgLy8gMi7kuLLogZRoaWVyYXJjaHnvvIzljIXmi6zln7rmnKznmoToj5zljZXvvJtcclxuICAgIC8vIDMu5bCd6K+V5bu656uLcHJvcGVydHnvvJtcclxuICAgIC8vIDQu5Liy6IGUQXNzZXRz57uT5p6E5LiOVUnvvJtcclxuXHJcbiAgICBwdWJsaWMgYWRkUmF3KGVudGl0eV9kYXRhOiBhbnkpOiB2b2lkIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnKioqZW50aXR5LWRhdGEqKionKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhlbnRpdHlfZGF0YSk7XHJcbiAgICAgICAgbGV0IGdhbWVPYmplY3QgPSB0aGlzLmNyZWF0ZUdhbWVPYmplY3QoZW50aXR5X2RhdGEpO1xyXG5cclxuXHJcbiAgICAgICAgLy8gYWRkIGNvbXBvbmVudFxyXG5cclxuICAgICAgICAvLyBjaGlsZHJlblxyXG5cclxuICAgICAgICAvLyBwYXJlbnRcclxuXHJcblxyXG5cclxuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGRHYW1lT2JqZWN0KGdhbWVPYmplY3QpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY3JlYXRlR2FtZU9iamVjdChlbnRpdHk6IGFueSk6IEdhbWVPYmplY3Qge1xyXG4gICAgICAgIC8vIFRPRE86IOino+aekOaYr25vZGXov5jmmK9tZXNoXHJcbiAgICAgICAgLy8g6K6+572ubmFtZVxyXG4gICAgICAgIGxldCBpbnN0YW5jZSA9IG5ldyBHYW1lT2JqZWN0KGVudGl0eS5uYW1lKTtcclxuICAgICAgICAvLyDorr7nva5ndWlkXHJcbiAgICAgICAgaW5zdGFuY2UuZ3VpZCA9IGVudGl0eS5yZXNvdXJjZV9pZDtcclxuICAgICAgICBcclxuICAgICAgICAvLyDorr7nva7kvY3nva5cclxuICAgICAgICAvLyDorr7nva7op5LluqZcclxuICAgICAgICAvLyDorr7nva7mr5TkvovlgLxcclxuICAgICAgICAvLyDorr7nva5lbmFibGUgPyDkuI3lrZjlnKjnmoTmg4XlhrVcclxuICAgICAgICBpbnN0YW5jZS5zZXRBY3RpdmUoZW50aXR5LmVuYWJsZWQpO1xyXG4gICAgICAgIC8vIOiuvue9rnZpc2lhYmxlXHJcblxyXG4gICAgICAgIC8vIOiuvue9rnRhZ3NcclxuXHJcbiAgICAgICAgcmV0dXJuIGluc3RhbmNlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhZGQoaXRlbTogRW50aXR5KTogdm9pZCB7IH1cclxuXHJcbiAgICBwdWJsaWMgaGFzKGl0ZW06IEVudGl0eSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0KGluZGV4OiBzdHJpbmcsIGl0ZW06IEVudGl0eSk6IHZvaWQgeyB9XHJcblxyXG4gICAgcHVibGljIGdldChpbmRleDogc3RyaW5nKTogTnVsbGFibGU8RW50aXR5PiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luZGV4ZWRbaW5kZXhdO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpbmRleE9mKGl0ZW06IEVudGl0eSk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdHMuaW5kZXhPZihpdGVtKTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgeyBFbnRpdGllcyB9IGZyb20gXCIuL2VudGl0aWVzXCI7XHJcbmltcG9ydCB7IE9ic2VydmVyIH0gZnJvbSBcIi4uLy4uL2xpYlwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEVudGl0eUxvYWQge1xyXG5cclxuICAgIHB1YmxpYyBsb2FkZWRFbnRpdGllczogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIHByaXZhdGUgX2VudGl0aWVzOiBFbnRpdGllcyA9IG5ldyBFbnRpdGllcygpO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICB9XHJcblxyXG5cclxuICAgIHB1YmxpYyBzY2VuZV9yYXcocm93X2RhdGE6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIC8vIOino+aekGVudGl0eVxyXG5cclxuICAgICAgICAvLyDmuIXnqbpcclxuICAgICAgICAvLyBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6Y2xlYXInKTtcclxuICAgICAgICAvLyBlZGl0b3IuY2FsbCgnZW50aXRpZXM6Y2xlYXInKTtcclxuICAgICAgICAvLyBlZGl0b3IuY2FsbCgnYXR0cmlidXRlczpjbGVhcicpO1xyXG5cclxuICAgICAgICAvLyDliqDovb3ov5vluqbmnaHorqHnrpdcclxuICAgICAgICB2YXIgdG90YWwgPSBPYmplY3Qua2V5cyhyb3dfZGF0YS5lbnRpdGllcykubGVuZ3RoO1xyXG4gICAgICAgIHZhciBpID0gMDtcclxuXHJcbiAgICAgICAgLy8gbGlzdCDmjKjkuKrop6PmnpBcclxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcm93X2RhdGEuZW50aXRpZXMpIHtcclxuICAgICAgICAgICAgLy8g5piv5ZCm6ZyA6KaB5Yqg5YWl5LiA5Liq5Lit6Ze057uT5p6EXHJcbiAgICAgICAgICAgIHRoaXMuX2VudGl0aWVzLmFkZFJhdyhyb3dfZGF0YS5lbnRpdGllc1trZXldKTtcclxuICAgICAgICAgICAgbGV0IGVudGl0eSA9IG5ldyBPYnNlcnZlcihyb3dfZGF0YS5lbnRpdGllc1trZXldKTtcclxuICAgICAgICAgICAgZGVidWcud2FybihlbnRpdHkuZ2V0KCduYW1lJykpO1xyXG4gICAgICAgICAgICBkZWJ1Zy53YXJuKGVudGl0eS5nZXQoJ3Jlc291cmNlX2lkJykpO1xyXG4gICAgICAgICAgICBpZiAoZW50aXR5LmhhcygnY29tcG9uZW50cy5yaWdpZGJvZHknKSkge1xyXG4gICAgICAgICAgICAgICAgZGVidWcud2FybihlbnRpdHkuZ2V0KCdjb21wb25lbnRzLnJpZ2lkYm9keS50eXBlJykpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICAgICAgICAgIC8vIGVkaXRvci5jYWxsKCdlbnRpdGllczphZGQnLCBuZXcgT2JzZXJ2ZXIoZGF0YS5lbnRpdGllc1trZXldKSk7XHJcbiAgICAgICAgICAgIC8vIHAucHJvZ3Jlc3MgPSAoKytpIC8gdG90YWwpICogMC44ICsgMC4xO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gcC5wcm9ncmVzcyA9IDE7XHJcblxyXG4gICAgICAgIHRoaXMubG9hZGVkRW50aXRpZXMgPSB0cnVlO1xyXG5cclxuICAgICAgICAvLyDop6PmnpDlrozmiJDvvIzlhbbku5bpnaLmnb/orr7nva5cclxuICAgICAgICBlZGl0b3IuZW1pdCgnZW50aXRpZXM6bG9hZCcpO1xyXG4gICAgfVxyXG5cclxuXHJcbn0iLCJleHBvcnQgY2xhc3MgRW50aXR5IHtcclxuXHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgfVxyXG5cclxuXHJcbiAgcHVibGljIGdldChzdHI6IHN0cmluZykge1xyXG4gICAgXHJcbiAgfVxyXG5cclxuICBcclxuXHJcbn0iLCJleHBvcnQgKiBmcm9tICcuL2VudGl0eSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZW50aXRpZXMnO1xyXG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS1sb2FkJzsiLCJpbXBvcnQgeyBQYW5lbCwgTWVudUl0ZW0sIE1lbnUsIE1lbnVJdGVtQXJncywgVHJlZUl0ZW0gfSBmcm9tIFwiLi4vLi4vdWlcIjtcclxuaW1wb3J0IHsgRW50aXR5IH0gZnJvbSBcIi4uL2VudGl0eVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEhpZXJhcmNoeUNvbnRleHRNZW51IHtcclxuXHJcbiAgcHVibGljIHJvb3Q6IFBhbmVsO1xyXG4gIHB1YmxpYyBjbGlja2FibGVTdWJtZW51czogYm9vbGVhbjtcclxuICBwdWJsaWMgbWVudSE6IE1lbnU7XHJcbiAgcHVibGljIGN1c3RvbU1lbnVJdGVtczogTWVudUl0ZW1BcmdzW10gPSBbXTtcclxuICBwdWJsaWMgZW50aXR5ITogRW50aXR5O1xyXG4gIHB1YmxpYyBpdGVtcyA9IFtdO1xyXG5cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5yb290ID0gZWRpdG9yLmNhbGwoJ2xheW91dC5yb290Jyk7XHJcblxyXG4gICAgdGhpcy5jbGlja2FibGVTdWJtZW51cyA9IC9jbGlja2FibGVDb250ZXh0U3VibWVudXM9dHJ1ZS8udGVzdChsb2NhdGlvbi5zZWFyY2gpO1xyXG5cclxuICAgIHRoaXMuaW5pdE1lbnUoKTtcclxuICAgIHRoaXMuaW5pdEZ1bmN0aW9uKCk7XHJcblxyXG4gIH1cclxuXHJcblxyXG4gIHByaXZhdGUgaW5pdE1lbnUoKTogdm9pZCB7XHJcbiAgICBsZXQgdGhhdCA9IHRoaXM7XHJcbiAgICB2YXIgbWVudURhdGE6IHsgW2tleTogc3RyaW5nXTogQ29udGV4dE1lbnVBcmdzIH0gPSB7fTtcclxuXHJcbiAgICBtZW51RGF0YVsnbmV3LWVudGl0eSddID0ge1xyXG4gICAgICB0aXRsZTogJ05ldyBFbnRpdHknLFxyXG4gICAgICBjbGFzc05hbWU6ICdtZW51LWl0ZW0tbmV3LWVudGl0eScsXHJcbiAgICAgIC8vIGZpbHRlcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAvLyAgIHJldHVybiB0aGF0Lml0ZW1zLmxlbmd0aCA9PT0gMTtcclxuICAgICAgLy8gfSxcclxuICAgICAgLy8gc2VsZWN0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIC8vICAgZWRpdG9yLmNhbGwoJ2VudGl0aWVzOm5ldycsIHsgcGFyZW50OiB0aGF0Lml0ZW1zWzBdIH0pO1xyXG4gICAgICAvLyB9LFxyXG4gICAgICAvLyBcclxuICAgICAgLy8gaXRlbXM6IGVkaXRvci5jYWxsKCdtZW51OmVudGl0aWVzOm5ldycsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoYXQuaXRlbXNbMF07IH0pXHJcbiAgICB9O1xyXG5cclxuICAgIG1lbnVEYXRhWydhZGQtY29tcG9uZW50J10gPSB7XHJcbiAgICAgIHRpdGxlOiAnQWRkIENvbXBvbmVudCcsXHJcbiAgICAgIGNsYXNzTmFtZTogJ21lbnUtaXRlbS1hZGQtY29tcG9uZW50JyxcclxuICAgICAgLy8gaXRlbXM6IGVkaXRvci5jYWxsKCdtZW51OmVudGl0aWVzOmFkZC1jb21wb25lbnQnKVxyXG4gICAgICBpdGVtczoge1xyXG4gICAgICAgICdhZGQtbmV3LWVudGl0eSc6IHtcclxuICAgICAgICAgIHRpdGxlOiAnRW50aXR5JyxcclxuICAgICAgICAgIGNsYXNzTmFtZTogJ21lbnUtaXRlbS1hZGQtZW50aXR5JyxcclxuICAgICAgICAgIGljb246ICcmIzU3NjMyOydcclxuICAgICAgICB9LFxyXG4gICAgICAgICdhdWRpby1zdWItbWVudSc6IHtcclxuICAgICAgICAgIHRpdGxlOiAnQXVkaW8nLFxyXG4gICAgICAgICAgY2xhc3NOYW1lOiAnbWVudS1pdGVtLWF1ZGlvLXN1Yi1tZW51JyxcclxuICAgICAgICAgIGljb246IGVkaXRvci5jYWxsKCdjb21wb25lbnRzOmxvZ29zJylbJ3NvdW5kJ10sXHJcbiAgICAgICAgICBpdGVtczoge1xyXG4gICAgICAgICAgICAnYWRkLW5ldy1lbnRpdHkyJzoge1xyXG4gICAgICAgICAgICAgIHRpdGxlOiAn5rWL6K+VMScsXHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lOiAnbWVudS1pdGVtLWFkZC1lbnRpdHkyJyxcclxuICAgICAgICAgICAgICBpY29uOiAnJiM1NzYzMjsnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdhdWRpby1zdWItbWVudTInOiB7XHJcbiAgICAgICAgICAgICAgdGl0bGU6ICfmtYvor5UyJyxcclxuICAgICAgICAgICAgICBjbGFzc05hbWU6ICdtZW51LWl0ZW0tYXVkaW8tc3ViLW1lbnUyJyxcclxuICAgICAgICAgICAgICBpY29uOiBlZGl0b3IuY2FsbCgnY29tcG9uZW50czpsb2dvcycpWydzb3VuZCddXHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIG1lbnVEYXRhWydlbmFibGUnXSA9IHtcclxuICAgICAgdGl0bGU6ICdFbmFibGUnLFxyXG4gICAgICBjbGFzc05hbWU6ICdtZW51LWl0ZW0tZW5hYmxlJyxcclxuICAgICAgaWNvbjogJyYjNTc2NTE7JyxcclxuICAgICAgLy8gaGlkZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAvLyAgIGlmICh0aGF0Lml0ZW1zLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAvLyAgICAgcmV0dXJuIHRoYXQuaXRlbXNbMF0uZ2V0KCdlbmFibGVkJyk7XHJcbiAgICAgIC8vICAgfSBlbHNlIHtcclxuICAgICAgLy8gICAgIHZhciBlbmFibGVkID0gdGhhdC5pdGVtc1swXS5nZXQoJ2VuYWJsZWQnKTtcclxuICAgICAgLy8gICAgIGZvciAodmFyIGkgPSAxOyBpIDwgdGhhdC5pdGVtcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAvLyAgICAgICBpZiAoZW5hYmxlZCAhPT0gdGhhdC5pdGVtc1tpXS5nZXQoJ2VuYWJsZWQnKSlcclxuICAgICAgLy8gICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIC8vICAgICB9XHJcbiAgICAgIC8vICAgICByZXR1cm4gZW5hYmxlZDtcclxuICAgICAgLy8gICB9XHJcbiAgICAgIC8vIH0sXHJcbiAgICAgIC8vIHNlbGVjdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAvLyAgIHNldEZpZWxkKCdlbmFibGVkJywgdHJ1ZSk7XHJcbiAgICAgIC8vIH1cclxuICAgIH07XHJcblxyXG4gICAgbWVudURhdGFbJ2Rpc2FibGUnXSA9IHtcclxuICAgICAgdGl0bGU6ICdEaXNhYmxlJyxcclxuICAgICAgY2xhc3NOYW1lOiAnbWVudS1pdGVtLWRpc2FibGUnLFxyXG4gICAgICBpY29uOiAnJiM1NzY1MDsnLFxyXG4gICAgICAvLyBoaWRlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIC8vICAgaWYgKHRoYXQuaXRlbXMubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgIC8vICAgICByZXR1cm4gIXRoYXQuaXRlbXNbMF0uZ2V0KCdlbmFibGVkJyk7XHJcbiAgICAgIC8vICAgfSBlbHNlIHtcclxuICAgICAgLy8gICAgIHZhciBkaXNhYmxlZCA9IHRoYXQuaXRlbXNbMF0uZ2V0KCdlbmFibGVkJyk7XHJcbiAgICAgIC8vICAgICBmb3IgKHZhciBpID0gMTsgaSA8IHRoYXQuaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgLy8gICAgICAgaWYgKGRpc2FibGVkICE9PSB0aGF0Lml0ZW1zW2ldLmdldCgnZW5hYmxlZCcpKVxyXG4gICAgICAvLyAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgLy8gICAgIH1cclxuICAgICAgLy8gICAgIHJldHVybiAhZGlzYWJsZWQ7XHJcbiAgICAgIC8vICAgfVxyXG4gICAgICAvLyB9LFxyXG4gICAgICAvLyBzZWxlY3Q6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgLy8gICBzZXRGaWVsZCgnZW5hYmxlZCcsIGZhbHNlKTtcclxuICAgICAgLy8gfVxyXG4gICAgfTtcclxuXHJcbiAgICBtZW51RGF0YVsnY29weSddID0ge1xyXG4gICAgICB0aXRsZTogJ0NvcHknLFxyXG4gICAgICBjbGFzc05hbWU6ICdtZW51LWl0ZW0tY29weScsXHJcbiAgICAgIGljb246ICcmIzU4MTkzOycsXHJcbiAgICAgIC8vIHNlbGVjdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAvLyAgIGVkaXRvci5jYWxsKCdlbnRpdGllczpjb3B5JywgdGhhdC5pdGVtcyk7XHJcbiAgICAgIC8vIH1cclxuICAgIH07XHJcblxyXG4gICAgbWVudURhdGFbJ3Bhc3RlJ10gPSB7XHJcbiAgICAgIHRpdGxlOiAnUGFzdGUnLFxyXG4gICAgICBjbGFzc05hbWU6ICdtZW51LWl0ZW0tcGFzdGUnLFxyXG4gICAgICBpY29uOiAnJiM1ODE4NDsnLFxyXG4gICAgICAvLyBmaWx0ZXI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgLy8gICByZXR1cm4gdGhhdC5pdGVtcy5sZW5ndGggPD0gMSAmJiAhZWRpdG9yLmNhbGwoJ2VudGl0aWVzOmNsaXBib2FyZDplbXB0eScpO1xyXG4gICAgICAvLyB9LFxyXG4gICAgICAvLyBzZWxlY3Q6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgLy8gICBlZGl0b3IuY2FsbCgnZW50aXRpZXM6cGFzdGUnLCB0aGF0LmVudGl0eSk7XHJcbiAgICAgIC8vIH1cclxuICAgIH07XHJcblxyXG4gICAgbWVudURhdGFbJ2R1cGxpY2F0ZSddID0ge1xyXG4gICAgICB0aXRsZTogJ0R1cGxpY2F0ZScsXHJcbiAgICAgIGNsYXNzTmFtZTogJ21lbnUtaXRlbS1kdXBsaWNhdGUnLFxyXG4gICAgICBpY29uOiAnJiM1NzYzODsnLFxyXG4gICAgICAvLyBmaWx0ZXI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgLy8gICB2YXIgaXRlbXMgPSBnZXRTZWxlY3Rpb24oKTtcclxuXHJcbiAgICAgIC8vICAgaWYgKGl0ZW1zLmluZGV4T2YoZWRpdG9yLmNhbGwoJ2VudGl0aWVzOnJvb3QnKSkgIT09IC0xKVxyXG4gICAgICAvLyAgICAgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgICAgLy8gICByZXR1cm4gaXRlbXMubGVuZ3RoID4gMDtcclxuICAgICAgLy8gfSxcclxuICAgICAgLy8gc2VsZWN0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIC8vICAgZWRpdG9yLmNhbGwoJ2VudGl0aWVzOmR1cGxpY2F0ZScsIGdldFNlbGVjdGlvbigpKTtcclxuICAgICAgLy8gfVxyXG4gICAgfTtcclxuXHJcbiAgICBtZW51RGF0YVsnZGVsZXRlJ10gPSB7XHJcbiAgICAgIHRpdGxlOiAnRGVsZXRlJyxcclxuICAgICAgY2xhc3NOYW1lOiAnbWVudS1pdGVtLWRlbGV0ZScsXHJcbiAgICAgIGljb246ICcmIzU3NjM2OycsXHJcbiAgICAgIC8vIGZpbHRlcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAvLyAgIHZhciByb290ID0gZWRpdG9yLmNhbGwoJ2VudGl0aWVzOnJvb3QnKTtcclxuICAgICAgLy8gICBmb3IgKHZhciBpID0gMDsgaSA8IHRoYXQuaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgLy8gICAgIGlmICh0aGF0Lml0ZW1zW2ldID09PSByb290KVxyXG4gICAgICAvLyAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIC8vICAgfVxyXG4gICAgICAvLyAgIHJldHVybiB0cnVlO1xyXG4gICAgICAvLyB9LFxyXG4gICAgICAvLyBzZWxlY3Q6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgLy8gICBlZGl0b3IuY2FsbCgnZW50aXRpZXM6ZGVsZXRlJywgdGhhdC5pdGVtcyk7XHJcbiAgICAgIC8vIH1cclxuICAgIH07XHJcblxyXG4gICAgLy8gbWVudVxyXG4gICAgdGhpcy5tZW51ID0gTWVudS5mcm9tRGF0YShtZW51RGF0YSwgeyBjbGlja2FibGVTdWJtZW51czogdGhpcy5jbGlja2FibGVTdWJtZW51cyB9KTtcclxuICAgIHRoaXMucm9vdC5hcHBlbmQodGhpcy5tZW51KTtcclxuXHJcbiAgICAvLyB0aGlzLm1lbnUub24oJ29wZW4nLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyAgIHZhciBzZWxlY3Rpb24gPSBnZXRTZWxlY3Rpb24oKTtcclxuXHJcbiAgICAvLyAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhhdC5jdXN0b21NZW51SXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgIC8vICAgICBpZiAoIXRoYXQuY3VzdG9tTWVudUl0ZW1zW2ldLmZpbHRlcilcclxuICAgIC8vICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgIC8vICAgICB0aGF0LmN1c3RvbU1lbnVJdGVtc1tpXS5oaWRkZW4gPSAhdGhhdC5jdXN0b21NZW51SXRlbXNbaV0uZmlsdGVyKHNlbGVjdGlvbik7XHJcbiAgICAvLyAgIH1cclxuICAgIC8vIH0pO1xyXG5cclxuICB9XHJcblxyXG5cclxuICBwcml2YXRlIGdldFNlbGVjdGlvbigpIHtcclxuICAgIHZhciBzZWxlY3Rpb24gPSBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6aXRlbXMnKTtcclxuXHJcbiAgICBpZiAoc2VsZWN0aW9uLmluZGV4T2YodGhpcy5lbnRpdHkpICE9PSAtMSkge1xyXG4gICAgICByZXR1cm4gc2VsZWN0aW9uO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIFt0aGlzLmVudGl0eV07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbiAgcHJpdmF0ZSBpbml0RnVuY3Rpb24oKTogdm9pZCB7XHJcblxyXG4gICAgbGV0IHRoYXQgPSB0aGlzO1xyXG5cclxuICAgIC8vIFRPRE9cclxuICAgIC8vIGVkaXRvci5tZXRob2QoJ2VudGl0aWVzOmNvbnRleHRtZW51OmFkZCcsIGZ1bmN0aW9uIChkYXRhOiBNZW51SXRlbUFyZ3MpIHtcclxuICAgIC8vICAgdmFyIGl0ZW0gPSBuZXcgTWVudUl0ZW0oe1xyXG4gICAgLy8gICAgIHRleHQ6IGRhdGEudGV4dCxcclxuICAgIC8vICAgICBpY29uOiBkYXRhLmljb24sXHJcbiAgICAvLyAgICAgdmFsdWU6IGRhdGEudmFsdWUsXHJcbiAgICAvLyAgICAgaGFzQ2hpbGRyZW46ICEhKGRhdGEuaXRlbXMgJiYgT2JqZWN0LmtleXMoZGF0YS5pdGVtcykubGVuZ3RoID4gMCksXHJcbiAgICAvLyAgICAgY2xpY2thYmxlU3VibWVudXM6IHRoYXQuY2xpY2thYmxlU3VibWVudXNcclxuICAgIC8vICAgfSk7XHJcblxyXG4gICAgLy8gICBpdGVtLm9uKCdzZWxlY3QnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyAgICAgZGF0YS5zZWxlY3QuY2FsbChpdGVtLCBnZXRTZWxlY3Rpb24oKSk7XHJcbiAgICAvLyAgIH0pO1xyXG5cclxuICAgIC8vICAgdmFyIHBhcmVudCA9IGRhdGEucGFyZW50IHx8IHRoYXQubWVudTtcclxuICAgIC8vICAgcGFyZW50LmFwcGVuZChpdGVtKTtcclxuXHJcbiAgICAvLyAgIGlmIChkYXRhLmZpbHRlcilcclxuICAgIC8vICAgICBpdGVtLmZpbHRlciA9IGRhdGEuZmlsdGVyO1xyXG5cclxuICAgIC8vICAgdGhhdC5jdXN0b21NZW51SXRlbXMucHVzaChpdGVtKTtcclxuXHJcbiAgICAvLyAgIHJldHVybiBpdGVtO1xyXG4gICAgLy8gfSk7XHJcblxyXG4gICAgZWRpdG9yLm1ldGhvZCgnZW50aXRpZXM6Y29udGV4dG1lbnU6b3BlbicsIGZ1bmN0aW9uIChpdGVtOiBUcmVlSXRlbSwgeDogbnVtYmVyLCB5OiBudW1iZXIsIGlnbm9yZVNlbGVjdGlvbjogYm9vbGVhbikge1xyXG4gICAgICAvLyBUT0RPXHJcbiAgICAgIC8vIGlmICghdGhhdC5tZW51IHx8ICFlZGl0b3IuY2FsbCgncGVybWlzc2lvbnM6d3JpdGUnKSkgcmV0dXJuO1xyXG4gICAgICBpZiAoIXRoYXQubWVudSkgcmV0dXJuO1xyXG4gICAgICAvLyB0aGF0LmVudGl0eSA9IGl0ZW07XHJcblxyXG4gICAgICAvLyBpZiAoaWdub3JlU2VsZWN0aW9uKSB7XHJcbiAgICAgIC8vICAgaXRlbXMgPSBbXTtcclxuICAgICAgLy8gfSBlbHNlIHtcclxuICAgICAgLy8gICBpdGVtcyA9IGdldFNlbGVjdGlvbigpO1xyXG4gICAgICAvLyB9XHJcblxyXG4gICAgICB0aGF0Lm1lbnUub3BlbiA9IHRydWU7XHJcbiAgICAgIHRoYXQubWVudS5wb3NpdGlvbih4ICsgMSwgeSk7XHJcblxyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIGdldCB0aGUgZW50aXR5IHRoYXQgd2FzIHJpZ2h0LWNsaWNrZWQgd2hlbiBvcGVuaW5nIHRoZSBjb250ZXh0IG1lbnVcclxuICAgIGVkaXRvci5tZXRob2QoJ2VudGl0aWVzOmNvbnRleHRtZW51OmVudGl0eScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmV0dXJuIHRoYXQuZW50aXR5O1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gZm9yIGVhY2ggZW50aXR5IGFkZGVkXHJcbiAgICBlZGl0b3Iub24oJ2VudGl0aWVzOmFkZCcsIGZ1bmN0aW9uIChpdGVtOiBUcmVlSXRlbSkge1xyXG4gICAgICAvLyBnZXQgdHJlZSBpdGVtXHJcbiAgICAgIC8vIHZhciB0cmVlSXRlbSA9IGVkaXRvci5jYWxsKCdlbnRpdGllczpwYW5lbDpnZXQnLCBpdGVtLmdldCgncmVzb3VyY2VfaWQnKSk7XHJcbiAgICAgIC8vIGlmICghdHJlZUl0ZW0pIHJldHVybjtcclxuICAgICAgLy8gYXR0YWNoIGNvbnRleHRtZW51IGV2ZW50XHJcblxyXG4gICAgICBpdGVtLmVsZW1lbnQhLmFkZEV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51JywgZnVuY3Rpb24gKGV2dDogTW91c2VFdmVudCkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiY29udGV4dCBjbGljazogXCIgKyBpdGVtLmVsZW1lbnQhLmlubmVyVGV4dCk7XHJcbiAgICAgICAgbGV0IG9wZW5uZWQgPSBlZGl0b3IuY2FsbCgnZW50aXRpZXM6Y29udGV4dG1lbnU6b3BlbicsIGl0ZW0sIGV2dC5jbGllbnRYLCBldnQuY2xpZW50WSk7XHJcblxyXG4gICAgICAgIGlmIChvcGVubmVkKSB7XHJcbiAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gIH1cclxuXHJcbn1cclxuXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENvbnRleHRNZW51QXJncyB7XHJcbiAgdGl0bGU/OiBzdHJpbmc7XHJcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xyXG4gIGljb24/OiBzdHJpbmc7XHJcbiAgZmlsdGVyPzogKCkgPT4gYm9vbGVhbjtcclxuICBoaWRlPzogKCkgPT4gYm9vbGVhbjtcclxuICBzZWxlY3Q/OiAoKSA9PiB2b2lkO1xyXG4gIGl0ZW1zPzogYW55O1xyXG59IiwiZXhwb3J0IGNsYXNzIEhpZXJhcmNoeU1lbnUge1xyXG5cclxuXHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciAoKSB7XHJcbiAgICBsZXQgY29tcG9uZW50c0xvZ29zID0gZWRpdG9yLmNhbGwoJ2NvbXBvbmVudHM6bG9nb3MnKTtcclxuXHJcbiAgICBcclxuXHJcbiAgfVxyXG5cclxuXHJcblxyXG5cclxufSIsImltcG9ydCB7IFBhbmVsLCBCdXR0b24sIFRvb2x0aXAsIFRyZWUsIFRyZWVJdGVtIH0gZnJvbSAnLi4vLi4vdWknO1xyXG5pbXBvcnQgeyBWZXJ5RW5naW5lIH0gZnJvbSAnLi4vLi4vZW5naW5lJztcclxuaW1wb3J0IHsgSGllcmFyY2h5U2VhcmNoIH0gZnJvbSAnLi9oaWVyYXJjaHktc2VhcmNoJztcclxuaW1wb3J0IHsgSGllcmFyY2h5TWVudSB9IGZyb20gJy4vaGllcmFyY2h5LW1lbnUnO1xyXG5pbXBvcnQgeyBIaWVyYXJjaHlDb250ZXh0TWVudSB9IGZyb20gJy4vaGllcmFyY2h5LWNvbnRleHQtbWVudSc7XHJcblxyXG5leHBvcnQgY2xhc3MgSGllcmFyY2h5UGFuZWwge1xyXG5cclxuXHJcbiAgcHVibGljIGhpZXJhcmNoeU1haW46IFBhbmVsO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmhpZXJhcmNoeU1haW4gPSBuZXcgUGFuZWwoKTtcclxuICAgIHRoaXMuaGllcmFyY2h5TWFpbi5jbGFzcyEuYWRkKCdoaWVyYXJjaHktY29udHJvbHMnKTtcclxuICAgIHRoaXMuaGllcmFyY2h5TWFpbi5wYXJlbnQgPSBWZXJ5RW5naW5lLmhpZXJhcmNoeVBhbmVsO1xyXG4gICAgVmVyeUVuZ2luZS5oaWVyYXJjaHlQYW5lbC5oZWFkZXJBcHBlbmQodGhpcy5oaWVyYXJjaHlNYWluKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdoaWVyYXJjaHktY29udHJvbHMnKTtcclxuXHJcbiAgICAvLyBjb250cm9scyBkZWxldGUgKEJ1dHRvbilcclxuICAgIGxldCBidG5EZWxldGU6IEJ1dHRvbiA9IG5ldyBCdXR0b24oJyYjNTc2MzY7Jyk7XHJcbiAgICBidG5EZWxldGUuY2xhc3MhLmFkZCgnZGVsZXRlJyk7XHJcbiAgICBidG5EZWxldGUuc3R5bGUhLmZvbnRXZWlnaHQgPSAnMjAwJztcclxuICAgIGJ0bkRlbGV0ZS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGxldCB0eXBlID0gZWRpdG9yLmNhbGwoJ3NlbGVjdG9yOnR5cGUnKTtcclxuICAgICAgaWYgKHR5cGUgIT09ICdlbnRpdHknKVxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgZWRpdG9yLmNhbGwoJ2VudGl0aWVzOmRlbGV0ZScsIGVkaXRvci5jYWxsKCdzZWxlY3RvcjppdGVtcycpKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5oaWVyYXJjaHlNYWluLmFwcGVuZChidG5EZWxldGUpO1xyXG5cclxuICAgIGxldCB0b29sdGlwRGVsZXRlID0gVG9vbHRpcC5hdHRhY2goe1xyXG4gICAgICB0YXJnZXQ6IGJ0bkRlbGV0ZS5lbGVtZW50ISxcclxuICAgICAgdGV4dDogJ+WIoOmZpCcsXHJcbiAgICAgIGFsaWduOiAndG9wJyxcclxuICAgICAgcm9vdDogVmVyeUVuZ2luZS5yb290UGFuZWxcclxuICAgIH0pO1xyXG4gICAgdG9vbHRpcERlbGV0ZS5jbGFzcyEuYWRkKCdpbm5hY3RpdmUnKTtcclxuXHJcbiAgICAvLyBjb250cm9scyBkdXBsaWNhdGVcclxuICAgIGxldCBidG5EdXBsaWNhdGU6IEJ1dHRvbiA9IG5ldyBCdXR0b24oJyYjNTc2Mzg7Jyk7XHJcbiAgICBidG5EdXBsaWNhdGUuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgYnRuRHVwbGljYXRlLmNsYXNzIS5hZGQoJ2R1cGxpY2F0ZScpO1xyXG4gICAgYnRuRHVwbGljYXRlLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgbGV0IHR5cGUgPSBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6dHlwZScpO1xyXG4gICAgICBsZXQgaXRlbXMgPSBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6aXRlbXMnKTtcclxuXHJcbiAgICAgIGlmICh0eXBlID09PSAnZW50aXR5JyAmJiBpdGVtcy5sZW5ndGgpXHJcbiAgICAgICAgZWRpdG9yLmNhbGwoJ2VudGl0aWVzOmR1cGxpY2F0ZScsIGl0ZW1zKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5oaWVyYXJjaHlNYWluLmFwcGVuZChidG5EdXBsaWNhdGUpO1xyXG5cclxuICAgIGxldCB0b29sdGlwRHVwbGljYXRlID0gVG9vbHRpcC5hdHRhY2goe1xyXG4gICAgICB0YXJnZXQ6IGJ0bkR1cGxpY2F0ZS5lbGVtZW50ISxcclxuICAgICAgdGV4dDogJ+WkjeWIticsXHJcbiAgICAgIGFsaWduOiAndG9wJyxcclxuICAgICAgcm9vdDogVmVyeUVuZ2luZS5yb290UGFuZWxcclxuICAgIH0pO1xyXG4gICAgdG9vbHRpcER1cGxpY2F0ZS5jbGFzcyEuYWRkKCdpbm5hY3RpdmUnKTtcclxuXHJcbiAgICAvLyBUT0RPOiBNZW51XHJcbiAgICAvLyBsZXQgbWVudUVudGl0aWVzID0gdWkuTWVudS5mcm9tRGF0YShlZGl0b3IuY2FsbCgnbWVudTplbnRpdGllczpuZXcnKSk7XHJcbiAgICAvLyByb290LmFwcGVuZChtZW51RW50aXRpZXMpO1xyXG5cclxuICAgIC8vIGNvbnRyb2xzIGFkZFxyXG4gICAgbGV0IGJ0bkFkZDogQnV0dG9uID0gbmV3IEJ1dHRvbignJiM1NzYzMjsnKTtcclxuICAgIGJ0bkFkZC5jbGFzcyEuYWRkKCdhZGQnKTtcclxuICAgIGJ0bkFkZC5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIC8vIG1lbnVFbnRpdGllcy5vcGVuID0gdHJ1ZTtcclxuICAgICAgLy8gbGV0IHJlY3QgPSBidG5BZGQuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgLy8gbWVudUVudGl0aWVzLnBvc2l0aW9uKHJlY3QubGVmdCwgcmVjdC50b3ApO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLmhpZXJhcmNoeU1haW4uYXBwZW5kKGJ0bkFkZCk7XHJcblxyXG4gICAgVG9vbHRpcC5hdHRhY2goe1xyXG4gICAgICB0YXJnZXQ6IGJ0bkFkZC5lbGVtZW50ISxcclxuICAgICAgdGV4dDogJ+a3u+WKoCcsXHJcbiAgICAgIGFsaWduOiAndG9wJyxcclxuICAgICAgcm9vdDogVmVyeUVuZ2luZS5yb290UGFuZWxcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuaW5pdCgpO1xyXG5cclxuICB9XHJcblxyXG4gIHB1YmxpYyBpbml0KCk6IHZvaWQge1xyXG4gICAgLy8gbGVmdCBjb250cm9sXHJcbiAgICAvLyBoaWVyYXJjaHkgaW5kZXhcclxuICAgIGxldCB1aUl0ZW1JbmRleCA9IHt9O1xyXG4gICAgbGV0IGF3YWl0aW5nUGFyZW50ID0ge307XHJcbiAgICBsZXQgcGFuZWw6IFBhbmVsID0gVmVyeUVuZ2luZS5oaWVyYXJjaHlQYW5lbDtcclxuXHJcbiAgICBsZXQgaGllcmFyY2h5OiBUcmVlID0gbmV3IFRyZWUoKTtcclxuICAgIFZlcnlFbmdpbmUuaGllcmFyY2h5VHJlZSA9IGhpZXJhcmNoeTtcclxuXHJcbiAgICAvLyBUT0RPOiBoaWVyYXJjaHnmnYPpmZDnrqHnkIbvvIzmnInkupvkurrlj6/nnIvkuI3lj6/nvJbovpHvvJtcclxuICAgIC8vIGhpZXJhcmNoeS5hbGxvd1JlbmFtaW5nID0gZWRpdG9yLmNhbGwoJ3Blcm1pc3Npb25zOndyaXRlJyk7XHJcbiAgICBoaWVyYXJjaHkuZHJhZ2dhYmxlID0gaGllcmFyY2h5LmFsbG93UmVuYW1pbmc7XHJcbiAgICBoaWVyYXJjaHkuY2xhc3MhLmFkZCgnaGllcmFyY2h5Jyk7XHJcbiAgICBwYW5lbC5hcHBlbmQoaGllcmFyY2h5KTtcclxuXHJcbiAgICBsZXQgcmVzaXplUXVldWVkID0gZmFsc2U7XHJcbiAgICBsZXQgcmVzaXplVHJlZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmVzaXplUXVldWVkID0gZmFsc2U7XHJcbiAgICAgIGhpZXJhcmNoeS5lbGVtZW50IS5zdHlsZS53aWR0aCA9ICcnO1xyXG4gICAgICBoaWVyYXJjaHkuZWxlbWVudCEuc3R5bGUud2lkdGggPSAocGFuZWwuaW5uZXJFbGVtZW50IS5zY3JvbGxXaWR0aCAtIDUpICsgJ3B4JztcclxuICAgIH07XHJcbiAgICBsZXQgcmVzaXplUXVldWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGlmIChyZXNpemVRdWV1ZWQpIHJldHVybjtcclxuICAgICAgcmVzaXplUXVldWVkID0gdHJ1ZTtcclxuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlc2l6ZVRyZWUpO1xyXG4gICAgfTtcclxuICAgIHBhbmVsLm9uKCdyZXNpemUnLCByZXNpemVRdWV1ZSk7XHJcbiAgICBoaWVyYXJjaHkub24oJ29wZW4nLCByZXNpemVRdWV1ZSk7XHJcbiAgICBoaWVyYXJjaHkub24oJ2Nsb3NlJywgcmVzaXplUXVldWUpO1xyXG4gICAgc2V0SW50ZXJ2YWwocmVzaXplUXVldWUsIDEwMDApO1xyXG5cclxuICAgIC8vIHJldHVybiBoaWVyYXJjaHlcclxuICAgIGVkaXRvci5tZXRob2QoJ2VudGl0aWVzOmhpZXJhcmNoeScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmV0dXJuIGhpZXJhcmNoeTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIGxpc3QgaXRlbSBzZWxlY3RlZFxyXG4gICAgaGllcmFyY2h5Lm9uKCdzZWxlY3QnLCBmdW5jdGlvbiAoaXRlbTogVHJlZUl0ZW0pIHtcclxuICAgICAgLy8gb3BlbiBpdGVtcyB0aWxsIHBhcmVudFxyXG4gICAgICBsZXQgcGFyZW50ID0gaXRlbS5wYXJlbnQ7XHJcbiAgICAgIHdoaWxlIChwYXJlbnQgJiYgcGFyZW50IGluc3RhbmNlb2YgVHJlZUl0ZW0pIHtcclxuICAgICAgICBwYXJlbnQub3BlbiA9IHRydWU7XHJcbiAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudDtcclxuICAgICAgfVxyXG4gICAgICAvLyBmb2N1c1xyXG4gICAgICBpdGVtLmVsZW1lbnRUaXRsZS5mb2N1cygpO1xyXG4gICAgICAvLyBhZGQgc2VsZWN0aW9uXHJcbiAgICAgIC8vIFRPRE9cclxuICAgICAgY29uc29sZS5sb2coJ2hpZXJhcmNoeSDpnaLmnb/pgInkuK1lbnRpdHknKTtcclxuXHJcbiAgICAgIC8vIFRPRE86IOW9k+WJjWVudGl0eeS4unVuZGVmaW5lZFxyXG4gICAgICBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6YWRkJywgJ2VudGl0eScsIGl0ZW0uZW50aXR5KTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIGxpc3QgaXRlbSBkZXNlbGVjdGVkXHJcbiAgICBoaWVyYXJjaHkub24oJ2Rlc2VsZWN0JywgZnVuY3Rpb24gKGl0ZW06IFRyZWVJdGVtKSB7XHJcbiAgICAgIC8vIFRPRE86XHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdzZWxlY3RvcjpyZW1vdmUgZW50aXR5Jyk7XHJcbiAgICAgIGVkaXRvci5jYWxsKCdzZWxlY3RvcjpyZW1vdmUnLCBpdGVtLmVudGl0eSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBzY3JvbGxpbmcgb24gZHJhZ1xyXG4gICAgbGV0IGRyYWdTY3JvbGwgPSAwO1xyXG4gICAgbGV0IGRyYWdUaW1lcjogTm9kZUpTLlRpbWVyIHwgbnVsbCA9IG51bGw7O1xyXG4gICAgbGV0IGRyYWdMYXN0RXZ0O1xyXG4gICAgbGV0IGRyYWdFdnQgPSBmdW5jdGlvbiAoZXZ0OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgIGlmICghaGllcmFyY2h5Ll9kcmFnZ2luZykge1xyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwoTnVtYmVyKGRyYWdUaW1lcikpO1xyXG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkcmFnRXZ0KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgbGV0IHJlY3QgPSBwYW5lbC5pbm5lckVsZW1lbnQhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgICAgaWYgKChldnQuY2xpZW50WSAtIHJlY3QudG9wKSA8IDMyICYmIHBhbmVsLmlubmVyRWxlbWVudCEuc2Nyb2xsVG9wID4gMCkge1xyXG4gICAgICAgIGRyYWdTY3JvbGwgPSAtMTtcclxuICAgICAgfSBlbHNlIGlmICgocmVjdC5ib3R0b20gLSBldnQuY2xpZW50WSkgPCAzMiAmJiAocGFuZWwuaW5uZXJFbGVtZW50IS5zY3JvbGxIZWlnaHQgLSAocmVjdC5oZWlnaHQgKyBwYW5lbC5pbm5lckVsZW1lbnQhLnNjcm9sbFRvcCkpID4gMCkge1xyXG4gICAgICAgIGRyYWdTY3JvbGwgPSAxO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRyYWdTY3JvbGwgPSAwO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIGhpZXJhcmNoeS5vbignZHJhZ3N0YXJ0JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICBkcmFnVGltZXIgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKGRyYWdTY3JvbGwgPT09IDApXHJcbiAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIHBhbmVsLmlubmVyRWxlbWVudCEuc2Nyb2xsVG9wICs9IGRyYWdTY3JvbGwgKiA4O1xyXG4gICAgICAgIGhpZXJhcmNoeS5fZHJhZ092ZXIgPSBudWxsO1xyXG4gICAgICAgIGhpZXJhcmNoeS5fdXBkYXRlRHJhZ0hhbmRsZSgpO1xyXG4gICAgICB9LCAxMDAwIC8gNjApO1xyXG5cclxuICAgICAgZHJhZ1Njcm9sbCA9IDA7XHJcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkcmFnRXZ0LCBmYWxzZSk7XHJcblxyXG4gICAgICAvLyBUT0RPOlxyXG4gICAgICBjb25zb2xlLmxvZygnZ2V0IGRyYWcgVHJlZUl0ZW0gZW50aXR5IHJlc291cmNlSWQnKTtcclxuICAgICAgLy8gbGV0IHJlc291cmNlSWQgPSBoaWVyYXJjaHkuX2RyYWdJdGVtc1swXS5lbnRpdHkuZ2V0KCdyZXNvdXJjZV9pZCcpO1xyXG4gICAgICAvLyBlZGl0b3IuY2FsbCgnZHJvcDpzZXQnLCAnZW50aXR5JywgeyByZXNvdXJjZV9pZDogcmVzb3VyY2VJZCB9KTtcclxuICAgICAgLy8gZWRpdG9yLmNhbGwoJ2Ryb3A6YWN0aXZhdGUnLCB0cnVlKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGhpZXJhcmNoeS5vbignZHJhZ2VuZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgZWRpdG9yLmNhbGwoJ2Ryb3A6YWN0aXZhdGUnLCBmYWxzZSk7XHJcbiAgICAgIGVkaXRvci5jYWxsKCdkcm9wOnNldCcpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gVE9ET1xyXG4gICAgLy8gbGV0IHRhcmdldCA9IGVkaXRvci5jYWxsKCdkcm9wOnRhcmdldCcsIHtcclxuICAgIC8vICAgcmVmOiBwYW5lbC5pbm5lckVsZW1lbnQsXHJcbiAgICAvLyAgIHR5cGU6ICdlbnRpdHknLFxyXG4gICAgLy8gICBob2xlOiB0cnVlLFxyXG4gICAgLy8gICBwYXNzVGhyb3VnaDogdHJ1ZVxyXG4gICAgLy8gfSk7XHJcbiAgICAvLyB0YXJnZXQuZWxlbWVudC5zdHlsZS5vdXRsaW5lID0gJ25vbmUnO1xyXG5cclxuICAgIGxldCBjbGFzc0xpc3QgPSBbJ3RyZWUtaXRlbS1lbnRpdHknLCAnZW50aXR5LWlkLScgKyAnaWRzLXRvLWJlLWRvbmUnLCAnYy1tb2RlbCddO1xyXG4gICAgLy8gaWYgKGlzUm9vdCkge1xyXG4gICAgLy8gICBjbGFzc0xpc3QucHVzaCgndHJlZS1pdGVtLXJvb3QnKTtcclxuICAgIC8vIH1cclxuXHJcbiAgICBsZXQgcm9vdEVsZW1lbnQgPSBuZXcgVHJlZUl0ZW0oe1xyXG4gICAgICB0ZXh0OiAnU2NlbmUnLFxyXG4gICAgICBjbGFzc0xpc3Q6IGNsYXNzTGlzdFxyXG4gICAgfSk7XHJcbiAgICByb290RWxlbWVudC5jbGFzcyEucmVtb3ZlKCdjLW1vZGVsJyk7XHJcbiAgICBoaWVyYXJjaHkuZWxlbWVudCEuYXBwZW5kQ2hpbGQocm9vdEVsZW1lbnQuZWxlbWVudCEpO1xyXG4gICAgaGllcmFyY2h5LmVtaXQoJ2FwcGVuZCcsIHJvb3RFbGVtZW50KTtcclxuXHJcbiAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgMTA7IGkrKykge1xyXG4gICAgICBsZXQgZWxlbWVudDEgPSBuZXcgVHJlZUl0ZW0oe1xyXG4gICAgICAgIHRleHQ6ICfniankvZPlkI0nICsgKGkgKyAxKSxcclxuICAgICAgICBjbGFzc0xpc3Q6IGNsYXNzTGlzdFxyXG4gICAgICB9KTtcclxuICAgICAgZWRpdG9yLmVtaXQoJ2VudGl0aWVzOmFkZCcsIGVsZW1lbnQxKTtcclxuICAgICAgaGllcmFyY2h5LmVtaXQoJ2FwcGVuZCcsIGVsZW1lbnQxKTtcclxuICAgICAgcm9vdEVsZW1lbnQuYXBwZW5kKGVsZW1lbnQxKTtcclxuXHJcbiAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgNTsgaysrKSB7XHJcbiAgICAgICAgbGV0IGVsZW1lbnQyID0gbmV3IFRyZWVJdGVtKHtcclxuICAgICAgICAgIHRleHQ6ICflrZDniankvZPlkI0nICsgKGsgKyAxKSxcclxuICAgICAgICAgIGNsYXNzTGlzdDogY2xhc3NMaXN0XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZWRpdG9yLmVtaXQoJ2VudGl0aWVzOmFkZCcsIGVsZW1lbnQyKTtcclxuICAgICAgICBoaWVyYXJjaHkuZW1pdCgnYXBwZW5kJywgZWxlbWVudDIpO1xyXG4gICAgICAgIGVsZW1lbnQxLmFwcGVuZChlbGVtZW50Mik7XHJcbiAgICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCA1OyB4KyspIHtcclxuICAgICAgICAgIGxldCBlbGVtZW50MyA9IG5ldyBUcmVlSXRlbSh7XHJcbiAgICAgICAgICAgIHRleHQ6ICfkuoznuqflrZDniankvZMnICsgKHggKyAxKSxcclxuICAgICAgICAgICAgY2xhc3NMaXN0OiBjbGFzc0xpc3RcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgZWRpdG9yLmVtaXQoJ2VudGl0aWVzOmFkZCcsIGVsZW1lbnQzKTtcclxuICAgICAgICAgIGhpZXJhcmNoeS5lbWl0KCdhcHBlbmQnLCBlbGVtZW50Myk7XHJcblxyXG4gICAgICAgICAgZWxlbWVudDIuYXBwZW5kKGVsZW1lbnQzKTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZWxlbWVudC5hcHBlbmQoKTtcclxuXHJcbiAgfVxyXG5cclxufSIsImltcG9ydCB7IExpc3QsIFRleHRGaWVsZCwgRWxlbWVudCwgVHJlZUl0ZW0sIExpc3RJdGVtIH0gZnJvbSBcIi4uLy4uL3VpXCI7XHJcbmltcG9ydCB7IFZlcnlFbmdpbmUgfSBmcm9tIFwiLi4vLi4vZW5naW5lXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgSGllcmFyY2h5U2VhcmNoIHtcclxuXHJcbiAgcHVibGljIHJlc3VsdHM6IExpc3Q7XHJcblxyXG4gIHB1YmxpYyBzZWFyY2g6IFRleHRGaWVsZDtcclxuXHJcbiAgcHVibGljIHNlYXJjaENsZWFyOiBIVE1MRWxlbWVudDtcclxuXHJcbiAgcHVibGljIGNoYW5naW5nOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIHB1YmxpYyBpdGVtc0luZGV4OiB7IFtrZXk6IHN0cmluZ106IFRyZWVJdGVtIH0gPSB7fTtcclxuXHJcbiAgcHVibGljIGxhc3RTZWFyY2g6IHN0cmluZyA9ICcnO1xyXG5cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIGxldCBzZWxmID0gdGhpcztcclxuXHJcbiAgICAvLyDnu5PmnpzliJfooahcclxuICAgIHRoaXMucmVzdWx0cyA9IG5ldyBMaXN0KCk7XHJcbiAgICB0aGlzLnJlc3VsdHMuZWxlbWVudCEudGFiSW5kZXggPSAwO1xyXG4gICAgdGhpcy5yZXN1bHRzLmhpZGRlbiA9IHRydWU7XHJcbiAgICB0aGlzLnJlc3VsdHMuY2xhc3MhLmFkZCgnc2VhcmNoLXJlc3VsdHMnKTtcclxuICAgIFZlcnlFbmdpbmUuaGllcmFyY2h5UGFuZWwuYXBwZW5kKHRoaXMucmVzdWx0cyk7XHJcbiAgICB0aGlzLmluaXRSZXN1bHQoKTtcclxuXHJcbiAgICAvLyDmkJzntKLljLrln5/mjqfliLZcclxuICAgIHRoaXMuc2VhcmNoID0gbmV3IFRleHRGaWVsZCgn5pCc57SiJyk7XHJcbiAgICB0aGlzLmluaXRTZWFyY2hGaWVsZCgpO1xyXG5cclxuICAgIC8vIOaQnOe0oue7k+aenGNsZWFy5o6n5Yi2XHJcbiAgICB0aGlzLnNlYXJjaENsZWFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLnNlYXJjaENsZWFyLmlubmVySFRNTCA9ICcmIzU3NjUwOyc7XHJcbiAgICB0aGlzLnNlYXJjaENsZWFyLmNsYXNzTGlzdC5hZGQoJ2NsZWFyJyk7XHJcbiAgICB0aGlzLnNlYXJjaC5lbGVtZW50IS5hcHBlbmRDaGlsZCh0aGlzLnNlYXJjaENsZWFyKTtcclxuXHJcbiAgICB0aGlzLnNlYXJjaENsZWFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICBzZWxmLnNlYXJjaC52YWx1ZSA9ICcnO1xyXG4gICAgfSwgZmFsc2UpO1xyXG5cclxuXHJcblxyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBpbml0UmVzdWx0KCk6IHZvaWQge1xyXG5cclxuICAgIGxldCBzZWxmID0gdGhpcztcclxuXHJcbiAgICAvLyBjbGVhciBvbiBlc2NhcGVcclxuICAgIHRoaXMucmVzdWx0cy5lbGVtZW50IS5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgICBpZiAoZXZ0LmtleUNvZGUgPT09IDI3KSB7IC8vIGVzY1xyXG4gICAgICAgIHNlbGYuc2VhcmNoQ2xlYXIuY2xpY2soKTtcclxuXHJcbiAgICAgIH0gZWxzZSBpZiAoZXZ0LmtleUNvZGUgPT09IDEzKSB7IC8vIGVudGVy77yMVE9ETzog5Zue6L2m6ZSu6YCJ5oupXHJcbiAgICAgICAgaWYgKCFzZWxmLnJlc3VsdHMuc2VsZWN0ZWQpIHtcclxuICAgICAgICAgIC8vIGxldCBmaXJzdEVsZW1lbnQgPSBzZWxmLnJlc3VsdHMuZWxlbWVudCEuZmlyc3RFbGVtZW50Q2hpbGQ7XHJcbiAgICAgICAgICAvLyBpZiAoZmlyc3RFbGVtZW50ICYmICg8SFRNTEVsZW1lbnQ+Zmlyc3RFbGVtZW50KS51aSAmJiAoPEhUTUxFbGVtZW50PmZpcnN0RWxlbWVudCkudWkuZW50aXR5KVxyXG4gICAgICAgICAgLy8gICBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6c2V0JywgJ2VudGl0eScsIFtmaXJzdEVsZW1lbnQudWkuZW50aXR5XSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNlbGYuc2VhcmNoLnZhbHVlID0gJyc7XHJcblxyXG4gICAgICB9IGVsc2UgaWYgKGV2dC5rZXlDb2RlID09PSA0MCkgeyAgLy8gZG93blxyXG4gICAgICAgIHNlbGYuc2VsZWN0TmV4dCgpO1xyXG4gICAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgfSBlbHNlIGlmIChldnQua2V5Q29kZSA9PT0gMzgpIHsgIC8vIHVwXHJcbiAgICAgICAgc2VsZi5zZWxlY3RQcmV2KCk7XHJcbiAgICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICB9XHJcbiAgICB9LCBmYWxzZSk7XHJcblxyXG5cclxuICAgIC8vIGRlc2VsZWN0aW5nXHJcbiAgICB0aGlzLnJlc3VsdHMudW5iaW5kKCdkZXNlbGVjdCcsIHRoaXMucmVzdWx0cy5fb25EZXNlbGVjdCk7XHJcbiAgICB0aGlzLnJlc3VsdHMuX29uRGVzZWxlY3QgPSBmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICBsZXQgaW5kID0gdGhpcy5zZWxlY3RlZC5pbmRleE9mKGl0ZW0pO1xyXG4gICAgICBpZiAoaW5kICE9PSAtMSkgdGhpcy5zZWxlY3RlZC5zcGxpY2UoaW5kLCAxKTtcclxuXHJcbiAgICAgIGlmICh0aGlzLl9jaGFuZ2luZylcclxuICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICBpZiAoTGlzdC5fY3RybCAmJiBMaXN0Ll9jdHJsKCkpIHtcclxuXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5fY2hhbmdpbmcgPSB0cnVlO1xyXG5cclxuICAgICAgICBsZXQgaXRlbXMgPSBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6dHlwZScpID09PSAnZW50aXR5JyAmJiBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6aXRlbXMnKSB8fCBbXTtcclxuXHJcbiAgICAgICAgLy8gVE9ETzogXHJcbiAgICAgICAgY29uc29sZS5sb2coJ19vbkRlc2VsZWN0Jyk7XHJcbiAgICAgICAgLy8gbGV0IGluU2VsZWN0ZWQgPSBpdGVtcy5pbmRleE9mKGl0ZW0uZW50aXR5KSAhPT0gLTE7XHJcblxyXG4gICAgICAgIC8vIGlmIChpdGVtcy5sZW5ndGggPj0gMiAmJiBpblNlbGVjdGVkKSB7XHJcbiAgICAgICAgLy8gICBsZXQgc2VsZWN0ZWQgPSB0aGlzLnNlbGVjdGVkO1xyXG4gICAgICAgIC8vICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZWxlY3RlZC5sZW5ndGg7IGkrKylcclxuICAgICAgICAvLyAgICAgc2VsZWN0ZWRbaV0uc2VsZWN0ZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgLy8gICBpdGVtLnNlbGVjdGVkID0gdHJ1ZTtcclxuICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgIHRoaXMuX2NoYW5naW5nID0gZmFsc2U7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuZW1pdCgnY2hhbmdlJyk7XHJcbiAgICB9O1xyXG4gICAgdGhpcy5yZXN1bHRzLm9uKCdkZXNlbGVjdCcsIHRoaXMucmVzdWx0cy5fb25EZXNlbGVjdCk7XHJcblxyXG4gICAgLy8gcmVzdWx0cyBzZWxlY3Rpb24gY2hhbmdlXHJcbiAgICB0aGlzLnJlc3VsdHMub24oJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgaWYgKHNlbGYuY2hhbmdpbmcpXHJcbiAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgaWYgKHNlbGYucmVzdWx0cy5zZWxlY3RlZCkge1xyXG4gICAgICAgIGVkaXRvci5jYWxsKCdzZWxlY3RvcjpzZXQnLCAnZW50aXR5Jywgc2VsZi5yZXN1bHRzLnNlbGVjdGVkLm1hcChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ2VudGl0eSBjaGFuZ2UnKTtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgIC8vIFRPRE9cclxuICAgICAgICAgIC8vIHJldHVybiBpdGVtLmVudGl0eTtcclxuICAgICAgICB9KSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZWRpdG9yLmNhbGwoJ3NlbGVjdG9yOmNsZWFyJyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIHNlbGVjdG9yIGNoYW5nZVxyXG4gICAgZWRpdG9yLm9uKCdzZWxlY3RvcjpjaGFuZ2UnLCBmdW5jdGlvbiAodHlwZTogc3RyaW5nLCBpdGVtczogVHJlZUl0ZW1bXSkge1xyXG4gICAgICBpZiAoc2VsZi5jaGFuZ2luZylcclxuICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICBzZWxmLmNoYW5naW5nID0gdHJ1ZTtcclxuXHJcbiAgICAgIGlmICh0eXBlID09PSAnZW50aXR5Jykge1xyXG4gICAgICAgIHNlbGYucmVzdWx0cy5zZWxlY3RlZCA9IFtdO1xyXG5cclxuICAgICAgICAvLyBUT0RPXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgLy8gbGV0IGl0ZW0gPSBzZWxmLml0ZW1zSW5kZXhbaXRlbXNbaV0uZ2V0KCdyZXNvdXJjZV9pZCcpXTtcclxuICAgICAgICAgIC8vIGlmICghaXRlbSkgY29udGludWU7XHJcbiAgICAgICAgICAvLyBpdGVtLnNlbGVjdGVkID0gdHJ1ZTsuXHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNlbGYucmVzdWx0cy5zZWxlY3RlZCA9IFtdO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBzZWxmLmNoYW5naW5nID0gZmFsc2U7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBpbml0U2VhcmNoRmllbGQoKTogdm9pZCB7XHJcblxyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIHRoaXMuc2VhcmNoLmJsdXJPbkVudGVyID0gZmFsc2U7XHJcbiAgICB0aGlzLnNlYXJjaC5rZXlDaGFuZ2UgPSB0cnVlO1xyXG4gICAgdGhpcy5zZWFyY2guY2xhc3MhLmFkZCgnc2VhcmNoJyk7XHJcbiAgICB0aGlzLnNlYXJjaC5yZW5kZXJDaGFuZ2VzID0gZmFsc2U7XHJcbiAgICBWZXJ5RW5naW5lLmhpZXJhcmNoeVBhbmVsLmVsZW1lbnQhLmluc2VydEJlZm9yZSh0aGlzLnNlYXJjaC5lbGVtZW50ISwgVmVyeUVuZ2luZS5oaWVyYXJjaHlQYW5lbC5pbm5lckVsZW1lbnQpO1xyXG5cclxuICAgIHRoaXMuc2VhcmNoLmVsZW1lbnQhLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZ0OiBLZXlib2FyZEV2ZW50KSB7XHJcbiAgICAgIGlmIChldnQua2V5Q29kZSA9PT0gMjcpIHtcclxuICAgICAgICBzZWFyY2hDbGVhci5jbGljaygpO1xyXG5cclxuICAgICAgfSBlbHNlIGlmIChldnQua2V5Q29kZSA9PT0gMTMpIHtcclxuICAgICAgICBpZiAoIXNlbGYucmVzdWx0cy5zZWxlY3RlZC5sZW5ndGgpIHtcclxuICAgICAgICAgIC8vIFRPRE9cclxuICAgICAgICAgIC8vIGxldCBmaXJzdEVsZW1lbnQgPSBzZWxmLnJlc3VsdHMuZWxlbWVudCEuZmlyc3RFbGVtZW50Q2hpbGQ7XHJcbiAgICAgICAgICAvLyBpZiAoZmlyc3RFbGVtZW50ICYmICg8SFRNTEVsZW1lbnQ+Zmlyc3RFbGVtZW50KS51aSAmJiAoPEhUTUxFbGVtZW50PmZpcnN0RWxlbWVudCkudWkuZW50aXR5KVxyXG4gICAgICAgICAgLy8gICBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6c2V0JywgJ2VudGl0eScsIFsoPEhUTUxFbGVtZW50PmZpcnN0RWxlbWVudCkudWkuZW50aXR5XSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNlbGYuc2VhcmNoLnZhbHVlID0gJyc7XHJcblxyXG4gICAgICB9IGVsc2UgaWYgKGV2dC5rZXlDb2RlID09PSA0MCkgeyAvLyBkb3duXHJcbiAgICAgICAgZWRpdG9yLmNhbGwoJ2hvdGtleTp1cGRhdGVNb2RpZmllcktleXMnLCBldnQpO1xyXG4gICAgICAgIHNlbGYuc2VsZWN0TmV4dCgpO1xyXG4gICAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgIH0gZWxzZSBpZiAoZXZ0LmtleUNvZGUgPT09IDM4KSB7IC8vIHVwXHJcbiAgICAgICAgZWRpdG9yLmNhbGwoJ2hvdGtleTp1cGRhdGVNb2RpZmllcktleXMnLCBldnQpO1xyXG4gICAgICAgIHNlbGYuc2VsZWN0UHJldigpO1xyXG4gICAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgIH0gZWxzZSBpZiAoZXZ0LmtleUNvZGUgPT09IDY1ICYmIGV2dC5jdHJsS2V5KSB7IC8vIGN0cmwgKyBhXHJcbiAgICAgICAgbGV0IHRvU2VsZWN0ID0gW107XHJcbiAgICAgICAgbGV0IGl0ZW1zID0gc2VsZi5yZXN1bHRzLmVsZW1lbnQhLnF1ZXJ5U2VsZWN0b3JBbGwoJy51aS1saXN0LWl0ZW0nKTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICB0b1NlbGVjdC5wdXNoKCg8SFRNTEVsZW1lbnQ+aXRlbXNbaV0pLnVpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gVE9ET1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCflhajpgIknKTtcclxuICAgICAgICAvLyBzZWxmLnJlc3VsdHMuc2VsZWN0ZWQgPSB0b1NlbGVjdDtcclxuICAgICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIH1cclxuICAgIH0sIGZhbHNlKTtcclxuXHJcblxyXG4gICAgdGhpcy5zZWFyY2gub24oJ2NoYW5nZScsIGZ1bmN0aW9uICh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgIHZhbHVlID0gdmFsdWUudHJpbSgpO1xyXG5cclxuICAgICAgaWYgKHNlbGYubGFzdFNlYXJjaCA9PT0gdmFsdWUpIHJldHVybjtcclxuICAgICAgc2VsZi5sYXN0U2VhcmNoID0gdmFsdWU7XHJcblxyXG4gICAgICBpZiAodmFsdWUpIHtcclxuICAgICAgICBzZWxmLnNlYXJjaC5jbGFzcyEuYWRkKCdub3QtZW1wdHknKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzZWxmLnNlYXJjaC5jbGFzcyEucmVtb3ZlKCdub3QtZW1wdHknKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgc2VsZi5wZXJmb3JtU2VhcmNoKCk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgbGV0IHNlYXJjaENsZWFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBzZWFyY2hDbGVhci5pbm5lckhUTUwgPSAnJiM1NzY1MDsnO1xyXG4gICAgc2VhcmNoQ2xlYXIuY2xhc3NMaXN0LmFkZCgnY2xlYXInKTtcclxuICAgIHRoaXMuc2VhcmNoLmVsZW1lbnQhLmFwcGVuZENoaWxkKHNlYXJjaENsZWFyKTtcclxuXHJcbiAgICBzZWFyY2hDbGVhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgc2VsZi5zZWFyY2gudmFsdWUgPSAnJztcclxuICAgIH0sIGZhbHNlKTtcclxuXHJcblxyXG4gIH1cclxuXHJcblxyXG4gIHByaXZhdGUgc2VsZWN0TmV4dCgpOiB2b2lkIHtcclxuICAgIGxldCBjaGlsZHJlbiA9IHRoaXMucmVzdWx0cy5lbGVtZW50IS5jaGlsZHJlbjtcclxuXHJcbiAgICAvLyBjb3VsZCBiZSBub3RoaW5nIG9yIG9ubHkgb25lIGl0ZW0gdG8gc2VsZWN0XHJcbiAgICBpZiAoIWNoaWxkcmVuLmxlbmd0aCB8fCAhY2hpbGRyZW4ubGVuZ3RoKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgbGV0IHRvU2VsZWN0ID0gbnVsbDtcclxuICAgIGxldCBpdGVtcyA9IHRoaXMucmVzdWx0cy5lbGVtZW50IS5xdWVyeVNlbGVjdG9yQWxsKCcudWktbGlzdC1pdGVtLnNlbGVjdGVkJyk7XHJcbiAgICBsZXQgbXVsdGk6IGJvb2xlYW4gPSBMaXN0Ll9jdHJsKCkgfHwgTGlzdC5fc2hpZnQoKTtcclxuXHJcbiAgICBpZiAoaXRlbXMubGVuZ3RoKSB7XHJcbiAgICAgIGxldCBsYXN0ID0gaXRlbXNbaXRlbXMubGVuZ3RoIC0gMV07XHJcbiAgICAgIGxldCBuZXh0ID0gbGFzdC5uZXh0RWxlbWVudFNpYmxpbmc7XHJcbiAgICAgIGlmIChuZXh0KSB7XHJcbiAgICAgICAgLy8gc2VsZWN0IG5leHRcclxuICAgICAgICB0b1NlbGVjdCA9ICg8SFRNTEVsZW1lbnQ+bmV4dCkudWk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gbG9vcCB0aHJvdWdoXHJcbiAgICAgICAgaWYgKCFtdWx0aSkgdG9TZWxlY3QgPSAoPEhUTUxFbGVtZW50PmNoaWxkcmVuWzBdKS51aTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gc2VsZWN0IGZpcnN0XHJcbiAgICAgIHRvU2VsZWN0ID0gKDxIVE1MRWxlbWVudD5jaGlsZHJlblswXSkudWk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRvU2VsZWN0KSB7XHJcbiAgICAgIGlmICghbXVsdGkpIHRoaXMucmVzdWx0cy5zZWxlY3RlZCA9IFtdO1xyXG4gICAgICAvLyBUT0RPXHJcbiAgICAgIC8vIHRvU2VsZWN0LnNlbGVjdGVkID0gdHJ1ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgc2VsZWN0UHJldigpOiB2b2lkIHtcclxuICAgIGxldCBjaGlsZHJlbiA9IHRoaXMucmVzdWx0cy5lbGVtZW50IS5jaGlsZHJlbjtcclxuXHJcbiAgICAvLyBjb3VsZCBiZSBub3RoaW5nIG9yIG9ubHkgb25lIGl0ZW0gdG8gc2VsZWN0XHJcbiAgICBpZiAoIWNoaWxkcmVuIHx8ICFjaGlsZHJlbi5sZW5ndGgpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBsZXQgdG9TZWxlY3QgPSBudWxsO1xyXG4gICAgbGV0IGl0ZW1zID0gdGhpcy5yZXN1bHRzLmVsZW1lbnQhLnF1ZXJ5U2VsZWN0b3JBbGwoJy51aS1saXN0LWl0ZW0uc2VsZWN0ZWQnKTtcclxuICAgIGxldCBtdWx0aTogYm9vbGVhbiA9IExpc3QuX2N0cmwoKSB8fCBMaXN0Ll9zaGlmdCgpO1xyXG5cclxuICAgIGlmIChpdGVtcy5sZW5ndGgpIHtcclxuICAgICAgbGV0IGZpcnN0ID0gaXRlbXNbMF07XHJcbiAgICAgIGxldCBwcmV2ID0gZmlyc3QucHJldmlvdXNFbGVtZW50U2libGluZztcclxuICAgICAgaWYgKHByZXYpIHtcclxuICAgICAgICAvLyBzZWxlY3QgcHJldmlvdXNcclxuICAgICAgICB0b1NlbGVjdCA9ICg8SFRNTEVsZW1lbnQ+cHJldikudWk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gbG9vcCB0aHJvdWdoXHJcbiAgICAgICAgaWYgKCFtdWx0aSkgdG9TZWxlY3QgPSAoPEhUTUxFbGVtZW50PmNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdKS51aTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gc2VsZWN0IGxhc3RcclxuICAgICAgdG9TZWxlY3QgPSAoPEhUTUxFbGVtZW50PmNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdKS51aTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodG9TZWxlY3QpIHtcclxuICAgICAgaWYgKCFtdWx0aSkgdGhpcy5yZXN1bHRzLnNlbGVjdGVkID0gW107XHJcbiAgICAgIC8vIFRPRE9cclxuICAgICAgLy8gdG9TZWxlY3Quc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgcGVyZm9ybVNlYXJjaCgpIHtcclxuICAgIGxldCBxdWVyeSA9IHRoaXMubGFzdFNlYXJjaDtcclxuXHJcbiAgICAvLyBjbGVhciByZXN1bHRzIGxpc3RcclxuICAgIHRoaXMucmVzdWx0cy5jbGVhcigpO1xyXG4gICAgdGhpcy5pdGVtc0luZGV4ID0ge307XHJcblxyXG4gICAgaWYgKHF1ZXJ5KSB7XHJcbiAgICAgIGxldCByZXN1bHQgPSBlZGl0b3IuY2FsbCgnZW50aXRpZXM6ZnV6enktc2VhcmNoJywgcXVlcnkpO1xyXG5cclxuICAgICAgVmVyeUVuZ2luZS5oaWVyYXJjaHlUcmVlLmhpZGRlbiA9IHRydWU7XHJcbiAgICAgIHRoaXMucmVzdWx0cy5oaWRkZW4gPSBmYWxzZTtcclxuXHJcbiAgICAgIGxldCBzZWxlY3RlZCA9IFtdO1xyXG4gICAgICBpZiAoZWRpdG9yLmNhbGwoJ3NlbGVjdG9yOnR5cGUnKSA9PT0gJ2VudGl0eScpXHJcbiAgICAgICAgc2VsZWN0ZWQgPSBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6aXRlbXMnKTtcclxuXHJcbiAgICAgIC8vIFRPRE9cclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXN1bHQubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAvLyBsZXQgaXRlbSA9IHRoaXMuYWRkSXRlbShyZXN1bHRbaV0pO1xyXG5cclxuICAgICAgICAvLyB0aGlzLml0ZW1zSW5kZXhbcmVzdWx0W2ldLmdldCgncmVzb3VyY2VfaWQnKV0gPSBpdGVtO1xyXG5cclxuICAgICAgICAvLyBpZiAoc2VsZWN0ZWQuaW5kZXhPZihyZXN1bHRbaV0pICE9PSAtMSlcclxuICAgICAgICAvLyAgIGl0ZW0uc2VsZWN0ZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICAvLyB0aGlzLnJlc3VsdHMuYXBwZW5kKGl0ZW0pO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnJlc3VsdHMuaGlkZGVuID0gdHJ1ZTtcclxuICAgICAgVmVyeUVuZ2luZS5oaWVyYXJjaHlUcmVlLmhpZGRlbiA9IGZhbHNlO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG5cclxuICAvLyBwcml2YXRlIGFkZEl0ZW0oZW50aXR5KSB7XHJcbiAgLy8gICBsZXQgZXZlbnRzID0gW107XHJcblxyXG4gIC8vICAgbGV0IGl0ZW0gPSBuZXcgTGlzdEl0ZW0oe1xyXG4gIC8vICAgICB0ZXh0OiBlbnRpdHkuZ2V0KCduYW1lJylcclxuICAvLyAgIH0pO1xyXG4gIC8vICAgaXRlbS5kaXNhYmxlZENsaWNrID0gdHJ1ZTtcclxuICAvLyAgIGl0ZW0uZW50aXR5ID0gZW50aXR5O1xyXG5cclxuICAvLyAgIGlmIChlbnRpdHkuZ2V0KCdjaGlsZHJlbicpLmxlbmd0aClcclxuICAvLyAgICAgaXRlbS5jbGFzcy5hZGQoJ2NvbnRhaW5lcicpO1xyXG5cclxuICAvLyAgIC8vIHJlbGF0ZSB0byB0cmVlIGl0ZW1cclxuICAvLyAgIGxldCB0cmVlSXRlbSA9IGVkaXRvci5jYWxsKCdlbnRpdGllczpwYW5lbDpnZXQnLCBlbnRpdHkuZ2V0KCdyZXNvdXJjZV9pZCcpKTtcclxuXHJcbiAgLy8gICBpdGVtLmRpc2FibGVkID0gdHJlZUl0ZW0uZGlzYWJsZWQ7XHJcblxyXG4gIC8vICAgbGV0IG9uU3RhdGVDaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgLy8gICAgIGl0ZW0uZGlzYWJsZWQgPSB0cmVlSXRlbS5kaXNhYmxlZDtcclxuICAvLyAgIH07XHJcblxyXG4gIC8vICAgZXZlbnRzLnB1c2godHJlZUl0ZW0ub24oJ2VuYWJsZScsIG9uU3RhdGVDaGFuZ2UpKTtcclxuICAvLyAgIGV2ZW50cy5wdXNoKHRyZWVJdGVtLm9uKCdkaXNhYmxlJywgb25TdGF0ZUNoYW5nZSkpO1xyXG5cclxuICAvLyAgIGxldCBvbk5hbWVTZXQgPSBmdW5jdGlvbiAobmFtZSkge1xyXG4gIC8vICAgICBpdGVtLnRleHQgPSBuYW1lO1xyXG4gIC8vICAgfTtcclxuICAvLyAgIGV2ZW50cy5wdXNoKGVudGl0eS5vbignbmFtZTpzZXQnLCBvbk5hbWVTZXQpKTtcclxuXHJcbiAgLy8gICAvLyBpY29uXHJcbiAgLy8gICBsZXQgY29tcG9uZW50cyA9IE9iamVjdC5rZXlzKGVudGl0eS5nZXQoJ2NvbXBvbmVudHMnKSk7XHJcbiAgLy8gICBmb3IgKGxldCBjID0gMDsgYyA8IGNvbXBvbmVudHMubGVuZ3RoOyBjKyspXHJcbiAgLy8gICAgIGl0ZW0uY2xhc3MuYWRkKCdjLScgKyBjb21wb25lbnRzW2NdKTtcclxuXHJcbiAgLy8gICBsZXQgb25Db250ZXh0TWVudSA9IGZ1bmN0aW9uIChldnQpIHtcclxuICAvLyAgICAgbGV0IG9wZW5uZWQgPSBlZGl0b3IuY2FsbCgnZW50aXRpZXM6Y29udGV4dG1lbnU6b3BlbicsIGVudGl0eSwgZXZ0LmNsaWVudFgsIGV2dC5jbGllbnRZKTtcclxuXHJcbiAgLy8gICAgIGlmIChvcGVubmVkKSB7XHJcbiAgLy8gICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgLy8gICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gIC8vICAgICB9XHJcbiAgLy8gICB9O1xyXG5cclxuICAvLyAgIGxldCBvbkRibENsaWNrID0gZnVuY3Rpb24gKGV2dCkge1xyXG4gIC8vICAgICBzZWFyY2gudmFsdWUgPSAnJztcclxuICAvLyAgICAgZWRpdG9yLmNhbGwoJ3NlbGVjdG9yOnNldCcsICdlbnRpdHknLCBbZW50aXR5XSk7XHJcblxyXG4gIC8vICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgLy8gICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIC8vICAgfTtcclxuXHJcbiAgLy8gICBpdGVtLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY29udGV4dG1lbnUnLCBvbkNvbnRleHRNZW51KTtcclxuICAvLyAgIGl0ZW0uZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdkYmxjbGljaycsIG9uRGJsQ2xpY2spO1xyXG5cclxuICAvLyAgIGV2ZW50cy5wdXNoKGl0ZW0ub25jZSgnZGVzdHJveScsIGZ1bmN0aW9uICgpIHtcclxuICAvLyAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBldmVudHMubGVuZ3RoOyBpKyspXHJcbiAgLy8gICAgICAgZXZlbnRzW2ldLnVuYmluZCgpO1xyXG4gIC8vICAgICBldmVudHMgPSBudWxsO1xyXG5cclxuICAvLyAgICAgaXRlbS5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51Jywgb25Db250ZXh0TWVudSk7XHJcbiAgLy8gICAgIGl0ZW0uZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdkYmxjbGljaycsIG9uRGJsQ2xpY2spO1xyXG4gIC8vICAgfSkpO1xyXG5cclxuICAvLyAgIGV2ZW50cy5wdXNoKHRyZWVJdGVtLm9uY2UoJ2Rlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XHJcbiAgLy8gICAgIC8vIGlmIGVudGl0eSByZW1vdmVkLCBwZXJmb3JtIHNlYXJjaCBhZ2FpblxyXG4gIC8vICAgICBwZXJmb3JtU2VhcmNoKCk7XHJcbiAgLy8gICB9KSk7XHJcblxyXG4gIC8vICAgcmV0dXJuIGl0ZW07XHJcbiAgLy8gfTtcclxuXHJcblxyXG59IiwiaW1wb3J0IHsgUGFuZWwsIEJ1dHRvbiwgVG9vbHRpcCwgVHJlZSwgVHJlZUl0ZW0gfSBmcm9tICcuLi8uLi91aSc7XHJcbmltcG9ydCB7IFZlcnlFbmdpbmUgfSBmcm9tICcuLi8uLi9lbmdpbmUnO1xyXG5pbXBvcnQgeyBIaWVyYXJjaHlTZWFyY2ggfSBmcm9tICcuL2hpZXJhcmNoeS1zZWFyY2gnO1xyXG5pbXBvcnQgeyBIaWVyYXJjaHlNZW51IH0gZnJvbSAnLi9oaWVyYXJjaHktbWVudSc7XHJcbmltcG9ydCB7IEhpZXJhcmNoeUNvbnRleHRNZW51IH0gZnJvbSAnLi9oaWVyYXJjaHktY29udGV4dC1tZW51JztcclxuaW1wb3J0IHsgSGllcmFyY2h5UGFuZWwgfSBmcm9tICcuL2hpZXJhcmNoeS1wYW5lbCc7XHJcblxyXG5leHBvcnQgY2xhc3MgSGllcmFyY2h5IHtcclxuXHJcbiAgLy8gcHVibGljIGhpZXJhcmNoeU1haW46IFBhbmVsO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcbiAgICAvLyB0aGlzLmhpZXJhcmNoeU1haW4gPSBuZXcgUGFuZWwoKTtcclxuICAgIC8vIHRoaXMuaGllcmFyY2h5TWFpbi5jbGFzcyEuYWRkKCdoaWVyYXJjaHktY29udHJvbHMnKTtcclxuICAgIC8vIHRoaXMuaGllcmFyY2h5TWFpbi5wYXJlbnQgPSBWZXJ5RW5naW5lLmhpZXJhcmNoeVBhbmVsO1xyXG4gICAgLy8gVmVyeUVuZ2luZS5oaWVyYXJjaHlQYW5lbC5oZWFkZXJBcHBlbmQodGhpcy5oaWVyYXJjaHlNYWluKTtcclxuICAgIC8vIC8vIGNvbnNvbGUubG9nKCdoaWVyYXJjaHktY29udHJvbHMnKTtcclxuXHJcbiAgICAvLyAvLyBjb250cm9scyBkZWxldGUgKEJ1dHRvbilcclxuICAgIC8vIGxldCBidG5EZWxldGU6IEJ1dHRvbiA9IG5ldyBCdXR0b24oJyYjNTc2MzY7Jyk7XHJcbiAgICAvLyBidG5EZWxldGUuY2xhc3MhLmFkZCgnZGVsZXRlJyk7XHJcbiAgICAvLyBidG5EZWxldGUuc3R5bGUhLmZvbnRXZWlnaHQgPSAnMjAwJztcclxuICAgIC8vIGJ0bkRlbGV0ZS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyAgIGxldCB0eXBlID0gZWRpdG9yLmNhbGwoJ3NlbGVjdG9yOnR5cGUnKTtcclxuICAgIC8vICAgaWYgKHR5cGUgIT09ICdlbnRpdHknKVxyXG4gICAgLy8gICAgIHJldHVybjtcclxuICAgIC8vICAgZWRpdG9yLmNhbGwoJ2VudGl0aWVzOmRlbGV0ZScsIGVkaXRvci5jYWxsKCdzZWxlY3RvcjppdGVtcycpKTtcclxuICAgIC8vIH0pO1xyXG4gICAgLy8gdGhpcy5oaWVyYXJjaHlNYWluLmFwcGVuZChidG5EZWxldGUpO1xyXG5cclxuICAgIC8vIGxldCB0b29sdGlwRGVsZXRlID0gVG9vbHRpcC5hdHRhY2goe1xyXG4gICAgLy8gICB0YXJnZXQ6IGJ0bkRlbGV0ZS5lbGVtZW50ISxcclxuICAgIC8vICAgdGV4dDogJ+WIoOmZpCcsXHJcbiAgICAvLyAgIGFsaWduOiAndG9wJyxcclxuICAgIC8vICAgcm9vdDogVmVyeUVuZ2luZS5yb290UGFuZWxcclxuICAgIC8vIH0pO1xyXG4gICAgLy8gdG9vbHRpcERlbGV0ZS5jbGFzcyEuYWRkKCdpbm5hY3RpdmUnKTtcclxuXHJcbiAgICAvLyAvLyBjb250cm9scyBkdXBsaWNhdGVcclxuICAgIC8vIGxldCBidG5EdXBsaWNhdGU6IEJ1dHRvbiA9IG5ldyBCdXR0b24oJyYjNTc2Mzg7Jyk7XHJcbiAgICAvLyBidG5EdXBsaWNhdGUuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgLy8gYnRuRHVwbGljYXRlLmNsYXNzIS5hZGQoJ2R1cGxpY2F0ZScpO1xyXG4gICAgLy8gYnRuRHVwbGljYXRlLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgIC8vICAgbGV0IHR5cGUgPSBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6dHlwZScpO1xyXG4gICAgLy8gICBsZXQgaXRlbXMgPSBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6aXRlbXMnKTtcclxuXHJcbiAgICAvLyAgIGlmICh0eXBlID09PSAnZW50aXR5JyAmJiBpdGVtcy5sZW5ndGgpXHJcbiAgICAvLyAgICAgZWRpdG9yLmNhbGwoJ2VudGl0aWVzOmR1cGxpY2F0ZScsIGl0ZW1zKTtcclxuICAgIC8vIH0pO1xyXG4gICAgLy8gdGhpcy5oaWVyYXJjaHlNYWluLmFwcGVuZChidG5EdXBsaWNhdGUpO1xyXG5cclxuICAgIC8vIGxldCB0b29sdGlwRHVwbGljYXRlID0gVG9vbHRpcC5hdHRhY2goe1xyXG4gICAgLy8gICB0YXJnZXQ6IGJ0bkR1cGxpY2F0ZS5lbGVtZW50ISxcclxuICAgIC8vICAgdGV4dDogJ+WkjeWIticsXHJcbiAgICAvLyAgIGFsaWduOiAndG9wJyxcclxuICAgIC8vICAgcm9vdDogVmVyeUVuZ2luZS5yb290UGFuZWxcclxuICAgIC8vIH0pO1xyXG4gICAgLy8gdG9vbHRpcER1cGxpY2F0ZS5jbGFzcyEuYWRkKCdpbm5hY3RpdmUnKTtcclxuXHJcbiAgICAvLyAvLyBUT0RPOiBNZW51XHJcbiAgICAvLyAvLyBsZXQgbWVudUVudGl0aWVzID0gdWkuTWVudS5mcm9tRGF0YShlZGl0b3IuY2FsbCgnbWVudTplbnRpdGllczpuZXcnKSk7XHJcbiAgICAvLyAvLyByb290LmFwcGVuZChtZW51RW50aXRpZXMpO1xyXG5cclxuICAgIC8vIC8vIGNvbnRyb2xzIGFkZFxyXG4gICAgLy8gbGV0IGJ0bkFkZDogQnV0dG9uID0gbmV3IEJ1dHRvbignJiM1NzYzMjsnKTtcclxuICAgIC8vIGJ0bkFkZC5jbGFzcyEuYWRkKCdhZGQnKTtcclxuICAgIC8vIGJ0bkFkZC5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyAgIC8vIG1lbnVFbnRpdGllcy5vcGVuID0gdHJ1ZTtcclxuICAgIC8vICAgLy8gbGV0IHJlY3QgPSBidG5BZGQuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIC8vICAgLy8gbWVudUVudGl0aWVzLnBvc2l0aW9uKHJlY3QubGVmdCwgcmVjdC50b3ApO1xyXG4gICAgLy8gfSk7XHJcbiAgICAvLyB0aGlzLmhpZXJhcmNoeU1haW4uYXBwZW5kKGJ0bkFkZCk7XHJcblxyXG4gICAgLy8gVG9vbHRpcC5hdHRhY2goe1xyXG4gICAgLy8gICB0YXJnZXQ6IGJ0bkFkZC5lbGVtZW50ISxcclxuICAgIC8vICAgdGV4dDogJ+a3u+WKoCcsXHJcbiAgICAvLyAgIGFsaWduOiAndG9wJyxcclxuICAgIC8vICAgcm9vdDogVmVyeUVuZ2luZS5yb290UGFuZWxcclxuICAgIC8vIH0pO1xyXG5cclxuICAgIC8vIGhpZXJhcmNoeSBwYW5lbFxyXG4gICAgbGV0IGhpZXJhcmNoeU1haW5QYW5lbCA9IG5ldyBIaWVyYXJjaHlQYW5lbCgpO1xyXG5cclxuICAgIGxldCBjb250ZXh0TWVudSA9IG5ldyBIaWVyYXJjaHlDb250ZXh0TWVudSgpO1xyXG5cclxuICAgIC8vIOaQnOe0ouWMuuWfn++8mlNlYXJjaCBGaWVsZFxyXG4gICAgbGV0IHNlYXJjaEZpZWxkID0gbmV3IEhpZXJhcmNoeVNlYXJjaCgpO1xyXG5cclxuICAgIC8vIOWFqOWxgOiPnOWNlVxyXG4gICAgbGV0IGNvbnRleHRNZW51TG9nbyA9IG5ldyBIaWVyYXJjaHlNZW51KCk7XHJcblxyXG4gICAgLy8gdGhpcy5pbml0KCk7XHJcblxyXG4gIH1cclxuXHJcbiAgcHVibGljIGluaXQoKTogdm9pZCB7XHJcbiAgICAvLyBsZWZ0IGNvbnRyb2xcclxuICAgIC8vIGhpZXJhcmNoeSBpbmRleFxyXG4gICAgbGV0IHVpSXRlbUluZGV4ID0ge307XHJcbiAgICBsZXQgYXdhaXRpbmdQYXJlbnQgPSB7fTtcclxuICAgIGxldCBwYW5lbDogUGFuZWwgPSBWZXJ5RW5naW5lLmhpZXJhcmNoeVBhbmVsO1xyXG5cclxuICAgIGxldCBoaWVyYXJjaHk6IFRyZWUgPSBuZXcgVHJlZSgpO1xyXG4gICAgVmVyeUVuZ2luZS5oaWVyYXJjaHlUcmVlID0gaGllcmFyY2h5O1xyXG5cclxuICAgIC8vIFRPRE86IGhpZXJhcmNoeeadg+mZkOeuoeeQhu+8jOacieS6m+S6uuWPr+eci+S4jeWPr+e8lui+ke+8m1xyXG4gICAgLy8gaGllcmFyY2h5LmFsbG93UmVuYW1pbmcgPSBlZGl0b3IuY2FsbCgncGVybWlzc2lvbnM6d3JpdGUnKTtcclxuICAgIGhpZXJhcmNoeS5kcmFnZ2FibGUgPSBoaWVyYXJjaHkuYWxsb3dSZW5hbWluZztcclxuICAgIGhpZXJhcmNoeS5jbGFzcyEuYWRkKCdoaWVyYXJjaHknKTtcclxuICAgIHBhbmVsLmFwcGVuZChoaWVyYXJjaHkpO1xyXG5cclxuICAgIGxldCByZXNpemVRdWV1ZWQgPSBmYWxzZTtcclxuICAgIGxldCByZXNpemVUcmVlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICByZXNpemVRdWV1ZWQgPSBmYWxzZTtcclxuICAgICAgaGllcmFyY2h5LmVsZW1lbnQhLnN0eWxlLndpZHRoID0gJyc7XHJcbiAgICAgIGhpZXJhcmNoeS5lbGVtZW50IS5zdHlsZS53aWR0aCA9IChwYW5lbC5pbm5lckVsZW1lbnQhLnNjcm9sbFdpZHRoIC0gNSkgKyAncHgnO1xyXG4gICAgfTtcclxuICAgIGxldCByZXNpemVRdWV1ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgaWYgKHJlc2l6ZVF1ZXVlZCkgcmV0dXJuO1xyXG4gICAgICByZXNpemVRdWV1ZWQgPSB0cnVlO1xyXG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVzaXplVHJlZSk7XHJcbiAgICB9O1xyXG4gICAgcGFuZWwub24oJ3Jlc2l6ZScsIHJlc2l6ZVF1ZXVlKTtcclxuICAgIGhpZXJhcmNoeS5vbignb3BlbicsIHJlc2l6ZVF1ZXVlKTtcclxuICAgIGhpZXJhcmNoeS5vbignY2xvc2UnLCByZXNpemVRdWV1ZSk7XHJcbiAgICBzZXRJbnRlcnZhbChyZXNpemVRdWV1ZSwgMTAwMCk7XHJcblxyXG4gICAgLy8gcmV0dXJuIGhpZXJhcmNoeVxyXG4gICAgZWRpdG9yLm1ldGhvZCgnZW50aXRpZXM6aGllcmFyY2h5JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICByZXR1cm4gaGllcmFyY2h5O1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gbGlzdCBpdGVtIHNlbGVjdGVkXHJcbiAgICBoaWVyYXJjaHkub24oJ3NlbGVjdCcsIGZ1bmN0aW9uIChpdGVtOiBUcmVlSXRlbSkge1xyXG4gICAgICAvLyBvcGVuIGl0ZW1zIHRpbGwgcGFyZW50XHJcbiAgICAgIGxldCBwYXJlbnQgPSBpdGVtLnBhcmVudDtcclxuICAgICAgd2hpbGUgKHBhcmVudCAmJiBwYXJlbnQgaW5zdGFuY2VvZiBUcmVlSXRlbSkge1xyXG4gICAgICAgIHBhcmVudC5vcGVuID0gdHJ1ZTtcclxuICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50O1xyXG4gICAgICB9XHJcbiAgICAgIC8vIGZvY3VzXHJcbiAgICAgIGl0ZW0uZWxlbWVudFRpdGxlLmZvY3VzKCk7XHJcbiAgICAgIC8vIGFkZCBzZWxlY3Rpb25cclxuICAgICAgLy8gVE9ET1xyXG4gICAgICBjb25zb2xlLmxvZygnc2VsZWN0b3I6YWRkIGVudGl0eScpO1xyXG4gICAgICAvLyBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6YWRkJywgJ2VudGl0eScsIGl0ZW0uZW50aXR5KTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIGxpc3QgaXRlbSBkZXNlbGVjdGVkXHJcbiAgICBoaWVyYXJjaHkub24oJ2Rlc2VsZWN0JywgZnVuY3Rpb24gKGl0ZW06IFRyZWVJdGVtKSB7XHJcbiAgICAgIC8vIFRPRE86XHJcbiAgICAgIGNvbnNvbGUubG9nKCdzZWxlY3RvcjpyZW1vdmUgZW50aXR5Jyk7XHJcbiAgICAgIC8vIGVkaXRvci5jYWxsKCdzZWxlY3RvcjpyZW1vdmUnLCBpdGVtLmVudGl0eSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBzY3JvbGxpbmcgb24gZHJhZ1xyXG4gICAgbGV0IGRyYWdTY3JvbGwgPSAwO1xyXG4gICAgbGV0IGRyYWdUaW1lcjogTm9kZUpTLlRpbWVyIHwgbnVsbCA9IG51bGw7O1xyXG4gICAgbGV0IGRyYWdMYXN0RXZ0O1xyXG4gICAgbGV0IGRyYWdFdnQgPSBmdW5jdGlvbiAoZXZ0OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgIGlmICghaGllcmFyY2h5Ll9kcmFnZ2luZykge1xyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwoTnVtYmVyKGRyYWdUaW1lcikpO1xyXG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkcmFnRXZ0KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgbGV0IHJlY3QgPSBwYW5lbC5pbm5lckVsZW1lbnQhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgICAgaWYgKChldnQuY2xpZW50WSAtIHJlY3QudG9wKSA8IDMyICYmIHBhbmVsLmlubmVyRWxlbWVudCEuc2Nyb2xsVG9wID4gMCkge1xyXG4gICAgICAgIGRyYWdTY3JvbGwgPSAtMTtcclxuICAgICAgfSBlbHNlIGlmICgocmVjdC5ib3R0b20gLSBldnQuY2xpZW50WSkgPCAzMiAmJiAocGFuZWwuaW5uZXJFbGVtZW50IS5zY3JvbGxIZWlnaHQgLSAocmVjdC5oZWlnaHQgKyBwYW5lbC5pbm5lckVsZW1lbnQhLnNjcm9sbFRvcCkpID4gMCkge1xyXG4gICAgICAgIGRyYWdTY3JvbGwgPSAxO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRyYWdTY3JvbGwgPSAwO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIGhpZXJhcmNoeS5vbignZHJhZ3N0YXJ0JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICBkcmFnVGltZXIgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKGRyYWdTY3JvbGwgPT09IDApXHJcbiAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIHBhbmVsLmlubmVyRWxlbWVudCEuc2Nyb2xsVG9wICs9IGRyYWdTY3JvbGwgKiA4O1xyXG4gICAgICAgIGhpZXJhcmNoeS5fZHJhZ092ZXIgPSBudWxsO1xyXG4gICAgICAgIGhpZXJhcmNoeS5fdXBkYXRlRHJhZ0hhbmRsZSgpO1xyXG4gICAgICB9LCAxMDAwIC8gNjApO1xyXG5cclxuICAgICAgZHJhZ1Njcm9sbCA9IDA7XHJcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkcmFnRXZ0LCBmYWxzZSk7XHJcblxyXG4gICAgICAvLyBUT0RPOlxyXG4gICAgICBjb25zb2xlLmxvZygnZ2V0IGRyYWcgVHJlZUl0ZW0gZW50aXR5IHJlc291cmNlSWQnKTtcclxuICAgICAgLy8gbGV0IHJlc291cmNlSWQgPSBoaWVyYXJjaHkuX2RyYWdJdGVtc1swXS5lbnRpdHkuZ2V0KCdyZXNvdXJjZV9pZCcpO1xyXG4gICAgICAvLyBlZGl0b3IuY2FsbCgnZHJvcDpzZXQnLCAnZW50aXR5JywgeyByZXNvdXJjZV9pZDogcmVzb3VyY2VJZCB9KTtcclxuICAgICAgLy8gZWRpdG9yLmNhbGwoJ2Ryb3A6YWN0aXZhdGUnLCB0cnVlKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGhpZXJhcmNoeS5vbignZHJhZ2VuZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgZWRpdG9yLmNhbGwoJ2Ryb3A6YWN0aXZhdGUnLCBmYWxzZSk7XHJcbiAgICAgIGVkaXRvci5jYWxsKCdkcm9wOnNldCcpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gVE9ET1xyXG4gICAgLy8gbGV0IHRhcmdldCA9IGVkaXRvci5jYWxsKCdkcm9wOnRhcmdldCcsIHtcclxuICAgIC8vICAgcmVmOiBwYW5lbC5pbm5lckVsZW1lbnQsXHJcbiAgICAvLyAgIHR5cGU6ICdlbnRpdHknLFxyXG4gICAgLy8gICBob2xlOiB0cnVlLFxyXG4gICAgLy8gICBwYXNzVGhyb3VnaDogdHJ1ZVxyXG4gICAgLy8gfSk7XHJcbiAgICAvLyB0YXJnZXQuZWxlbWVudC5zdHlsZS5vdXRsaW5lID0gJ25vbmUnO1xyXG5cclxuICAgIGxldCBjbGFzc0xpc3QgPSBbJ3RyZWUtaXRlbS1lbnRpdHknLCAnZW50aXR5LWlkLScgKyAnaWRzLXRvLWJlLWRvbmUnLCAnYy1tb2RlbCddO1xyXG4gICAgLy8gaWYgKGlzUm9vdCkge1xyXG4gICAgLy8gICBjbGFzc0xpc3QucHVzaCgndHJlZS1pdGVtLXJvb3QnKTtcclxuICAgIC8vIH1cclxuXHJcbiAgICBsZXQgcm9vdEVsZW1lbnQgPSBuZXcgVHJlZUl0ZW0oe1xyXG4gICAgICB0ZXh0OiAnU2NlbmUnLFxyXG4gICAgICBjbGFzc0xpc3Q6IGNsYXNzTGlzdFxyXG4gICAgfSk7XHJcbiAgICByb290RWxlbWVudC5jbGFzcyEucmVtb3ZlKCdjLW1vZGVsJyk7XHJcbiAgICBoaWVyYXJjaHkuZWxlbWVudCEuYXBwZW5kQ2hpbGQocm9vdEVsZW1lbnQuZWxlbWVudCEpO1xyXG4gICAgaGllcmFyY2h5LmVtaXQoJ2FwcGVuZCcsIHJvb3RFbGVtZW50KTtcclxuXHJcbiAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgMTA7IGkrKykge1xyXG4gICAgICBsZXQgZWxlbWVudDEgPSBuZXcgVHJlZUl0ZW0oe1xyXG4gICAgICAgIHRleHQ6ICfniankvZPlkI0nICsgKGkgKyAxKSxcclxuICAgICAgICBjbGFzc0xpc3Q6IGNsYXNzTGlzdFxyXG4gICAgICB9KTtcclxuICAgICAgZWRpdG9yLmVtaXQoJ2VudGl0aWVzOmFkZCcsIGVsZW1lbnQxKTtcclxuICAgICAgaGllcmFyY2h5LmVtaXQoJ2FwcGVuZCcsIGVsZW1lbnQxKTtcclxuICAgICAgcm9vdEVsZW1lbnQuYXBwZW5kKGVsZW1lbnQxKTtcclxuXHJcbiAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgNTsgaysrKSB7XHJcbiAgICAgICAgbGV0IGVsZW1lbnQyID0gbmV3IFRyZWVJdGVtKHtcclxuICAgICAgICAgIHRleHQ6ICflrZDniankvZPlkI0nICsgKGsgKyAxKSxcclxuICAgICAgICAgIGNsYXNzTGlzdDogY2xhc3NMaXN0XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZWRpdG9yLmVtaXQoJ2VudGl0aWVzOmFkZCcsIGVsZW1lbnQyKTtcclxuICAgICAgICBoaWVyYXJjaHkuZW1pdCgnYXBwZW5kJywgZWxlbWVudDIpO1xyXG4gICAgICAgIGVsZW1lbnQxLmFwcGVuZChlbGVtZW50Mik7XHJcbiAgICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCA1OyB4KyspIHtcclxuICAgICAgICAgIGxldCBlbGVtZW50MyA9IG5ldyBUcmVlSXRlbSh7XHJcbiAgICAgICAgICAgIHRleHQ6ICfkuoznuqflrZDniankvZMnICsgKHggKyAxKSxcclxuICAgICAgICAgICAgY2xhc3NMaXN0OiBjbGFzc0xpc3RcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgZWRpdG9yLmVtaXQoJ2VudGl0aWVzOmFkZCcsIGVsZW1lbnQzKTtcclxuICAgICAgICAgIGhpZXJhcmNoeS5lbWl0KCdhcHBlbmQnLCBlbGVtZW50Myk7XHJcblxyXG4gICAgICAgICAgZWxlbWVudDIuYXBwZW5kKGVsZW1lbnQzKTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZWxlbWVudC5hcHBlbmQoKTtcclxuXHJcbiAgICBcclxuXHJcbiAgfVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxufSIsImV4cG9ydCAqIGZyb20gJy4vaGllcmFyY2h5JztcclxuZXhwb3J0ICogZnJvbSAnLi9oaWVyYXJjaHktc2VhcmNoJztcclxuZXhwb3J0ICogZnJvbSAnLi9oaWVyYXJjaHktbWVudSc7IiwiZXhwb3J0IGNsYXNzIEhvdGtleXMge1xyXG5cclxuICBwdWJsaWMgc3RhdGljIGN0cmw6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBwdWJsaWMgc3RhdGljIHNoaWZ0OiBib29sZWFuID0gZmFsc2U7XHJcbiAgcHVibGljIHN0YXRpYyBhbHQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgcHJpdmF0ZSBob3RrZXlzOiB7IFtrZXk6IHN0cmluZ106IEhvdEtleUFyZ3MgfSA9IHt9O1xyXG4gIHByaXZhdGUga2V5SW5kZXg6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nW10gfSA9IHt9O1xyXG4gIC8vIHByaXZhdGUga2V5c0Rvd24gPSB7fTtcclxuXHJcbiAgcHJpdmF0ZSBpc01hYzogYm9vbGVhbiA9IG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignTWFjIE9TIFgnKSAhPT0gLTE7XHJcblxyXG4gIHByaXZhdGUga2V5QnlLZXlDb2RlOiB7IFtrZXk6IG51bWJlcl06IHN0cmluZyB9ID0ge307XHJcbiAgcHJpdmF0ZSBrZXlCeUNvZGU6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0gPSB7fTtcclxuXHJcbiAgcHJpdmF0ZSBrZXlNYXA6IHsgW2tleTogc3RyaW5nXTogeyBrZXlDb2RlOiBudW1iZXIsIGNvZGU6IHN0cmluZyB8IHN0cmluZ1tdIH0gfSA9IHt9O1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmtleU1hcEluaXQoKTtcclxuXHJcbiAgICBsZXQgc2VsZiA9IHRoaXM7XHJcblxyXG4gICAgZWRpdG9yLm1ldGhvZCgnaG90a2V5OnJlZ2lzdGVyJywgZnVuY3Rpb24gKG5hbWU6IHN0cmluZywgYXJnczogSG90S2V5QXJncykge1xyXG4gICAgICBzZWxmLmhvdGtleXNbbmFtZV0gPSBhcmdzO1xyXG5cclxuICAgICAgLy8ga2V5cyBsaXN0XHJcbiAgICAgIGxldCBrZXlzOiBzdHJpbmdbXSA9IFthcmdzLmN0cmwgPyAnMScgOiAnMCcsIGFyZ3MuYWx0ID8gJzEnIDogJzAnLCBhcmdzLnNoaWZ0ID8gJzEnIDogJzAnXTtcclxuXHJcbiAgICAgIC8vIG1hcCBrZXlDb2RlIHRvIGtleVxyXG4gICAgICBpZiAodHlwZW9mIChhcmdzLmtleSkgPT09ICdudW1iZXInKVxyXG4gICAgICAgIGFyZ3Mua2V5ID0gc2VsZi5rZXlCeUtleUNvZGVbYXJncy5rZXldO1xyXG5cclxuICAgICAgLy8gdW5rbm93biBrZXlcclxuICAgICAgaWYgKCFhcmdzLmtleSkge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+acquefpeeahGhvdGtleXM6ICcgKyBuYW1lICsgJywgJyArIGFyZ3Mua2V5KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGtleXMucHVzaChhcmdzLmtleSk7XHJcblxyXG4gICAgICBhcmdzLmluZGV4ID0ga2V5cy5qb2luKCcrJyk7XHJcblxyXG4gICAgICBpZiAoIXNlbGYua2V5SW5kZXhbYXJncy5pbmRleF0pXHJcbiAgICAgICAgc2VsZi5rZXlJbmRleFthcmdzLmluZGV4XSA9IFtdO1xyXG5cclxuICAgICAgc2VsZi5rZXlJbmRleFthcmdzLmluZGV4XS5wdXNoKG5hbWUpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgZWRpdG9yLm1ldGhvZCgnaG90a2V5OnVucmVnaXN0ZXInLCBmdW5jdGlvbiAobmFtZTogc3RyaW5nKSB7XHJcbiAgICAgIGxldCBob3RrZXk6IEhvdEtleUFyZ3MgPSBzZWxmLmhvdGtleXNbbmFtZV07XHJcbiAgICAgIGlmICghaG90a2V5KSByZXR1cm47XHJcblxyXG4gICAgICBpZiAoc2VsZi5rZXlJbmRleFtob3RrZXkuaW5kZXghXS5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICBkZWxldGUgc2VsZi5rZXlJbmRleFtob3RrZXkuaW5kZXghXTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzZWxmLmtleUluZGV4W2hvdGtleS5pbmRleCFdLnNwbGljZShzZWxmLmtleUluZGV4W2hvdGtleS5pbmRleCFdLmluZGV4T2YobmFtZSksIDEpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBkZWxldGUgc2VsZi5ob3RrZXlzW25hbWVdO1xyXG4gICAgfSk7XHJcblxyXG5cclxuICAgIGVkaXRvci5tZXRob2QoJ2hvdGtleTpzaGlmdCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmV0dXJuIEhvdGtleXMuc2hpZnQ7XHJcbiAgICB9KTtcclxuXHJcbiAgICBlZGl0b3IubWV0aG9kKCdob3RrZXk6Y3RybCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmV0dXJuIEhvdGtleXMuY3RybDtcclxuICAgIH0pO1xyXG5cclxuICAgIGVkaXRvci5tZXRob2QoJ2hvdGtleTphbHQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHJldHVybiBIb3RrZXlzLmFsdDtcclxuICAgIH0pO1xyXG5cclxuICAgIGxldCB1cGRhdGVNb2RpZmllcktleXM6IChldnQ6IEV2ZW50KSA9PiB2b2lkID0gZnVuY3Rpb24gKGV2dDogRXZlbnQpOiB2b2lkIHtcclxuICAgICAgaWYgKGV2dCBpbnN0YW5jZW9mIEtleWJvYXJkRXZlbnQgfHwgZXZ0IGluc3RhbmNlb2YgTW91c2VFdmVudCkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUud2FybihldnQpO1xyXG4gICAgICAgIEhvdGtleXMuc2hpZnQgPSBldnQuc2hpZnRLZXk7XHJcbiAgICAgICAgSG90a2V5cy5jdHJsID0gZXZ0LmN0cmxLZXkgfHwgZXZ0Lm1ldGFLZXk7XHJcbiAgICAgICAgSG90a2V5cy5hbHQgPSBldnQuYWx0S2V5O1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgZWRpdG9yLm1ldGhvZCgnaG90a2V5OnVwZGF0ZU1vZGlmaWVyS2V5cycsIHVwZGF0ZU1vZGlmaWVyS2V5cyk7XHJcblxyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZ0OiBLZXlib2FyZEV2ZW50KSB7XHJcbiAgICAgIGlmIChldnQudGFyZ2V0KSB7XHJcbiAgICAgICAgbGV0IHRhZzogc3RyaW5nID0gKDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0KS50YWdOYW1lO1xyXG4gICAgICAgIGlmICgvKGlucHV0KXwodGV4dGFyZWEpL2kudGVzdCh0YWcpICYmICEoPEhUTUxFbGVtZW50PmV2dC50YXJnZXQpLmNsYXNzTGlzdC5jb250YWlucygnaG90a2V5cycpKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB1cGRhdGVNb2RpZmllcktleXMoZXZ0KTtcclxuXHJcbiAgICAgIGxldCBrZXk6IHN0cmluZyA9IGV2dC5jb2RlID8gc2VsZi5rZXlCeUNvZGVbZXZ0LmNvZGVdIDogc2VsZi5rZXlCeUtleUNvZGVbZXZ0LmtleUNvZGVdO1xyXG5cclxuICAgICAgaWYgKGV2dC5rZXlDb2RlID09PSA5MiB8fCBldnQua2V5Q29kZSA9PT0gOTMpXHJcbiAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgbGV0IGluZGV4OiBzdHJpbmcgPSBbSG90a2V5cy5jdHJsID8gJzEnIDogJzAnLCBIb3RrZXlzLmFsdCA/ICcxJyA6ICcwJywgSG90a2V5cy5zaGlmdCA/ICcxJyA6ICcwJywga2V5XS5qb2luKCcrJyk7XHJcblxyXG4gICAgICBpZiAoc2VsZi5rZXlJbmRleFtpbmRleF0pIHtcclxuICAgICAgICBsZXQgc2tpcFByZXZlbnREZWZhdWx0OiBib29sZWFuID0gZmFsc2U7XHJcbiAgICAgICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IHNlbGYua2V5SW5kZXhbaW5kZXhdLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICBpZiAoIXNraXBQcmV2ZW50RGVmYXVsdCAmJiBzZWxmLmhvdGtleXNbc2VsZi5rZXlJbmRleFtpbmRleF1baV1dLnNraXBQcmV2ZW50RGVmYXVsdClcclxuICAgICAgICAgICAgc2tpcFByZXZlbnREZWZhdWx0ID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICBzZWxmLmhvdGtleXNbc2VsZi5rZXlJbmRleFtpbmRleF1baV1dLmNhbGxiYWNrKGV2dCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghc2tpcFByZXZlbnREZWZhdWx0KVxyXG4gICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIH1cclxuICAgIH0sIGZhbHNlKTtcclxuXHJcbiAgICAvLyBSZXR1cm5zIEN0cmwgb3IgQ21kIGZvciBNYWNcclxuICAgIGVkaXRvci5tZXRob2QoJ2hvdGtleTpjdHJsOnN0cmluZycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmV0dXJuIHNlbGYuaXNNYWMgPyAnQ21kJyA6ICdDdHJsJztcclxuICAgIH0pO1xyXG5cclxuXHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB1cGRhdGVNb2RpZmllcktleXMsIGZhbHNlKTtcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB1cGRhdGVNb2RpZmllcktleXMsIGZhbHNlKTtcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdXBkYXRlTW9kaWZpZXJLZXlzLCBmYWxzZSk7XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB1cGRhdGVNb2RpZmllcktleXMsIGZhbHNlKTtcclxuXHJcblxyXG5cclxuICB9XHJcblxyXG5cclxuICBwcml2YXRlIGtleU1hcEluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmtleU1hcCA9IHtcclxuICAgICAgJ2JhY2tzcGFjZSc6IHtcclxuICAgICAgICBrZXlDb2RlOiA4LFxyXG4gICAgICAgIGNvZGU6ICdCYWNrc3BhY2UnXHJcbiAgICAgIH0sXHJcbiAgICAgICd0YWInOiB7XHJcbiAgICAgICAga2V5Q29kZTogOSxcclxuICAgICAgICBjb2RlOiAnVGFiJyxcclxuICAgICAgfSxcclxuICAgICAgJ2VudGVyJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDEzLFxyXG4gICAgICAgIGNvZGU6IFsnZW50ZXInLCAnTnVtcGFkRW50ZXInLCAnRW50ZXInXSxcclxuICAgICAgfSxcclxuICAgICAgJ3NoaWZ0Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDE2LFxyXG4gICAgICAgIGNvZGU6IFsnU2hpZnRMZWZ0JywgJ1NoaWZ0UmlnaHQnXSxcclxuICAgICAgfSxcclxuICAgICAgJ2N0cmwnOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTcsXHJcbiAgICAgICAgY29kZTogWydDdHJsTGVmdCcsICdDdHJsUmlnaHQnXSxcclxuICAgICAgfSxcclxuICAgICAgJ2FsdCc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxOCxcclxuICAgICAgICBjb2RlOiBbJ0FsdExlZnQnLCAnQWx0UmlnaHQnXSxcclxuICAgICAgfSxcclxuICAgICAgJ3BhdXNlL2JyZWFrJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDE5LFxyXG4gICAgICAgIGNvZGU6ICdQYXVzZScsXHJcbiAgICAgIH0sXHJcbiAgICAgICdjYXBzIGxvY2snOiB7XHJcbiAgICAgICAga2V5Q29kZTogMjAsXHJcbiAgICAgICAgY29kZTogJ0NhcHNMb2NrJyxcclxuICAgICAgfSxcclxuICAgICAgJ2VzYyc6IHtcclxuICAgICAgICBrZXlDb2RlOiAyNyxcclxuICAgICAgICBjb2RlOiAnRXNjYXBlJyxcclxuICAgICAgfSxcclxuICAgICAgJ3NwYWNlJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDMyLFxyXG4gICAgICAgIGNvZGU6ICdTcGFjZScsXHJcbiAgICAgIH0sXHJcbiAgICAgICdwYWdlIHVwJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDMzLFxyXG4gICAgICAgIGNvZGU6ICdQYWdlVXAnXHJcbiAgICAgIH0sXHJcbiAgICAgICdwYWdlIGRvd24nOiB7XHJcbiAgICAgICAga2V5Q29kZTogMzQsXHJcbiAgICAgICAgY29kZTogJ1BhZ2VEb3duJ1xyXG4gICAgICB9LFxyXG4gICAgICAnZW5kJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDM1LFxyXG4gICAgICAgIGNvZGU6ICdFbmQnXHJcbiAgICAgIH0sXHJcbiAgICAgICdob21lJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDM2LFxyXG4gICAgICAgIGNvZGU6ICdIb21lJ1xyXG4gICAgICB9LFxyXG4gICAgICAnbGVmdCBhcnJvdyc6IHtcclxuICAgICAgICBrZXlDb2RlOiAzNyxcclxuICAgICAgICBjb2RlOiAnQXJyb3dMZWZ0J1xyXG4gICAgICB9LFxyXG4gICAgICAndXAgYXJyb3cnOiB7XHJcbiAgICAgICAga2V5Q29kZTogMzgsXHJcbiAgICAgICAgY29kZTogJ0Fycm93VXAnXHJcbiAgICAgIH0sXHJcbiAgICAgICdyaWdodCBhcnJvdyc6IHtcclxuICAgICAgICBrZXlDb2RlOiAzOSxcclxuICAgICAgICBjb2RlOiAnQXJyb3dSaWdodCdcclxuICAgICAgfSxcclxuICAgICAgJ2Rvd24gYXJyb3cnOiB7XHJcbiAgICAgICAga2V5Q29kZTogNDAsXHJcbiAgICAgICAgY29kZTogJ0Fycm93RG93bidcclxuICAgICAgfSxcclxuICAgICAgJ2luc2VydCc6IHtcclxuICAgICAgICBrZXlDb2RlOiA0NSxcclxuICAgICAgICBjb2RlOiAnSW5zZXJ0J1xyXG4gICAgICB9LFxyXG4gICAgICAnZGVsZXRlJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDQ2LFxyXG4gICAgICAgIGNvZGU6ICdEZWxldGUnXHJcbiAgICAgIH0sXHJcbiAgICAgICcwJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDQ4LFxyXG4gICAgICAgIGNvZGU6ICdEaWdpdDAnXHJcbiAgICAgIH0sXHJcbiAgICAgICcxJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDQ5LFxyXG4gICAgICAgIGNvZGU6ICdEaWdpdDEnXHJcbiAgICAgIH0sXHJcbiAgICAgICcyJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDUwLFxyXG4gICAgICAgIGNvZGU6ICdEaWdpdDInXHJcbiAgICAgIH0sXHJcbiAgICAgICczJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDUxLFxyXG4gICAgICAgIGNvZGU6ICdEaWdpdDMnXHJcbiAgICAgIH0sXHJcbiAgICAgICc0Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDUyLFxyXG4gICAgICAgIGNvZGU6ICdEaWdpdDQnXHJcbiAgICAgIH0sXHJcbiAgICAgICc1Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDUzLFxyXG4gICAgICAgIGNvZGU6ICdEaWdpdDUnXHJcbiAgICAgIH0sXHJcbiAgICAgICc2Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDU0LFxyXG4gICAgICAgIGNvZGU6ICdEaWdpdDYnXHJcbiAgICAgIH0sXHJcbiAgICAgICc3Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDU1LFxyXG4gICAgICAgIGNvZGU6ICdEaWdpdDcnXHJcbiAgICAgIH0sXHJcbiAgICAgICc4Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDU2LFxyXG4gICAgICAgIGNvZGU6ICdEaWdpdDgnXHJcbiAgICAgIH0sXHJcbiAgICAgICc5Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDU3LFxyXG4gICAgICAgIGNvZGU6ICdEaWdpdDknXHJcbiAgICAgIH0sXHJcbiAgICAgICdhJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDY1LFxyXG4gICAgICAgIGNvZGU6ICdLZXlBJ1xyXG4gICAgICB9LFxyXG4gICAgICAnYic6IHtcclxuICAgICAgICBrZXlDb2RlOiA2NixcclxuICAgICAgICBjb2RlOiAnS2V5QidcclxuICAgICAgfSxcclxuICAgICAgJ2MnOiB7XHJcbiAgICAgICAga2V5Q29kZTogNjcsXHJcbiAgICAgICAgY29kZTogJ0tleUMnXHJcbiAgICAgIH0sXHJcbiAgICAgICdkJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDY4LFxyXG4gICAgICAgIGNvZGU6ICdLZXlEJ1xyXG4gICAgICB9LFxyXG4gICAgICAnZSc6IHtcclxuICAgICAgICBrZXlDb2RlOiA2OSxcclxuICAgICAgICBjb2RlOiAnS2V5RSdcclxuICAgICAgfSxcclxuICAgICAgJ2YnOiB7XHJcbiAgICAgICAga2V5Q29kZTogNzAsXHJcbiAgICAgICAgY29kZTogJ0tleUYnXHJcbiAgICAgIH0sXHJcbiAgICAgICdnJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDcxLFxyXG4gICAgICAgIGNvZGU6ICdLZXlHJ1xyXG4gICAgICB9LFxyXG4gICAgICAnaCc6IHtcclxuICAgICAgICBrZXlDb2RlOiA3MixcclxuICAgICAgICBjb2RlOiAnS2V5SCdcclxuICAgICAgfSxcclxuICAgICAgJ2knOiB7XHJcbiAgICAgICAga2V5Q29kZTogNzMsXHJcbiAgICAgICAgY29kZTogJ0tleUknXHJcbiAgICAgIH0sXHJcbiAgICAgICdqJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDc0LFxyXG4gICAgICAgIGNvZGU6ICdLZXlKJ1xyXG4gICAgICB9LFxyXG4gICAgICAnayc6IHtcclxuICAgICAgICBrZXlDb2RlOiA3NSxcclxuICAgICAgICBjb2RlOiAnS2V5SydcclxuICAgICAgfSxcclxuICAgICAgJ2wnOiB7XHJcbiAgICAgICAga2V5Q29kZTogNzYsXHJcbiAgICAgICAgY29kZTogJ0tleUwnXHJcbiAgICAgIH0sXHJcbiAgICAgICdtJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDc3LFxyXG4gICAgICAgIGNvZGU6ICdLZXlNJ1xyXG4gICAgICB9LFxyXG4gICAgICAnbic6IHtcclxuICAgICAgICBrZXlDb2RlOiA3OCxcclxuICAgICAgICBjb2RlOiAnS2V5TidcclxuICAgICAgfSxcclxuICAgICAgJ28nOiB7XHJcbiAgICAgICAga2V5Q29kZTogNzksXHJcbiAgICAgICAgY29kZTogJ0tleU8nXHJcbiAgICAgIH0sXHJcbiAgICAgICdwJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDgwLFxyXG4gICAgICAgIGNvZGU6ICdLZXlQJ1xyXG4gICAgICB9LFxyXG4gICAgICAncSc6IHtcclxuICAgICAgICBrZXlDb2RlOiA4MSxcclxuICAgICAgICBjb2RlOiAnS2V5USdcclxuICAgICAgfSxcclxuICAgICAgJ3InOiB7XHJcbiAgICAgICAga2V5Q29kZTogODIsXHJcbiAgICAgICAgY29kZTogJ0tleVInXHJcbiAgICAgIH0sXHJcbiAgICAgICdzJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDgzLFxyXG4gICAgICAgIGNvZGU6ICdLZXlTJ1xyXG4gICAgICB9LFxyXG4gICAgICAndCc6IHtcclxuICAgICAgICBrZXlDb2RlOiA4NCxcclxuICAgICAgICBjb2RlOiAnS2V5VCdcclxuICAgICAgfSxcclxuICAgICAgJ3UnOiB7XHJcbiAgICAgICAga2V5Q29kZTogODUsXHJcbiAgICAgICAgY29kZTogJ0tleVUnXHJcbiAgICAgIH0sXHJcbiAgICAgICd2Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDg2LFxyXG4gICAgICAgIGNvZGU6ICdLZXlWJ1xyXG4gICAgICB9LFxyXG4gICAgICAndyc6IHtcclxuICAgICAgICBrZXlDb2RlOiA4NyxcclxuICAgICAgICBjb2RlOiAnS2V5VydcclxuICAgICAgfSxcclxuICAgICAgJ3gnOiB7XHJcbiAgICAgICAga2V5Q29kZTogODgsXHJcbiAgICAgICAgY29kZTogJ0tleVgnXHJcbiAgICAgIH0sXHJcbiAgICAgICd5Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDg5LFxyXG4gICAgICAgIGNvZGU6ICdLZXlZJ1xyXG4gICAgICB9LFxyXG4gICAgICAneic6IHtcclxuICAgICAgICBrZXlDb2RlOiA5MCxcclxuICAgICAgICBjb2RlOiAnS2V5WidcclxuICAgICAgfSxcclxuICAgICAgJ2xlZnQgd2luZG93IGtleSc6IHtcclxuICAgICAgICBrZXlDb2RlOiA5MSxcclxuICAgICAgICBjb2RlOiAnTWV0YUxlZnQnXHJcbiAgICAgIH0sXHJcbiAgICAgICdyaWdodCB3aW5kb3cga2V5Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDkyLFxyXG4gICAgICAgIGNvZGU6ICdNZXRhUmlnaHQnXHJcbiAgICAgIH0sXHJcbiAgICAgICdzZWxlY3Qga2V5Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDkzLFxyXG4gICAgICAgIGNvZGU6ICdDb250ZXh0TWVudSdcclxuICAgICAgfSxcclxuICAgICAgJ251bXBhZCAwJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDk2LFxyXG4gICAgICAgIGNvZGU6ICdOdW1wYWQwJ1xyXG4gICAgICB9LFxyXG4gICAgICAnbnVtcGFkIDEnOiB7XHJcbiAgICAgICAga2V5Q29kZTogOTcsXHJcbiAgICAgICAgY29kZTogJ051bXBhZDEnXHJcbiAgICAgIH0sXHJcbiAgICAgICdudW1wYWQgMic6IHtcclxuICAgICAgICBrZXlDb2RlOiA5OCxcclxuICAgICAgICBjb2RlOiAnTnVtcGFkMidcclxuICAgICAgfSxcclxuICAgICAgJ251bXBhZCAzJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDk5LFxyXG4gICAgICAgIGNvZGU6ICdOdW1wYWQzJ1xyXG4gICAgICB9LFxyXG4gICAgICAnbnVtcGFkIDQnOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTAwLFxyXG4gICAgICAgIGNvZGU6ICdOdW1wYWQ0J1xyXG4gICAgICB9LFxyXG4gICAgICAnbnVtcGFkIDUnOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTAxLFxyXG4gICAgICAgIGNvZGU6ICdOdW1wYWQ1J1xyXG4gICAgICB9LFxyXG4gICAgICAnbnVtcGFkIDYnOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTAyLFxyXG4gICAgICAgIGNvZGU6ICdOdW1wYWQ2J1xyXG4gICAgICB9LFxyXG4gICAgICAnbnVtcGFkIDcnOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTAzLFxyXG4gICAgICAgIGNvZGU6ICdOdW1wYWQ3J1xyXG4gICAgICB9LFxyXG4gICAgICAnbnVtcGFkIDgnOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTA0LFxyXG4gICAgICAgIGNvZGU6ICdOdW1wYWQ4J1xyXG4gICAgICB9LFxyXG4gICAgICAnbnVtcGFkIDknOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTA1LFxyXG4gICAgICAgIGNvZGU6ICdOdW1wYWQ5J1xyXG4gICAgICB9LFxyXG4gICAgICAnbXVsdGlwbHknOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTA2LFxyXG4gICAgICAgIGNvZGU6ICdOdW1wYWRNdWx0aXBseSdcclxuICAgICAgfSxcclxuICAgICAgJ2FkZCc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxMDcsXHJcbiAgICAgICAgY29kZTogJ051bXBhZEFkZCdcclxuICAgICAgfSxcclxuICAgICAgJ3N1YnRyYWN0Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDEwOSxcclxuICAgICAgICBjb2RlOiAnTnVtcGFkU3VidHJhY3QnXHJcbiAgICAgIH0sXHJcbiAgICAgICdkZWNpbWFsIHBvaW50Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDExMCxcclxuICAgICAgICBjb2RlOiAnTnVtcGFkRGVjaW1hbCdcclxuICAgICAgfSxcclxuICAgICAgJ2RpdmlkZSc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxMTEsXHJcbiAgICAgICAgY29kZTogJ051bXBhZERpdmlkZSdcclxuICAgICAgfSxcclxuICAgICAgJ2YxJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDExMixcclxuICAgICAgICBjb2RlOiAnRjEnXHJcbiAgICAgIH0sXHJcbiAgICAgICdmMic6IHtcclxuICAgICAgICBrZXlDb2RlOiAxMTMsXHJcbiAgICAgICAgY29kZTogJ0YyJ1xyXG4gICAgICB9LFxyXG4gICAgICAnZjMnOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTE0LFxyXG4gICAgICAgIGNvZGU6ICdGMydcclxuICAgICAgfSxcclxuICAgICAgJ2Y0Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDExNSxcclxuICAgICAgICBjb2RlOiAnRjQnXHJcbiAgICAgIH0sXHJcbiAgICAgICdmNSc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxMTYsXHJcbiAgICAgICAgY29kZTogJ0Y1J1xyXG4gICAgICB9LFxyXG4gICAgICAnZjYnOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTE3LFxyXG4gICAgICAgIGNvZGU6ICdGNidcclxuICAgICAgfSxcclxuICAgICAgJ2Y3Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDExOCxcclxuICAgICAgICBjb2RlOiAnRjcnXHJcbiAgICAgIH0sXHJcbiAgICAgICdmOCc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxMTksXHJcbiAgICAgICAgY29kZTogJ0Y4J1xyXG4gICAgICB9LFxyXG4gICAgICAnZjknOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTIwLFxyXG4gICAgICAgIGNvZGU6ICdGOSdcclxuICAgICAgfSxcclxuICAgICAgJ2YxMCc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxMjEsXHJcbiAgICAgICAgY29kZTogJ0YxMCdcclxuICAgICAgfSxcclxuICAgICAgJ2YxMSc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxMjIsXHJcbiAgICAgICAgY29kZTogJ0YxMSdcclxuICAgICAgfSxcclxuICAgICAgJ2YxMic6IHtcclxuICAgICAgICBrZXlDb2RlOiAxMjMsXHJcbiAgICAgICAgY29kZTogJ0YxMidcclxuICAgICAgfSxcclxuICAgICAgJ251bSBsb2NrJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDE0NCxcclxuICAgICAgICBjb2RlOiAnTnVtTG9jaydcclxuICAgICAgfSxcclxuICAgICAgJ3Njcm9sbCBsb2NrJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDE0NSxcclxuICAgICAgICBjb2RlOiAnU2Nyb2xsTG9jaydcclxuICAgICAgfSxcclxuICAgICAgJ3NlbWktY29sb24nOiB7XHJcbiAgICAgICAga2V5Q29kZTogMTg2LFxyXG4gICAgICAgIGNvZGU6ICdTZW1pY29sb24nXHJcbiAgICAgIH0sXHJcbiAgICAgICdlcXVhbCBzaWduJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDE4NyxcclxuICAgICAgICBjb2RlOiAnRXF1YWwnXHJcbiAgICAgIH0sXHJcbiAgICAgICdjb21tYSc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxODgsXHJcbiAgICAgICAgY29kZTogJ0NvbW1hJ1xyXG4gICAgICB9LFxyXG4gICAgICAnZGFzaCc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxODksXHJcbiAgICAgICAgY29kZTogJ01pbnVzJ1xyXG4gICAgICB9LFxyXG4gICAgICAncGVyaW9kJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDE5MCxcclxuICAgICAgICBjb2RlOiAnUGVyaW9kJ1xyXG4gICAgICB9LFxyXG4gICAgICAnZm9yd2FyZCBzbGFzaCc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxOTEsXHJcbiAgICAgICAgY29kZTogJydcclxuICAgICAgfSxcclxuICAgICAgJ2dyYXZlIGFjY2VudCc6IHtcclxuICAgICAgICBrZXlDb2RlOiAxOTIsXHJcbiAgICAgICAgY29kZTogJ0JhY2txdW90ZSdcclxuICAgICAgfSxcclxuICAgICAgJ29wZW4gYnJhY2tldCc6IHtcclxuICAgICAgICBrZXlDb2RlOiAyMTksXHJcbiAgICAgICAgY29kZTogJ0JyYWNrZXRMZWZ0J1xyXG4gICAgICB9LFxyXG4gICAgICAnYmFjayBzbGFzaCc6IHtcclxuICAgICAgICBrZXlDb2RlOiAyMjAsXHJcbiAgICAgICAgY29kZTogWydCYWNrc2xhc2gnLCAnSW50bEJhY2tzbGFzaCddXHJcbiAgICAgIH0sXHJcbiAgICAgICdjbG9zZSBicmFja2V0Jzoge1xyXG4gICAgICAgIGtleUNvZGU6IDIyMSxcclxuICAgICAgICBjb2RlOiAnQnJhY2tldFJpZ2h0J1xyXG4gICAgICB9LFxyXG4gICAgICAnc2luZ2xlIHF1b3RlJzoge1xyXG4gICAgICAgIGtleUNvZGU6IDIyMixcclxuICAgICAgICBjb2RlOiAnUXVvdGUnXHJcbiAgICAgIH0sXHJcbiAgICB9O1xyXG5cclxuICAgIGZvciAobGV0IGtleSBpbiB0aGlzLmtleU1hcCkge1xyXG4gICAgICB0aGlzLmtleUJ5S2V5Q29kZVt0aGlzLmtleU1hcFtrZXldLmtleUNvZGVdID0ga2V5O1xyXG5cclxuICAgICAgaWYgKHRoaXMua2V5TWFwW2tleV0uY29kZSBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IHRoaXMua2V5TWFwW2tleV0uY29kZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgdGhpcy5rZXlCeUNvZGVbdGhpcy5rZXlNYXBba2V5XS5jb2RlW2ldXSA9IGtleTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5rZXlCeUNvZGVbPHN0cmluZz4odGhpcy5rZXlNYXBba2V5XS5jb2RlKV0gPSBrZXk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuXHJcblxyXG59XHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBIb3RLZXlBcmdzIHtcclxuICBrZXk6IHN0cmluZyB8IG51bWJlcjtcclxuICBjYWxsYmFjazogKGV2dD86IEV2ZW50KSA9PiB2b2lkO1xyXG4gIGN0cmw/OiBib29sZWFuO1xyXG4gIGFsdD86IGJvb2xlYW47XHJcbiAgc2hpZnQ/OiBib29sZWFuO1xyXG4gIHNraXBQcmV2ZW50RGVmYXVsdD86IGJvb2xlYW47XHJcbiAgaW5kZXg/OiBzdHJpbmdcclxufSIsImV4cG9ydCAqIGZyb20gJy4vaW5pdGlhbGl6ZS1iZWZvcmUnO1xyXG5leHBvcnQgKiBmcm9tICcuL2VkaXRvcic7XHJcbmV4cG9ydCAqIGZyb20gJy4vbGF5b3V0JztcclxuZXhwb3J0ICogZnJvbSAnLi92aWV3cG9ydCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vaGllcmFyY2h5JztcclxuZXhwb3J0ICogZnJvbSAnLi9ob3RrZXlzJztcclxuZXhwb3J0ICogZnJvbSAnLi9hc3NldHMnO1xyXG5leHBvcnQgKiBmcm9tICcuL3Rvb2xiYXInO1xyXG5leHBvcnQgKiBmcm9tICcuL3V0aWxpdHknO1xyXG5leHBvcnQgKiBmcm9tICcuL2VudGl0eSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vbWlkZGxld2FyZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vaW5pdGlhbGl6ZS1hZnRlcic7IiwiaW1wb3J0IHsgQXR0cmlidXRlc1BhbmVsLCBBdHRyaWJ1dGVzRW50aXR5LCBBdHRyaWJ1dGVzUmVmZXJlbmNlIH0gZnJvbSBcIi4vYXR0cmlidXRlc1wiO1xyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBJbml0aWFsaXplQWZ0ZXIge1xyXG5cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIC8vIGF0dHJpYnV0ZXNcclxuXHJcbiAgICBsZXQgYXR0cmlidXRlc1JlZmVyZW5jZSA9IG5ldyBBdHRyaWJ1dGVzUmVmZXJlbmNlKCk7XHJcblxyXG4gICAgbGV0IGF0dHJpYnV0ZXNQYW5lbCA9IG5ldyBBdHRyaWJ1dGVzUGFuZWwoKTtcclxuICAgIGxldCBhdHRyaWJ1dGVzRW50aXR5ID0gbmV3IEF0dHJpYnV0ZXNFbnRpdHkoKTtcclxuXHJcblxyXG4gIH1cclxuXHJcblxyXG59IiwiaW1wb3J0IHsgSG90a2V5cyB9IGZyb20gXCIuL2hvdGtleXNcIjtcclxuaW1wb3J0IHsgQ29tcG9uZW50c0xvZ29zLCBDb250ZXh0TWVudSB9IGZyb20gXCIuL3V0aWxpdHlcIjtcclxuaW1wb3J0IHsgU2VsZWN0b3IgfSBmcm9tIFwiLi9zZWxlY3RvclwiO1xyXG5pbXBvcnQgeyBSZWFsdGltZSB9IGZyb20gXCIuL3dlYi9yZWFsdGltZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEluaXRpYWxpemVCZWZvcmUge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmluaXQoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgaW5pdCgpOiB2b2lkIHtcclxuXHJcbiAgICAvLyBheG9pc+m7mOiupOivt+axguWktOiuvue9ru+8jOWFqOWxgOmAmui/h2pzb27mlrnlvI/kvKDpgIHlkozmjqXmlLbmlbDmja5cclxuICAgIGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMucG9zdFtcIkNvbnRlbnQtVHlwZVwiXSA9IFwiYXBwbGljYXRpb24vanNvblwiO1xyXG5cclxuICAgIC8vIOWFqOWxgOW/q+aNt+mUruazqOWGjFxyXG4gICAgbGV0IGhvdGtleXMgPSBuZXcgSG90a2V5cygpO1xyXG5cclxuICAgIC8vIGNvbXBvbmVudHMtbG9nb3NcclxuICAgIGxldCBsb2dvcyA9IG5ldyBDb21wb25lbnRzTG9nb3MoKTtcclxuXHJcbiAgICAvLyDlsY/olL3mtY/op4jlmajpu5jorqTlj7PplK7oj5zljZVcclxuICAgIGxldCBzeXN0ZW1Db250ZXh0TWVudSA9IG5ldyBDb250ZXh0TWVudSgpO1xyXG5cclxuICAgIC8vIHNlbGVjdG9yIFxyXG4gICAgbGV0IHNlbGVjdG9yID0gbmV3IFNlbGVjdG9yKCk7XHJcblxyXG4gICAgLy8gV2Vic29ja2V0XHJcbiAgICBsZXQgaW8gPSBuZXcgUmVhbHRpbWUoKTtcclxuXHJcbiAgfVxyXG5cclxufSIsImltcG9ydCB7IFBhbmVsIH0gZnJvbSAnLi4vdWknO1xyXG5pbXBvcnQgeyBWZXJ5RW5naW5lIH0gZnJvbSAnLi4vZW5naW5lJztcclxuXHJcbmV4cG9ydCBjbGFzcyBMYXlvdXQge1xyXG5cclxuICBwcml2YXRlIGlnbm9yZUNsYXNzZXM6IFJlZ0V4cCA9IC8odWktbGlzdC1pdGVtKXwodWktYnV0dG9uKXwodWktdGV4dC1maWVsZCl8KHVpLW51bWJlci1maWVsZCkvaTtcclxuICBwcml2YXRlIGlnbm9yZUVsZW1lbnRzOiBSZWdFeHAgPSAvKGlucHV0KXwodGV4dGFyZWEpL2k7XHJcblxyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcbiAgICBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICAvLyBwcmV2ZW50IGRyYWcnbidzZWxlY3RcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgIC8vIGRvbid0IHByZXZlbnQgZm9yIGNlcnRhaW4gY2FzZXNcclxuICAgICAgaWYgKGV2dC50YXJnZXQpIHtcclxuICAgICAgICBpZiAoc2VsZi5pZ25vcmVDbGFzc2VzLnRlc3QoKDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0KS5jbGFzc05hbWUpKSB7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfSBlbHNlIGlmIChzZWxmLmlnbm9yZUVsZW1lbnRzLnRlc3QoKDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0KS50YWdOYW1lKSkge1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoKDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0KS5jbGFzc0xpc3QuY29udGFpbnMoJ3NlbGVjdGFibGUnKSkge1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gYmx1ciBpbnB1dHNcclxuICAgICAgaWYgKHdpbmRvdy5nZXRTZWxlY3Rpb24pIHtcclxuICAgICAgICBsZXQgZm9jdXNOb2RlID0gd2luZG93LmdldFNlbGVjdGlvbigpIS5mb2N1c05vZGU7XHJcbiAgICAgICAgaWYgKGZvY3VzTm9kZSkge1xyXG4gICAgICAgICAgaWYgKCg8SFRNTEVsZW1lbnQ+Zm9jdXNOb2RlKS50YWdOYW1lID09PSAnSU5QVVQnKSB7XHJcbiAgICAgICAgICAgICg8SFRNTEVsZW1lbnQ+Zm9jdXNOb2RlKS5ibHVyKCk7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKGZvY3VzTm9kZS5maXJzdENoaWxkICYmICg8SFRNTEVsZW1lbnQ+Zm9jdXNOb2RlLmZpcnN0Q2hpbGQpLnRhZ05hbWUgPT09ICdJTlBVVCcpIHtcclxuICAgICAgICAgICAgKDxIVE1MRWxlbWVudD5mb2N1c05vZGUuZmlyc3RDaGlsZCkuYmx1cigpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gcHJldmVudCBkZWZhdWx0IHdpbGwgcHJldmVudCBibHVyLCBkcmFnc3RhcnQgYW5kIHNlbGVjdGlvblxyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0sIGZhbHNlKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBpbml0KCk6IHZvaWQge1xyXG4gICAgLy8gbWFpbiBjb250YWluZXJcclxuICAgIGxldCByb290OiBQYW5lbCA9IG5ldyBQYW5lbCgpO1xyXG4gICAgcm9vdC5lbGVtZW50IS5pZCA9ICd1aS1yb290JztcclxuICAgIHJvb3QuZmxleCA9IHRydWU7XHJcbiAgICByb290LmZsZXhEaXJlY3Rpb24gPSAnY29sdW1uJztcclxuICAgIHJvb3QuZmxleFdyYXAgPSAnbm93cmFwJztcclxuICAgIHJvb3Quc2Nyb2xsID0gdHJ1ZTtcclxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocm9vdC5lbGVtZW50ISk7XHJcbiAgICAvLyBleHBvc2VcclxuICAgIGVkaXRvci5tZXRob2QoJ2xheW91dC5yb290JywgZnVuY3Rpb24gKCkgeyByZXR1cm4gcm9vdDsgfSk7XHJcbiAgICBWZXJ5RW5naW5lLnJvb3RQYW5lbCA9IHJvb3Q7XHJcblxyXG4gICAgLy8gdG9wIHBhbmVsIFRPRE86IHRvcOW5suWYm+eUqO+8n1xyXG4gICAgbGV0IHRvcCA9IG5ldyBQYW5lbCgpO1xyXG4gICAgdG9wLnN0eWxlIS5iYWNrZ3JvdW5kQ29sb3IgPSAnIzVmNmY3Mic7XHJcbiAgICB0b3Auc3R5bGUhLmN1cnNvciA9ICdwb2ludGVyJztcclxuICAgIHRvcC5lbGVtZW50IS5pZCA9ICd1aS10b3AnO1xyXG4gICAgdG9wLmZsZXhTaHJpbmsgPSAnMCc7XHJcbiAgICB0b3Aub25jZSgnY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHRvcC5kZXN0cm95KCk7XHJcbiAgICAgIC8vIFRPRE9cclxuICAgICAgdG9wLnN0eWxlIS5tYXJnaW5Ub3AgPSAnJztcclxuICAgIH0pO1xyXG4gICAgcm9vdC5hcHBlbmQodG9wKTtcclxuXHJcbiAgICAvLyBtaWRkbGUgcGFuZWxcclxuICAgIGxldCBtaWRkbGUgPSBuZXcgUGFuZWwoKTtcclxuICAgIG1pZGRsZS5lbGVtZW50IS5pZCA9ICd1aS1taWRkbGUnO1xyXG4gICAgbWlkZGxlLmZsZXhpYmxlID0gdHJ1ZTtcclxuICAgIG1pZGRsZS5mbGV4R3JvdyA9ICcxJztcclxuICAgIHJvb3QuYXBwZW5kKG1pZGRsZSk7XHJcblxyXG4gICAgLy8gYm90dG9tIHBhbmVsIChzdGF0dXMpXHJcbiAgICBsZXQgYm90dG9tID0gbmV3IFBhbmVsKCk7XHJcbiAgICBib3R0b20uZWxlbWVudCEuaWQgPSAndWktYm90dG9tJztcclxuICAgIGJvdHRvbS5mbGV4U2hyaW5rID0gJzAnO1xyXG4gICAgcm9vdC5hcHBlbmQoYm90dG9tKTtcclxuICAgIC8vIGV4cG9zZVxyXG4gICAgZWRpdG9yLm1ldGhvZCgnbGF5b3V0LmJvdHRvbScsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJvdHRvbTsgfSk7XHJcblxyXG4gICAgLy8gdG9vbGJhciBwYW5lbCAobGVmdClcclxuICAgIGxldCB0b29sYmFyID0gbmV3IFBhbmVsKCk7XHJcbiAgICB0b29sYmFyLmVsZW1lbnQhLmlkID0gJ3VpLXRvb2xiYXInO1xyXG4gICAgdG9vbGJhci5mbGV4U2hyaW5rID0gJzAnO1xyXG4gICAgdG9vbGJhci5zdHlsZSEud2lkdGggPSAnNDVweCc7XHJcbiAgICBtaWRkbGUuYXBwZW5kKHRvb2xiYXIpO1xyXG4gICAgLy8gZXhwb3NlXHJcbiAgICBlZGl0b3IubWV0aG9kKCdsYXlvdXQudG9vbGJhcicsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRvb2xiYXI7IH0pO1xyXG4gICAgVmVyeUVuZ2luZS50b29sYmFyUGFuZWwgPSB0b29sYmFyO1xyXG5cclxuICAgIC8vIGhpZXJhcmNoeVxyXG4gICAgbGV0IGhpZXJhcmNoeVBhbmVsID0gbmV3IFBhbmVsKCfmoJHlvaLnu5PmnoTnqpflj6MnKTtcclxuICAgIGhpZXJhcmNoeVBhbmVsLmVuYWJsZWQgPSB0cnVlO1xyXG4gICAgaGllcmFyY2h5UGFuZWwuY2xhc3MhLmFkZCgnaGllcmFyY2h5Jyk7XHJcbiAgICBoaWVyYXJjaHlQYW5lbC5mbGV4U2hyaW5rID0gJzAnO1xyXG4gICAgbGV0IGhpZXJhcmNoeVBhbmVsU2l6ZSA9IGVkaXRvci5jYWxsKCdsb2NhbFN0b3JhZ2U6Z2V0JywgJ2VkaXRvcjpsYXlvdXQ6aGllcmFyY2h5OndpZHRoJykgfHwgJzI1NnB4JztcclxuICAgIGhpZXJhcmNoeVBhbmVsLnN0eWxlIS53aWR0aCA9IGhpZXJhcmNoeVBhbmVsU2l6ZTtcclxuICAgIGhpZXJhcmNoeVBhbmVsLmlubmVyRWxlbWVudCEuc3R5bGUud2lkdGggPSBoaWVyYXJjaHlQYW5lbFNpemU7XHJcbiAgICBoaWVyYXJjaHlQYW5lbC5mb2xkYWJsZSA9IHRydWU7XHJcbiAgICBoaWVyYXJjaHlQYW5lbC5mb2xkZWQgPSBlZGl0b3IuY2FsbCgnbG9jYWxTdG9yYWdlOmdldCcsICdlZGl0b3I6bGF5b3V0OmhpZXJhcmNoeTpmb2xkJykgfHwgZmFsc2U7XHJcbiAgICBoaWVyYXJjaHlQYW5lbC5ob3Jpem9udGFsID0gdHJ1ZTtcclxuICAgIGhpZXJhcmNoeVBhbmVsLnNjcm9sbCA9IHRydWU7XHJcbiAgICBoaWVyYXJjaHlQYW5lbC5yZXNpemFibGUgPSAncmlnaHQnO1xyXG4gICAgaGllcmFyY2h5UGFuZWwucmVzaXplTWluID0gMTk2O1xyXG4gICAgaGllcmFyY2h5UGFuZWwucmVzaXplTWF4ID0gNTEyO1xyXG5cclxuICAgIGhpZXJhcmNoeVBhbmVsLm9uKCdyZXNpemUnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGVkaXRvci5jYWxsKCdsb2NhbFN0b3JhZ2U6c2V0JywgJ2VkaXRvcjpsYXlvdXQ6aGllcmFyY2h5OndpZHRoJywgaGllcmFyY2h5UGFuZWwuc3R5bGUhLndpZHRoKTtcclxuICAgIH0pO1xyXG4gICAgaGllcmFyY2h5UGFuZWwub24oJ2ZvbGQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGVkaXRvci5jYWxsKCdsb2NhbFN0b3JhZ2U6c2V0JywgJ2VkaXRvcjpsYXlvdXQ6aGllcmFyY2h5OmZvbGQnLCB0cnVlKTtcclxuICAgIH0pO1xyXG4gICAgaGllcmFyY2h5UGFuZWwub24oJ3VuZm9sZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgZWRpdG9yLmNhbGwoJ2xvY2FsU3RvcmFnZTpzZXQnLCAnZWRpdG9yOmxheW91dDpoaWVyYXJjaHk6Zm9sZCcsIGZhbHNlKTtcclxuICAgIH0pO1xyXG5cclxuICAgIG1pZGRsZS5hcHBlbmQoaGllcmFyY2h5UGFuZWwpO1xyXG4gICAgLy8gZXhwb3NlXHJcbiAgICBlZGl0b3IubWV0aG9kKCdsYXlvdXQubGVmdCcsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhpZXJhcmNoeVBhbmVsOyB9KTtcclxuICAgIGVkaXRvci5vbigncGVybWlzc2lvbnM6d3JpdGVTdGF0ZScsIGZ1bmN0aW9uIChzdGF0ZTogYm9vbGVhbikge1xyXG4gICAgICBoaWVyYXJjaHlQYW5lbC5lbmFibGVkID0gc3RhdGU7XHJcbiAgICB9KTtcclxuICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8PSA0ODApIHtcclxuICAgICAgaGllcmFyY2h5UGFuZWwuZm9sZGVkID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIFZlcnlFbmdpbmUuaGllcmFyY2h5UGFuZWwgPSBoaWVyYXJjaHlQYW5lbDtcclxuXHJcbiAgICAvLyBjZW50ZXIgcGFuZWxcclxuICAgIGxldCBjZW50ZXIgPSBuZXcgUGFuZWwoKTtcclxuICAgIGNlbnRlci5mbGV4aWJsZSA9IHRydWU7XHJcbiAgICBjZW50ZXIuZmxleEdyb3cgPSAnMSc7XHJcbiAgICBjZW50ZXIuZmxleERpcmVjdGlvbiA9ICdjb2x1bW4nO1xyXG4gICAgbWlkZGxlLmFwcGVuZChjZW50ZXIpO1xyXG5cclxuICAgIC8vIHZpZXdwb3J0IHBhbmVsXHJcbiAgICBsZXQgdmlld3BvcnQgPSBuZXcgUGFuZWwoKTtcclxuICAgIHZpZXdwb3J0LmZsZXhpYmxlID0gdHJ1ZTtcclxuICAgIHZpZXdwb3J0LmZsZXhHcm93ID0gJzEnO1xyXG4gICAgdmlld3BvcnQuY2xhc3MhLmFkZCgndmlld3BvcnQnKTtcclxuICAgIGNlbnRlci5hcHBlbmQodmlld3BvcnQpO1xyXG4gICAgLy8gZXhwb3NlXHJcbiAgICBlZGl0b3IubWV0aG9kKCdsYXlvdXQudmlld3BvcnQnLCBmdW5jdGlvbiAoKSB7IHJldHVybiB2aWV3cG9ydDsgfSk7XHJcbiAgICBWZXJ5RW5naW5lLnZpZXdQYW5lbCA9IHZpZXdwb3J0O1xyXG5cclxuICAgIC8vIGFzc2V0cyBwYW5lbFxyXG4gICAgbGV0IGFzc2V0c1BhbmVsID0gbmV3IFBhbmVsKCfotYTmupDnqpflj6MnKTtcclxuICAgIGFzc2V0c1BhbmVsLmNsYXNzIS5hZGQoJ2Fzc2V0cycpO1xyXG4gICAgYXNzZXRzUGFuZWwuZm9sZGFibGUgPSB0cnVlO1xyXG4gICAgYXNzZXRzUGFuZWwuZm9sZGVkID0gZWRpdG9yLmNhbGwoJ2xvY2FsU3RvcmFnZTpnZXQnLCAnZWRpdG9yOmxheW91dDphc3NldHM6Zm9sZCcpIHx8IGZhbHNlO1xyXG4gICAgYXNzZXRzUGFuZWwuZmxleFNocmluayA9ICcwJztcclxuICAgIGFzc2V0c1BhbmVsLmlubmVyRWxlbWVudCEuc3R5bGUuaGVpZ2h0ID0gZWRpdG9yLmNhbGwoJ2xvY2FsU3RvcmFnZTpnZXQnLCAnZWRpdG9yOmxheW91dDphc3NldHM6aGVpZ2h0JykgfHwgJzIxMnB4JztcclxuICAgIGFzc2V0c1BhbmVsLnNjcm9sbCA9IHRydWU7XHJcbiAgICBhc3NldHNQYW5lbC5yZXNpemFibGUgPSAndG9wJztcclxuICAgIGFzc2V0c1BhbmVsLnJlc2l6ZU1pbiA9IDEwNjtcclxuICAgIGFzc2V0c1BhbmVsLnJlc2l6ZU1heCA9IDEwNiAqIDY7XHJcbiAgICBhc3NldHNQYW5lbC5oZWFkZXJTaXplID0gLTE7XHJcblxyXG4gICAgYXNzZXRzUGFuZWwub24oJ3Jlc2l6ZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgZWRpdG9yLmNhbGwoJ2xvY2FsU3RvcmFnZTpzZXQnLCAnZWRpdG9yOmxheW91dDphc3NldHM6aGVpZ2h0JywgYXNzZXRzUGFuZWwuaW5uZXJFbGVtZW50IS5zdHlsZS5oZWlnaHQpO1xyXG4gICAgfSk7XHJcbiAgICBhc3NldHNQYW5lbC5vbignZm9sZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgZWRpdG9yLmNhbGwoJ2xvY2FsU3RvcmFnZTpzZXQnLCAnZWRpdG9yOmxheW91dDphc3NldHM6Zm9sZCcsIHRydWUpO1xyXG4gICAgfSk7XHJcbiAgICBhc3NldHNQYW5lbC5vbigndW5mb2xkJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICBlZGl0b3IuY2FsbCgnbG9jYWxTdG9yYWdlOnNldCcsICdlZGl0b3I6bGF5b3V0OmFzc2V0czpmb2xkJywgZmFsc2UpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY2VudGVyLmFwcGVuZChhc3NldHNQYW5lbCk7XHJcbiAgICAvLyBleHBvc2VcclxuICAgIGVkaXRvci5tZXRob2QoJ2xheW91dC5hc3NldHMnLCBmdW5jdGlvbiAoKSB7IHJldHVybiBhc3NldHNQYW5lbDsgfSk7XHJcbiAgICBpZiAod2luZG93LmlubmVySGVpZ2h0IDw9IDQ4MCkge1xyXG4gICAgICBhc3NldHNQYW5lbC5mb2xkZWQgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgVmVyeUVuZ2luZS5hc3NldFBhbmVsID0gYXNzZXRzUGFuZWw7XHJcblxyXG5cclxuICAgIC8vIGF0dHJpYnV0ZXMgcGFuZWxcclxuICAgIGxldCBhdHRyaWJ1dGVzUGFuZWwgPSBuZXcgUGFuZWwoJ+WxnuaAp+eql+WPoycpO1xyXG4gICAgYXR0cmlidXRlc1BhbmVsLmVuYWJsZWQgPSB0cnVlO1xyXG4gICAgYXR0cmlidXRlc1BhbmVsLmNsYXNzIS5hZGQoJ2F0dHJpYnV0ZXMnKTtcclxuICAgIGF0dHJpYnV0ZXNQYW5lbC5mbGV4U2hyaW5rID0gJzAnO1xyXG4gICAgbGV0IGF0dHJpYnV0ZXNQYW5lbFdpZHRoID0gZWRpdG9yLmNhbGwoJ2xvY2FsU3RvcmFnZTpnZXQnLCAnZWRpdG9yOmxheW91dDphdHRyaWJ1dGVzOndpZHRoJykgfHwgJzMyMHB4JztcclxuICAgIGF0dHJpYnV0ZXNQYW5lbC5zdHlsZSEud2lkdGggPSBhdHRyaWJ1dGVzUGFuZWxXaWR0aDtcclxuICAgIGF0dHJpYnV0ZXNQYW5lbC5pbm5lckVsZW1lbnQhLnN0eWxlLndpZHRoID0gYXR0cmlidXRlc1BhbmVsV2lkdGg7XHJcbiAgICBhdHRyaWJ1dGVzUGFuZWwuaG9yaXpvbnRhbCA9IHRydWU7XHJcbiAgICBhdHRyaWJ1dGVzUGFuZWwuZm9sZGFibGUgPSB0cnVlO1xyXG4gICAgYXR0cmlidXRlc1BhbmVsLmZvbGRlZCA9IGVkaXRvci5jYWxsKCdsb2NhbFN0b3JhZ2U6Z2V0JywgJ2VkaXRvcjpsYXlvdXQ6YXR0cmlidXRlczpmb2xkJykgfHwgZmFsc2U7XHJcbiAgICBhdHRyaWJ1dGVzUGFuZWwuc2Nyb2xsID0gdHJ1ZTtcclxuICAgIGF0dHJpYnV0ZXNQYW5lbC5yZXNpemFibGUgPSAnbGVmdCc7XHJcbiAgICBhdHRyaWJ1dGVzUGFuZWwucmVzaXplTWluID0gMjU2O1xyXG4gICAgYXR0cmlidXRlc1BhbmVsLnJlc2l6ZU1heCA9IDUxMjtcclxuXHJcbiAgICBhdHRyaWJ1dGVzUGFuZWwub24oJ3Jlc2l6ZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgZWRpdG9yLmNhbGwoJ2xvY2FsU3RvcmFnZTpzZXQnLCAnZWRpdG9yOmxheW91dDphdHRyaWJ1dGVzOndpZHRoJywgYXR0cmlidXRlc1BhbmVsLmlubmVyRWxlbWVudCEuc3R5bGUud2lkdGgpO1xyXG4gICAgfSk7XHJcbiAgICBhdHRyaWJ1dGVzUGFuZWwub24oJ2ZvbGQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGVkaXRvci5jYWxsKCdsb2NhbFN0b3JhZ2U6c2V0JywgJ2VkaXRvcjpsYXlvdXQ6YXR0cmlidXRlczpmb2xkJywgdHJ1ZSk7XHJcbiAgICB9KTtcclxuICAgIGF0dHJpYnV0ZXNQYW5lbC5vbigndW5mb2xkJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICBlZGl0b3IuY2FsbCgnbG9jYWxTdG9yYWdlOnNldCcsICdlZGl0b3I6bGF5b3V0OmF0dHJpYnV0ZXM6Zm9sZCcsIGZhbHNlKTtcclxuICAgIH0pO1xyXG5cclxuICAgIG1pZGRsZS5hcHBlbmQoYXR0cmlidXRlc1BhbmVsKTtcclxuICAgIC8vIGV4cG9zZVxyXG4gICAgZWRpdG9yLm1ldGhvZCgnbGF5b3V0LnJpZ2h0JywgZnVuY3Rpb24gKCkgeyByZXR1cm4gYXR0cmlidXRlc1BhbmVsOyB9KTtcclxuICAgIGVkaXRvci5vbigncGVybWlzc2lvbnM6d3JpdGVTdGF0ZScsIGZ1bmN0aW9uIChzdGF0ZTogYm9vbGVhbikge1xyXG4gICAgICBhdHRyaWJ1dGVzUGFuZWwuZW5hYmxlZCA9IHN0YXRlO1xyXG4gICAgfSk7XHJcbiAgICBpZiAod2luZG93LmlubmVyV2lkdGggPD0gNzIwKSB7XHJcbiAgICAgIGF0dHJpYnV0ZXNQYW5lbC5mb2xkZWQgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgVmVyeUVuZ2luZS5hdHRyaWJ1dGVzUGFuZWwgPSBhdHRyaWJ1dGVzUGFuZWw7XHJcbiAgfVxyXG5cclxuXHJcbn0iLCJpbXBvcnQgeyBUcmFuc2Zvcm0gfSBmcm9tIFwiLi90cmFuc2Zvcm1cIjtcclxuaW1wb3J0IHsgR2FtZU9iamVjdCB9IGZyb20gXCIuL2dhbWVvYmplY3RcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBDb21wb25lbnQge1xyXG5cclxuXHJcbiAgcHVibGljIGdldCB0cmFuc2Zvcm0oKTogVHJhbnNmb3JtIHtcclxuICAgIHJldHVybiBuZXcgVHJhbnNmb3JtKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGdhbWVPYmplY3QoKTogR2FtZU9iamVjdCB7XHJcbiAgICByZXR1cm4gbmV3IEdhbWVPYmplY3QoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgdGFnKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gJyc7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGNhbWVyYSgpOiBDb21wb25lbnQge1xyXG4gICAgcmV0dXJuIG5ldyBDb21wb25lbnQoKTtcclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgZ2V0IGxpZ2h0KCk6IENvbXBvbmVudCB7XHJcbiAgICByZXR1cm4gbmV3IENvbXBvbmVudCgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCByZW5kZXJlcigpOiBDb21wb25lbnQge1xyXG4gICAgcmV0dXJuIG5ldyBDb21wb25lbnQoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgY29sbGlkZXIoKTogQ29tcG9uZW50IHtcclxuICAgIHJldHVybiBuZXcgQ29tcG9uZW50KCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gIH1cclxuXHJcblxyXG5cclxufSIsImltcG9ydCB7IFRyYW5zZm9ybSB9IGZyb20gXCIuL3RyYW5zZm9ybVwiO1xyXG5pbXBvcnQgeyBCYWJ5bG9uRW5naW5lIH0gZnJvbSBcIi4uLy4uL2VuZ2luZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdhbWVPYmplY3Qge1xyXG5cclxuXHJcbiAgcHVibGljIGdldCBnYW1lT2JqZWN0KCk6IEdhbWVPYmplY3Qge1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHRyYW5zZm9ybSgpOiBUcmFuc2Zvcm0ge1xyXG4gICAgcmV0dXJuIHRoaXMuX3RyYW5zZm9ybTtcclxuICB9XHJcbiAgcHVibGljIHNldCB0cmFuc2Zvcm0odmFsOiBUcmFuc2Zvcm0pIHtcclxuICAgIHRoaXMuX3RyYW5zZm9ybSA9IHZhbDtcclxuICB9XHJcbiAgcHJpdmF0ZSBfdHJhbnNmb3JtOiBUcmFuc2Zvcm07XHJcblxyXG4gIHB1YmxpYyBnZXQgbmFtZSgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMudHJhbnNmb3JtLm5hbWU7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgbmFtZSh2YWw6IHN0cmluZykge1xyXG4gICAgdGhpcy50cmFuc2Zvcm0ubmFtZSA9IHZhbDtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX2d1aWQ6IHN0cmluZyA9ICcnO1xyXG4gIHB1YmxpYyBnZXQgZ3VpZCgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuX2d1aWQ7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgZ3VpZCh2YWw6IHN0cmluZykge1xyXG4gICAgdGhpcy5fZ3VpZCA9IHZhbDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgaXNFbXB0eSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl90cmFuc2Zvcm0uaXNFbXB0eTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgbWVzaCgpOiBOdWxsYWJsZTxCQUJZTE9OLkFic3RyYWN0TWVzaD4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX3RyYW5zZm9ybS5tZXNoO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfdGFnOiBzdHJpbmcgPSAnJztcclxuICBwdWJsaWMgZ2V0IHRhZygpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuX3RhZztcclxuICB9XHJcbiAgcHVibGljIHNldCB0YWcodmFsOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuX3RhZyA9IHZhbDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgaXNBY3RpdmUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5pc0VtcHR5ID8gZmFsc2UgOiB0aGlzLnRyYW5zZm9ybS50cmFuc2Zvcm1Ob2RlIS5pc0VuYWJsZWQoKTtcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKG5hbWU/OiBzdHJpbmcsIG1lc2g6IE51bGxhYmxlPEJBQllMT04uQWJzdHJhY3RNZXNoPiA9IG51bGwsIG5vZGU6IE51bGxhYmxlPEJBQllMT04uVHJhbnNmb3JtTm9kZT4gPSBudWxsKSB7XHJcbiAgICBpZiAobWVzaCkge1xyXG4gICAgICB0aGlzLl90cmFuc2Zvcm0gPSBuZXcgVHJhbnNmb3JtKCcnLCBtZXNoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmIChub2RlKSB7XHJcbiAgICAgICAgdGhpcy5fdHJhbnNmb3JtID0gbmV3IFRyYW5zZm9ybSgnJywgbnVsbCwgbm9kZSk7XHJcbiAgICAgIH0gZWxzZSBpZiAobmFtZSkge1xyXG4gICAgICAgIHRoaXMuX3RyYW5zZm9ybSA9IG5ldyBUcmFuc2Zvcm0obmFtZSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5fdHJhbnNmb3JtID0gbmV3IFRyYW5zZm9ybSgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBUT0RPXHJcbiAgcHVibGljIHN0YXRpYyBGaW5kKG5hbWU6IHN0cmluZywgc2NlbmU/OiBCQUJZTE9OLlNjZW5lKTogTnVsbGFibGU8R2FtZU9iamVjdD4ge1xyXG4gICAgaWYgKCFzY2VuZSkge1xyXG4gICAgICBzY2VuZSA9IEJhYnlsb25FbmdpbmUuU2NlbmU7XHJcbiAgICB9XHJcbiAgICBsZXQgbm9kZTogTnVsbGFibGU8QkFCWUxPTi5Ob2RlPiA9IHNjZW5lLmdldE5vZGVCeU5hbWUobmFtZSk7XHJcbiAgICBpZiAoIW5vZGUpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAobm9kZSBpbnN0YW5jZW9mIEJBQllMT04uQWJzdHJhY3RNZXNoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBHYW1lT2JqZWN0KCcnLCA8QkFCWUxPTi5BYnN0cmFjdE1lc2g+bm9kZSk7XHJcbiAgICAgIH0gZWxzZSBpZiAobm9kZSBpbnN0YW5jZW9mIEJBQllMT04uVHJhbnNmb3JtTm9kZSkge1xyXG4gICAgICAgIHJldHVybiBuZXcgR2FtZU9iamVjdCgnJywgbnVsbCwgPEJBQllMT04uVHJhbnNmb3JtTm9kZT5ub2RlKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdHYW1lT2JqZWN0LkZpbmTlh73mlbDmn6Xmib7liLDkuI3mlK/mjIHnmoTnsbvlnovvvJonICsgbm9kZS5nZXRDbGFzc05hbWUoKSk7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuXHJcbiAgcHVibGljIHN0YXRpYyBGaW5kR2FtZU9iamVjdFdpdGhUYWcodGFnOiBzdHJpbmcpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3RhdGljIEZpbmRHYW1lT2JqZWN0c1dpdGhUYWcodGFnOiBzdHJpbmcpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuXHJcblxyXG5cclxuICAvLyBUT0RPXHJcbiAgcHVibGljIHN0YXRpYyBEZXN0cm95KG9iajogR2FtZU9iamVjdCk6IHZvaWQge1xyXG4gICAgaWYgKG9iaikge1xyXG4gICAgICBvYmoudHJhbnNmb3JtLmRlc3Ryb3koKTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgc3RhdGljIENyZWF0ZUluc3RhbmNlKGdhbWVfb2JqZWN0OiBHYW1lT2JqZWN0KTogTnVsbGFibGU8R2FtZU9iamVjdD4ge1xyXG4gICAgaWYgKCFnYW1lX29iamVjdCkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZ2FtZV9vYmplY3QuaXNFbXB0eSkge1xyXG4gICAgICByZXR1cm4gbmV3IEdhbWVPYmplY3QoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmIChnYW1lX29iamVjdC50cmFuc2Zvcm0ubWVzaCkge1xyXG4gICAgICAgIGxldCB0ZW1wTWVzaDogQkFCWUxPTi5BYnN0cmFjdE1lc2g7XHJcbiAgICAgICAgaWYgKGdhbWVfb2JqZWN0LnRyYW5zZm9ybS5tZXNoIGluc3RhbmNlb2YgQkFCWUxPTi5NZXNoKSB7XHJcbiAgICAgICAgICB0ZW1wTWVzaCA9ICg8QkFCWUxPTi5NZXNoPmdhbWVfb2JqZWN0LnRyYW5zZm9ybS5tZXNoKS5jcmVhdGVJbnN0YW5jZShnYW1lX29iamVjdC5uYW1lICsgJ19pbnN0YW5jZScpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0ZW1wTWVzaCA9ICg8QkFCWUxPTi5JbnN0YW5jZWRNZXNoPmdhbWVfb2JqZWN0LnRyYW5zZm9ybS5tZXNoKS5zb3VyY2VNZXNoLmNyZWF0ZUluc3RhbmNlKGdhbWVfb2JqZWN0Lm5hbWUgKyAnX2luc3RhbmNlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgR2FtZU9iamVjdCgnJywgdGVtcE1lc2gpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGxldCBuZXdOb2RlOiBOdWxsYWJsZTxCQUJZTE9OLlRyYW5zZm9ybU5vZGU+ID0gZ2FtZV9vYmplY3QudHJhbnNmb3JtLnRyYW5zZm9ybU5vZGUhLmNsb25lKGdhbWVfb2JqZWN0Lm5hbWUgKyAnX2ludGFuY2UnKTtcclxuICAgICAgICByZXR1cm4gbmV3IEdhbWVPYmplY3QoJycsIG51bGwsIG5ld05vZGUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcblxyXG4gIHB1YmxpYyBzZXRBY3RpdmUodmFsdWU6IGJvb2xlYW4pOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0QWN0aXZlUmVjdXJzaXZlbHkodmFsdWU6IGJvb2xlYW4pOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3RhdGljIEFkZENvbXBvbmVudCgpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuXHJcblxyXG5cclxuICAvLyBwdWJsaWMgc3RhdGljIGVtcHR5KG5hbWU6IHN0cmluZyk6IEdhbWVPYmplY3Qge1xyXG5cclxuICAvLyB9XHJcblxyXG59IiwiZXhwb3J0ICogZnJvbSAnLi90cmFuc2Zvcm0nO1xyXG5leHBvcnQgKiBmcm9tICcuL2dhbWVvYmplY3QnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vbWlkZGxlLWNvbnRhaW5lcic7IiwiaW1wb3J0IHsgR2FtZU9iamVjdCB9IGZyb20gXCIuL2dhbWVvYmplY3RcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBNaWRkbGVDb250YWluZXIge1xyXG5cclxuICAgIHB1YmxpYyBnYW1lT2JqZWN0czogR2FtZU9iamVjdFtdID0gW107XHJcblxyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICB9XHJcblxyXG5cclxuICAgIHB1YmxpYyBhZGRHYW1lT2JqZWN0KG9iamVjdDogR2FtZU9iamVjdCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZ2FtZU9iamVjdHMucHVzaCgpO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxufSIsImV4cG9ydCBjbGFzcyBUcmFuc2Zvcm0ge1xyXG5cclxuICAvLyBwdWJsaWMgZ2V0IGdhbWVPYmplY3QoKTogR2FtZU9iamVjdCB7XHJcbiAgLy8gICByZXR1cm4gdGhpcy5fZ2FtZU9iamVjdDtcclxuICAvLyB9XHJcbiAgLy8gcHJpdmF0ZSBfZ2FtZU9iamVjdDogR2FtZU9iamVjdDtcclxuXHJcbiAgcHJpdmF0ZSBfdHJhbnNmb3JtTm9kZTogQkFCWUxPTi5OdWxsYWJsZTxCQUJZTE9OLlRyYW5zZm9ybU5vZGU+ID0gbnVsbDtcclxuICBwcml2YXRlIF9tZXNoOiBCQUJZTE9OLk51bGxhYmxlPEJBQllMT04uQWJzdHJhY3RNZXNoPiA9IG51bGw7XHJcblxyXG4gIHB1YmxpYyBnZXQgdHJhbnNmb3JtTm9kZSgpOiBOdWxsYWJsZTxCQUJZTE9OLlRyYW5zZm9ybU5vZGU+IHtcclxuICAgIGlmICh0aGlzLl9tZXNoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9tZXNoO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLl90cmFuc2Zvcm1Ob2RlKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl90cmFuc2Zvcm1Ob2RlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IG1lc2goKTogTnVsbGFibGU8QkFCWUxPTi5BYnN0cmFjdE1lc2g+IHtcclxuICAgIHJldHVybiB0aGlzLl9tZXNoO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBpc01lc2goKTogYm9vbGVhbiB7XHJcbiAgICBpZiAodGhpcy5fbWVzaCkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgaXNFbXB0eSgpOiBib29sZWFuIHtcclxuICAgIGlmICh0aGlzLl90cmFuc2Zvcm1Ob2RlIHx8IHRoaXMuX21lc2gpIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBwdWJsaWMgZ2V0IHBhcmVudCgpOiBOdWxsYWJsZTxCQUJZTE9OLlRyYW5zZm9ybU5vZGU+XHJcblxyXG4gIHB1YmxpYyBnZXQgbmFtZSgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuX25hbWU7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgbmFtZSh2YWw6IHN0cmluZykge1xyXG4gICAgaWYgKHRoaXMuX3RyYW5zZm9ybU5vZGUpIHtcclxuICAgICAgdGhpcy5fdHJhbnNmb3JtTm9kZS5uYW1lID0gdmFsO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuX21lc2gpIHtcclxuICAgICAgdGhpcy5fbWVzaC5uYW1lID0gdmFsO1xyXG4gICAgfVxyXG4gICAgdGhpcy5fbmFtZSA9IHZhbDtcclxuICB9XHJcbiAgcHJpdmF0ZSBfbmFtZTogc3RyaW5nID0gJyc7XHJcblxyXG4gIHByaXZhdGUgX3RlbXBWZWM6IEJBQllMT04uVmVjdG9yMyA9IEJBQllMT04uVmVjdG9yMy5aZXJvKCk7XHJcblxyXG4gIHB1YmxpYyBnZXQgcGFyZW50KCk6IE51bGxhYmxlPFRyYW5zZm9ybT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX3BhcmVudDtcclxuICB9XHJcbiAgcHJpdmF0ZSBfcGFyZW50OiBOdWxsYWJsZTxUcmFuc2Zvcm0+ID0gbnVsbDtcclxuXHJcbiAgcHVibGljIHNldCBwYXJlbnQodmFsOiBOdWxsYWJsZTxUcmFuc2Zvcm0+KSB7XHJcbiAgICBpZiAoIXRoaXMuaXNFbXB0eSkge1xyXG4gICAgICBpZiAodmFsICYmICF2YWwuaXNFbXB0eSkge1xyXG4gICAgICAgIHRoaXMuX3RyYW5zZm9ybU5vZGUhLnNldFBhcmVudCh2YWwudHJhbnNmb3JtTm9kZSk7XHJcbiAgICAgICAgdGhpcy5fcGFyZW50ID0gdmFsO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuX3RyYW5zZm9ybU5vZGUhLnNldFBhcmVudChudWxsKTtcclxuICAgICAgICB0aGlzLl9wYXJlbnQgPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDojrflj5bnm7jlr7nlnZDmoIdcclxuICAgKi9cclxuICBwdWJsaWMgZ2V0IGxvY2FsUG9zaXRpb24oKTogQkFCWUxPTi5WZWN0b3IzIHtcclxuICAgIGlmICh0aGlzLmlzRW1wdHkpIHtcclxuICAgICAgcmV0dXJuIEJBQllMT04uVmVjdG9yMy5aZXJvKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl90ZW1wVmVjLmNvcHlGcm9tKHRoaXMudHJhbnNmb3JtTm9kZSEucG9zaXRpb24pO1xyXG4gICAgICByZXR1cm4gdGhpcy5fdGVtcFZlYztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiuvue9ruebuOWvueWdkOagh1xyXG4gICAqL1xyXG4gIHB1YmxpYyBzZXQgbG9jYWxQb3NpdGlvbih2YWw6IEJBQllMT04uVmVjdG9yMykge1xyXG4gICAgaWYgKCF0aGlzLmlzRW1wdHkpIHtcclxuICAgICAgdGhpcy50cmFuc2Zvcm1Ob2RlIS5wb3NpdGlvbiA9IHZhbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPlue7neWvueWdkOagh1xyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXQgcG9zaXRpb24oKTogQkFCWUxPTi5WZWN0b3IzIHtcclxuICAgIGlmICh0aGlzLmlzRW1wdHkpIHtcclxuICAgICAgcmV0dXJuIEJBQllMT04uVmVjdG9yMy5aZXJvKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl90ZW1wVmVjLmNvcHlGcm9tKHRoaXMudHJhbnNmb3JtTm9kZSEuZ2V0QWJzb2x1dGVQb3NpdGlvbigpKTtcclxuICAgICAgcmV0dXJuIHRoaXMuX3RlbXBWZWM7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDorr7nva7nu53lr7nlnZDmoIdcclxuICAgKi9cclxuICBwdWJsaWMgc2V0IHBvc2l0aW9uKHZhbDogQkFCWUxPTi5WZWN0b3IzKSB7XHJcbiAgICBpZiAoIXRoaXMuaXNFbXB0eSkge1xyXG4gICAgICB0aGlzLnRyYW5zZm9ybU5vZGUhLnNldEFic29sdXRlUG9zaXRpb24odmFsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluebuOWvueasp+aLieinkuW6plxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXQgbG9jYWxFdWxlckFuZ2xlcygpOiBCQUJZTE9OLlZlY3RvcjMge1xyXG4gICAgaWYgKHRoaXMuaXNFbXB0eSkge1xyXG4gICAgICByZXR1cm4gQkFCWUxPTi5WZWN0b3IzLlplcm8oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxldCBwYXJhOiBudW1iZXIgPSAxODAgLyBNYXRoLlBJO1xyXG4gICAgICByZXR1cm4gdGhpcy50cmFuc2Zvcm1Ob2RlIS5yb3RhdGlvbi5tdWx0aXBseUJ5RmxvYXRzKHBhcmEsIHBhcmEsIHBhcmEpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6K6+572u55u45a+55qyn5ouJ6KeS5bqmXHJcbiAgICovXHJcbiAgcHVibGljIHNldCBsb2NhbEV1bGVyQW5nbGVzKHZhbDogQkFCWUxPTi5WZWN0b3IzKSB7XHJcbiAgICBpZiAoIXRoaXMuaXNFbXB0eSkge1xyXG4gICAgICBsZXQgcGFyYTogbnVtYmVyID0gTWF0aC5QSSAvIDE4MDtcclxuICAgICAgdGhpcy50cmFuc2Zvcm1Ob2RlIS5yb3RhdGlvbiA9IHZhbC5tdWx0aXBseUJ5RmxvYXRzKHBhcmEsIHBhcmEsIHBhcmEpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W55u45a+56KeS5bqm77yI5byn5bqm77yJXHJcbiAgICovXHJcbiAgcHVibGljIGdldCBsb2NhbFJvdGF0aW9uKCk6IEJBQllMT04uVmVjdG9yMyB7XHJcbiAgICBpZiAodGhpcy5pc0VtcHR5KSB7XHJcbiAgICAgIHJldHVybiBCQUJZTE9OLlZlY3RvcjMuWmVybygpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fdGVtcFZlYy5jb3B5RnJvbSh0aGlzLnRyYW5zZm9ybU5vZGUhLnJvdGF0aW9uKTtcclxuICAgICAgcmV0dXJuIHRoaXMuX3RlbXBWZWM7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDorr7nva7nm7jlr7nop5LluqbvvIjlvKfluqbvvIlcclxuICAgKi9cclxuICBwdWJsaWMgc2V0IGxvY2FsUm90YXRpb24odmFsOiBCQUJZTE9OLlZlY3RvcjMpIHtcclxuICAgIGlmICghdGhpcy5pc0VtcHR5KSB7XHJcbiAgICAgIHRoaXMudHJhbnNmb3JtTm9kZSEucm90YXRpb24gPSB2YWw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDojrflj5bnu53lr7nmrKfmi4nop5LluqZcclxuICAgKi9cclxuICBwdWJsaWMgZ2V0IGV1bGVyQW5nbGVzKCk6IEJBQllMT04uVmVjdG9yMyB7XHJcbiAgICBpZiAodGhpcy5pc0VtcHR5KSB7XHJcbiAgICAgIHJldHVybiBCQUJZTE9OLlZlY3RvcjMuWmVybygpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbGV0IHBhcmVudDogTnVsbGFibGU8QkFCWUxPTi5Ob2RlPiA9IHRoaXMudHJhbnNmb3JtTm9kZSEucGFyZW50O1xyXG4gICAgICBsZXQgcGFyYTogbnVtYmVyID0gMTgwIC8gTWF0aC5QSTtcclxuICAgICAgdGhpcy50cmFuc2Zvcm1Ob2RlIS5zZXRQYXJlbnQobnVsbCk7XHJcbiAgICAgIGxldCByZXN1bHQ6IEJBQllMT04uVmVjdG9yMyA9IHRoaXMudHJhbnNmb3JtTm9kZSEucm90YXRpb24ubXVsdGlwbHlCeUZsb2F0cyhwYXJhLCBwYXJhLCBwYXJhKTtcclxuICAgICAgdGhpcy50cmFuc2Zvcm1Ob2RlIS5zZXRQYXJlbnQocGFyZW50KTtcclxuICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiuvue9rue7neWvueasp+aLieinkuW6plxyXG4gICAqL1xyXG4gIHB1YmxpYyBzZXQgZXVsZXJBbmdsZXModmFsOiBCQUJZTE9OLlZlY3RvcjMpIHtcclxuICAgIGlmICghdGhpcy5pc0VtcHR5KSB7XHJcbiAgICAgIGxldCBwYXJlbnQ6IE51bGxhYmxlPEJBQllMT04uTm9kZT4gPSB0aGlzLnRyYW5zZm9ybU5vZGUhLnBhcmVudDtcclxuICAgICAgbGV0IHBhcmE6IG51bWJlciA9IE1hdGguUEkgLyAxODA7XHJcbiAgICAgIHRoaXMudHJhbnNmb3JtTm9kZSEuc2V0UGFyZW50KG51bGwpO1xyXG4gICAgICB0aGlzLnRyYW5zZm9ybU5vZGUhLnJvdGF0aW9uID0gdmFsLm11bHRpcGx5QnlGbG9hdHMocGFyYSwgcGFyYSwgcGFyYSk7XHJcbiAgICAgIHRoaXMudHJhbnNmb3JtTm9kZSEuc2V0UGFyZW50KHBhcmVudCk7XHJcblxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W57ud5a+56KeS5bqm77yI5byn5bqm77yJXHJcbiAgICovXHJcbiAgcHVibGljIGdldCByb3RhdGlvbigpOiBCQUJZTE9OLlZlY3RvcjMge1xyXG4gICAgaWYgKHRoaXMuaXNFbXB0eSkge1xyXG4gICAgICByZXR1cm4gQkFCWUxPTi5WZWN0b3IzLlplcm8oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxldCBwYXJlbnQ6IE51bGxhYmxlPEJBQllMT04uTm9kZT4gPSB0aGlzLnRyYW5zZm9ybU5vZGUhLnBhcmVudDtcclxuICAgICAgdGhpcy50cmFuc2Zvcm1Ob2RlIS5zZXRQYXJlbnQobnVsbCk7XHJcbiAgICAgIHRoaXMuX3RlbXBWZWMuY29weUZyb20odGhpcy50cmFuc2Zvcm1Ob2RlIS5yb3RhdGlvbik7XHJcbiAgICAgIHRoaXMudHJhbnNmb3JtTm9kZSEuc2V0UGFyZW50KHBhcmVudCk7XHJcbiAgICAgIHJldHVybiB0aGlzLl90ZW1wVmVjO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6K6+572u57ud5a+56KeS5bqm77yI5byn5bqm77yJXHJcbiAgICovXHJcbiAgcHVibGljIHNldCByb3RhdGlvbih2YWw6IEJBQllMT04uVmVjdG9yMykge1xyXG4gICAgaWYgKCF0aGlzLmlzRW1wdHkpIHtcclxuICAgICAgbGV0IHBhcmVudDogTnVsbGFibGU8QkFCWUxPTi5Ob2RlPiA9IHRoaXMudHJhbnNmb3JtTm9kZSEucGFyZW50O1xyXG4gICAgICB0aGlzLnRyYW5zZm9ybU5vZGUhLnNldFBhcmVudChudWxsKTtcclxuICAgICAgdGhpcy50cmFuc2Zvcm1Ob2RlIS5yb3RhdGlvbiA9IHZhbDtcclxuICAgICAgdGhpcy50cmFuc2Zvcm1Ob2RlIS5zZXRQYXJlbnQocGFyZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICAvLyBUTyBiZSBjb250aW91ZWRcclxuXHJcbiAgcHVibGljIGdldCBjaGlsZENvdW50KCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gMDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBmb3J3YXJkOiBCQUJZTE9OLlZlY3RvcjMgPSBCQUJZTE9OLlZlY3RvcjMuRm9yd2FyZCgpO1xyXG5cclxuXHJcbiAgcHVibGljIGdldCBoaWVyYXJjaHlDb3VudCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIDA7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbG9jYWxTY2FsZTogQkFCWUxPTi5WZWN0b3IzID0gbmV3IEJBQllMT04uVmVjdG9yMygxLCAxLCAxKTtcclxuXHJcblxyXG4gIC8qKlxyXG4gICAqIEJhYnlsb25KUyBNZXNo5ZKMVHJhbnNmb3JtTm9kZeWMheijheexu++8jOS7v+eFp1VuaXR5RW5naW5l5pWw5o2u57uT5p6E77ybXHJcbiAgICogQHBhcmFtIG5hbWUg54mp5L2T5ZCN77yM6buY6K6k5Li64oCc56m654mp5L2T4oCd77ybXHJcbiAgICogQHBhcmFtIG1lc2ggQmFieWxvbkpTIE1lc2g7XHJcbiAgICogQHBhcmFtIG5vZGUgQmFieWxvbkpTIFRyYW5zZm9ybU5vZGU7XHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IobmFtZTogc3RyaW5nID0gJ+epuueJqeS9kycsIG1lc2g6IE51bGxhYmxlPEJBQllMT04uQWJzdHJhY3RNZXNoPiA9IG51bGwsIG5vZGU6IE51bGxhYmxlPEJBQllMT04uVHJhbnNmb3JtTm9kZT4gPSBudWxsKSB7XHJcbiAgICBpZiAobWVzaCkge1xyXG4gICAgICB0aGlzLl9tZXNoID0gbWVzaDtcclxuICAgICAgdGhpcy5fdHJhbnNmb3JtTm9kZSA9IG1lc2g7XHJcbiAgICAgIHRoaXMuX25hbWUgPSBtZXNoLm5hbWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAobm9kZSkge1xyXG4gICAgICAgIHRoaXMuX21lc2ggPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX3RyYW5zZm9ybU5vZGUgPSBub2RlO1xyXG4gICAgICAgIHRoaXMuX25hbWUgPSBub2RlLm5hbWU7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gaWYgKCFuYW1lKSBuYW1lID0gJ+epuueJqeS9kyc7XHJcbiAgICAgICAgdGhpcy5fbWVzaCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fdHJhbnNmb3JtTm9kZSA9IG5ldyBCQUJZTE9OLlRyYW5zZm9ybU5vZGUobmFtZSk7XHJcbiAgICAgICAgdGhpcy5fbmFtZSA9IG5hbWU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyDorr7nva7niLbniankvZNcclxuICAgIGlmICh0aGlzLl90cmFuc2Zvcm1Ob2RlKSB7XHJcbiAgICAgIGxldCB0ZW1wUGFyZW50OiBOdWxsYWJsZTxCQUJZTE9OLk5vZGU+ID0gdGhpcy5fdHJhbnNmb3JtTm9kZS5wYXJlbnQ7XHJcbiAgICAgIGlmICh0ZW1wUGFyZW50KSB7XHJcbiAgICAgICAgaWYgKHRlbXBQYXJlbnQgaW5zdGFuY2VvZiBCQUJZTE9OLkFic3RyYWN0TWVzaCkge1xyXG4gICAgICAgICAgdGhpcy5fcGFyZW50ID0gbmV3IFRyYW5zZm9ybSh0ZW1wUGFyZW50Lm5hbWUsIDxCQUJZTE9OLkFic3RyYWN0TWVzaD50ZW1wUGFyZW50KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5fcGFyZW50ID0gbmV3IFRyYW5zZm9ybSh0ZW1wUGFyZW50Lm5hbWUsIG51bGwsIDxCQUJZTE9OLlRyYW5zZm9ybU5vZGU+dGVtcFBhcmVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9wYXJlbnQgPSBudWxsO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5rK/5LiW55WM5oiW5bGA6YOo5Z2Q5qCH57O75bmz56e777ybXHJcbiAgICogQHBhcmFtIHRyYW5zbGF0aW9uIOW5s+enu+aWueWQkeWQkemHj++8m1xyXG4gICAqIEBwYXJhbSByZWxhdGl2ZVRvIOW5s+enu+WPguiAg+ezu++8jExPQ0FM5Li65bGA6YOo5Z2Q5qCH77yMV09STETkuLrkuJbnlYzlnZDmoIfvvJtcclxuICAgKi9cclxuICBwdWJsaWMgdHJhbnNsYXRlKHRyYW5zbGF0aW9uOiBCQUJZTE9OLlZlY3RvcjMsIHJlbGF0aXZlVG86IEJBQllMT04uU3BhY2UpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLnRyYW5zZm9ybU5vZGUpIHtcclxuICAgICAgdGhpcy50cmFuc2Zvcm1Ob2RlLnRyYW5zbGF0ZSh0cmFuc2xhdGlvbiwgMSwgcmVsYXRpdmVUbyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmsr/nnYDmn5DkuKrlj4LogIPniankvZPnmoTlsYDpg6jmlrnlkJHlkJHph4/lubPnp7vvvIzlj4LogIPniankvZPkuLpudWxs5pe277yM5YiZ5rK/5LiW55WM5Z2Q5qCH56e75Yqo77ybXHJcbiAgICogQHBhcmFtIHRyYW5zbGF0aW9uIOWPguiAg+eJqeS9k+eahOWxgOmDqOaWueWQkeWQkemHj++8m1xyXG4gICAqIEBwYXJhbSB0cmFucyDlubPnp7vlj4LogIPniankvZPvvJtcclxuICAgKi9cclxuICBwdWJsaWMgdHJhbnNsYXRlUmVsYXRpdmVUbyh0cmFuc2xhdGlvbjogQkFCWUxPTi5WZWN0b3IzLCB0cmFuczogVHJhbnNmb3JtKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy50cmFuc2Zvcm1Ob2RlKSB7XHJcbiAgICAgIGxldCBkaXJlY3Rpb246IEJBQllMT04uVmVjdG9yMyA9IHRyYW5zbGF0aW9uLmNsb25lKCk7XHJcbiAgICAgIGlmICh0cmFucyAmJiB0cmFucy50cmFuc2Zvcm1Ob2RlKSB7XHJcbiAgICAgICAgZGlyZWN0aW9uID0gdGhpcy50cmFuc2Zvcm1EaXJlY3Rpb24oZGlyZWN0aW9uKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLnRyYW5zZm9ybU5vZGUudHJhbnNsYXRlKGRpcmVjdGlvbiwgMSwgQkFCWUxPTi5TcGFjZS5XT1JMRCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmsr/mn5DkuKrovbToh6rovazvvIzlj6/pgInmi6nnm7jlr7nkuJbnlYzlnZDmoIfmiJboh6rouqvlnZDmoIfvvJtcclxuICAgKiBAcGFyYW0gZXVsZXJBbmdsZXMg6Ieq6L2s6L+Q5Yqo5ZCR6YeP77ybXHJcbiAgICogQHBhcmFtIHJlbGF0aXZlVG8g6Ieq6L2s5Y+C6ICD57O777ybXHJcbiAgICovXHJcbiAgcHVibGljIHJvdGF0ZShldWxlckFuZ2xlczogQkFCWUxPTi5WZWN0b3IzLCByZWxhdGl2ZVRvOiBCQUJZTE9OLlNwYWNlKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy50cmFuc2Zvcm1Ob2RlKSB7XHJcbiAgICAgIGxldCBheGlzOiBCQUJZTE9OLlZlY3RvcjMgPSBCQUJZTE9OLlZlY3RvcjMuWmVybygpLmNvcHlGcm9tKGV1bGVyQW5nbGVzLm5vcm1hbGl6ZSgpKTtcclxuICAgICAgbGV0IGFuZ2xlOiBudW1iZXIgPSBldWxlckFuZ2xlcy5sZW5ndGgoKTtcclxuICAgICAgdGhpcy50cmFuc2Zvcm1Ob2RlLnJvdGF0ZShheGlzLCBhbmdsZSwgcmVsYXRpdmVUbyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmsr/kuJbnlYzlnZDmoIfmn5DkuKrovbTlhazovazvvJtcclxuICAgKiBAcGFyYW0gcG9pbnQg5peL6L2s54K577ybXHJcbiAgICogQHBhcmFtIGF4aXMg5peL6L2s6L2077ybXHJcbiAgICogQHBhcmFtIHNwZWVkIOaXi+i9rOmAn+W6pu+8m1xyXG4gICAqL1xyXG4gIHB1YmxpYyByb3RhdGVBcm91bmQocG9pbnQ6IEJBQllMT04uVmVjdG9yMywgYXhpczogQkFCWUxPTi5WZWN0b3IzLCBzcGVlZDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy50cmFuc2Zvcm1Ob2RlKSB7XHJcbiAgICAgIHRoaXMudHJhbnNmb3JtTm9kZS5yb3RhdGVBcm91bmQocG9pbnQsIGF4aXMsIHNwZWVkKTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuXHJcblxyXG4gIC8qKlxyXG4gICAqIOWxgOmDqOWdkOagh+S9jee9rui9rOS4lueVjOWdkOagh+S9jee9ru+8m1xyXG4gICAqIEBwYXJhbSBsb2NhbF9wb3NpdGlvbiDlsYDpg6jlnZDmoIfkvY3nva7vvJtcclxuICAgKiDov5Tlm57mlrBWZWN0b3Iz5ZCR6YeP77ybXHJcbiAgICovXHJcbiAgcHVibGljIHRyYW5zZm9ybVBvc2l0aW9uKGxvY2FsX3Bvc2l0aW9uOiBCQUJZTE9OLlZlY3RvcjMpOiBCQUJZTE9OLlZlY3RvcjMge1xyXG4gICAgaWYgKHRoaXMudHJhbnNmb3JtTm9kZSkge1xyXG4gICAgICBsZXQgbWF0cml4OiBCQUJZTE9OLk1hdHJpeCA9IHRoaXMudHJhbnNmb3JtTm9kZS5jb21wdXRlV29ybGRNYXRyaXgoKTtcclxuICAgICAgcmV0dXJuIEJBQllMT04uVmVjdG9yMy5UcmFuc2Zvcm1Db29yZGluYXRlcyhsb2NhbF9wb3NpdGlvbiwgbWF0cml4KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBsb2NhbF9wb3NpdGlvbjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWxgOmDqOaWueWQkeWQkemHj+i9rOS4lueVjOaWueWQkeWQkemHj++8jOi9rOaNouWQjuS/neaMgeWQkemHj+mVv+W6puebuOetie+8m1xyXG4gICAqIEBwYXJhbSBsb2NhbF9kaXJlY3Rpb24g5bGA6YOo5pa55ZCR5ZCR6YeP77ybXHJcbiAgICog6L+U5Zue5pawVmVjdG9yM+WQkemHj++8m1xyXG4gICAqL1xyXG4gIHB1YmxpYyB0cmFuc2Zvcm1EaXJlY3Rpb24obG9jYWxfZGlyZWN0aW9uOiBCQUJZTE9OLlZlY3RvcjMpOiBCQUJZTE9OLlZlY3RvcjMge1xyXG4gICAgaWYgKHRoaXMudHJhbnNmb3JtTm9kZSkge1xyXG4gICAgICBsZXQgbWF0cml4OiBCQUJZTE9OLk1hdHJpeCA9IHRoaXMudHJhbnNmb3JtTm9kZS5jb21wdXRlV29ybGRNYXRyaXgoKTtcclxuICAgICAgcmV0dXJuIEJBQllMT04uVmVjdG9yMy5UcmFuc2Zvcm1Db29yZGluYXRlcyhsb2NhbF9kaXJlY3Rpb24sIG1hdHJpeCkuc3VidHJhY3QodGhpcy50cmFuc2Zvcm1Ob2RlLmdldEFic29sdXRlUG9zaXRpb24oKSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gbG9jYWxfZGlyZWN0aW9uO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5LiW55WM5Z2Q5qCH5L2N572u6L2s5bGA6YOo5Z2Q5qCH5L2N572u77ybXHJcbiAgICogQHBhcmFtIGdsb2JhbF9wb3NpdGlvbiDkuJbnlYzlnZDmoIfkvY3nva7vvJtcclxuICAgKiDov5Tlm57mlrBWZWN0b3Iz5ZCR6YeP77ybXHJcbiAgICovXHJcbiAgcHVibGljIGludmVyc2VUcmFuc2Zvcm1Qb3NpdGlvbihnbG9iYWxfcG9zaXRpb246IEJBQllMT04uVmVjdG9yMyk6IEJBQllMT04uVmVjdG9yMyB7XHJcbiAgICBpZiAodGhpcy50cmFuc2Zvcm1Ob2RlKSB7XHJcbiAgICAgIGxldCBtYXRyaXg6IEJBQllMT04uTWF0cml4ID0gQkFCWUxPTi5NYXRyaXguSW52ZXJ0KHRoaXMudHJhbnNmb3JtTm9kZS5jb21wdXRlV29ybGRNYXRyaXgoKSk7XHJcbiAgICAgIHJldHVybiBCQUJZTE9OLlZlY3RvcjMuVHJhbnNmb3JtQ29vcmRpbmF0ZXMoZ2xvYmFsX3Bvc2l0aW9uLCBtYXRyaXgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGdsb2JhbF9wb3NpdGlvbjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOS4lueVjOaWueWQkeWQkemHj+i9rOWxgOmDqOaWueWQkeWQkemHj++8jOi9rOaNouWQjuS/neaMgeWQkemHj+mVv+W6puebuOetie+8m1xyXG4gICAqIEBwYXJhbSBnbG9iYWxfZGlyZWN0aW9uIOS4lueVjOaWueWQkeWQkemHj++8m1xyXG4gICAqIOi/lOWbnuaWsFZlY3RvcjPlkJHph4/vvJtcclxuICAgKi9cclxuICBwdWJsaWMgaW52ZXJzZVRyYW5zZm9ybURpcmVjdGlvbihnbG9iYWxfZGlyZWN0aW9uOiBCQUJZTE9OLlZlY3RvcjMpOiBCQUJZTE9OLlZlY3RvcjMge1xyXG4gICAgaWYgKHRoaXMudHJhbnNmb3JtTm9kZSkge1xyXG4gICAgICBsZXQgbWF0cml4OiBCQUJZTE9OLk1hdHJpeCA9IEJBQllMT04uTWF0cml4LkludmVydCh0aGlzLnRyYW5zZm9ybU5vZGUuY29tcHV0ZVdvcmxkTWF0cml4KCkpO1xyXG4gICAgICBsZXQgcG9pbnRBOiBCQUJZTE9OLlZlY3RvcjMgPSBCQUJZTE9OLlZlY3RvcjMuVHJhbnNmb3JtQ29vcmRpbmF0ZXMoZ2xvYmFsX2RpcmVjdGlvbiwgbWF0cml4KTtcclxuICAgICAgbGV0IHBvaW50T3JpZ2luOiBCQUJZTE9OLlZlY3RvcjMgPSBCQUJZTE9OLlZlY3RvcjMuVHJhbnNmb3JtQ29vcmRpbmF0ZXMoQkFCWUxPTi5WZWN0b3IzLlplcm8oKSwgbWF0cml4KTtcclxuICAgICAgcmV0dXJuIHBvaW50QS5zdWJ0cmFjdChwb2ludE9yaWdpbik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gZ2xvYmFsX2RpcmVjdGlvbjtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgZGVzdHJveSgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLm1lc2gpIHRoaXMubWVzaC5kaXNwb3NlKCk7XHJcbiAgICBpZiAodGhpcy50cmFuc2Zvcm1Ob2RlKSB0aGlzLnRyYW5zZm9ybU5vZGUuZGlzcG9zZSgpO1xyXG4gIH1cclxuXHJcblxyXG4gIC8vIFRPRE9cclxuXHJcbiAgcHVibGljIGxvb2tBdCh0YXJnZXQ6IFRyYW5zZm9ybSwgd29ybGRVcDogQkFCWUxPTi5WZWN0b3IzID0gQkFCWUxPTi5WZWN0b3IzLlVwKCkpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0UGFyZW50KHBhcmVudDogTnVsbGFibGU8VHJhbnNmb3JtPik6IHZvaWQge1xyXG5cclxuICB9XHJcblxyXG4gIHB1YmxpYyBkZXRhY2hDaGlsZHJlbigpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZmluZENoaWxkKG5hbWU6IHN0cmluZyk6IHZvaWQge1xyXG5cclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgaXNDaGlsZE9mKG5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0Q2hpbGQoaW5kZXg6IG51bWJlcik6IHZvaWQge1xyXG5cclxuICB9XHJcblxyXG5cclxufSIsImV4cG9ydCAqIGZyb20gJy4vc2VsZWN0b3InO1xyXG5leHBvcnQgKiBmcm9tICcuL3NlbGVjdG9yLWhpc3RvcnknOyIsImV4cG9ydCBjbGFzcyBTZWxlY3Rvckhpc3Rvcnkge1xyXG4gIFxyXG59IiwiaW1wb3J0IHsgT2JzZXJ2ZXIgfSBmcm9tICcuLi8uLi9saWIvb2JzZXJ2ZXInO1xyXG5pbXBvcnQgeyBPYnNlcnZlckxpc3QgfSBmcm9tICcuLi8uLi9saWInO1xyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBTZWxlY3RvciB7XHJcblxyXG4gIHB1YmxpYyBlbmFibGVkOiBib29sZWFuID0gdHJ1ZTtcclxuXHJcbiAgcHVibGljIHNlbGVjdG9yOiBPYnNlcnZlckxpc3Q7XHJcblxyXG4gIHB1YmxpYyBldnRDaGFuZ2U6IGJvb2xlYW47XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuc2VsZWN0b3IgPSBuZXcgT2JzZXJ2ZXJMaXN0KCk7XHJcblxyXG4gICAgdGhpcy5ldnRDaGFuZ2UgPSBmYWxzZTtcclxuXHJcbiAgICB0aGlzLmluaXQoKTtcclxuICB9XHJcblxyXG5cclxuICBwcml2YXRlIGluaXQoKTogdm9pZCB7XHJcblxyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIC8vIOafkOS4qumdouadv+mAieS4rWl0ZW1cclxuICAgIGVkaXRvci5tZXRob2QoJ3NlbGVjdG9yOmFkZCcsICh0eXBlOiBzdHJpbmcsIGl0ZW06IE9ic2VydmVyKSA9PiB7XHJcblxyXG4gICAgICBpZiAoIXNlbGYuZW5hYmxlZClcclxuICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICBpZiAoc2VsZi5zZWxlY3Rvci5oYXMoaXRlbSkpXHJcbiAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAvLyBjb25zb2xlLndhcm4oJ3NlbGVjdG9yIGFkZOWFpeWPoycpO1xyXG5cclxuICAgICAgaWYgKHNlbGYuc2VsZWN0b3IubGVuZ3RoID4gMCAmJiBzZWxmLnNlbGVjdG9yLnR5cGUgIT09IHR5cGUpXHJcbiAgICAgICAgc2VsZi5zZWxlY3Rvci5jbGVhcigpO1xyXG5cclxuICAgICAgc2VsZi5zZWxlY3Rvci50eXBlID0gdHlwZTtcclxuICAgICAgc2VsZi5zZWxlY3Rvci5hZGQoaXRlbSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBkZXNlbGVjdGluZyBpdGVtXHJcbiAgICBlZGl0b3IubWV0aG9kKCdzZWxlY3RvcjpyZW1vdmUnLCAodHlwZTogc3RyaW5nLCBpdGVtOiBPYnNlcnZlcikgPT4ge1xyXG5cclxuICAgICAgLy8gY29uc29sZS53YXJuKCdzZWxlY3RvcjpyZW1vdmUg56e76ZmkJyk7XHJcblxyXG4gICAgICBpZiAoIXNlbGYuZW5hYmxlZClcclxuICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICBpZiAoIXNlbGYuc2VsZWN0b3IuaGFzKGl0ZW0pKVxyXG4gICAgICAgIHJldHVybjtcclxuXHJcbiAgICAgIHNlbGYuc2VsZWN0b3IucmVtb3ZlKGl0ZW0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gb2JzZXJ2ZXItbGlzdOS4reaciea3u+WKoGl0ZW1cclxuICAgIHRoaXMuc2VsZWN0b3Iub24oJ2FkZCcsIChpdGVtOiBPYnNlcnZlcikgPT4ge1xyXG4gICAgICAvLyBhZGQgaW5kZXggVE9ET1xyXG4gICAgICAvLyB0aGlzLnNldEluZGV4KHNlbGYuc2VsZWN0b3IudHlwZSwgaXRlbSk7XHJcblxyXG4gICAgICAvLyBjb25zb2xlLndhcm4oJ3NlbGVjdG9yIGxpc3Qg5LitIGFkZCBpdGVtJyk7XHJcblxyXG4gICAgICBlZGl0b3IuZW1pdCgnc2VsZWN0b3I6YWRkJywgaXRlbSwgc2VsZi5zZWxlY3Rvci50eXBlKTtcclxuXHJcbiAgICAgIGlmICghc2VsZi5ldnRDaGFuZ2UpIHtcclxuICAgICAgICBzZWxmLmV2dENoYW5nZSA9IHRydWU7XHJcbiAgICAgICAgc2V0VGltZW91dChzZWxmLmV2dENoYW5nZUZuLmJpbmQoc2VsZiksIDApO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgLy8gcmVtb3ZpbmdcclxuICAgIHRoaXMuc2VsZWN0b3Iub24oJ3JlbW92ZScsIChpdGVtOiBPYnNlcnZlcikgPT4ge1xyXG4gICAgICBlZGl0b3IuZW1pdCgnc2VsZWN0b3I6cmVtb3ZlJywgaXRlbSwgc2VsZi5zZWxlY3Rvci50eXBlKTtcclxuXHJcbiAgICAgIC8vIHJlbW92ZSBpbmRleFxyXG4gICAgICAvLyB0aGlzLnJlbW92ZUluZGV4KHNlbGYuc2VsZWN0b3IudHlwZSwgaXRlbSk7XHJcblxyXG4gICAgICBpZiAoc2VsZi5zZWxlY3Rvci5sZW5ndGggPT09IDApXHJcbiAgICAgICAgc2VsZi5zZWxlY3Rvci50eXBlID0gJyc7XHJcblxyXG4gICAgICBpZiAoIXNlbGYuZXZ0Q2hhbmdlKSB7XHJcbiAgICAgICAgc2VsZi5ldnRDaGFuZ2UgPSB0cnVlO1xyXG4gICAgICAgIHNldFRpbWVvdXQoc2VsZi5ldnRDaGFuZ2VGbi5iaW5kKHNlbGYpLCAwKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG5cclxuICB9XHJcblxyXG4gIHByaXZhdGUga2V5QnlUeXBlKHR5cGU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgY2FzZSAnZW50aXR5JzpcclxuICAgICAgICByZXR1cm4gJ3Jlc291cmNlX2lkJztcclxuICAgICAgY2FzZSAnYXNzZXQnOlxyXG4gICAgICAgIHJldHVybiAnaWQnO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuICcnO1xyXG4gIH1cclxuXHJcblxyXG4gIC8vIHByaXZhdGUgc2V0SW5kZXgodHlwZTogc3RyaW5nLCBpdGVtOiBPYnNlcnZlcik6IHZvaWQge1xyXG4gIC8vICAgdmFyIGtleSA9IHRoaXMua2V5QnlUeXBlKHR5cGUpO1xyXG4gIC8vICAgaWYgKCFrZXkpIHJldHVybjtcclxuXHJcbiAgLy8gICBpZiAoIWluZGV4W3R5cGVdKVxyXG4gIC8vICAgICBpbmRleFt0eXBlXSA9IHt9O1xyXG5cclxuICAvLyAgIGluZGV4W3R5cGVdW2l0ZW0uZ2V0W2tleV1dID0gaXRlbS5vbmNlKCdkZXN0cm95JywgZnVuY3Rpb24gKCkge1xyXG4gIC8vICAgICB2YXIgc3RhdGUgPSBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6aGlzdG9yeScpO1xyXG4gIC8vICAgICBpZiAoc3RhdGUpXHJcbiAgLy8gICAgICAgZWRpdG9yLmNhbGwoJ3NlbGVjdG9yOmhpc3RvcnknLCBmYWxzZSk7XHJcblxyXG4gIC8vICAgICBzZWxlY3Rvci5yZW1vdmUoaXRlbSk7XHJcbiAgLy8gICAgIGRlbGV0ZSBpbmRleFt0eXBlXVtpdGVtLmdldFtrZXldXTtcclxuXHJcbiAgLy8gICAgIGlmIChzdGF0ZSlcclxuICAvLyAgICAgICBlZGl0b3IuY2FsbCgnc2VsZWN0b3I6aGlzdG9yeScsIHRydWUpO1xyXG4gIC8vICAgfSk7XHJcbiAgLy8gfVxyXG5cclxuXHJcbiAgcHJpdmF0ZSBldnRDaGFuZ2VGbigpOiB2b2lkIHtcclxuICAgIHRoaXMuZXZ0Q2hhbmdlID0gZmFsc2U7XHJcbiAgICBjb25zb2xlLmxvZygnc2VsZWN0b3IgY2hhbmdlIOS6i+S7ticpO1xyXG4gICAgZWRpdG9yLmVtaXQoJ3NlbGVjdG9yOmNoYW5nZScsIHRoaXMuc2VsZWN0b3IudHlwZSwgdGhpcy5zZWxlY3Rvci5hcnJheSgpKTtcclxuICB9XHJcblxyXG5cclxufSIsImV4cG9ydCAqIGZyb20gJy4vdG9vbGJhci10b3AtY29udHJvbCc7IiwiaW1wb3J0IHsgUGFuZWwsIEJ1dHRvbiwgVG9vbHRpcCB9IGZyb20gXCIuLi8uLi91aVwiO1xyXG5pbXBvcnQgeyBWZXJ5RW5naW5lIH0gZnJvbSBcIi4uLy4uL2VuZ2luZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRvb2xiYXJUb3BDb250cm9sIHtcclxuXHJcblxyXG5cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIC8vIHBhbmVsXHJcbiAgICB2YXIgcGFuZWwgPSBuZXcgUGFuZWwoKTtcclxuICAgIHBhbmVsLmNsYXNzIS5hZGQoJ3RvcC1jb250cm9scycpO1xyXG4gICAgVmVyeUVuZ2luZS52aWV3UGFuZWwuYXBwZW5kKHBhbmVsKTtcclxuXHJcbiAgICBlZGl0b3IubWV0aG9kKCdsYXlvdXQudG9vbGJhci5sYXVuY2gnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHJldHVybiBwYW5lbDtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIGZ1bGxzY3JlZW4gYnV0dG9uXHJcbiAgICB2YXIgYnV0dG9uRXhwYW5kID0gbmV3IEJ1dHRvbignJiM1NzYzOTsnKTtcclxuICAgIGJ1dHRvbkV4cGFuZC5jbGFzcyEuYWRkKCdpY29uJywgJ2V4cGFuZCcpO1xyXG4gICAgcGFuZWwuYXBwZW5kKGJ1dHRvbkV4cGFuZCk7XHJcblxyXG4gICAgYnV0dG9uRXhwYW5kLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgZWRpdG9yLmNhbGwoJ3ZpZXdwb3J0OmV4cGFuZCcpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgZWRpdG9yLm9uKCd2aWV3cG9ydDpleHBhbmQnLCBmdW5jdGlvbiAoc3RhdGU6IGJvb2xlYW4pIHtcclxuICAgICAgaWYgKHN0YXRlKSB7XHJcbiAgICAgICAgdG9vbHRpcEV4cGFuZC50ZXh0ID0gJ+i/mOWOnyc7XHJcbiAgICAgICAgYnV0dG9uRXhwYW5kLmNsYXNzIS5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRvb2x0aXBFeHBhbmQudGV4dCA9ICfmnIDlpKfljJYnO1xyXG4gICAgICAgIGJ1dHRvbkV4cGFuZC5jbGFzcyEucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdG9vbHRpcEV4cGFuZC5oaWRkZW4gPSB0cnVlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdmFyIHRvb2x0aXBFeHBhbmQgPSBUb29sdGlwLmF0dGFjaCh7XHJcbiAgICAgIHRhcmdldDogYnV0dG9uRXhwYW5kLmVsZW1lbnQhLFxyXG4gICAgICB0ZXh0OiAn5pyA5aSn5YyWJyxcclxuICAgICAgYWxpZ246ICd0b3AnLFxyXG4gICAgICByb290OiBWZXJ5RW5naW5lLnJvb3RQYW5lbFxyXG4gICAgfSk7XHJcblxyXG5cclxuICB9XHJcblxyXG5cclxufSIsImV4cG9ydCBjbGFzcyBDb21wb25lbnRzTG9nb3Mge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcbiAgICBlZGl0b3IubWV0aG9kKCdjb21wb25lbnRzOmxvZ29zJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgICdhbmltYXRpb24nOiAnJiM1Nzg3NTsnLFxyXG4gICAgICAgICdhdWRpb2xpc3RlbmVyJzogJyYjNTc3NTA7JyxcclxuICAgICAgICAnYXVkaW9zb3VyY2UnOiAnJiM1Nzc1MTsnLFxyXG4gICAgICAgICdzb3VuZCc6ICcmIzU3NzUxOycsXHJcbiAgICAgICAgJ2NhbWVyYSc6ICcmIzU3ODc0OycsXHJcbiAgICAgICAgJ2NvbGxpc2lvbic6ICcmIzU3NzM1OycsXHJcbiAgICAgICAgJ2RpcmVjdGlvbmFsJzogJyYjNTc3NDY7JyxcclxuICAgICAgICAncG9pbnQnOiAnJiM1Nzc0NTsnLFxyXG4gICAgICAgICdzcG90JzogJyYjNTc3NDc7JyxcclxuICAgICAgICAnbGlnaHQnOiAnJiM1Nzc0ODsnLFxyXG4gICAgICAgICdtb2RlbCc6ICcmIzU3NzM2OycsXHJcbiAgICAgICAgJ3BhcnRpY2xlc3lzdGVtJzogJyYjNTc3NTM7JyxcclxuICAgICAgICAncmlnaWRib2R5JzogJyYjNTc3Mzc7JyxcclxuICAgICAgICAnc2NyaXB0JzogJyYjNTc5MTA7JyxcclxuICAgICAgICAnc2NyZWVuJzogJyYjNTgzNzE7JyxcclxuICAgICAgICAnc3ByaXRlJzogJyYjNTgyNjE7JyxcclxuICAgICAgICAnZWxlbWVudCc6ICcmIzU4MjMyOycsXHJcbiAgICAgICAgJ2xheW91dGdyb3VwJzogJyYjNTc2Njc7JyxcclxuICAgICAgICAnbGF5b3V0Y2hpbGQnOiAnJiM1NzY2NzsnLFxyXG4gICAgICAgICdzY3JvbGx2aWV3JzogJyYjNTgzNzY7JyxcclxuICAgICAgICAnc2Nyb2xsYmFyJzogJyYjNTgzNzc7JyxcclxuICAgICAgICAnYnV0dG9uJzogJyYjNTgzNzM7JyxcclxuICAgICAgICAnem9uZSc6ICcmIzU3OTEwOycsXHJcbiAgICAgICAgJzJkLXNjcmVlbic6ICcmIzU4MzcxOycsXHJcbiAgICAgICAgJzNkLXNjcmVlbic6ICcmIzU4MzcyOycsXHJcbiAgICAgICAgJ3RleHQtZWxlbWVudCc6ICcmIzU4Mzc0OycsXHJcbiAgICAgICAgJ2ltYWdlLWVsZW1lbnQnOiAnJiM1ODAwNTsnLFxyXG4gICAgICAgICdncm91cC1lbGVtZW50JzogJyYjNTgzNzU7JyxcclxuICAgICAgICAndXNlcmludGVyZmFjZSc6ICcmIzU4MzcwOydcclxuICAgICAgfTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcblxyXG5cclxufSIsImV4cG9ydCBjbGFzcyBDb250ZXh0TWVudSB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgIC8vIOmYu+atoum7mOiupOm8oOagh+WPs+mUruiPnOWNlVxyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51JywgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0sIGZhbHNlKTtcclxuICB9XHJcblxyXG59IiwiZXhwb3J0IGNsYXNzIERlYnVnIHtcclxuXHJcbiAgICBwcml2YXRlIGFsbG93OiBib29sZWFuO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihhbGxvdzogYm9vbGVhbiA9IHRydWUpIHtcclxuICAgICAgICB0aGlzLmFsbG93ID0gYWxsb3c7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGxvZyhtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pOiB2b2lkIHtcclxuICAgICAgICBpZiAoIXRoaXMuYWxsb3cpIHJldHVybjtcclxuICAgICAgICBjb25zb2xlLmxvZyhtZXNzYWdlLCBvcHRpb25hbFBhcmFtcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHdhcm4obWVzc2FnZT86IGFueSwgLi4ub3B0aW9uYWxQYXJhbXM6IGFueVtdKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmFsbG93KSByZXR1cm47XHJcbiAgICAgICAgY29uc29sZS53YXJuKG1lc3NhZ2UsIG9wdGlvbmFsUGFyYW1zKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZXJyb3IobWVzc2FnZT86IGFueSwgLi4ub3B0aW9uYWxQYXJhbXM6IGFueVtdKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmFsbG93KSByZXR1cm47XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlLCBvcHRpb25hbFBhcmFtcyk7XHJcbiAgICB9XHJcblxyXG59IiwiZXhwb3J0IGNsYXNzIEV2ZW50UHJveHkge1xyXG5cclxuICAgIHByaXZhdGUgX2NhbGxiYWNrczogeyBba2V5OiBzdHJpbmddOiBGdW5jdGlvbltdIH07XHJcbiAgICBwcml2YXRlIF9maXJlZDogeyBba2V5OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xyXG4gICAgcHJpdmF0ZSBfYWZ0ZXI6IGFueTtcclxuXHJcbiAgICBwdWJsaWMgZGVidWc6IEZ1bmN0aW9uO1xyXG5cclxuICAgIC8qIVxyXG4gICAgICogcmVmc1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIFNMSUNFID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xyXG4gICAgcHJpdmF0ZSBDT05DQVQgPSBBcnJheS5wcm90b3R5cGUuY29uY2F0O1xyXG4gICAgcHJpdmF0ZSBBTExfRVZFTlQ6IHN0cmluZyA9ICdfX2FsbF9fJztcclxuXHJcbiAgICBwcml2YXRlIGxhdGVyID0gKHR5cGVvZiBzZXRJbW1lZGlhdGUgIT09ICd1bmRlZmluZWQnICYmIHNldEltbWVkaWF0ZSkgfHxcclxuICAgICAgICAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MubmV4dFRpY2spIHx8IGZ1bmN0aW9uIChmbikge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZuLCAwKTtcclxuICAgICAgICB9O1xyXG5cclxuXHJcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoZGVidWc/OiAoKSA9PiB2b2lkKSB7XHJcbiAgICAgICAgdGhpcy5kZWJ1ZyA9IGRlYnVnIHx8IGZ1bmN0aW9uICgpIHsgfTtcclxuICAgICAgICB0aGlzLl9jYWxsYmFja3MgPSB7fTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYWRkTGlzdGVuZXIoZXY6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uKTogRXZlbnRQcm94eSB7XHJcbiAgICAgICAgdGhpcy5kZWJ1ZygnQWRkIGxpc3RlbmVyIGZvciAlcycsIGV2KTtcclxuICAgICAgICB0aGlzLl9jYWxsYmFja3NbZXZdID0gdGhpcy5fY2FsbGJhY2tzW2V2XSB8fCBbXTtcclxuICAgICAgICB0aGlzLl9jYWxsYmFja3NbZXZdLnB1c2goY2FsbGJhY2spO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBiaW5kKGV2OiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbik6IEV2ZW50UHJveHkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmFkZExpc3RlbmVyKGV2LCBjYWxsYmFjayk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uKGV2OiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbik6IEV2ZW50UHJveHkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmFkZExpc3RlbmVyKGV2LCBjYWxsYmFjayk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN1YnNjcmliZShldjogc3RyaW5nLCBjYWxsYmFjazogRnVuY3Rpb24pOiBFdmVudFByb3h5IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hZGRMaXN0ZW5lcihldiwgY2FsbGJhY2spO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBoZWFkYmluZChldjogc3RyaW5nLCBjYWxsYmFjazogRnVuY3Rpb24pOiBFdmVudFByb3h5IHtcclxuICAgICAgICB0aGlzLmRlYnVnKCdBZGQgbGlzdGVuZXIgZm9yICVzJywgZXYpO1xyXG4gICAgICAgIHRoaXMuX2NhbGxiYWNrc1tldl0gPSB0aGlzLl9jYWxsYmFja3NbZXZdIHx8IFtdO1xyXG4gICAgICAgIHRoaXMuX2NhbGxiYWNrc1tldl0udW5zaGlmdChjYWxsYmFjayk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbW92ZUxpc3RlbmVyKGV2ZW50bmFtZT86IHN0cmluZywgY2FsbGJhY2s/OiBOdWxsYWJsZTxGdW5jdGlvbj4pOiBFdmVudFByb3h5IHtcclxuICAgICAgICB2YXIgY2FsbHMgPSB0aGlzLl9jYWxsYmFja3M7XHJcbiAgICAgICAgaWYgKCFldmVudG5hbWUpIHtcclxuICAgICAgICAgICAgdGhpcy5kZWJ1ZygnUmVtb3ZlIGFsbCBsaXN0ZW5lcnMnKTtcclxuICAgICAgICAgICAgdGhpcy5fY2FsbGJhY2tzID0ge307XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKCFjYWxsYmFjaykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kZWJ1ZygnUmVtb3ZlIGFsbCBsaXN0ZW5lcnMgb2YgJXMnLCBldmVudG5hbWUpO1xyXG4gICAgICAgICAgICAgICAgY2FsbHNbZXZlbnRuYW1lXSA9IFtdO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdmFyIGxpc3QgPSBjYWxsc1tldmVudG5hbWVdO1xyXG4gICAgICAgICAgICAgICAgaWYgKGxpc3QpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbCA9IGxpc3QubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayA9PT0gbGlzdFtpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kZWJ1ZygnUmVtb3ZlIGEgbGlzdGVuZXIgb2YgJXMnLCBldmVudG5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC5zcGxpY2UoaSwgMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVuYmluZChldmVudG5hbWU/OiBzdHJpbmcsIGNhbGxiYWNrPzogTnVsbGFibGU8RnVuY3Rpb24+KTogRXZlbnRQcm94eSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVtb3ZlTGlzdGVuZXIoZXZlbnRuYW1lLCBjYWxsYmFjayk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbW92ZUFsbExpc3RlbmVycygpOiBFdmVudFByb3h5IHtcclxuICAgICAgICByZXR1cm4gdGhpcy51bmJpbmQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYmluZEZvckFsbChjYWxsYmFjazogRnVuY3Rpb24pOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmJpbmQodGhpcy5BTExfRVZFTlQsIGNhbGxiYWNrKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdW5iaW5kRm9yQWxsKGNhbGxiYWNrOiBGdW5jdGlvbik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudW5iaW5kKHRoaXMuQUxMX0VWRU5ULCBjYWxsYmFjayk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHB1YmxpYyB0cmlnZ2VyKGV2ZW50bmFtZTogc3RyaW5nLCBkYXRhPzogYW55LCAuLi5hcmdzOiBhbnlbXSk6IEV2ZW50UHJveHkge1xyXG4gICAgICAgIHZhciBsaXN0LCBldiwgY2FsbGJhY2ssIGksIGw7XHJcbiAgICAgICAgdmFyIGJvdGggPSAyO1xyXG4gICAgICAgIHZhciBjYWxscyA9IHRoaXMuX2NhbGxiYWNrcztcclxuICAgICAgICB0aGlzLmRlYnVnKCdFbWl0IGV2ZW50ICVzIHdpdGggZGF0YSAlaicsIGV2ZW50bmFtZSwgZGF0YSk7XHJcbiAgICAgICAgLy8g6L+Q6KGM5b2T5YmNZXblkoxBTExcclxuICAgICAgICB3aGlsZSAoYm90aC0tKSB7XHJcbiAgICAgICAgICAgIGV2ID0gYm90aCA/IGV2ZW50bmFtZSA6IHRoaXMuQUxMX0VWRU5UO1xyXG4gICAgICAgICAgICBsaXN0ID0gY2FsbHNbZXZdO1xyXG4gICAgICAgICAgICBpZiAobGlzdCkge1xyXG4gICAgICAgICAgICAgICAgZm9yIChpID0gMCwgbCA9IGxpc3QubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEoY2FsbGJhY2sgPSBsaXN0W2ldKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0LnNwbGljZShpLCAxKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaS0tO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsLS07XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFyZ3MgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gYm90aCA/IDEgOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gc3RhcnQ7IGogPCBhcmd1bWVudHMubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3MucHVzaChhcmd1bWVudHNbal0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHRoaXMsIGFyZ3MpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZW1pdChldmVudG5hbWU6IHN0cmluZywgZGF0YT86IGFueSk6IEV2ZW50UHJveHkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRyaWdnZXIoZXZlbnRuYW1lLCBkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZmlyZShldmVudG5hbWU6IHN0cmluZywgZGF0YT86IGFueSk6IEV2ZW50UHJveHkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRyaWdnZXIoZXZlbnRuYW1lLCBkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25jZShldjogc3RyaW5nLCBjYWxsYmFjazogRnVuY3Rpb24pOiBFdmVudFByb3h5IHtcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgdmFyIHdyYXBwZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHNlbGYsIGFyZ3VtZW50cyk7XHJcbiAgICAgICAgICAgIHNlbGYudW5iaW5kKGV2LCB3cmFwcGVyKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYmluZChldiwgd3JhcHBlcik7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVE9ET1xyXG4gICAgLy8gcHVibGljIGVtaXRMYXRlcigpIHtcclxuICAgIC8vICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAvLyAgICAgdmFyIGFyZ3M6IGFueVtdID0gW107XHJcblxyXG4gICAgLy8gICAgIGZvcih2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgIC8vICAgICAgICAgYXJncy5wdXNoKGFyZ3VtZW50c1tpXSk7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICAgIHRoaXMubGF0ZXIoZnVuY3Rpb24gKCkge1xyXG4gICAgLy8gICAgICAgICBzZWxmLnRyaWdnZXIuYXBwbHkoc2VsZiwgYXJncyk7XHJcbiAgICAvLyAgICAgfSk7XHJcbiAgICAvLyB9XHJcblxyXG5cclxuICAgIHB1YmxpYyBpbW1lZGlhdGUoZXY6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uLCBkYXRhOiBhbnkpIHtcclxuICAgICAgICB0aGlzLmJpbmQoZXYsIGNhbGxiYWNrKTtcclxuICAgICAgICB0aGlzLnRyaWdnZXIoZXYsIGRhdGEpO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX2Fzc2lnbihldmVudG5hbWVzOiBzdHJpbmdbXSwgY2I6IEZ1bmN0aW9uLCBvbmNlOiBib29sZWFuKTogdm9pZCB7XHJcbiAgICAgICAgdmFyIHByb3h5ID0gdGhpcztcclxuICAgICAgICAvLyB2YXIgYXJnc0xlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XHJcbiAgICAgICAgdmFyIHRpbWVzID0gMDtcclxuICAgICAgICB2YXIgZmxhZzogeyBba2V5OiBzdHJpbmddOiBib29sZWFuIH0gPSB7fTtcclxuXHJcbiAgICAgICAgLy8gQ2hlY2sgdGhlIGFyZ3VtZW50cyBsZW5ndGguXHJcbiAgICAgICAgLy8gaWYgKGFyZ3NMZW5ndGggPCAzKSB7XHJcbiAgICAgICAgLy8gICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgdmFyIGV2ZW50cyA9IGV2ZW50bmFtZXM7XHJcbiAgICAgICAgdmFyIGNhbGxiYWNrID0gY2I7XHJcbiAgICAgICAgdmFyIGlzT25jZSA9IG9uY2U7XHJcblxyXG4gICAgICAgIC8vIENoZWNrIHRoZSBjYWxsYmFjayB0eXBlLlxyXG4gICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgIT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZGVidWcoJ0Fzc2lnbiBsaXN0ZW5lciBmb3IgZXZlbnRzICVqLCBvbmNlIGlzICVzJywgZXZlbnRzLCAhIWlzT25jZSk7XHJcblxyXG4gICAgICAgIHZhciBiaW5kID0gZnVuY3Rpb24gKGtleTogc3RyaW5nKSB7XHJcbiAgICAgICAgICAgIGlmIChpc09uY2UpIHtcclxuICAgICAgICAgICAgICAgIHByb3h5Lm9uY2Uoa2V5LCAoZGF0YTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJveHkuX2ZpcmVkW2tleV0gPSBwcm94eS5fZmlyZWRba2V5XSB8fCB7fTtcclxuICAgICAgICAgICAgICAgICAgICBwcm94eS5fZmlyZWRba2V5XS5kYXRhID0gZGF0YTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIWZsYWdba2V5XSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGFnW2tleV0gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lcysrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcHJveHkuYmluZChrZXksIChkYXRhOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBwcm94eS5fZmlyZWRba2V5XSA9IHByb3h5Ll9maXJlZFtrZXldIHx8IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgIHByb3h5Ll9maXJlZFtrZXldLmRhdGEgPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghZmxhZ1trZXldKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsYWdba2V5XSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVzKys7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBsZW5ndGggPSBldmVudHMubGVuZ3RoO1xyXG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgYmluZChldmVudHNbaW5kZXhdKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBfYWxsID0gZnVuY3Rpb24gKGV2ZW50OiBzdHJpbmcpIHtcclxuICAgICAgICAgICAgaWYgKHRpbWVzIDwgbGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCFmbGFnW2V2ZW50XSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBkYXRhID0gW107XHJcbiAgICAgICAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgIGRhdGEucHVzaChwcm94eS5fZmlyZWRbZXZlbnRzW2luZGV4XV0uZGF0YSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGlzT25jZSkge1xyXG4gICAgICAgICAgICAgICAgcHJveHkudW5iaW5kRm9yQWxsKF9hbGwpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHByb3h5LmRlYnVnKCdFdmVudHMgJWogYWxsIGVtaXRlZCB3aXRoIGRhdGEgJWonLCBldmVudHMsIGRhdGEpO1xyXG4gICAgICAgICAgICBjYWxsYmFjay5hcHBseShudWxsLCBkYXRhKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHByb3h5LmJpbmRGb3JBbGwoX2FsbCk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHB1YmxpYyBhbGwoZXZlbnRuYW1lMTogc3RyaW5nIHwgc3RyaW5nW10sIGV2ZW50bmFtZTI6IHN0cmluZyB8IHN0cmluZ1tdLCBjYWxsYmFjazogRnVuY3Rpb24pOiBFdmVudFByb3h5IHtcclxuICAgICAgICB2YXIgbmFtZXM6IHN0cmluZ1tdID0gW107XHJcbiAgICAgICAgaWYgKHR5cGVvZiBldmVudG5hbWUxID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBuYW1lcy5wdXNoKGV2ZW50bmFtZTEpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG5hbWVzID0gdGhpcy5DT05DQVQuYXBwbHkobmFtZXMsIDxzdHJpbmdbXT5ldmVudG5hbWUxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiBldmVudG5hbWUyID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBuYW1lcy5wdXNoKGV2ZW50bmFtZTIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG5hbWVzID0gdGhpcy5DT05DQVQuYXBwbHkobmFtZXMsIDxzdHJpbmdbXT5ldmVudG5hbWUyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fYXNzaWduLmFwcGx5KHRoaXMsIFtuYW1lcywgY2FsbGJhY2ssIHRydWVdKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNzaWduKGV2ZW50bmFtZTE6IHN0cmluZyB8IHN0cmluZ1tdLCBldmVudG5hbWUyOiBzdHJpbmcgfCBzdHJpbmdbXSwgY2FsbGJhY2s6IEZ1bmN0aW9uKTogRXZlbnRQcm94eSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYWxsKGV2ZW50bmFtZTEsIGV2ZW50bmFtZTIsIGNhbGxiYWNrKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZmFpbChjYWxsYmFjazogRnVuY3Rpb24pOiBFdmVudFByb3h5IHtcclxuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XHJcbiAgICAgICAgdGhhdC5vbmNlKCdlcnJvcicsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhhdC51bmJpbmQoKTtcclxuICAgICAgICAgICAgLy8gcHV0IGFsbCBhcmd1bWVudHMgdG8gdGhlIGVycm9yIGhhbmRsZXJcclxuICAgICAgICAgICAgLy8gZmFpbChmdW5jdGlvbihlcnIsIGFyZ3MxLCBhcmdzMiwgLi4uKXt9KVxyXG4gICAgICAgICAgICBjYWxsYmFjay5hcHBseShudWxsLCBhcmd1bWVudHMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB0aHJvdyhlcnI6IEVycm9yKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHRhaWwoZXZlbnRuYW1lMTogc3RyaW5nIHwgc3RyaW5nW10sIGV2ZW50bmFtZTI6IHN0cmluZyB8IHN0cmluZ1tdLCBjYWxsYmFjazogRnVuY3Rpb24pOiBFdmVudFByb3h5IHtcclxuICAgICAgICB2YXIgbmFtZXM6IHN0cmluZ1tdID0gW107XHJcbiAgICAgICAgaWYgKHR5cGVvZiBldmVudG5hbWUxID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBuYW1lcy5wdXNoKGV2ZW50bmFtZTEpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG5hbWVzID0gdGhpcy5DT05DQVQuYXBwbHkobmFtZXMsIDxzdHJpbmdbXT5ldmVudG5hbWUxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiBldmVudG5hbWUyID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBuYW1lcy5wdXNoKGV2ZW50bmFtZTIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG5hbWVzID0gdGhpcy5DT05DQVQuYXBwbHkobmFtZXMsIDxzdHJpbmdbXT5ldmVudG5hbWUyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fYXNzaWduLmFwcGx5KHRoaXMsIFtuYW1lcywgY2FsbGJhY2ssIGZhbHNlXSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzc2lnbkFsbChldmVudG5hbWUxOiBzdHJpbmcgfCBzdHJpbmdbXSwgZXZlbnRuYW1lMjogc3RyaW5nIHwgc3RyaW5nW10sIGNhbGxiYWNrOiBGdW5jdGlvbik6IEV2ZW50UHJveHkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRhaWwoZXZlbnRuYW1lMSwgZXZlbnRuYW1lMiwgY2FsbGJhY2spO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc3NpZ25BbHdheXMoZXZlbnRuYW1lMTogc3RyaW5nIHwgc3RyaW5nW10sIGV2ZW50bmFtZTI6IHN0cmluZyB8IHN0cmluZ1tdLCBjYWxsYmFjazogRnVuY3Rpb24pOiBFdmVudFByb3h5IHtcclxuICAgICAgICByZXR1cm4gdGhpcy50YWlsKGV2ZW50bmFtZTEsIGV2ZW50bmFtZTIsIGNhbGxiYWNrKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBjYWxsYmFjayB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBldmVudCBiZSBmaXJlZCBOIHRpbWVzLlxyXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50bmFtZSBFdmVudCBuYW1lLlxyXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IHRpbWVzIE4gdGltZXMuXHJcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjaywgdGhhdCB3aWxsIGJlIGNhbGxlZCBhZnRlciBldmVudCB3YXMgZmlyZWQgTiB0aW1lcy5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGFmdGVyKGV2ZW50bmFtZTogc3RyaW5nLCB0aW1lczogbnVtYmVyLCBjYWxsYmFjazogRnVuY3Rpb24pOiBFdmVudFByb3h5IHtcclxuICAgICAgICBpZiAodGltZXMgPT09IDApIHtcclxuICAgICAgICAgICAgY2FsbGJhY2suY2FsbChudWxsLCBbXSk7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgcHJveHkgPSB0aGlzLFxyXG4gICAgICAgICAgICBmaXJlZERhdGE6IGFueVtdID0gW107XHJcbiAgICAgICAgdGhpcy5fYWZ0ZXIgPSB0aGlzLl9hZnRlciB8fCB7fTtcclxuICAgICAgICB2YXIgZ3JvdXAgPSBldmVudG5hbWUgKyAnX2dyb3VwJztcclxuICAgICAgICB0aGlzLl9hZnRlcltncm91cF0gPSB7XHJcbiAgICAgICAgICAgIGluZGV4OiAwLFxyXG4gICAgICAgICAgICByZXN1bHRzOiBbXVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5kZWJ1ZygnQWZ0ZXIgZW1pdCAlcyB0aW1lcywgZXZlbnQgJXNcXCdzIGxpc3Rlbm5lciB3aWxsIGV4ZWN1dGUnLCB0aW1lcywgZXZlbnRuYW1lKTtcclxuICAgICAgICB2YXIgYWxsID0gZnVuY3Rpb24gKG5hbWU6IHN0cmluZywgZGF0YTogYW55KSB7XHJcbiAgICAgICAgICAgIGlmIChuYW1lID09PSBldmVudG5hbWUpIHtcclxuICAgICAgICAgICAgICAgIHRpbWVzLS07XHJcbiAgICAgICAgICAgICAgICBmaXJlZERhdGEucHVzaChkYXRhKTtcclxuICAgICAgICAgICAgICAgIGlmICh0aW1lcyA8IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBwcm94eS5kZWJ1ZygnRXZlbnQgJXMgd2FzIGVtaXQgJXMsIGFuZCBleGVjdXRlIHRoZSBsaXN0ZW5uZXInLCBldmVudG5hbWUsIHRpbWVzKTtcclxuICAgICAgICAgICAgICAgICAgICBwcm94eS51bmJpbmRGb3JBbGwoYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjay5hcHBseShudWxsLCBbZmlyZWREYXRhXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKG5hbWUgPT09IGdyb3VwKSB7XHJcbiAgICAgICAgICAgICAgICB0aW1lcy0tO1xyXG4gICAgICAgICAgICAgICAgcHJveHkuX2FmdGVyW2dyb3VwXS5yZXN1bHRzW2RhdGEuaW5kZXhdID0gZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICBpZiAodGltZXMgPCAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJveHkuZGVidWcoJ0V2ZW50ICVzIHdhcyBlbWl0ICVzLCBhbmQgZXhlY3V0ZSB0aGUgbGlzdGVubmVyJywgZXZlbnRuYW1lLCB0aW1lcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJveHkudW5iaW5kRm9yQWxsKGFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2suY2FsbChudWxsLCBwcm94eS5fYWZ0ZXJbZ3JvdXBdLnJlc3VsdHMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBwcm94eS5iaW5kRm9yQWxsKGFsbCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgYGFmdGVyYCBtZXRob2QncyBoZWxwZXIuIFVzZSBpdCB3aWxsIHJldHVybiBvcmRlcmVkIHJlc3VsdHMuXHJcbiAgICAgKiBJZiB5b3UgbmVlZCBtYW5pcHVsYXRlIHJlc3VsdCwgeW91IG5lZWQgY2FsbGJhY2tcclxuICAgICAqIEV4YW1wbGVzOlxyXG4gICAgICogYGBganNcclxuICAgICAqIHZhciBlcCA9IG5ldyBFdmVudFByb3h5KCk7XHJcbiAgICAgKiBlcC5hZnRlcignZmlsZScsIGZpbGVzLmxlbmd0aCwgZnVuY3Rpb24gKGxpc3QpIHtcclxuICAgICAqICAgLy8gT3JkZXJlZCByZXN1bHRzXHJcbiAgICAgKiB9KTtcclxuICAgICAqIGZvciAodmFyIGkgPSAwOyBpIDwgZmlsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAqICAgZnMucmVhZEZpbGUoZmlsZXNbaV0sICd1dGYtOCcsIGVwLmdyb3VwKCdmaWxlJykpO1xyXG4gICAgICogfVxyXG4gICAgICogYGBgXHJcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRuYW1lIEV2ZW50IG5hbWUsIHNob3VsZSBrZWVwIGNvbnNpc3RlbnQgd2l0aCBgYWZ0ZXJgLlxyXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb24sIHNob3VsZCByZXR1cm4gdGhlIGZpbmFsIHJlc3VsdC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGdyb3VwKGV2ZW50bmFtZTogc3RyaW5nLCBjYWxsYmFjazogRnVuY3Rpb24pIHtcclxuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XHJcbiAgICAgICAgdmFyIGdyb3VwID0gZXZlbnRuYW1lICsgJ19ncm91cCc7XHJcbiAgICAgICAgdmFyIGluZGV4ID0gdGhhdC5fYWZ0ZXJbZ3JvdXBdLmluZGV4O1xyXG4gICAgICAgIHRoYXQuX2FmdGVyW2dyb3VwXS5pbmRleCsrO1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoZXJyOiBFcnJvciwgZGF0YTogYW55KSB7XHJcbiAgICAgICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgICAgIC8vIHB1dCBhbGwgYXJndW1lbnRzIHRvIHRoZSBlcnJvciBoYW5kbGVyXHJcbiAgICAgICAgICAgICAgICB0aGF0LnRocm93KGVycik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhhdC5lbWl0KGdyb3VwLCB7XHJcbiAgICAgICAgICAgICAgICBpbmRleDogaW5kZXgsXHJcbiAgICAgICAgICAgICAgICAvLyBjYWxsYmFjayhlcnIsIGFyZ3MxLCBhcmdzMiwgLi4uKVxyXG4gICAgICAgICAgICAgICAgcmVzdWx0OiBjYWxsYmFjayA/IGNhbGxiYWNrLmFwcGx5KG51bGwsIHRoYXQuU0xJQ0UuY2FsbChhcmd1bWVudHMsIDEpKSA6IGRhdGFcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBjYWxsYmFjayB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIGFueSByZWdpc3RlcmVkIGV2ZW50IHdhcyBmaXJlZC4gSXQgb25seSBleGVjdXRlZCBvbmNlLlxyXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50bmFtZTEgRXZlbnQgbmFtZS5cclxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudG5hbWUyIEV2ZW50IG5hbWUuXHJcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBUaGUgY2FsbGJhY2sgd2lsbCBnZXQgYSBtYXAgdGhhdCBoYXMgZGF0YSBhbmQgZXZlbnRuYW1lIGF0dHJpYnV0ZXMuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhbnkoZXZlbnRuYW1lMTogc3RyaW5nIHwgc3RyaW5nW10sIGV2ZW50bmFtZTI6IHN0cmluZyB8IHN0cmluZ1tdLCBjYWxsYmFjazogRnVuY3Rpb24pIHtcclxuICAgICAgICB2YXIgcHJveHkgPSB0aGlzLFxyXG4gICAgICAgICAgICBldmVudHMgPSBwcm94eS5TTElDRS5jYWxsKGFyZ3VtZW50cywgMCwgLTEpLFxyXG4gICAgICAgICAgICBfZXZlbnRuYW1lID0gZXZlbnRzLmpvaW4oXCJfXCIpO1xyXG5cclxuICAgICAgICBwcm94eS5kZWJ1ZygnQWRkIGxpc3Rlbm5lciBmb3IgQW55IG9mIGV2ZW50cyAlaiBlbWl0JywgZXZlbnRzKTtcclxuICAgICAgICBwcm94eS5vbmNlKF9ldmVudG5hbWUsIGNhbGxiYWNrKTtcclxuXHJcbiAgICAgICAgdmFyIF9iaW5kID0gZnVuY3Rpb24gKGtleTogc3RyaW5nKSB7XHJcbiAgICAgICAgICAgIHByb3h5LmJpbmQoa2V5LCBmdW5jdGlvbiAoZGF0YTogYW55KSB7XHJcbiAgICAgICAgICAgICAgICBwcm94eS5kZWJ1ZygnT25lIG9mIGV2ZW50cyAlaiBlbWl0ZWQsIGV4ZWN1dGUgdGhlIGxpc3Rlbm5lcicpO1xyXG4gICAgICAgICAgICAgICAgcHJveHkudHJpZ2dlcihfZXZlbnRuYW1lLCB7IFwiZGF0YVwiOiBkYXRhLCBldmVudE5hbWU6IGtleSB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGV2ZW50cy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgX2JpbmQoZXZlbnRzW2luZGV4XSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGNhbGxiYWNrIHdpbGwgYmUgZXhlY3V0ZWQgd2hlbiB0aGUgZXZlbnQgbmFtZSBub3QgZXF1YWxzIHdpdGggYXNzaWduZWQgZXZlbnQuXHJcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRuYW1lIEV2ZW50IG5hbWUuXHJcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjay5cclxuICAgICAqL1xyXG4gICAgcHVibGljIG5vdChldmVudG5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgdmFyIHByb3h5ID0gdGhpcztcclxuICAgICAgICBwcm94eS5kZWJ1ZygnQWRkIGxpc3Rlbm5lciBmb3Igbm90IGV2ZW50ICVzJywgZXZlbnRuYW1lKTtcclxuICAgICAgICBwcm94eS5iaW5kRm9yQWxsKGZ1bmN0aW9uIChuYW1lOiBzdHJpbmcsIGRhdGE6IGFueSkge1xyXG4gICAgICAgICAgICBpZiAobmFtZSAhPT0gZXZlbnRuYW1lKSB7XHJcbiAgICAgICAgICAgICAgICBwcm94eS5kZWJ1ZygnbGlzdGVubmVyIGV4ZWN1dGUgb2YgZXZlbnQgJXMgZW1pdCwgYnV0IG5vdCBldmVudCAlcy4nLCBuYW1lLCBldmVudG5hbWUpO1xyXG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZGF0YSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFN1Y2Nlc3MgY2FsbGJhY2sgd3JhcHBlciwgd2lsbCBoYW5kbGVyIGVyciBmb3IgeW91LlxyXG4gICAgICpcclxuICAgICAqIGBgYGpzXHJcbiAgICAgKiBmcy5yZWFkRmlsZSgnZm9vLnR4dCcsIGVwLmRvbmUoJ2NvbnRlbnQnKSk7XHJcbiAgICAgKlxyXG4gICAgICogLy8gZXF1YWwgdG8gPT5cclxuICAgICAqXHJcbiAgICAgKiBmcy5yZWFkRmlsZSgnZm9vLnR4dCcsIGZ1bmN0aW9uIChlcnIsIGNvbnRlbnQpIHtcclxuICAgICAqICAgaWYgKGVycikge1xyXG4gICAgICogICAgIHJldHVybiBlcC5lbWl0KCdlcnJvcicsIGVycik7XHJcbiAgICAgKiAgIH1cclxuICAgICAqICAgZXAuZW1pdCgnY29udGVudCcsIGNvbnRlbnQpO1xyXG4gICAgICogfSk7XHJcbiAgICAgKiBgYGBcclxuICAgICAqXHJcbiAgICAgKiBgYGBqc1xyXG4gICAgICogZnMucmVhZEZpbGUoJ2Zvby50eHQnLCBlcC5kb25lKCdjb250ZW50JywgZnVuY3Rpb24gKGNvbnRlbnQpIHtcclxuICAgICAqICAgcmV0dXJuIGNvbnRlbnQudHJpbSgpO1xyXG4gICAgICogfSkpO1xyXG4gICAgICpcclxuICAgICAqIC8vIGVxdWFsIHRvID0+XHJcbiAgICAgKlxyXG4gICAgICogZnMucmVhZEZpbGUoJ2Zvby50eHQnLCBmdW5jdGlvbiAoZXJyLCBjb250ZW50KSB7XHJcbiAgICAgKiAgIGlmIChlcnIpIHtcclxuICAgICAqICAgICByZXR1cm4gZXAuZW1pdCgnZXJyb3InLCBlcnIpO1xyXG4gICAgICogICB9XHJcbiAgICAgKiAgIGVwLmVtaXQoJ2NvbnRlbnQnLCBjb250ZW50LnRyaW0oKSk7XHJcbiAgICAgKiB9KTtcclxuICAgICAqIGBgYFxyXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxTdHJpbmd9IGhhbmRsZXIsIHN1Y2Nlc3MgY2FsbGJhY2sgb3IgZXZlbnQgbmFtZSB3aWxsIGJlIGVtaXQgYWZ0ZXIgY2FsbGJhY2suXHJcbiAgICAgKiBAcmV0dXJuIHtGdW5jdGlvbn1cclxuICAgICAqL1xyXG4gICAgcHVibGljIGRvbmUoaGFuZGxlcjogRnVuY3Rpb24gfCBTdHJpbmcsIGNhbGxiYWNrPzogRnVuY3Rpb24pIHtcclxuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChlcnI6IEVycm9yLCBkYXRhOiBhbnkpIHtcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgLy8gcHV0IGFsbCBhcmd1bWVudHMgdG8gdGhlIGVycm9yIGhhbmRsZXJcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGF0LmVtaXQuYXBwbHkodGhhdCwgWydlcnJvcicsIGVycl0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBjYWxsYmFjayhlcnIsIGFyZ3MxLCBhcmdzMiwgLi4uKVxyXG4gICAgICAgICAgICB2YXIgYXJncyA9IHRoYXQuU0xJQ0UuY2FsbChhcmd1bWVudHMsIDEpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBoYW5kbGVyID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gb25seSByZXBsYWNlIHRoZSBhcmdzIHdoZW4gaXQgcmVhbGx5IHJldHVybiBhIHJlc3VsdFxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGF0LmVtaXQoaGFuZGxlciwgY2FsbGJhY2suYXBwbHkobnVsbCwgYXJncykpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBwdXQgYWxsIGFyZ3VtZW50cyB0byB0aGUgZG9uZSBoYW5kbGVyXHJcbiAgICAgICAgICAgICAgICAgICAgLy9lcC5kb25lKCdzb21lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9lcC5vbignc29tZScsIGZ1bmN0aW9uKGFyZ3MxLCBhcmdzMiwgLi4uKXt9KTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhhdC5lbWl0LmFwcGx5KHRoYXQsIFtoYW5kbGVyLCBhcmdzXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIHNwZWVkIGltcHJvdmUgZm9yIG1vc3RseSBjYXNlOiBgY2FsbGJhY2soZXJyLCBkYXRhKWBcclxuICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPD0gMikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICg8RnVuY3Rpb24+aGFuZGxlcikoZGF0YSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIGNhbGxiYWNrKGVyciwgYXJnczEsIGFyZ3MyLCAuLi4pXHJcbiAgICAgICAgICAgICg8RnVuY3Rpb24+aGFuZGxlcikuYXBwbHkobnVsbCwgYXJncyk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICAvLyAgICAgLyoqXHJcbiAgICAvLyAgICAqIG1ha2UgZG9uZSBhc3luY1xyXG4gICAgLy8gICAgKiBAcmV0dXJuIHtGdW5jdGlvbn0gZGVsYXkgZG9uZVxyXG4gICAgLy8gICAgKi9cclxuICAgIC8vICAgICBFdmVudFByb3h5LnByb3RvdHlwZS5kb25lTGF0ZXIgPSBmdW5jdGlvbiAoaGFuZGxlciwgY2FsbGJhY2spIHtcclxuICAgIC8vICAgICAgICAgdmFyIF9kb25lSGFuZGxlciA9IHRoaXMuZG9uZShoYW5kbGVyLCBjYWxsYmFjayk7XHJcbiAgICAvLyAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XHJcbiAgICAvLyAgICAgICAgICAgICB2YXIgYXJncyA9IGFyZ3VtZW50cztcclxuICAgIC8vICAgICAgICAgICAgIGxhdGVyKGZ1bmN0aW9uICgpIHtcclxuICAgIC8vICAgICAgICAgICAgICAgICBfZG9uZUhhbmRsZXIuYXBwbHkobnVsbCwgYXJncyk7XHJcbiAgICAvLyAgICAgICAgICAgICB9KTtcclxuICAgIC8vICAgICAgICAgfTtcclxuICAgIC8vICAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGEgbmV3IEV2ZW50UHJveHlcclxuICAgICAqIEV4YW1wbGVzOlxyXG4gICAgICogYGBganNcclxuICAgICAqIHZhciBlcCA9IEV2ZW50UHJveHkuY3JlYXRlKCk7XHJcbiAgICAgKiBlcC5hc3NpZ24oJ3VzZXInLCAnYXJ0aWNsZXMnLCBmdW5jdGlvbih1c2VyLCBhcnRpY2xlcykge1xyXG4gICAgICogICAvLyBkbyBzb21ldGhpbmcuLi5cclxuICAgICAqIH0pO1xyXG4gICAgICogLy8gb3Igb25lIGxpbmUgd2F5czogQ3JlYXRlIEV2ZW50UHJveHkgYW5kIEFzc2lnblxyXG4gICAgICogdmFyIGVwID0gRXZlbnRQcm94eS5jcmVhdGUoJ3VzZXInLCAnYXJ0aWNsZXMnLCBmdW5jdGlvbih1c2VyLCBhcnRpY2xlcykge1xyXG4gICAgICogICAvLyBkbyBzb21ldGhpbmcuLi5cclxuICAgICAqIH0pO1xyXG4gICAgICogYGBgXHJcbiAgICAgKiBAcmV0dXJuIHtFdmVudFByb3h5fSBFdmVudFByb3h5IGluc3RhbmNlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlKCk6IEV2ZW50UHJveHkge1xyXG4gICAgICAgIHZhciBlcCA9IG5ldyBFdmVudFByb3h5KCk7XHJcbiAgICAgICAgcmV0dXJuIGVwO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlV2l0aEFyZ3MoZXZlbnRuYW1lMTogc3RyaW5nIHwgc3RyaW5nW10sIGV2ZW50bmFtZTI6IHN0cmluZyB8IHN0cmluZ1tdLCBjYWxsYmFjazogRnVuY3Rpb24pOiBFdmVudFByb3h5IHtcclxuICAgICAgICB2YXIgZXAgPSBuZXcgRXZlbnRQcm94eSgpO1xyXG4gICAgICAgIHZhciBuYW1lczogc3RyaW5nW10gPSBbXTtcclxuICAgICAgICBpZiAodHlwZW9mIGV2ZW50bmFtZTEgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICAgIG5hbWVzLnB1c2goZXZlbnRuYW1lMSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbmFtZXMgPSBlcC5DT05DQVQuYXBwbHkobmFtZXMsIDxzdHJpbmdbXT5ldmVudG5hbWUxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiBldmVudG5hbWUyID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBuYW1lcy5wdXNoKGV2ZW50bmFtZTIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG5hbWVzID0gZXAuQ09OQ0FULmFwcGx5KG5hbWVzLCA8c3RyaW5nW10+ZXZlbnRuYW1lMik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVwLl9hc3NpZ24uYXBwbHkodGhpcywgW25hbWVzLCBjYWxsYmFjaywgdHJ1ZV0pO1xyXG4gICAgICAgIHJldHVybiBlcDtcclxuICAgIH1cclxuXHJcblxyXG59IiwiZXhwb3J0IGNsYXNzIEdVSUQge1xyXG5cclxuICAvKipcclxuICAgKiDliJvlu7pHVUlE5ZSv5LiA5qCH5b+X77yM5rOo5oSP77ya6YeH55So5aSn5pWw5rOV77yM5pyJ5b6I5bCP55qE5Y+v6IO95oCn5Lya6YeN5aSN77yM5LiA6Iis5aSf55So77ybXHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyBjcmVhdGUoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiAneHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4Jy5yZXBsYWNlKC9beHldL2csIGZ1bmN0aW9uIChjOiBzdHJpbmcpIHtcclxuICAgICAgbGV0IHIgPSBNYXRoLnJhbmRvbSgpICogMTYgfCAwLFxyXG4gICAgICAgIHYgPSAoYyA9PT0gJ3gnKSA/IHIgOiAociAmIDB4MyB8IDB4OCk7XHJcbiAgICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbn0iLCJleHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMtbG9nb3MnO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbnRleHQtbWVudSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZ3VpZCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZXZlbnRwcm94eSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZGVidWcnOyIsImV4cG9ydCAqIGZyb20gJy4vdmlld3BvcnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL3ZpZXdwb3J0LWV4cGFuZCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vdmlld3BvcnQtYXBwbGljYXRpb24nO1xyXG5leHBvcnQgKiBmcm9tICcuL3ZpZXdwb3J0LWluc3RhbmNlLWNyZWF0ZSc7IiwiZXhwb3J0IGNsYXNzIFZpZXdwb3J0QXBwbGljYXRpb24ge1xyXG5cclxuXHJcblxyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcblxyXG5cclxufSIsImltcG9ydCB7IFBhbmVsIH0gZnJvbSBcIi4uLy4uL3VpXCI7XHJcbmltcG9ydCB7IFZlcnlFbmdpbmUgfSBmcm9tIFwiLi4vLi4vZW5naW5lXCI7XHJcblxyXG4vKiBcclxuKiAgdmlld3BvcnTnqpflj6PmnIDlpKfljJbmmL7npLrmjqfliLbvvJtcclxuKi9cclxuZXhwb3J0IGNsYXNzIFZpZXdwb3J0RXhwYW5kIHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgbGV0IHBhbmVsczogUGFuZWxbXSA9IFtdO1xyXG4gICAgcGFuZWxzLnB1c2goVmVyeUVuZ2luZS5oaWVyYXJjaHlQYW5lbCk7XHJcbiAgICBwYW5lbHMucHVzaChWZXJ5RW5naW5lLmFzc2V0UGFuZWwpO1xyXG4gICAgcGFuZWxzLnB1c2goVmVyeUVuZ2luZS5hdHRyaWJ1dGVzUGFuZWwpO1xyXG5cclxuICAgIGxldCBleHBhbmRlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIHdpbmRvdy5lZGl0b3IubWV0aG9kKCd2aWV3cG9ydDpleHBhbmQnLCBmdW5jdGlvbiAoc3RhdGU6IGJvb2xlYW4pIHtcclxuICAgICAgaWYgKHN0YXRlID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgc3RhdGUgPSAhZXhwYW5kZWQ7XHJcblxyXG4gICAgICBpZiAoZXhwYW5kZWQgPT09IHN0YXRlKVxyXG4gICAgICAgIHJldHVybjtcclxuXHJcbiAgICAgIGV4cGFuZGVkID0gc3RhdGU7XHJcblxyXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhbmVscy5sZW5ndGg7IGkrKylcclxuICAgICAgICBwYW5lbHNbaV0uaGlkZGVuID0gZXhwYW5kZWQ7XHJcblxyXG4gICAgICB3aW5kb3cuZWRpdG9yLmVtaXQoJ3ZpZXdwb3J0OmV4cGFuZCcsIHN0YXRlKTtcclxuICAgIH0pO1xyXG5cclxuXHJcbiAgICB3aW5kb3cuZWRpdG9yLm1ldGhvZCgndmlld3BvcnQ6ZXhwYW5kOnN0YXRlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICByZXR1cm4gZXhwYW5kZWQ7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgLy8gZXhwYW5kIGhvdGtleVxyXG4gICAgd2luZG93LmVkaXRvci5jYWxsKCdob3RrZXk6cmVnaXN0ZXInLCAndmlld3BvcnQ6ZXhwYW5kJywge1xyXG4gICAgICBrZXk6ICdzcGFjZScsXHJcbiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgd2luZG93LmVkaXRvci5jYWxsKCd2aWV3cG9ydDpleHBhbmQnKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gIH1cclxuXHJcblxyXG5cclxufVxyXG5cclxuIiwiZXhwb3J0IGNsYXNzIFZpZXdwb3J0SW5zdGFuY2VDcmVhdGV7XHJcblxyXG5cclxuICAgIC8vIOazqOWGjOS6i+S7tuWIsOebuOWFs+iEmuacrFxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIHB1YmxpYyBhZGRFbnRpdHkoKTogdm9pZCB7XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBcclxufSIsImltcG9ydCB7IENhbnZhcyB9IGZyb20gJy4uLy4uL3VpJztcclxuaW1wb3J0IHsgVmVyeUVuZ2luZSB9IGZyb20gJy4uLy4uL2VuZ2luZSc7XHJcbmltcG9ydCB7IFRvb2xiYXJUb3BDb250cm9sIH0gZnJvbSAnLi4vdG9vbGJhcic7XHJcbmltcG9ydCB7IFZpZXdwb3J0RXhwYW5kIH0gZnJvbSAnLi92aWV3cG9ydC1leHBhbmQnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFZpZXdwb3J0IHtcclxuXHJcbiAgcHVibGljIGNhbnZhczogQ2FudmFzO1xyXG5cclxuICBwcml2YXRlIF9lbmdpbmU6IEJBQllMT04uRW5naW5lO1xyXG4gIHByaXZhdGUgX3NjZW5lOiBCQUJZTE9OLlNjZW5lO1xyXG4gIHByaXZhdGUgX2NhbnZhczogSFRNTENhbnZhc0VsZW1lbnQ7XHJcblxyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIHRoaXMuY2FudmFzID0gbmV3IENhbnZhcygnY2FudmFzLTNkJyk7XHJcbiAgICBWZXJ5RW5naW5lLnZpZXdDYW52YXMgPSB0aGlzLmNhbnZhcztcclxuXHJcbiAgICB0aGlzLl9jYW52YXMgPSA8SFRNTENhbnZhc0VsZW1lbnQ+dGhpcy5jYW52YXMuZWxlbWVudDtcclxuICAgIC8vIOWOu+aOiUJhYnlsb27nmoTok53oibLovrnmoYZcclxuICAgIHRoaXMuX2NhbnZhcy5zdHlsZS5vdXRsaW5lID0gJ25vbmUnO1xyXG4gICAgLy8gYWRkIGNhbnZhc1xyXG4gICAgZWRpdG9yLmNhbGwoJ2xheW91dC52aWV3cG9ydCcpLnByZXBlbmQodGhpcy5jYW52YXMpO1xyXG5cclxuICAgIC8vIGdldCBjYW52YXNcclxuICAgIGVkaXRvci5tZXRob2QoJ3ZpZXdwb3J0OmNhbnZhcycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmV0dXJuIHNlbGYuY2FudmFzO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gdXBkYXRlIHZpZXdwb3Qg6KeG56qX5aSn5bCPXHJcbiAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGxldCByZWN0ID0gVmVyeUVuZ2luZS52aWV3UGFuZWwuZWxlbWVudCEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgIHNlbGYuY2FudmFzLnJlc2l6ZShNYXRoLmZsb29yKHJlY3Qud2lkdGgpLCBNYXRoLmZsb29yKHJlY3QuaGVpZ2h0KSk7XHJcbiAgICB9LCAxMDAgLyA2KTtcclxuXHJcbiAgICAvLyBpZih0aGlzLl9lbmdpbmUpIHRoaXMuX2VuZ2luZS5kaXNwb3NlKCk7XHJcblxyXG4gICAgdGhpcy5fZW5naW5lID0gbmV3IEJBQllMT04uRW5naW5lKHRoaXMuX2NhbnZhcywgdHJ1ZSk7XHJcbiAgICBsZXQgZW5naW5lID0gdGhpcy5fZW5naW5lO1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICBlbmdpbmUucmVzaXplKCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX3NjZW5lID0gbmV3IEJBQllMT04uU2NlbmUodGhpcy5fZW5naW5lKTtcclxuXHJcbiAgICAvLyBUT0RPOiDorr7lrprnm7jmnLpcclxuICAgIHZhciBjYW1lcmEgPSBuZXcgQkFCWUxPTi5BcmNSb3RhdGVDYW1lcmEoXCJNYWluQ2FtZXJhXCIsIDAsIDAsIDEwLCBuZXcgQkFCWUxPTi5WZWN0b3IzKDAsIDAsIDApLCB0aGlzLl9zY2VuZSk7XHJcbiAgICBjYW1lcmEuc2V0UG9zaXRpb24obmV3IEJBQllMT04uVmVjdG9yMygyMCwgMjAwLCA0MDApKTtcclxuICAgIGNhbWVyYS5hdHRhY2hDb250cm9sKHRoaXMuX2NhbnZhcywgdHJ1ZSk7XHJcbiAgICBjYW1lcmEubG93ZXJCZXRhTGltaXQgPSAwLjE7XHJcbiAgICBjYW1lcmEudXBwZXJCZXRhTGltaXQgPSAoTWF0aC5QSSAvIDIpICogMC45OTtcclxuICAgIGNhbWVyYS5sb3dlclJhZGl1c0xpbWl0ID0gMTUwO1xyXG5cclxuXHJcbiAgICAvLyB0aGlzLl9zY2VuXHJcblxyXG4gICAgLy8g5Yqg6L296L+H5bqm5Yqo55S75byAXHJcbiAgICAvLyBlbmdpbmUubG9hZGluZ1NjcmVlbi5oaWRlTG9hZGluZ1VJKCk7XHJcbiAgICAvLyBlbmdpbmUuZGlzcGxheUxvYWRpbmdVSSgpO1xyXG5cclxuICAgIGxldCBpbnB1dE1hcDogeyBba2V5OiBzdHJpbmddOiBib29sZWFuIH0gPSB7fTtcclxuXHJcbiAgICAvLyBUT0RPOiDliqDovb1zY2VuZS5iYWJ5bG9u5Zy65pmv5paH5Lu277yM5b2T5YmN5Li66buY6K6kXHJcbiAgICAvLyDpu5jorqRFZGl0b3LlnLrmma/vvIzliqDovb3kv53lrZjnmoTmn5DkuIDkuKrlnLrmma/otYTmupBcclxuICAgIC8vIOi1hOa6kOeahOeItuWtkOWFs+ezu+S7peWPiuaooeWei1xyXG4gICAgQkFCWUxPTi5TY2VuZUxvYWRlci5BcHBlbmQoXCIuL3NjZW5lL1wiLCBcInNjZW5lLmJhYnlsb25cIiwgdGhpcy5fc2NlbmUsIGZ1bmN0aW9uIChzY2VuZSkge1xyXG4gICAgICAvLyBkbyBzb21ldGhpbmcgd2l0aCB0aGUgc2NlbmVcclxuICAgICAgLy8g5Yqg6L296L+H5bqm5Yqo55S75YWzXHJcbiAgICAgIC8vIGVuZ2luZS5oaWRlTG9hZGluZ1VJKCk7XHJcblxyXG4gICAgICAvLyBLZXlib2FyZCBldmVudHNcclxuICAgICAgdmFyIGJsdWUgPSBzY2VuZS5nZXRNZXNoQnlOYW1lKCdibHVlJykhO1xyXG5cclxuICAgICAgc2NlbmUuYWN0aW9uTWFuYWdlciA9IG5ldyBCQUJZTE9OLkFjdGlvbk1hbmFnZXIoc2NlbmUpO1xyXG4gICAgICBzY2VuZS5hY3Rpb25NYW5hZ2VyLnJlZ2lzdGVyQWN0aW9uKG5ldyBCQUJZTE9OLkV4ZWN1dGVDb2RlQWN0aW9uKEJBQllMT04uQWN0aW9uTWFuYWdlci5PbktleURvd25UcmlnZ2VyLCBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgICAgaW5wdXRNYXBbZXZ0LnNvdXJjZUV2ZW50LmtleV0gPSBldnQuc291cmNlRXZlbnQudHlwZSA9PSBcImtleWRvd25cIjtcclxuICAgICAgfSkpO1xyXG4gICAgICBzY2VuZS5hY3Rpb25NYW5hZ2VyLnJlZ2lzdGVyQWN0aW9uKG5ldyBCQUJZTE9OLkV4ZWN1dGVDb2RlQWN0aW9uKEJBQllMT04uQWN0aW9uTWFuYWdlci5PbktleVVwVHJpZ2dlciwgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgICAgIGlucHV0TWFwW2V2dC5zb3VyY2VFdmVudC5rZXldID0gZXZ0LnNvdXJjZUV2ZW50LnR5cGUgPT0gXCJrZXlkb3duXCI7XHJcbiAgICAgIH0pKTtcclxuXHJcblxyXG4gICAgICAvLyAvLyBHYW1lL1JlbmRlciBsb29wXHJcbiAgICAgIHNjZW5lLm9uQmVmb3JlUmVuZGVyT2JzZXJ2YWJsZS5hZGQoKCkgPT4ge1xyXG5cclxuICAgICAgICBpZiAoaW5wdXRNYXBbXCJ3XCJdIHx8IGlucHV0TWFwW1wiQXJyb3dVcFwiXSkge1xyXG4gICAgICAgICAgYmx1ZS5wb3NpdGlvbi56IC09IDEwMCAqIGVuZ2luZS5nZXREZWx0YVRpbWUoKSAvIDEwMDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpbnB1dE1hcFtcImFcIl0gfHwgaW5wdXRNYXBbXCJBcnJvd0xlZnRcIl0pIHtcclxuICAgICAgICAgIGJsdWUucG9zaXRpb24ueCArPSAxMDAgKiBlbmdpbmUuZ2V0RGVsdGFUaW1lKCkgLyAxMDAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaW5wdXRNYXBbXCJzXCJdIHx8IGlucHV0TWFwW1wiQXJyb3dEb3duXCJdKSB7XHJcbiAgICAgICAgICBibHVlLnBvc2l0aW9uLnogKz0gMTAwICogZW5naW5lLmdldERlbHRhVGltZSgpIC8gMTAwMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGlucHV0TWFwW1wiZFwiXSB8fCBpbnB1dE1hcFtcIkFycm93UmlnaHRcIl0pIHtcclxuICAgICAgICAgIGJsdWUucG9zaXRpb24ueCAtPSAxMDAgKiBlbmdpbmUuZ2V0RGVsdGFUaW1lKCkgLyAxMDAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuXHJcbiAgICAgIC8vIHNwaGVyZVxyXG4gICAgICB2YXIgc3BoZXJlID0gc2NlbmUuZ2V0TWVzaEJ5TmFtZSgnc3BoZXJlJykhO1xyXG4gICAgICBzcGhlcmUuYWN0aW9uTWFuYWdlciA9IG5ldyBCQUJZTE9OLkFjdGlvbk1hbmFnZXIoc2NlbmUpO1xyXG5cclxuICAgICAgc3BoZXJlLmFjdGlvbk1hbmFnZXIucmVnaXN0ZXJBY3Rpb24obmV3IEJBQllMT04uU2V0VmFsdWVBY3Rpb24oXHJcbiAgICAgICAgeyB0cmlnZ2VyOiBCQUJZTE9OLkFjdGlvbk1hbmFnZXIuT25JbnRlcnNlY3Rpb25FbnRlclRyaWdnZXIsIHBhcmFtZXRlcjogYmx1ZSB9LFxyXG4gICAgICAgIHNwaGVyZSwgXCJzY2FsaW5nXCIsIG5ldyBCQUJZTE9OLlZlY3RvcjMoMiwgMiwgMikpKTtcclxuXHJcbiAgICAgIHNwaGVyZS5hY3Rpb25NYW5hZ2VyLnJlZ2lzdGVyQWN0aW9uKG5ldyBCQUJZTE9OLlNldFZhbHVlQWN0aW9uKFxyXG4gICAgICAgIHsgdHJpZ2dlcjogQkFCWUxPTi5BY3Rpb25NYW5hZ2VyLk9uSW50ZXJzZWN0aW9uRXhpdFRyaWdnZXIsIHBhcmFtZXRlcjogYmx1ZSB9XHJcbiAgICAgICAgLCBzcGhlcmUsIFwic2NhbGluZ1wiLCBuZXcgQkFCWUxPTi5WZWN0b3IzKDEsIDEsIDEpKSk7XHJcblxyXG4gICAgICBsZXQgaTogbnVtYmVyID0gMDtcclxuXHJcbiAgICAgIC8vIFdlYlNvY2tldCDmtYvor5VcclxuICAgICAgLy8gc2NlbmUub25LZXlib2FyZE9ic2VydmFibGUuYWRkKCBrYkluZm8gPT4ge1xyXG4gICAgICAvLyAgIGlmKGtiSW5mby50eXBlID09PSBCQUJZTE9OLktleWJvYXJkRXZlbnRUeXBlcy5LRVlVUCkge1xyXG4gICAgICAvLyAgICAgaWYoa2JJbmZvLmV2ZW50LmtleUNvZGUgPT09IDY1KSB7XHJcbiAgICAgIC8vICAgICAgIC8vIGVkaXRvci5jYWxsKCdzZW5kJywgJ+aMieS4i+asoeaVsO+8micgKyAoaSsrKSArIFwiIVwiKTtcclxuICAgICAgLy8gICAgICAgZWRpdG9yLmNhbGwoJ3NlbmQnLCAne1wiZGF0YVwiOiB7XCJhXCI6IDEyMywgXCJiXCI6IFwicXdlXCJ9fScpO1xyXG4gICAgICAvLyAgICAgfVxyXG4gICAgICAvLyAgIH1cclxuICAgICAgLy8gfSk7XHJcblxyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fZW5naW5lLnJ1blJlbmRlckxvb3AoKCkgPT4ge1xyXG4gICAgICBpZiAodGhpcy5fY2FudmFzLndpZHRoICE9PSB0aGlzLl9jYW52YXMuY2xpZW50V2lkdGgpIHtcclxuICAgICAgICB0aGlzLl9lbmdpbmUucmVzaXplKCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh0aGlzLl9zY2VuZSkge1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLnJlbmRlcigpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBpZiAodGhpcy5fc2hvd0Zwcykge1xyXG4gICAgICAvLyBcdHRoaXMudXBkYXRlRnBzUG9zKCk7XHJcbiAgICAgIC8vIH1cclxuXHJcblxyXG4gICAgfSk7XHJcbiAgICAvLyByZXR1cm4gdGhpcztcclxuXHJcblxyXG4gICAgdGhpcy5leHBhbmRDb250cm9sKCk7XHJcbiAgfVxyXG5cclxuXHJcblxyXG4gIHByaXZhdGUgZXhwYW5kQ29udHJvbCgpOiB2b2lkIHtcclxuICAgIGxldCBjb250cm9sOiBUb29sYmFyVG9wQ29udHJvbCA9IG5ldyBUb29sYmFyVG9wQ29udHJvbCgpO1xyXG4gICAgbGV0IGV4cGFuZFZpZXc6IFZpZXdwb3J0RXhwYW5kID0gbmV3IFZpZXdwb3J0RXhwYW5kKCk7XHJcbiAgfVxyXG5cclxuXHJcblxyXG5cclxufSIsImltcG9ydCB7IEV2ZW50UHJveHkgfSBmcm9tIFwiLi4vdXRpbGl0eVwiO1xyXG5pbXBvcnQgeyBFbnRpdHlMb2FkIH0gZnJvbSBcIi4uL2VudGl0eVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJlYWx0aW1lIHtcclxuXHJcbiAgcHJpdmF0ZSBsb2FkOiBFbnRpdHlMb2FkID0gbmV3IEVudGl0eUxvYWQoKTtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIGxldCBzZWxmID0gdGhpcztcclxuXHJcbiAgICBsZXQgZXAgPSBFdmVudFByb3h5LmNyZWF0ZSgpO1xyXG4gICAgZXAuYWxsKCdzZXR0aW5ncycsIFsnYXNzZXRzJywgJ3NjZW5lcyddLCAoZGF0YTE6IGFueSwgZGF0YTI6IGFueSwgZGF0YTM6IGFueSkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhkYXRhMSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKGRhdGEyKTtcclxuICAgICAgLy8gY29uc29sZS5lcnJvcihkYXRhMltcImRhdGFcIl1bXCIxODgxODM2NVwiXVtcImRhdGFcIl1bXCJhb01hcFRpbGluZ1wiXVswXSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKGRhdGEzKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGVwLmJpbmQoJ29rJywgKG1zZzogYW55KSA9PiB7XHJcbiAgICAgIGNvbnNvbGUud2Fybignb2snKTtcclxuICAgICAgY29uc29sZS53YXJuKG1zZyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBheGlvcy5nZXQoJy9hcGkvc2V0dGluZ3MnKVxyXG4gICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3Jlc3BvbnNlOiAnICsgcmVzcG9uc2UuZGF0YSk7XHJcbiAgICAgICAgZXAuZW1pdCgnc2V0dGluZ3MnLCByZXNwb25zZS5kYXRhKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKGVycm9yID0+IHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgKTtcclxuXHJcbiAgICBheGlvcy5nZXQoJy9hcGkvYXNzZXRzJylcclxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdyZXNwb25zZTogJyArIHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICAgIGVwLmVtaXQoJ2Fzc2V0cycsIHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICAgIC8vIOino+aekFxyXG5cclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKFxyXG4gICAgICAgIGVycm9yID0+IHtcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgKTtcclxuXHJcbiAgICBheGlvcy5nZXQoJy9hcGkvc2NlbmVzJylcclxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdyZXNwb25zZTogJyArIHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICAgIGVwLmVtaXQoJ3NjZW5lcycsIHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICAgIHNlbGYuZ2V0U2NlbmUocmVzcG9uc2UuZGF0YS5kYXRhLnNjZW5lc1swXS5pZCk7XHJcbiAgICAgICAgXHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChlcnJvciA9PiB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICk7XHJcblxyXG4gICAgLy8gdmFyIHdzID0gbmV3IFdlYlNvY2tldChcIndzOi8vbG9jYWxob3N0OjEwMjRcIik7XHJcblxyXG4gICAgLy8gd3Mub25vcGVuID0gZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgLy8gICBjb25zb2xlLmxvZyhcIkNvbm5lY3Rpb24gb3BlbiAuLi5cIik7XHJcbiAgICAvLyAgIHdzLnNlbmQoXCJIZWxsbyBXZWJTb2NrZXRzIVwiKTtcclxuICAgIC8vIH07XHJcblxyXG4gICAgLy8gd3Mub25tZXNzYWdlID0gZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgLy8gICBjb25zb2xlLmxvZyhcIlJlY2VpdmVkIE1lc3NhZ2U6IFwiICsgZXZ0LmRhdGEpO1xyXG4gICAgLy8gICB3cy5jbG9zZSgpO1xyXG4gICAgLy8gfTtcclxuXHJcbiAgICAvLyB3cy5vbmNsb3NlID0gZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgLy8gICBjb25zb2xlLmxvZyhcIkNvbm5lY3Rpb24gY2xvc2VkLlwiKTtcclxuICAgIC8vIFxyXG4gICAgLy8gfTtcclxuXHJcblxyXG4gICAgLy8g5omT5byA5LiA5LiqV2ViU29ja2V0OlxyXG4gICAgLy8gY29uc29sZS5sb2coJ3dlYnNvY2tldCcpO1xyXG4gICAgLy8gdmFyIHdzID0gbmV3IFdlYlNvY2tldCgnd3M6Ly9sb2NhbGhvc3Q6MTAyNC9WZVJ5RW5naW5lJyk7XHJcbiAgICAvLyAvLyDlk43lupRvbm1lc3NhZ2Xkuovku7Y6XHJcbiAgICAvLyB3cy5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAobXNnOiBNZXNzYWdlRXZlbnQpIHtcclxuICAgIC8vICAgY29uc29sZS5sb2cobXNnLmRhdGEpO1xyXG4gICAgLy8gfTtcclxuXHJcblxyXG4gICAgLy8gLy8g57uZ5pyN5Yqh5Zmo5Y+R6YCB5LiA5Liq5a2X56ym5LiyOlxyXG4gICAgLy8gd3Mub25vcGVuID0gZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgLy8gICBjb25zb2xlLmxvZyhcIkNvbm5lY3Rpb24gb3BlbiAuLi5cIik7XHJcbiAgICAvLyAgIHdzLnNlbmQoYHtcInN0clwiOiBcIkhlbGxvIFdlYlNvY2tldHMhXCJ9YCk7XHJcbiAgICAvLyB9O1xyXG5cclxuXHJcbiAgICAvLyAvKipcclxuICAgIC8vICogXHJcbiAgICAvLyAqL1xyXG4gICAgLy8gZWRpdG9yLm1ldGhvZCgnc2VuZCcsIChtc2c6IHN0cmluZykgPT4ge1xyXG4gICAgLy8gICB3cy5zZW5kKG1zZyk7XHJcbiAgICAvLyB9KTtcclxuXHJcblxyXG4gICAgLy8g6I635Y+W6KGo5qC85pWw5o2uXHJcbiAgICAvLyBheGlvc1xyXG4gICAgLy8gICAuZ2V0KFwiLi9kYXRhL2V4aGliaXRzLmpzb25cIilcclxuICAgIC8vICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAvLyAgICAgdGhhdC5fZGF0YSA9IHJlc3BvbnNlLmRhdGE7XHJcbiAgICAvLyAgICAgdGhhdC5fc3VjY2VzcyA9IHRydWU7XHJcbiAgICAvLyAgICAgLy8gY29uc29sZS5sb2codGhhdC5fZGF0YSk7XHJcbiAgICAvLyAgIH0pXHJcbiAgICAvLyAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcclxuICAgIC8vICAgICBjb25zb2xlLmxvZyhcImxvYWQgZXJyb3I6IFwiICsgZXJyb3IpO1xyXG4gICAgLy8gICB9KTtcclxuXHJcblxyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBnZXRTY2VuZShpZDogc3RyaW5nKTogdm9pZCB7XHJcbiAgICBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICBheGlvcy5wb3N0KFwiL2FwaS9nZXRTY2VuZVwiLCB7IHNjZW5lOiBpZCB9KVxyXG4gICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7XHJcbiAgICAgICAgLy8g5Yqg6L295Zy65pmv77yManNvbuaVsOaNrlxyXG5cclxuICAgICAgICAvLyDlpoLkvZXlhbPogZTliLDlhbbku5bohJrmnKxcclxuICAgICAgICBkZWJ1Zy5lcnJvcih0eXBlb2YgcmVzcG9uc2UuZGF0YS5kYXRhKTtcclxuICAgICAgICBkZWJ1Zy5lcnJvcihyZXNwb25zZS5kYXRhLmRhdGEpO1xyXG4gICAgICAgIHNlbGYubG9hZC5zY2VuZV9yYXcocmVzcG9uc2UuZGF0YS5kYXRhKTtcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgLy8gZm9yICh2YXIga2V5IGluIHJlc3BvbnNlLmRhdGEuZGF0YSkge1xyXG4gICAgICAgIC8vICAgaWYgKHR5cGVvZiAocmVzcG9uc2UuZGF0YS5kYXRhW2tleV0pID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIC8vICAgICAvLyDlr7nosaFcclxuICAgICAgICAvLyAgICAgLy8gdGhpcy5fcHJlcGFyZSh0aGlzLCBrZXksIGRhdGFba2V5XSk7XHJcbiAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKFwib2JqZWN0OiBcIiArIGtleSk7XHJcbiAgICAgICAgLy8gICAgIGNvbnNvbGUud2FybihyZXNwb25zZS5kYXRhLmRhdGFba2V5XSk7XHJcbiAgICAgICAgLy8gICB9IGVsc2Uge1xyXG4gICAgICAgIC8vICAgICAvLyDlrZfnrKbkuLLnrYnkuIDoiKzlsZ7mgKdcclxuICAgICAgICAvLyAgICAgY29uc29sZS5sb2codHlwZW9mIChyZXNwb25zZS5kYXRhLmRhdGFba2V5XSkgKyBcIjogXCIgKyBrZXkpO1xyXG4gICAgICAgIC8vICAgICBjb25zb2xlLndhcm4ocmVzcG9uc2UuZGF0YS5kYXRhW2tleV0pO1xyXG4gICAgICAgIC8vICAgfVxyXG4gICAgICAgIC8vIH1cclxuXHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChlcnJvciA9PiB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICAgIH0pXHJcbiAgfVxyXG5cclxuXHJcbn0iLCJleHBvcnQgY2xhc3MgQmFieWxvbkVuZ2luZSB7XHJcbiAgcHVibGljIHN0YXRpYyBDYW52YXM6IEhUTUxDYW52YXNFbGVtZW50O1xyXG4gIHB1YmxpYyBzdGF0aWMgRW5naW5lOiBCQUJZTE9OLkVuZ2luZTtcclxuICBwdWJsaWMgc3RhdGljIFNjZW5lOiBCQUJZTE9OLlNjZW5lO1xyXG59IiwiZXhwb3J0ICogZnJvbSAnLi9iYWJ5bG9uLWVuZ2luZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vdmVyeS1lbmdpbmUnOyIsImltcG9ydCB7IFZpZXdwb3J0IH0gZnJvbSBcIi4uL2VkaXRvclwiO1xyXG5pbXBvcnQgeyBDYW52YXMsIFBhbmVsLCBUcmVlIH0gZnJvbSBcIi4uL3VpXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVmVyeUVuZ2luZSB7XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgdmlld1BhbmVsOiBQYW5lbDtcclxuICBwdWJsaWMgc3RhdGljIHJvb3RQYW5lbDogUGFuZWw7XHJcbiAgcHVibGljIHN0YXRpYyB0b29sYmFyUGFuZWw6IFBhbmVsO1xyXG5cclxuICBwdWJsaWMgc3RhdGljIGhpZXJhcmNoeVBhbmVsOiBQYW5lbDtcclxuICBwdWJsaWMgc3RhdGljIGhpZXJhcmNoeVRyZWU6IFRyZWU7XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgYXNzZXRQYW5lbDogUGFuZWw7XHJcbiAgcHVibGljIHN0YXRpYyBhdHRyaWJ1dGVzUGFuZWw6IFBhbmVsO1xyXG5cclxuICBwdWJsaWMgc3RhdGljIHZpZXdwb3J0OiBWaWV3cG9ydDtcclxuXHJcbiAgcHVibGljIHN0YXRpYyB2aWV3Q2FudmFzOiBDYW52YXM7XHJcblxyXG5cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICB9XHJcblxyXG5cclxufSIsImV4cG9ydCAqIGZyb20gJy4vbGliJztcclxuZXhwb3J0ICogZnJvbSAnLi9lZGl0b3InO1xyXG5leHBvcnQgKiBmcm9tICcuL3VpJztcclxuXHJcblxyXG5leHBvcnQgKiBmcm9tICcuL2VuZ2luZSc7XHJcbiIsImV4cG9ydCBjbGFzcyBFdmVudHMge1xyXG5cclxuICAvLyDnm7jovoPkuo5FZGl0b3LvvIzlkIzkuIDkuKrlh73mlbDlkI3lj6/ljIXlkKvkuIDns7vliJflh73mlbDvvIzkuI3ku4Xku4XmmK/kuIDkuKrvvIzkuJTmnIlvbmNl5Yqf6IO977ybXHJcblxyXG4gIHB1YmxpYyBnZXQgc3VzcGVuZEV2ZW50cygpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9zdXNwZW5kRXZlbnRzO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHN1c3BlbmRFdmVudHModmFsOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLl9zdXNwZW5kRXZlbnRzID0gdmFsO1xyXG4gIH1cclxuICBwcml2YXRlIF9zdXNwZW5kRXZlbnRzOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIC8vIOafkOS4qm5hbWXlr7nlupTnmoTkuovku7bmlbDnu4TvvIxuYW1l5LiORnVuY3Rpb27mmK8x5a+55aSa55qE5YWz57O777ybXHJcbiAgcHJpdmF0ZSBfZXZlbnRzOiB7IFtrZXk6IHN0cmluZ106IEZ1bmN0aW9uW10gfSA9IHt9O1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5re75Yqg5LqL5Lu25pWw57uE77yM6IulbmFtZeebuOWQjO+8jOWImeWcqOaVsOe7hOacq+Wwvue7p+e7rea3u+WKoO+8m1xyXG4gICAqIEBwYXJhbSBuYW1lIOWHveaVsOWQje+8m1xyXG4gICAqIEBwYXJhbSBmbiDlh73mlbDmnKzkvZPvvJtcclxuICAgKi9cclxuICBwdWJsaWMgb24obmFtZTogc3RyaW5nLCBmbjogRnVuY3Rpb24pOiBFdmVudEhhbmRsZSB7XHJcbiAgICBsZXQgZXZlbnRzOiBGdW5jdGlvbltdID0gdGhpcy5fZXZlbnRzW25hbWVdO1xyXG4gICAgaWYgKGV2ZW50cyA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHRoaXMuX2V2ZW50c1tuYW1lXSA9IFtmbl07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAoZXZlbnRzLmluZGV4T2YoZm4pID09IC0xKSB7XHJcbiAgICAgICAgZXZlbnRzLnB1c2goZm4pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3IEV2ZW50SGFuZGxlKHRoaXMsIG5hbWUsIGZuKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIGVtaXTlkI7lj6rmiafooYzkuIDmrKHvvJtcclxuICAgKiBAcGFyYW0gbmFtZSDlh73mlbDlkI3vvJtcclxuICAgKiBAcGFyYW0gZm4g5Ye95pWw5pys5L2T77ybXHJcbiAgICovXHJcbiAgcHVibGljIG9uY2UobmFtZTogc3RyaW5nLCBmbjogRnVuY3Rpb24pOiBFdmVudEhhbmRsZSB7XHJcbiAgICBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICBsZXQgZXZ0OiBFdmVudEhhbmRsZSA9IHRoaXMub24obmFtZSwgZnVuY3Rpb24gKFxyXG4gICAgICBhcmcwOiBhbnksXHJcbiAgICAgIGFyZzE6IGFueSxcclxuICAgICAgYXJnMjogYW55LFxyXG4gICAgICBhcmczOiBhbnksXHJcbiAgICAgIGFyZzQ6IGFueSxcclxuICAgICAgYXJnNTogYW55LFxyXG4gICAgICBhcmc2OiBhbnksXHJcbiAgICAgIGFyZzc6IGFueVxyXG4gICAgKSB7XHJcbiAgICAgIGZuLmNhbGwoc2VsZiwgYXJnMCwgYXJnMSwgYXJnMiwgYXJnMywgYXJnNCwgYXJnNSwgYXJnNiwgYXJnNyk7XHJcbiAgICAgIGV2dC51bmJpbmQoKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGV2dDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaJp+ihjOS6i+S7tu+8m1xyXG4gICAqIEBwYXJhbSBuYW1lIOWHveaVsOWQje+8m1xyXG4gICAqIEBwYXJhbSBhcmcwIOWHveaVsOWPguaVsDHvvIzlj6/pgInvvJtcclxuICAgKiBAcGFyYW0gYXJnMSDlh73mlbDlj4LmlbAy77yM5Y+v6YCJ77ybXHJcbiAgICogQHBhcmFtIGFyZzIg5Ye95pWw5Y+C5pWwM++8jOWPr+mAie+8m1xyXG4gICAqIEBwYXJhbSBhcmczIOWHveaVsOWPguaVsDTvvIzlj6/pgInvvJtcclxuICAgKiBAcGFyYW0gYXJnNCDlh73mlbDlj4LmlbA177yM5Y+v6YCJ77ybXHJcbiAgICogQHBhcmFtIGFyZzUg5Ye95pWw5Y+C5pWwNu+8jOWPr+mAie+8m1xyXG4gICAqIEBwYXJhbSBhcmc2IOWHveaVsOWPguaVsDfvvIzlj6/pgInvvJtcclxuICAgKiBAcGFyYW0gYXJnNyDlh73mlbDlj4LmlbA477yM5Y+v6YCJ77ybXHJcbiAgICovXHJcbiAgcHVibGljIGVtaXQobmFtZTogc3RyaW5nLFxyXG4gICAgYXJnMD86IGFueSxcclxuICAgIGFyZzE/OiBhbnksXHJcbiAgICBhcmcyPzogYW55LFxyXG4gICAgYXJnMz86IGFueSxcclxuICAgIGFyZzQ/OiBhbnksXHJcbiAgICBhcmc1PzogYW55LFxyXG4gICAgYXJnNj86IGFueSxcclxuICAgIGFyZzc/OiBhbnlcclxuICApOiBFdmVudHMge1xyXG4gICAgaWYgKHRoaXMuX3N1c3BlbmRFdmVudHMpIHJldHVybiB0aGlzO1xyXG5cclxuICAgIGxldCBldmVudHM6IEZ1bmN0aW9uW10gPSB0aGlzLl9ldmVudHNbbmFtZV07XHJcbiAgICBpZiAoIWV2ZW50cykgcmV0dXJuIHRoaXM7XHJcblxyXG4gICAgLy8g6L+U5Zue5paw5pWw57uEXHJcbiAgICBldmVudHMgPSBldmVudHMuc2xpY2UoMCk7XHJcblxyXG4gICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IGV2ZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAoIWV2ZW50c1tpXSkgY29udGludWU7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgZXZlbnRzW2ldLmNhbGwodGhpcywgYXJnMCwgYXJnMSwgYXJnMiwgYXJnMywgYXJnNCwgYXJnNSwgYXJnNiwgYXJnNyk7XHJcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XHJcbiAgICAgICAgY29uc29sZS5pbmZvKFwiJWMlcyAlYyhldmVudCBlcnJvcilcIiwgXCJjb2xvcjogIzA2ZlwiLCBuYW1lLCBcImNvbG9yOiAjZjAwXCIpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGV4LnN0YWNrKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH07XHJcblxyXG4gIC8qKlxyXG4gICAqIOWPlua2iEV2ZW50c+S6i+S7tue7keWumu+8jOiLpW5hbWXkuLrnqbrvvIzliJnmuIXnqbpldmVudHPvvJtcclxuICAgKiBAcGFyYW0gbmFtZSDlh73mlbDlkI3vvJtcclxuICAgKiBAcGFyYW0gZm4g5Ye95pWw5pys5L2T77ybXHJcbiAgICovXHJcbiAgcHVibGljIHVuYmluZChuYW1lPzogc3RyaW5nLCBmbj86IEZ1bmN0aW9uKTogRXZlbnRzIHtcclxuICAgIGlmIChuYW1lKSB7XHJcbiAgICAgIGxldCBldmVudHM6IEZ1bmN0aW9uW10gPSB0aGlzLl9ldmVudHNbbmFtZV07XHJcbiAgICAgIGlmICghZXZlbnRzKSByZXR1cm4gdGhpcztcclxuXHJcbiAgICAgIGlmIChmbikge1xyXG4gICAgICAgIGxldCBpOiBudW1iZXIgPSBldmVudHMuaW5kZXhPZihmbik7XHJcbiAgICAgICAgaWYgKGkgIT09IC0xKSB7XHJcbiAgICAgICAgICBpZiAoZXZlbnRzLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgICAgICBkZWxldGUgdGhpcy5fZXZlbnRzW25hbWVdO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZXZlbnRzLnNwbGljZShpLCAxKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZGVsZXRlIHRoaXMuX2V2ZW50c1tuYW1lXTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fZXZlbnRzID0ge307XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfTtcclxuXHJcbn1cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRXZlbnRIYW5kbGUge1xyXG5cclxuICBwdWJsaWMgbmFtZTogTnVsbGFibGU8c3RyaW5nPjtcclxuXHJcbiAgcHVibGljIG93bmVyOiBOdWxsYWJsZTxFdmVudHM+O1xyXG5cclxuICBwdWJsaWMgZm46IE51bGxhYmxlPEZ1bmN0aW9uPjtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKG93bmVyOiBFdmVudHMsIG5hbWU6IHN0cmluZywgZm46IEZ1bmN0aW9uKSB7XHJcbiAgICB0aGlzLm93bmVyID0gb3duZXI7XHJcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgdGhpcy5mbiA9IGZuO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHVuYmluZCgpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5vd25lcikgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMub3duZXIudW5iaW5kKHRoaXMubmFtZSEsIHRoaXMuZm4hKTtcclxuXHJcbiAgICB0aGlzLm93bmVyID0gbnVsbDtcclxuICAgIHRoaXMubmFtZSA9IG51bGw7XHJcbiAgICB0aGlzLmZuID0gbnVsbDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjYWxsKCk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLmZuKSByZXR1cm47XHJcblxyXG4gICAgdGhpcy5mbi5jYWxsKFxyXG4gICAgICB0aGlzLm93bmVyISxcclxuICAgICAgYXJndW1lbnRzWzBdLFxyXG4gICAgICBhcmd1bWVudHNbMV0sXHJcbiAgICAgIGFyZ3VtZW50c1syXSxcclxuICAgICAgYXJndW1lbnRzWzNdLFxyXG4gICAgICBhcmd1bWVudHNbNF0sXHJcbiAgICAgIGFyZ3VtZW50c1s1XSxcclxuICAgICAgYXJndW1lbnRzWzZdLFxyXG4gICAgICBhcmd1bWVudHNbN11cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb24obmFtZTogc3RyaW5nLCBmbjogRnVuY3Rpb24pOiBFdmVudEhhbmRsZSB7XHJcbiAgICByZXR1cm4gdGhpcy5vd25lciEub24obmFtZSwgZm4pO1xyXG4gIH1cclxuXHJcbn0iLCJleHBvcnQgKiBmcm9tICcuL2V2ZW50cyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vb2JzZXJ2ZXInO1xyXG5leHBvcnQgKiBmcm9tICcuL29ic2VydmVyLWxpc3QnOyIsImltcG9ydCB7IEV2ZW50cyB9IGZyb20gXCIuL2V2ZW50c1wiO1xyXG5pbXBvcnQgeyBPYnNlcnZlciB9IGZyb20gXCIuL29ic2VydmVyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgT2JzZXJ2ZXJMaXN0IGV4dGVuZHMgRXZlbnRzIHtcclxuXHJcbiAgcHVibGljIGRhdGE6IE9ic2VydmVyW107XHJcblxyXG4gIHB1YmxpYyBpbmRleDogc3RyaW5nO1xyXG4gIHB1YmxpYyBzb3J0ZWQ6IGJvb2xlYW47XHJcbiAgcHJpdmF0ZSBfaW5kZXhlZDogeyBba2V5OiBudW1iZXJdOiBPYnNlcnZlciB9O1xyXG5cclxuICBwdWJsaWMgdHlwZTogc3RyaW5nO1xyXG5cclxuXHJcbiAgcHVibGljIGdldCBsZW5ndGgoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmRhdGEubGVuZ3RoO1xyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihvcHRpb25zPzogYW55KSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xyXG5cclxuICAgIHRoaXMudHlwZSA9ICcnO1xyXG4gICAgdGhpcy5kYXRhID0gW107XHJcbiAgICB0aGlzLl9pbmRleGVkID0ge307XHJcbiAgICB0aGlzLnNvcnRlZCA9IG9wdGlvbnMuc29ydGVkIHx8IG51bGw7XHJcbiAgICB0aGlzLmluZGV4ID0gb3B0aW9ucy5pbmRleCB8fCBudWxsO1xyXG5cclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgZ2V0KGluZGV4OiBudW1iZXIpOiBOdWxsYWJsZTxPYnNlcnZlcj4ge1xyXG4gICAgaWYgKHRoaXMuaW5kZXgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2luZGV4ZWRbaW5kZXhdIHx8IG51bGw7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5kYXRhW2luZGV4XSB8fCBudWxsO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIHNldChpbmRleDogbnVtYmVyLCB2YWw6IE9ic2VydmVyKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5pbmRleCkge1xyXG4gICAgICB0aGlzLl9pbmRleGVkW2luZGV4XSA9IHZhbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZGF0YVtpbmRleF0gPSB2YWw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBwdWJsaWMgaW5kZXhvZihpdGVtOiBPYnNlcnZlcik6IG51bWJlciB7XHJcbiAgLy8gICBpZiAodGhpcy5pbmRleCkge1xyXG4gIC8vICAgICBsZXQgaW5kZXg6IG51bWJlciA9XHJcbiAgLy8gICAgICAgKGl0ZW0gaW5zdGFuY2VvZiBPYnNlcnZlciAmJiBpdGVtLmdldCh0aGlzLmluZGV4KSkgfHwgaXRlbVt0aGlzLmluZGV4XTtcclxuICAvLyAgICAgcmV0dXJuICh0aGlzLl9pbmRleGVkW2luZGV4XSAmJiBpbmRleCkgfHwgbnVsbDtcclxuICAvLyAgIH0gZWxzZSB7XHJcbiAgLy8gICAgIGxldCBpbmQgPSB0aGlzLmRhdGEuaW5kZXhPZihpdGVtKTtcclxuICAvLyAgICAgcmV0dXJuIGluZCAhPT0gLTEgPyBpbmQgOiBudWxsO1xyXG4gIC8vICAgfVxyXG4gIC8vIH1cclxuXHJcbiAgLy8gcHVibGljIHBvc2l0aW9uID0gZnVuY3Rpb24gKGI6IGFueSwgZm46IGFueSkge1xyXG4gIC8vICAgbGV0IGwgPSB0aGlzLmRhdGE7XHJcbiAgLy8gICBsZXQgbWluID0gMDtcclxuICAvLyAgIGxldCBtYXggPSBsLmxlbmd0aCAtIDE7XHJcbiAgLy8gICBsZXQgY3VyO1xyXG4gIC8vICAgbGV0IGEsIGk7XHJcbiAgLy8gICBmbiA9IGZuIHx8IHRoaXMuc29ydGVkO1xyXG5cclxuICAvLyAgIHdoaWxlIChtaW4gPD0gbWF4KSB7XHJcbiAgLy8gICAgIGN1ciA9IE1hdGguZmxvb3IoKG1pbiArIG1heCkgLyAyKTtcclxuICAvLyAgICAgYSA9IGxbY3VyXTtcclxuXHJcbiAgLy8gICAgIGkgPSBmbihhLCBiKTtcclxuXHJcbiAgLy8gICAgIGlmIChpID09PSAxKSB7XHJcbiAgLy8gICAgICAgbWF4ID0gY3VyIC0gMTtcclxuICAvLyAgICAgfSBlbHNlIGlmIChpID09PSAtMSkge1xyXG4gIC8vICAgICAgIG1pbiA9IGN1ciArIDE7XHJcbiAgLy8gICAgIH0gZWxzZSB7XHJcbiAgLy8gICAgICAgcmV0dXJuIGN1cjtcclxuICAvLyAgICAgfVxyXG4gIC8vICAgfVxyXG5cclxuICAvLyAgIHJldHVybiAtMTtcclxuICAvLyB9O1xyXG5cclxuICAvLyAy5YiG5rOV5rGC5pyA6L+R6Led56a7XHJcbiAgcHVibGljIHBvc2l0aW9uTmV4dENsb3Nlc3QoYjogYW55LCBmbjogYW55KTogbnVtYmVyIHtcclxuICAgIGxldCBsID0gdGhpcy5kYXRhO1xyXG4gICAgbGV0IG1pbiA9IDA7XHJcbiAgICBsZXQgbWF4ID0gbC5sZW5ndGggLSAxO1xyXG4gICAgbGV0IGN1cjogbnVtYmVyID0gMDtcclxuICAgIGxldCBhLCBpO1xyXG4gICAgZm4gPSBmbiB8fCB0aGlzLnNvcnRlZDtcclxuXHJcbiAgICBpZiAobC5sZW5ndGggPT09IDApIHJldHVybiAtMTtcclxuXHJcbiAgICBpZiAoZm4obFswXSwgYikgPT09IDApIHJldHVybiAwO1xyXG5cclxuICAgIHdoaWxlIChtaW4gPD0gbWF4KSB7XHJcbiAgICAgIGN1ciA9IE1hdGguZmxvb3IoKG1pbiArIG1heCkgLyAyKTtcclxuICAgICAgYSA9IGxbY3VyXTtcclxuXHJcbiAgICAgIGkgPSBmbihhLCBiKTtcclxuXHJcbiAgICAgIGlmIChpID09PSAxKSB7XHJcbiAgICAgICAgbWF4ID0gY3VyIC0gMTtcclxuICAgICAgfSBlbHNlIGlmIChpID09PSAtMSkge1xyXG4gICAgICAgIG1pbiA9IGN1ciArIDE7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGN1cjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChmbihhLCBiKSA9PT0gMSkgcmV0dXJuIGN1cjtcclxuXHJcbiAgICBpZiAoY3VyISArIDEgPT09IGwubGVuZ3RoKSByZXR1cm4gLTE7XHJcblxyXG4gICAgcmV0dXJuIGN1ciEgKyAxO1xyXG4gIH07XHJcblxyXG5cclxuICBwdWJsaWMgaGFzKGl0ZW06IE9ic2VydmVyKTogYm9vbGVhbiB7XHJcbiAgICAvLyBpZiAodGhpcy5pbmRleCkge1xyXG4gICAgLy8gICBsZXQgaW5kZXggPVxyXG4gICAgLy8gICAgIChpdGVtIGluc3RhbmNlb2YgT2JzZXJ2ZXIgJiYgaXRlbS5nZXQodGhpcy5pbmRleCkpIHx8IGl0ZW1bdGhpcy5pbmRleF07XHJcbiAgICAvLyAgIHJldHVybiAhIXRoaXMuX2luZGV4ZWRbaW5kZXhdO1xyXG4gICAgLy8gfSBlbHNlIHtcclxuICAgIC8vICAgcmV0dXJuIHRoaXMuZGF0YS5pbmRleE9mKGl0ZW0pICE9PSAtMTtcclxuICAgIC8vIH1cclxuICAgIHJldHVybiB0aGlzLmRhdGEuaW5kZXhPZihpdGVtKSAhPT0gLTE7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGFkZChpdGVtOiBPYnNlcnZlcik6IG51bWJlciB7XHJcbiAgICBpZiAodGhpcy5oYXMoaXRlbSkpIHJldHVybiAtMTtcclxuXHJcbiAgICAvLyBsZXQgaW5kZXggPSB0aGlzLmRhdGEubGVuZ3RoO1xyXG4gICAgLy8gaWYgKHRoaXMuaW5kZXgpIHtcclxuICAgIC8vICAgaW5kZXggPVxyXG4gICAgLy8gICAgIChpdGVtIGluc3RhbmNlb2YgT2JzZXJ2ZXIgJiYgaXRlbS5nZXQodGhpcy5pbmRleCkpIHx8IGl0ZW1bdGhpcy5pbmRleF07XHJcbiAgICAvLyAgIHRoaXMuX2luZGV4ZWRbaW5kZXhdID0gaXRlbTtcclxuICAgIC8vIH1cclxuXHJcbiAgICBsZXQgcG9zID0gMDtcclxuXHJcbiAgICB0aGlzLmRhdGEucHVzaChpdGVtKTtcclxuICAgIHBvcyA9IHRoaXMuZGF0YS5sZW5ndGggLSAxO1xyXG5cclxuICAgIC8vIGlmICh0aGlzLnNvcnRlZCkge1xyXG4gICAgLy8gICBwb3MgPSB0aGlzLnBvc2l0aW9uTmV4dENsb3Nlc3QoaXRlbSk7XHJcbiAgICAvLyAgIGlmIChwb3MgIT09IC0xKSB7XHJcbiAgICAvLyAgICAgdGhpcy5kYXRhLnNwbGljZShwb3MsIDAsIGl0ZW0pO1xyXG4gICAgLy8gICB9IGVsc2Uge1xyXG4gICAgLy8gICAgIHRoaXMuZGF0YS5wdXNoKGl0ZW0pO1xyXG4gICAgLy8gICB9XHJcbiAgICAvLyB9IGVsc2Uge1xyXG4gICAgLy8gICB0aGlzLmRhdGEucHVzaChpdGVtKTtcclxuICAgIC8vICAgcG9zID0gdGhpcy5kYXRhLmxlbmd0aCAtIDE7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgdGhpcy5lbWl0KCdhZGQnLCBpdGVtLCB0aGlzLmRhdGEubGVuZ3RoKTtcclxuXHJcbiAgICByZXR1cm4gcG9zO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBtb3ZlKGl0ZW06IE9ic2VydmVyLCBwb3M6IG51bWJlcik6IHZvaWQge1xyXG4gICAgbGV0IGluZCA9IHRoaXMuZGF0YS5pbmRleE9mKGl0ZW0pO1xyXG4gICAgdGhpcy5kYXRhLnNwbGljZShpbmQsIDEpO1xyXG4gICAgaWYgKHBvcyA9PT0gLTEpIHtcclxuICAgICAgdGhpcy5kYXRhLnB1c2goaXRlbSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmRhdGEuc3BsaWNlKHBvcywgMCwgaXRlbSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8gVE9ET1xyXG4gIHB1YmxpYyByZW1vdmUoaXRlbTogT2JzZXJ2ZXIpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5oYXMoaXRlbSkpIHJldHVybjtcclxuXHJcbiAgICBsZXQgaW5kID0gdGhpcy5kYXRhLmluZGV4T2YoaXRlbSk7XHJcblxyXG4gICAgLy8gbGV0IGluZGV4ID0gaW5kO1xyXG4gICAgLy8gaWYgKHRoaXMuaW5kZXgpIHtcclxuICAgIC8vICAgaW5kZXggPVxyXG4gICAgLy8gICAgIChpdGVtIGluc3RhbmNlb2YgT2JzZXJ2ZXIgJiYgaXRlbS5nZXQodGhpcy5pbmRleCkpIHx8IGl0ZW1bdGhpcy5pbmRleF07XHJcbiAgICAvLyAgIGRlbGV0ZSB0aGlzLl9pbmRleGVkW2luZGV4XTtcclxuICAgIC8vIH1cclxuXHJcbiAgICB0aGlzLmRhdGEuc3BsaWNlKGluZCwgMSk7XHJcblxyXG4gICAgdGhpcy5lbWl0KFwicmVtb3ZlXCIsIGl0ZW0sIGluZCk7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIHJlbW92ZUJ5S2V5KGluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLmluZGV4KSB7XHJcbiAgICAgIGxldCBpdGVtID0gdGhpcy5faW5kZXhlZFtpbmRleF07XHJcblxyXG4gICAgICBpZiAoIWl0ZW0pIHJldHVybjtcclxuXHJcbiAgICAgIGxldCBpbmQgPSB0aGlzLmRhdGEuaW5kZXhPZihpdGVtKTtcclxuICAgICAgdGhpcy5kYXRhLnNwbGljZShpbmQsIDEpO1xyXG5cclxuICAgICAgZGVsZXRlIHRoaXMuX2luZGV4ZWRbaW5kZXhdO1xyXG5cclxuICAgICAgdGhpcy5lbWl0KFwicmVtb3ZlXCIsIGl0ZW0sIGluZCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodGhpcy5kYXRhLmxlbmd0aCA8IGluZGV4KSByZXR1cm47XHJcblxyXG4gICAgICBsZXQgaXRlbSA9IHRoaXMuZGF0YVtpbmRleF07XHJcblxyXG4gICAgICB0aGlzLmRhdGEuc3BsaWNlKGluZGV4LCAxKTtcclxuXHJcbiAgICAgIHRoaXMuZW1pdChcInJlbW92ZVwiLCBpdGVtLCBpbmRleCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8gcHVibGljIHJlbW92ZUJ5KGZuOiBGdW5jdGlvbikge1xyXG4gIC8vICAgbGV0IGkgPSB0aGlzLmRhdGEubGVuZ3RoO1xyXG4gIC8vICAgd2hpbGUgKGktLSkge1xyXG4gIC8vICAgICBpZiAoIWZuKHRoaXMuZGF0YVtpXSkpIGNvbnRpbnVlO1xyXG5cclxuICAvLyAgICAgaWYgKHRoaXMuaW5kZXgpIHtcclxuICAvLyAgICAgICBkZWxldGUgdGhpcy5faW5kZXhlZFt0aGlzLmRhdGFbaV1bdGhpcy5pbmRleF1dO1xyXG4gIC8vICAgICB9XHJcbiAgLy8gICAgIHRoaXMuZGF0YS5zcGxpY2UoaSwgMSk7XHJcblxyXG4gIC8vICAgICB0aGlzLmVtaXQoXCJyZW1vdmVcIiwgdGhpcy5kYXRhW2ldLCBpKTtcclxuICAvLyAgIH1cclxuICAvLyB9O1xyXG5cclxuICBwdWJsaWMgY2xlYXIoKTogdm9pZCB7XHJcbiAgICBsZXQgaXRlbXMgPSB0aGlzLmRhdGEuc2xpY2UoMCk7XHJcblxyXG4gICAgdGhpcy5kYXRhID0gW107XHJcbiAgICB0aGlzLl9pbmRleGVkID0ge307XHJcblxyXG4gICAgbGV0IGkgPSBpdGVtcy5sZW5ndGg7XHJcbiAgICB3aGlsZSAoaS0tKSB7XHJcbiAgICAgIHRoaXMuZW1pdChcInJlbW92ZVwiLCBpdGVtc1tpXSwgaSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8gcHVibGljIGZvckVhY2goZm46IEZ1bmN0aW9uKSB7XHJcbiAgLy8gICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gIC8vICAgICBmbih0aGlzLmRhdGFbaV0sICh0aGlzLmluZGV4ICYmIHRoaXMuZGF0YVtpXVt0aGlzLmluZGV4XSkgfHwgaSk7XHJcbiAgLy8gICB9XHJcbiAgLy8gfTtcclxuXHJcbiAgLy8gcHVibGljIGZpbmQoZm46IEZ1bmN0aW9uKSB7XHJcbiAgLy8gICBsZXQgaXRlbXMgPSBbXTtcclxuICAvLyAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5kYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgLy8gICAgIGlmICghZm4odGhpcy5kYXRhW2ldKSkgY29udGludWU7XHJcblxyXG4gIC8vICAgICBsZXQgaW5kZXggPSBpO1xyXG4gIC8vICAgICBpZiAodGhpcy5pbmRleCkgaW5kZXggPSB0aGlzLmRhdGFbaV1bdGhpcy5pbmRleF07XHJcblxyXG4gIC8vICAgICBpdGVtcy5wdXNoKFtpbmRleCwgdGhpcy5kYXRhW2ldXSk7XHJcbiAgLy8gICB9XHJcbiAgLy8gICByZXR1cm4gaXRlbXM7XHJcbiAgLy8gfTtcclxuXHJcbiAgLy8gcHVibGljIGZpbmRPbmUoZm46IEZ1bmN0aW9uKSB7XHJcbiAgLy8gICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gIC8vICAgICBpZiAoIWZuKHRoaXMuZGF0YVtpXSkpIGNvbnRpbnVlO1xyXG5cclxuICAvLyAgICAgbGV0IGluZGV4ID0gaTtcclxuICAvLyAgICAgaWYgKHRoaXMuaW5kZXgpIGluZGV4ID0gdGhpcy5kYXRhW2ldW3RoaXMuaW5kZXhdO1xyXG5cclxuICAvLyAgICAgcmV0dXJuIFtpbmRleCwgdGhpcy5kYXRhW2ldXTtcclxuICAvLyAgIH1cclxuICAvLyAgIHJldHVybiBudWxsO1xyXG4gIC8vIH07XHJcblxyXG4gIC8vIHB1YmxpYyBtYXAoZm46IEZ1bmN0aW9uKSB7XHJcbiAgLy8gICByZXR1cm4gdGhpcy5kYXRhLm1hcChmbik7XHJcbiAgLy8gfTtcclxuXHJcbiAgLy8gcHVibGljIHNvcnQoZm46IEZ1bmN0aW9uKSB7XHJcbiAgLy8gICB0aGlzLmRhdGEuc29ydChmbik7XHJcbiAgLy8gfTtcclxuXHJcbiAgcHVibGljIGFycmF5KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZGF0YS5zbGljZSgwKTtcclxuICB9O1xyXG5cclxuICAvLyBwdWJsaWMganNvbigpIHtcclxuICAvLyAgIGxldCBpdGVtcyA9IHRoaXMuYXJyYXkoKTtcclxuICAvLyAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAvLyAgICAgaWYgKGl0ZW1zW2ldIGluc3RhbmNlb2YgT2JzZXJ2ZXIpIHtcclxuICAvLyAgICAgICBpdGVtc1tpXSA9IGl0ZW1zW2ldLmpzb24oKTtcclxuICAvLyAgICAgfVxyXG4gIC8vICAgfVxyXG4gIC8vICAgcmV0dXJuIGl0ZW1zO1xyXG4gIC8vIH07XHJcblxyXG59IiwiaW1wb3J0IHsgRXZlbnRzIH0gZnJvbSBcIi4vZXZlbnRzXCI7XHJcblxyXG4vKipcclxuICoganNvbuaVsOaNruino+aekOW3peWFt++8m1xyXG4gKiDopoHmsYLvvJpcclxuICogIDEu5L+d5a2Y5Y6f5aeLanNvbuaVsOaNru+8m1xyXG4gKiAgMi7lrZjlgqjkv6Hmga/vvIzmoLnmja7ot6/lvoTlv6vpgJ/ntKLlvJXliLDlr7nlupTmlbDmja7vvIzljIXmi6zmlbDnu4TvvIzljIXmi6zltYzlpZfnmoTlr7nosaHvvIzkv53mjIHljp/lp4vmlbDmja7nsbvlnovkuI3lj5jvvJtcclxuICogIDMu5o+S5YWl44CB5Yig6Zmk44CBY2xvbmXmlbDmja7vvJtcclxuICogXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgT2JzZXJ2ZXIgZXh0ZW5kcyBFdmVudHMge1xyXG5cclxuICBwdWJsaWMgZ2V0IGNsYXNzTmFtZSgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIFwiT2JzZXJ2ZXJcIjtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvcmlnaW46IGFueTtcclxuXHJcbiAgcHJpdmF0ZSBTRVBBUkFUT1I6IHN0cmluZyA9ICcuJztcclxuXHJcblxyXG4gIHByaXZhdGUgX2Rlc3Ryb3llZDogYm9vbGVhbjtcclxuICBwdWJsaWMgX3BhdGg6IHN0cmluZztcclxuICAvLyBUT0RPXHJcbiAgcHVibGljIF9rZXlzOiBzdHJpbmdbXTsgLy8g6K6w5b2V5a+56LGh55qEa2V544CBdmFsdWXlgLzvvJtcclxuXHJcblxyXG4gIHB1YmxpYyBfZGF0YTogeyBba2V5OiBzdHJpbmddOiBhbnkgfTsgLy8g6YeH55So5q2k5a+56LGh77yM5a6M5pW06K6w5b2V5omA5pyJ5YC877ybXHJcblxyXG5cclxuXHJcbiAgcHVibGljIF9wYXJlbnQ6IGFueTsgLy8g5b2T5YmN54i254mp5L2TXHJcbiAgLy8gcHVibGljIF9wYXJlbnRQYXRoOiBzdHJpbmc7XHJcbiAgcHJpdmF0ZSBfcGFyZW50RmllbGQ6IGFueTtcclxuICBwcml2YXRlIF9wYXJlbnRLZXk6IGFueTtcclxuXHJcbiAgcHJpdmF0ZSBfc2lsZW50OiBib29sZWFuO1xyXG5cclxuICBwcml2YXRlIGhpc3RvcnkhOiBIaXN0b3J5O1xyXG4gIHByaXZhdGUgc3luYyE6IEhpc3Rvcnk7XHJcblxyXG4gIC8vIGVudGl0eSwgYXNzZXRzLCBjb21wb25lbnRzOiBzY3JpcHQsIOS4gOiIrGNvbXBvbmVudHMsIHNlbGVjdG9yLCBoaXN0b3J5XHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKGRhdGE6IGFueSwgb3B0aW9ucz86IGFueSkge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLm9yaWdpbiA9IGRhdGE7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiAgICB0aGlzLl9kZXN0cm95ZWQgPSBmYWxzZTtcclxuICAgIHRoaXMuX3BhdGggPSBcIlwiO1xyXG4gICAgdGhpcy5fa2V5cyA9IFtdO1xyXG4gICAgdGhpcy5fZGF0YSA9IHt9O1xyXG5cclxuICAgIC8vIGFycmF5IHBhdGhzIHdoZXJlIGR1cGxpY2F0ZSBlbnRyaWVzIGFyZSBhbGxvd2VkIC0gbm9ybWFsbHlcclxuICAgIC8vIHdlIGNoZWNrIGlmIGFuIGFycmF5IGFscmVhZHkgaGFzIGEgdmFsdWUgYmVmb3JlIGluc2VydGluZyBpdFxyXG4gICAgLy8gYnV0IGlmIHRoZSBhcnJheSBwYXRoIGlzIGluIGhlcmUgd2UnbGwgYWxsb3cgaXRcclxuICAgIC8vIHRoaXMuX3BhdGhzV2l0aER1cGxpY2F0ZXMgPSBudWxsO1xyXG4gICAgLy8gaWYgKG9wdGlvbnMucGF0aHNXaXRoRHVwbGljYXRlcykge1xyXG4gICAgLy8gICAgIHRoaXMuX3BhdGhzV2l0aER1cGxpY2F0ZXMgPSB7fTtcclxuICAgIC8vICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG9wdGlvbnMucGF0aHNXaXRoRHVwbGljYXRlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgLy8gICAgICAgICB0aGlzLl9wYXRoc1dpdGhEdXBsaWNhdGVzW29wdGlvbnMucGF0aHNXaXRoRHVwbGljYXRlc1tpXV0gPSB0cnVlO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxuXHJcbiAgICB0aGlzLnBhdGNoRGF0YShkYXRhKTtcclxuXHJcbiAgICAvLyBmb3IgKGxldCBrZSBpbiB0aGlzLl9kYXRhKSB7XHJcbiAgICAvLyAgIGRlYnVnLmxvZyhcImtleTogXCIgKyBrZSk7XHJcbiAgICAvLyAgIGRlYnVnLmxvZyh0aGlzLl9kYXRhW2tlXSk7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gdGhpcy5fcGFyZW50ID0gb3B0aW9ucy5wYXJlbnQgfHwgbnVsbDtcclxuICAgIC8vIHRoaXMuX3BhcmVudFBhdGggPSBvcHRpb25zLnBhcmVudFBhdGggfHwgXCJcIjtcclxuICAgIC8vIHRoaXMuX3BhcmVudEZpZWxkID0gb3B0aW9ucy5wYXJlbnRGaWVsZCB8fCBudWxsO1xyXG4gICAgLy8gdGhpcy5fcGFyZW50S2V5ID0gb3B0aW9ucy5wYXJlbnRLZXkgfHwgbnVsbDtcclxuXHJcbiAgICB0aGlzLl9zaWxlbnQgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBwYXRjaERhdGEoZGF0YTogYW55KTogdm9pZCB7XHJcbiAgICBpZiAodHlwZW9mIGRhdGEgIT09IFwib2JqZWN0XCIpIHtcclxuICAgICAgZGVidWcud2Fybih0aGlzLmNsYXNzTmFtZSArICc6IOS4jeaYr+ato+ehrueahGpzb27lr7nosaHvvIzmiZPljbDvvJpcXG4nICsgZGF0YSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGxldCBrZXkgaW4gZGF0YSkge1xyXG5cclxuXHJcbiAgICAgIGlmICh0eXBlb2YgZGF0YVtrZXldID09PSBcIm9iamVjdFwiKSB7XHJcbiAgICAgICAgLy8g5a+56LGh5bGe5oCnXHJcbiAgICAgICAgLy8gZGVidWcubG9nKCflr7nosaHlsZ7mgKfvvJonICsga2V5KTtcclxuICAgICAgICAvLyBkZWJ1Zy5sb2coZGF0YVtrZXldKTtcclxuICAgICAgICAvLyB0aGlzLl9wcmVwYXJlKHRoaXMsIGtleSwgZGF0YVtrZXldKTtcclxuICAgICAgICB0aGlzLnBhcnNlck9iamVjdChrZXksIGtleSwgZGF0YVtrZXldKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyDkuIDoiKzlsZ7mgKdcclxuICAgICAgICAvLyBkZWJ1Zy5sb2coJ+S4gOiIrOWxnuaAp++8micgKyBrZXkpO1xyXG4gICAgICAgIC8vIGRlYnVnLmxvZyhkYXRhW2tleV0pO1xyXG4gICAgICAgIHRoaXMuc2V0KGtleSwgZGF0YVtrZXldKTtcclxuICAgICAgICAvLyB0aGlzLnNldChrZXksIGRhdGFba2V5XSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgc2V0KHBhdGg6IHN0cmluZywgdmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgdGhpcy5fZGF0YVtwYXRoXSA9IHZhbHVlO1xyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBwYXJzZXJPYmplY3QocHJlZml4OiBzdHJpbmcsIGtleTogc3RyaW5nLCB2YWx1ZTogYW55KTogdm9pZCB7XHJcbiAgICAvLyDlhYjkv53lrZjkuIDku71cclxuICAgIHRoaXMuc2V0KHByZWZpeCwgdmFsdWUpO1xyXG5cclxuICAgIGxldCBwYXRoOiBzdHJpbmc7XHJcbiAgICBsZXQgdHlwZTogc3RyaW5nID0gdHlwZW9mIHZhbHVlO1xyXG5cclxuICAgIGlmICh0eXBlID09PSBcIm9iamVjdFwiICYmIHZhbHVlIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuXHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsdWUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBwYXRoID0gcHJlZml4ICsgdGhpcy5TRVBBUkFUT1IgKyBpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdGhpcy5zZXQocGF0aCwgdmFsdWVbaV0pO1xyXG4gICAgICAgIC8vIOaVsOe7hOWFg+e0oOi/mOaYr+WvueixoeeahOaDheWGteaaguaXtuS4jeWkhOeQhlxyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09IFwib2JqZWN0XCIgJiYgdmFsdWUgaW5zdGFuY2VvZiBPYmplY3QpIHtcclxuXHJcbiAgICAgIGZvciAobGV0IGtleTIgaW4gdmFsdWUpIHtcclxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlW2tleTJdID09PSBcIm9iamVjdFwiKSB7XHJcbiAgICAgICAgICAvLyDpgJLlvZLop6PmnpBcclxuICAgICAgICAgIHRoaXMucGFyc2VyT2JqZWN0KHByZWZpeCArIHRoaXMuU0VQQVJBVE9SICsga2V5Miwga2V5MiwgdmFsdWVba2V5Ml0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBwYXRoID0gcHJlZml4ICsgdGhpcy5TRVBBUkFUT1IgKyBrZXkyO1xyXG4gICAgICAgICAgdGhpcy5zZXQocGF0aCwgdmFsdWVba2V5Ml0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZGVidWcud2Fybih0aGlzLmNsYXNzTmFtZSArICcucGFyc2VyT2JqZWN0LCDkuLrmraLmlbDmja7nsbvlnos6JyArIHZhbHVlKTtcclxuICAgICAgLy8gdGhpcy5zZXQoa2V5LCApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBoYXMocGF0aDogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5fZGF0YVtwYXRoXSA/IHRydWUgOiBmYWxzZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQocGF0aDogc3RyaW5nKTogYW55IHtcclxuICAgIHJldHVybiB0aGlzLl9kYXRhW3BhdGhdO1xyXG4gIH1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4gIHB1YmxpYyBwcm9wYWdhdGUoZXZ0OiBhbnkpIHtcclxuICAgIGxldCB0aGF0ID0gdGhpcztcclxuICAgIHJldHVybiBmdW5jdGlvbiAocGF0aDogc3RyaW5nLCBhcmcxOiBhbnksIGFyZzI6IGFueSwgYXJnMzogYW55KSB7XHJcbiAgICAgIGlmICghdGhhdC5fcGFyZW50KSByZXR1cm47XHJcblxyXG4gICAgICBsZXQga2V5ID0gdGhhdC5fcGFyZW50S2V5O1xyXG4gICAgICBpZiAoIWtleSAmJiB0aGF0Ll9wYXJlbnRGaWVsZCBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgICAga2V5ID0gdGhhdC5fcGFyZW50RmllbGQuaW5kZXhPZih0aGF0KTtcclxuXHJcbiAgICAgICAgaWYgKGtleSA9PT0gLTEpIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gcGF0aCA9IHRoYXQuX3BhcmVudFBhdGggKyBcIi5cIiArIGtleSArIFwiLlwiICsgcGF0aDtcclxuXHJcbiAgICAgIGxldCBzdGF0ZTtcclxuICAgICAgaWYgKHRoYXQuX3NpbGVudCkgc3RhdGUgPSB0aGF0Ll9wYXJlbnQuc2lsZW5jZSgpO1xyXG5cclxuICAgICAgdGhhdC5fcGFyZW50LmVtaXQocGF0aCArIFwiOlwiICsgZXZ0LCBhcmcxLCBhcmcyLCBhcmczKTtcclxuICAgICAgdGhhdC5fcGFyZW50LmVtaXQoXCIqOlwiICsgZXZ0LCBwYXRoLCBhcmcxLCBhcmcyLCBhcmczKTtcclxuXHJcbiAgICAgIGlmICh0aGF0Ll9zaWxlbnQpIHRoYXQuX3BhcmVudC5zaWxlbmNlUmVzdG9yZShzdGF0ZSk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLy8ga2V5ID0+IG9iamVjdFxyXG4gIHByaXZhdGUgX3ByZXBhcmUodGFyZ2V0OiBPYnNlcnZlciwga2V5OiBzdHJpbmcsIHZhbHVlOiBhbnksIHNpbGVudD86IGJvb2xlYW4sIHJlbW90ZT86IGFueSkge1xyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgbGV0IHN0YXRlOiBib29sZWFuW107XHJcbiAgICBsZXQgcGF0aCA9ICh0YXJnZXQuX3BhdGggPyB0YXJnZXQuX3BhdGggKyBcIi5cIiA6IFwiXCIpICsga2V5O1xyXG4gICAgbGV0IHR5cGUgPSB0eXBlb2YgdmFsdWU7XHJcblxyXG4gICAgdGFyZ2V0Ll9rZXlzLnB1c2goa2V5KTtcclxuXHJcbiAgICBpZiAodHlwZSA9PT0gXCJvYmplY3RcIiAmJiB2YWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgIHRhcmdldC5fZGF0YVtrZXldID0gdmFsdWUuc2xpY2UoMCk7IC8vIOWkjeWItuS4gOS7veaWsOeahOaVsOe7hFxyXG5cclxuICAgICAgLy8g5a2Q5LiA5bGC5pWw5o2uXHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGFyZ2V0Ll9kYXRhW2tleV0ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAodHlwZW9mIHRhcmdldC5fZGF0YVtrZXldW2ldID09PSBcIm9iamVjdFwiICYmIHRhcmdldC5fZGF0YVtrZXldW2ldICE9PSBudWxsKSB7XHJcbiAgICAgICAgICBpZiAodGFyZ2V0Ll9kYXRhW2tleV1baV0gaW5zdGFuY2VvZiBBcnJheSkge1xyXG4gICAgICAgICAgICB0YXJnZXQuX2RhdGFba2V5XVtpXS5zbGljZSgwKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIG9ic2VydmVyPyDov5nph4zkuI3pnIDopoHpgJLlvZLlkJfvvJ9cclxuICAgICAgICAgICAgdGFyZ2V0Ll9kYXRhW2tleV1baV0gPSBuZXcgT2JzZXJ2ZXIoXHJcbiAgICAgICAgICAgICAgdGFyZ2V0Ll9kYXRhW2tleV1baV0sXHJcbiAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgcGFyZW50OiB0aGlzLFxyXG4gICAgICAgICAgICAgICAgcGFyZW50UGF0aDogcGF0aCxcclxuICAgICAgICAgICAgICAgIHBhcmVudEZpZWxkOiB0YXJnZXQuX2RhdGFba2V5XSxcclxuICAgICAgICAgICAgICAgIHBhcmVudEtleTogbnVsbFxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgc3RhdGUgPSB0aGlzLnNpbGVuY2UoKTtcclxuICAgICAgICAgIHRoaXMuZW1pdChwYXRoICsgXCIuXCIgKyBpICsgXCI6c2V0XCIsIHRhcmdldC5fZGF0YVtrZXldW2ldLCBudWxsLCByZW1vdGUpO1xyXG4gICAgICAgICAgdGhpcy5lbWl0KFwiKjpzZXRcIiwgcGF0aCArIFwiLlwiICsgaSwgdGFyZ2V0Ll9kYXRhW2tleV1baV0sIG51bGwsIHJlbW90ZSk7XHJcbiAgICAgICAgICB0aGlzLnNpbGVuY2VSZXN0b3JlKHN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChzaWxlbnQpIHN0YXRlID0gdGhpcy5zaWxlbmNlKCk7XHJcblxyXG4gICAgICB0aGlzLmVtaXQocGF0aCArIFwiOnNldFwiLCB0YXJnZXQuX2RhdGFba2V5XSwgbnVsbCwgcmVtb3RlKTtcclxuICAgICAgdGhpcy5lbWl0KFwiKjpzZXRcIiwgcGF0aCwgdGFyZ2V0Ll9kYXRhW2tleV0sIG51bGwsIHJlbW90ZSk7XHJcblxyXG4gICAgICBpZiAoc2lsZW50KSB0aGlzLnNpbGVuY2VSZXN0b3JlKHN0YXRlISk7XHJcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09IFwib2JqZWN0XCIgJiYgdmFsdWUgaW5zdGFuY2VvZiBPYmplY3QpIHtcclxuICAgICAgaWYgKHR5cGVvZiB0YXJnZXQuX2RhdGFba2V5XSAhPT0gXCJvYmplY3RcIikge1xyXG4gICAgICAgIHRhcmdldC5fZGF0YVtrZXldID0ge1xyXG4gICAgICAgICAgX3BhdGg6IHBhdGgsXHJcbiAgICAgICAgICBfa2V5czogW10sXHJcbiAgICAgICAgICBfZGF0YToge31cclxuICAgICAgICB9O1xyXG4gICAgICB9XHJcblxyXG4gICAgICBmb3IgKGxldCBpIGluIHZhbHVlKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZVtpXSA9PT0gXCJvYmplY3RcIikge1xyXG4gICAgICAgICAgLy8g6YCS5b2SXHJcbiAgICAgICAgICB0aGlzLl9wcmVwYXJlKHRhcmdldC5fZGF0YVtrZXldLCBpLCB2YWx1ZVtpXSwgdHJ1ZSwgcmVtb3RlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgc3RhdGUgPSB0aGlzLnNpbGVuY2UoKTtcclxuXHJcbiAgICAgICAgICB0YXJnZXQuX2RhdGFba2V5XS5fZGF0YVtpXSA9IHZhbHVlW2ldO1xyXG4gICAgICAgICAgdGFyZ2V0Ll9kYXRhW2tleV0uX2tleXMucHVzaChpKTtcclxuXHJcbiAgICAgICAgICB0aGlzLmVtaXQocGF0aCArIFwiLlwiICsgaSArIFwiOnNldFwiLCB2YWx1ZVtpXSwgbnVsbCwgcmVtb3RlKTtcclxuICAgICAgICAgIHRoaXMuZW1pdChcIio6c2V0XCIsIHBhdGggKyBcIi5cIiArIGksIHZhbHVlW2ldLCBudWxsLCByZW1vdGUpO1xyXG5cclxuICAgICAgICAgIHRoaXMuc2lsZW5jZVJlc3RvcmUoc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHNpbGVudCkgc3RhdGUgPSB0aGlzLnNpbGVuY2UoKTtcclxuXHJcbiAgICAgIC8vIHBhc3NpbmcgdW5kZWZpbmVkIGFzIHZhbHVlT2xkIGhlcmVcclxuICAgICAgLy8gYnV0IHdlIHNob3VsZCBnZXQgdGhlIG9sZCB2YWx1ZSB0byBiZSBjb25zaXN0ZW50XHJcbiAgICAgIHRoaXMuZW1pdChwYXRoICsgXCI6c2V0XCIsIHZhbHVlLCB1bmRlZmluZWQsIHJlbW90ZSk7XHJcbiAgICAgIHRoaXMuZW1pdChcIio6c2V0XCIsIHBhdGgsIHZhbHVlLCB1bmRlZmluZWQsIHJlbW90ZSk7XHJcblxyXG4gICAgICBpZiAoc2lsZW50KSB0aGlzLnNpbGVuY2VSZXN0b3JlKHN0YXRlISk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAoc2lsZW50KSBzdGF0ZSA9IHRoaXMuc2lsZW5jZSgpO1xyXG5cclxuICAgICAgdGFyZ2V0Ll9kYXRhW2tleV0gPSB2YWx1ZTtcclxuXHJcbiAgICAgIHRoaXMuZW1pdChwYXRoICsgXCI6c2V0XCIsIHZhbHVlLCB1bmRlZmluZWQsIHJlbW90ZSk7XHJcbiAgICAgIHRoaXMuZW1pdChcIio6c2V0XCIsIHBhdGgsIHZhbHVlLCB1bmRlZmluZWQsIHJlbW90ZSk7XHJcblxyXG4gICAgICBpZiAoc2lsZW50KSB0aGlzLnNpbGVuY2VSZXN0b3JlKHN0YXRlISk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2lsZW5jZSgpOiBib29sZWFuW10ge1xyXG4gICAgdGhpcy5fc2lsZW50ID0gdHJ1ZTtcclxuXHJcbiAgICAvLyBoaXN0b3J5IGhvb2sgdG8gcHJldmVudCBhcnJheSB2YWx1ZXMgdG8gYmUgcmVjb3JkZWRcclxuICAgIGxldCBoaXN0b3J5U3RhdGU6IGJvb2xlYW4gPVxyXG4gICAgICB0aGlzLmhpc3RvcnkgIT09IHVuZGVmaW5lZCAmJiB0aGlzLmhpc3RvcnkuZW5hYmxlZCAhPT0gdW5kZWZpbmVkO1xyXG4gICAgaWYgKGhpc3RvcnlTdGF0ZSkgdGhpcy5oaXN0b3J5LmVuYWJsZWQgPSBmYWxzZTtcclxuXHJcbiAgICAvLyBzeW5jIGhvb2sgdG8gcHJldmVudCBhcnJheSB2YWx1ZXMgdG8gYmUgcmVjb3JkZWQgYXMgYXJyYXkgcm9vdCBhbHJlYWR5IGRpZFxyXG4gICAgbGV0IHN5bmNTdGF0ZTogYm9vbGVhbiA9XHJcbiAgICAgIHRoaXMuc3luYyAhPT0gdW5kZWZpbmVkICYmIHRoaXMuc3luYy5lbmFibGVkICE9PSB1bmRlZmluZWQ7XHJcbiAgICBpZiAoc3luY1N0YXRlKSB0aGlzLnN5bmMuZW5hYmxlZCA9IGZhbHNlO1xyXG5cclxuICAgIHJldHVybiBbaGlzdG9yeVN0YXRlLCBzeW5jU3RhdGVdO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNpbGVuY2VSZXN0b3JlKHN0YXRlOiBib29sZWFuW10pOiB2b2lkIHtcclxuICAgIHRoaXMuX3NpbGVudCA9IGZhbHNlO1xyXG5cclxuICAgIGlmIChzdGF0ZVswXSkgdGhpcy5oaXN0b3J5LmVuYWJsZWQgPSB0cnVlO1xyXG5cclxuICAgIGlmIChzdGF0ZVsxXSkgdGhpcy5zeW5jLmVuYWJsZWQgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgLy8gcHVibGljIGhhcyhwYXRoOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAvLyAgIGxldCBrZXlzID0gcGF0aC5zcGxpdChcIi5cIik7XHJcbiAgLy8gICBsZXQgbm9kZSA9IHRoaXM7XHJcbiAgLy8gICBmb3IgKGxldCBpID0gMCwgbGVuID0ga2V5cy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xyXG4gIC8vICAgICBpZiAobm9kZSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZmFsc2U7XHJcbiAgLy8gICAgIGlmIChub2RlLl9kYXRhKSB7XHJcbiAgLy8gICAgICAgbm9kZSA9IG5vZGUuX2RhdGFba2V5c1tpXV07XHJcbiAgLy8gICAgIH0gZWxzZSB7XHJcbiAgLy8gICAgICAgLy8gbm9kZSA9IG5vZGVba2V5c1tpXV07XHJcbiAgLy8gICAgIH1cclxuICAvLyAgIH1cclxuICAvLyAgIHJldHVybiBub2RlICE9PSB1bmRlZmluZWQ7XHJcbiAgLy8gfVxyXG5cclxuICAvLyBwdWJsaWMgZ2V0KHBhdGg6IHN0cmluZywgcmF3PzogYm9vbGVhbik6IE51bGxhYmxlPE9ic2VydmVyPiB7XHJcbiAgLy8gICBsZXQga2V5cyA9IHBhdGguc3BsaXQoJy4nKTtcclxuICAvLyAgIGxldCBub2RlID0gdGhpcztcclxuICAvLyAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xyXG4gIC8vICAgICBpZiAobm9kZSA9PT0gdW5kZWZpbmVkKVxyXG4gIC8vICAgICAgIHJldHVybiBudWxsO1xyXG5cclxuICAvLyAgICAgaWYgKG5vZGUuX2RhdGEpIHtcclxuICAvLyAgICAgICBub2RlID0gbm9kZS5fZGF0YVtrZXlzW2ldXTtcclxuICAvLyAgICAgfSBlbHNlIHtcclxuICAvLyAgICAgICAvLyBub2RlID0gbm9kZVtrZXlzW2ldXTtcclxuICAvLyAgICAgfVxyXG4gIC8vICAgfVxyXG5cclxuICAvLyAgIGlmIChyYXcgIT09IHVuZGVmaW5lZCAmJiByYXcpXHJcbiAgLy8gICAgIHJldHVybiBub2RlO1xyXG5cclxuICAvLyAgIGlmIChub2RlID09PSBudWxsKSB7XHJcbiAgLy8gICAgIHJldHVybiBudWxsO1xyXG4gIC8vICAgfSBlbHNlIHtcclxuICAvLyAgICAgcmV0dXJuIHRoaXMuanNvbihub2RlKTtcclxuICAvLyAgIH1cclxuICAvLyB9XHJcblxyXG4gIC8vIHB1YmxpYyBtb3ZlKHBhdGg6IHN0cmluZywgaW5kT2xkOiBudW1iZXIsIGluZE5ldzogbnVtYmVyLCBzaWxlbnQ6IGJvb2xlYW4sIHJlbW90ZTogYm9vbGVhbik6IHZvaWQge1xyXG4gIC8vICAgbGV0IGtleXMgPSBwYXRoLnNwbGl0KCcuJyk7XHJcbiAgLy8gICBsZXQga2V5ID0ga2V5c1trZXlzLmxlbmd0aCAtIDFdO1xyXG4gIC8vICAgbGV0IG5vZGUgPSB0aGlzO1xyXG4gIC8vICAgbGV0IG9iaiA9IHRoaXM7XHJcblxyXG4gIC8vICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aCAtIDE7IGkrKykge1xyXG4gIC8vICAgICBpZiAobm9kZSBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgLy8gICAgICAgbm9kZSA9IG5vZGVbcGFyc2VJbnQoa2V5c1tpXSwgMTApXTtcclxuICAvLyAgICAgICBpZiAobm9kZSBpbnN0YW5jZW9mIE9ic2VydmVyKSB7XHJcbiAgLy8gICAgICAgICBwYXRoID0ga2V5cy5zbGljZShpICsgMSkuam9pbignLicpO1xyXG4gIC8vICAgICAgICAgb2JqID0gbm9kZTtcclxuICAvLyAgICAgICB9XHJcbiAgLy8gICAgIH0gZWxzZSBpZiAobm9kZS5fZGF0YSAmJiBub2RlLl9kYXRhLmhhc093blByb3BlcnR5KGtleXNbaV0pKSB7XHJcbiAgLy8gICAgICAgbm9kZSA9IG5vZGUuX2RhdGFba2V5c1tpXV07XHJcbiAgLy8gICAgIH0gZWxzZSB7XHJcbiAgLy8gICAgICAgcmV0dXJuO1xyXG4gIC8vICAgICB9XHJcbiAgLy8gICB9XHJcblxyXG4gIC8vICAgaWYgKCFub2RlLl9kYXRhIHx8ICFub2RlLl9kYXRhLmhhc093blByb3BlcnR5KGtleSkgfHwgIShub2RlLl9kYXRhW2tleV0gaW5zdGFuY2VvZiBBcnJheSkpXHJcbiAgLy8gICAgIHJldHVybjtcclxuXHJcbiAgLy8gICBsZXQgYXJyID0gbm9kZS5fZGF0YVtrZXldO1xyXG5cclxuICAvLyAgIGlmIChhcnIubGVuZ3RoIDwgaW5kT2xkIHx8IGFyci5sZW5ndGggPCBpbmROZXcgfHwgaW5kT2xkID09PSBpbmROZXcpXHJcbiAgLy8gICAgIHJldHVybjtcclxuXHJcbiAgLy8gICBsZXQgdmFsdWUgPSBhcnJbaW5kT2xkXTtcclxuXHJcbiAgLy8gICBhcnIuc3BsaWNlKGluZE9sZCwgMSk7XHJcblxyXG4gIC8vICAgaWYgKGluZE5ldyA9PT0gLTEpXHJcbiAgLy8gICAgIGluZE5ldyA9IGFyci5sZW5ndGg7XHJcblxyXG4gIC8vICAgYXJyLnNwbGljZShpbmROZXcsIDAsIHZhbHVlKTtcclxuXHJcbiAgLy8gICBpZiAoISh2YWx1ZSBpbnN0YW5jZW9mIE9ic2VydmVyKSlcclxuICAvLyAgICAgdmFsdWUgPSBvYmouanNvbih2YWx1ZSk7XHJcblxyXG4gIC8vICAgbGV0IHN0YXRlOiBib29sZWFuW107XHJcbiAgLy8gICBpZiAoc2lsZW50KVxyXG4gIC8vICAgICBzdGF0ZSA9IG9iai5zaWxlbmNlKCk7XHJcblxyXG4gIC8vICAgb2JqLmVtaXQocGF0aCArICc6bW92ZScsIHZhbHVlLCBpbmROZXcsIGluZE9sZCwgcmVtb3RlKTtcclxuICAvLyAgIG9iai5lbWl0KCcqOm1vdmUnLCBwYXRoLCB2YWx1ZSwgaW5kTmV3LCBpbmRPbGQsIHJlbW90ZSk7XHJcblxyXG4gIC8vICAgaWYgKHNpbGVudClcclxuICAvLyAgICAgb2JqLnNpbGVuY2VSZXN0b3JlKHN0YXRlISk7XHJcblxyXG4gIC8vICAgcmV0dXJuO1xyXG4gIC8vIH07XHJcblxyXG4gIC8vIOWwhmpzb27lr7nosaHlpI3liLbop6PmnpDlh7rmnaVcclxuICBwdWJsaWMgcGF0Y2goZGF0YTogYW55KTogdm9pZCB7XHJcbiAgICBpZiAodHlwZW9mIGRhdGEgIT09IFwib2JqZWN0XCIpIHtcclxuICAgICAgZGVidWcud2Fybih0aGlzLmNsYXNzTmFtZSArICc6IOS4jeaYr+ato+ehrueahGpzb27lr7nosaHvvIzmiZPljbDvvJpcXG4nICsgZGF0YSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGxldCBrZXkgaW4gZGF0YSkge1xyXG4gICAgICBpZiAodHlwZW9mIGRhdGFba2V5XSA9PT0gXCJvYmplY3RcIiAmJiAhdGhpcy5fZGF0YS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgLy8g5a+56LGh5bGe5oCnXHJcbiAgICAgICAgZGVidWcubG9nKCflr7nosaHlsZ7mgKfvvJonICsga2V5KTtcclxuICAgICAgICBkZWJ1Zy5sb2coZGF0YVtrZXldKTtcclxuICAgICAgICAvLyB0aGlzLl9wcmVwYXJlKHRoaXMsIGtleSwgZGF0YVtrZXldKTtcclxuICAgICAgfSBlbHNlIGlmICh0aGlzLl9kYXRhW2tleV0gIT09IGRhdGFba2V5XSkge1xyXG4gICAgICAgIC8vIOS4gOiIrOWxnuaAp1xyXG4gICAgICAgIGRlYnVnLmxvZygn5LiA6Iis5bGe5oCn77yaJyArIGtleSk7XHJcbiAgICAgICAgZGVidWcubG9nKGRhdGFba2V5XSk7XHJcbiAgICAgICAgLy8gdGhpcy5zZXQoa2V5LCBkYXRhW2tleV0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0MihwYXRoOiBzdHJpbmcsIHZhbHVlOiBhbnksIHNpbGVudD86IGJvb2xlYW4sIHJlbW90ZT86IGJvb2xlYW4sIGZvcmNlPzogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgdmFyIGtleXMgPSBwYXRoLnNwbGl0KCcuJyk7XHJcbiAgICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XHJcbiAgICB2YXIga2V5ID0ga2V5c1tsZW5ndGggLSAxXTtcclxuICAgIHZhciBub2RlOiBhbnkgPSB0aGlzO1xyXG4gICAgdmFyIG5vZGVQYXRoID0gJyc7XHJcbiAgICB2YXIgb2JqOiBhbnkgPSB0aGlzO1xyXG4gICAgdmFyIHN0YXRlO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoIC0gMTsgaSsrKSB7XHJcbiAgICAgIGlmIChub2RlIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgICAvLyBUT0RPOiDov5nmmK/llaXllYrvvJ9cclxuICAgICAgICAvLyBub2RlID0gbm9kZVtrZXlzW2ldXTtcclxuXHJcbiAgICAgICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBPYnNlcnZlcikge1xyXG4gICAgICAgICAgcGF0aCA9IGtleXMuc2xpY2UoaSArIDEpLmpvaW4oJy4nKTtcclxuICAgICAgICAgIG9iaiA9IG5vZGU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlmIChpIDwgbGVuZ3RoICYmIHR5cGVvZiAobm9kZS5fZGF0YVtrZXlzW2ldXSkgIT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgICBpZiAobm9kZS5fZGF0YVtrZXlzW2ldXSlcclxuICAgICAgICAgICAgb2JqLnVuc2V0KChub2RlLl9fcGF0aCA/IG5vZGUuX19wYXRoICsgJy4nIDogJycpICsga2V5c1tpXSk7XHJcblxyXG4gICAgICAgICAgbm9kZS5fZGF0YVtrZXlzW2ldXSA9IHtcclxuICAgICAgICAgICAgX3BhdGg6IHBhdGgsXHJcbiAgICAgICAgICAgIF9rZXlzOiBbXSxcclxuICAgICAgICAgICAgX2RhdGE6IHt9XHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgICAgbm9kZS5fa2V5cy5wdXNoKGtleXNbaV0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGkgPT09IGxlbmd0aCAtIDEgJiYgbm9kZS5fX3BhdGgpXHJcbiAgICAgICAgICBub2RlUGF0aCA9IG5vZGUuX19wYXRoICsgJy4nICsga2V5c1tpXTtcclxuXHJcbiAgICAgICAgbm9kZSA9IG5vZGUuX2RhdGFba2V5c1tpXV07XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICAvLyBwdWJsaWMganNvbih0YXJnZXQ/OiBPYnNlcnZlcik6IE9ic2VydmVyIHtcclxuICAvLyAgIGxldCBvYmo6IHsgW2tleTogc3RyaW5nXTogYW55IH0gPSB7fTtcclxuICAvLyAgIGxldCBub2RlID0gdGFyZ2V0ID09PSB1bmRlZmluZWQgPyB0aGlzIDogdGFyZ2V0O1xyXG4gIC8vICAgbGV0IGxlbiwgbmxlbjtcclxuXHJcbiAgLy8gICBpZiAobm9kZSBpbnN0YW5jZW9mIE9iamVjdCAmJiBub2RlLl9rZXlzKSB7XHJcbiAgLy8gICAgIGxlbiA9IG5vZGUuX2tleXMubGVuZ3RoO1xyXG4gIC8vICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XHJcbiAgLy8gICAgICAgbGV0IGtleSA9IG5vZGUuX2tleXNbaV07XHJcbiAgLy8gICAgICAgbGV0IHZhbHVlID0gbm9kZS5fZGF0YVtrZXldO1xyXG4gIC8vICAgICAgIGxldCB0eXBlID0gdHlwZW9mICh2YWx1ZSk7XHJcblxyXG4gIC8vICAgICAgIGlmICh0eXBlID09PSAnb2JqZWN0JyAmJiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSkpIHtcclxuICAvLyAgICAgICAgIG9ialtrZXldID0gdmFsdWUuc2xpY2UoMCk7XHJcblxyXG4gIC8vICAgICAgICAgbmxlbiA9IG9ialtrZXldLmxlbmd0aDtcclxuICAvLyAgICAgICAgIGZvciAobGV0IG4gPSAwOyBuIDwgbmxlbjsgbisrKSB7XHJcbiAgLy8gICAgICAgICAgIGlmICh0eXBlb2YgKG9ialtrZXldW25dKSA9PT0gJ29iamVjdCcpXHJcbiAgLy8gICAgICAgICAgICAgb2JqW2tleV1bbl0gPSB0aGlzLmpzb24ob2JqW2tleV1bbl0pO1xyXG4gIC8vICAgICAgICAgfVxyXG4gIC8vICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ29iamVjdCcgJiYgKHZhbHVlIGluc3RhbmNlb2YgT2JqZWN0KSkge1xyXG4gIC8vICAgICAgICAgb2JqW2tleV0gPSB0aGlzLmpzb24odmFsdWUpO1xyXG4gIC8vICAgICAgIH0gZWxzZSB7XHJcbiAgLy8gICAgICAgICBvYmpba2V5XSA9IHZhbHVlO1xyXG4gIC8vICAgICAgIH1cclxuICAvLyAgICAgfVxyXG4gIC8vICAgfSBlbHNlIHtcclxuICAvLyAgICAgaWYgKG5vZGUgPT09IG51bGwpIHtcclxuICAvLyAgICAgICByZXR1cm4gbnVsbDtcclxuICAvLyAgICAgfSBlbHNlIGlmICh0eXBlb2YgKG5vZGUpID09PSAnb2JqZWN0JyAmJiAobm9kZSBpbnN0YW5jZW9mIEFycmF5KSkge1xyXG4gIC8vICAgICAgIG9iaiA9IG5vZGUuc2xpY2UoMCk7XHJcblxyXG4gIC8vICAgICAgIGxlbiA9IG9iai5sZW5ndGg7XHJcbiAgLy8gICAgICAgZm9yIChsZXQgbiA9IDA7IG4gPCBsZW47IG4rKykge1xyXG4gIC8vICAgICAgICAgb2JqW25dID0gdGhpcy5qc29uKG9ialtuXSk7XHJcbiAgLy8gICAgICAgfVxyXG4gIC8vICAgICB9IGVsc2UgaWYgKHR5cGVvZiAobm9kZSkgPT09ICdvYmplY3QnKSB7XHJcbiAgLy8gICAgICAgZm9yIChsZXQga2V5IGluIG5vZGUpIHtcclxuICAvLyAgICAgICAgIGlmIChub2RlLmhhc093blByb3BlcnR5KGtleSkpXHJcbiAgLy8gICAgICAgICAgIG9ialtrZXldID0gbm9kZVtrZXldO1xyXG4gIC8vICAgICAgIH1cclxuICAvLyAgICAgfSBlbHNlIHtcclxuICAvLyAgICAgICBvYmogPSBub2RlO1xyXG4gIC8vICAgICB9XHJcbiAgLy8gICB9XHJcbiAgLy8gICByZXR1cm4gb2JqO1xyXG4gIC8vIH1cclxuXHJcbiAgLy8gcHVibGljIGZvckVhY2goZm46IEZ1bmN0aW9uLCB0YXJnZXQ6IE9ic2VydmVyLCBwYXRoOiBzdHJpbmcpOiB2b2lkIHtcclxuICAvLyAgIGxldCBub2RlID0gdGFyZ2V0IHx8IHRoaXM7XHJcbiAgLy8gICBwYXRoID0gcGF0aCB8fCAnJztcclxuXHJcbiAgLy8gICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGUuX2tleXMubGVuZ3RoOyBpKyspIHtcclxuICAvLyAgICAgbGV0IGtleSA9IG5vZGUuX2tleXNbaV07XHJcbiAgLy8gICAgIGxldCB2YWx1ZSA9IG5vZGUuX2RhdGFba2V5XTtcclxuICAvLyAgICAgbGV0IHR5cGUgPSAodGhpcy5zY2hlbWEgJiYgdGhpcy5zY2hlbWEuaGFzKHBhdGggKyBrZXkpICYmIHRoaXMuc2NoZW1hLmdldChwYXRoICsga2V5KS50eXBlLm5hbWUudG9Mb3dlckNhc2UoKSkgfHwgdHlwZW9mICh2YWx1ZSk7XHJcblxyXG4gIC8vICAgICBpZiAodHlwZSA9PT0gJ29iamVjdCcgJiYgKHZhbHVlIGluc3RhbmNlb2YgQXJyYXkpKSB7XHJcbiAgLy8gICAgICAgZm4ocGF0aCArIGtleSwgJ2FycmF5JywgdmFsdWUsIGtleSk7XHJcbiAgLy8gICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ29iamVjdCcgJiYgKHZhbHVlIGluc3RhbmNlb2YgT2JqZWN0KSkge1xyXG4gIC8vICAgICAgIGZuKHBhdGggKyBrZXksICdvYmplY3QnLCB2YWx1ZSwga2V5KTtcclxuICAvLyAgICAgICB0aGlzLmZvckVhY2goZm4sIHZhbHVlLCBwYXRoICsga2V5ICsgJy4nKTtcclxuICAvLyAgICAgfSBlbHNlIHtcclxuICAvLyAgICAgICBmbihwYXRoICsga2V5LCB0eXBlLCB2YWx1ZSwga2V5KTtcclxuICAvLyAgICAgfVxyXG4gIC8vICAgfVxyXG4gIC8vIH07XHJcblxyXG4gIHB1YmxpYyBkZXN0cm95KCk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX2Rlc3Ryb3llZCkgcmV0dXJuO1xyXG4gICAgdGhpcy5fZGVzdHJveWVkID0gdHJ1ZTtcclxuICAgIHRoaXMuZW1pdChcImRlc3Ryb3lcIik7XHJcbiAgICB0aGlzLnVuYmluZCgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBIaXN0b3J5IHtcclxuICBlbmFibGVkPzogYm9vbGVhbjtcclxufVxyXG4iLCJpbXBvcnQgeyBFZGl0b3IsIExheW91dCwgVmlld3BvcnQsIEhpZXJhcmNoeSwgQXNzZXRzLCBJbml0aWFsaXplQmVmb3JlLCBJbml0aWFsaXplQWZ0ZXIsIERlYnVnIH0gZnJvbSAnLi9lZGl0b3InO1xyXG5pbXBvcnQgeyBFbGVtZW50LCBDYW52YXMgfSBmcm9tICcuL3VpJztcclxuaW1wb3J0IHsgVmVyeUVuZ2luZSB9IGZyb20gJy4vZW5naW5lJztcclxuXHJcbmV4cG9ydCAqIGZyb20gJy4vaW5kZXgnO1xyXG5cclxuLy8g5re75Yqg5Yiw5YWo5bGA5Y+Y6YePXHJcbndpbmRvdy5lZGl0b3IgPSBuZXcgRWRpdG9yKCk7XHJcblxyXG4vLyDlhajlsYDms6jlhoxkZWJ1Z+exu1xyXG53aW5kb3cuZGVidWcgPSBuZXcgRGVidWcoKTtcclxuXHJcbi8vIOWIneWni+WMluWFqOWxgOS/oeaBr+exu1xyXG5sZXQgaW5pdGlhbGl6ZTogSW5pdGlhbGl6ZUJlZm9yZSA9IG5ldyBJbml0aWFsaXplQmVmb3JlKCk7XHJcblxyXG4vLyDlkI7mnJ/lj6/ku6Xkv67mlLnkuLpsb2Fk44CBc3RhcnTnrYlzdHJpbmfooajnpLrnmoTkuovku7bvvIzpgJrov4dldmVudOadpeWunueOsFxyXG4vLyDmiZPlvIBwcm9qZWN05oiW6ICFc2NlbmXvvIwx5a+55aSa55qE5YWz57O777yM6K6w5b2V5LiA5LiL6buY6K6k55qEc2NlbmXvvIjkuIrkuIDmrKHmiZPlvIDnmoRzY2VuZe+8ie+8jOS4gOW8gOWni+WwseaJk+W8gOm7mOiupOeahHNjZW5l77ybXHJcbi8vIOW9k+WJjXByb2plY3TnmoTnvJbovpHlmajorr7nva7vvIzlpoLmkYTlg4/mnLrnrYnvvIzlkITnp43orr7nva7mlbDmja7vvJtcclxuLy8gYXNzZXRz5pWw5o2u77ybXHJcbi8vIHNjZW5l55qE5pWw5o2u77yM5Y+v6IO95Lya5aSa5Liq77yM5b2T5YmNc2NlbmXvvIzkuI3lkIxzY2VuZeS5i+mXtOi/mOaciemhuuW6j+WFs+ezu++8m1xyXG5cclxuLy8g5pW05L2T5biD5bGAXHJcbmxldCBsYXlvdXQgPSBuZXcgTGF5b3V0KCk7XHJcbmxheW91dC5pbml0KCk7XHJcblxyXG4vLyDnvJbovpHop4bnqpdcclxubGV0IHZpZXdwb3J0ID0gbmV3IFZpZXdwb3J0KCk7XHJcblZlcnlFbmdpbmUudmlld3BvcnQgPSB2aWV3cG9ydDtcclxuXHJcbi8vIOWxgue6p+iPnOWNlVxyXG5sZXQgaGllcmFyY2h5ID0gbmV3IEhpZXJhcmNoeSgpO1xyXG5cclxuLy8g6LWE5rqQ6I+c5Y2VXHJcbmxldCBhc3NldHMgPSBuZXcgQXNzZXRzKCk7XHJcblxyXG4vLyDliJ3lp4vljJblhajlsYDkv6Hmga/nsbtcclxubGV0IGluaXRpYWxpemVBZnRlcjogSW5pdGlhbGl6ZUFmdGVyID0gbmV3IEluaXRpYWxpemVBZnRlcigpO1xyXG5cclxuLy8g5Yqg6L296LWE5rqQXHJcblxyXG4vLyDlhbPogZTotYTmupBcclxuXHJcblxyXG5cclxuLyogVEVTVFxyXG5lZGl0b3Iub25jZSgnbG9hZCcsICgpID0+IHtcclxuICBjb25zb2xlLmxvZygnb25jZScpO1xyXG59KTtcclxuXHJcbmVkaXRvci5vbignYXJyYXknLCAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJzEnKTtcclxufSk7XHJcbmVkaXRvci5vbignYXJyYXknLCAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJzInKTtcclxufSk7XHJcbmVkaXRvci5vbignYXJyYXknLCAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJzMnKTtcclxufSk7XHJcblxyXG5lZGl0b3Iub24oJ2FycmF5JywgKGFyZ3MwOiBhbnksIGFyZ3MxOiBhbnkpID0+IHtcclxuICBjb25zb2xlLmxvZyhhcmdzMCArICcgKysrICcgKyAgYXJnczEpO1xyXG59KTtcclxuXHJcbmVkaXRvci5tZXRob2QoJ21ldGhvZCcsIChhOiBhbnkpID0+IHtcclxuICBjb25zb2xlLmxvZyhhKTtcclxufSk7XHJcblxyXG5cclxuZWRpdG9yLmVtaXQoJ2xvYWQnKTtcclxuZWRpdG9yLmVtaXQoJ2xvYWQnKTtcclxuXHJcbmVkaXRvci5lbWl0KCdhcnJheScsICdhYmMnLCAnZGZnJyk7XHJcbmVkaXRvci5lbWl0KCdhcnJheScpO1xyXG5cclxuZWRpdG9yLmNhbGwoJ21ldGhvZCcsIDEyMyk7XHJcbiovXHJcblxyXG4vLyBsZXQgcGFyZW50OiBIVE1MRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0ZXN0JykhO1xyXG5cclxuLy8gY29uc29sZS5sb2coJ2NoaWxkcmVuJyk7XHJcblxyXG4vLyBjb25zb2xlLmxvZyhwYXJlbnQpO1xyXG4vLyBjb25zb2xlLmxvZyhwYXJlbnQuY2hpbGROb2Rlcyk7XHJcblxyXG4vLyBmb3IobGV0IGk6IG51bWJlciA9IDA7IGkgPCBwYXJlbnQuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuLy8gICAoPEhUTUxFbGVtZW50PihwYXJlbnQuY2hpbGRyZW5baV0pKS51aSA9IG5ldyBFbGVtZW50KCk7XHJcbi8vICAgY29uc29sZS53YXJuKCg8SFRNTEVsZW1lbnQ+KHBhcmVudC5jaGlsZHJlbltpXSkpLnVpID09PSB1bmRlZmluZWQpO1xyXG4vLyAgIGNvbnNvbGUubG9nKCg8SFRNTEVsZW1lbnQ+KHBhcmVudC5jaGlsZHJlbltpXSkpLnVpKTtcclxuLy8gICAoPEhUTUxFbGVtZW50PihwYXJlbnQuY2hpbGRyZW5baV0pKS51aS5kZXN0cm95KCk7XHJcbi8vICAgY29uc29sZS5sb2cocGFyZW50LmNoaWxkcmVuW2ldIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpO1xyXG4vLyB9XHJcblxyXG4vLyBjb25zb2xlLmxvZygnY2hpbGROb2RlcycpO1xyXG5cclxuLy8gZm9yKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgcGFyZW50LmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcclxuLy8gICBjb25zb2xlLmxvZyhwYXJlbnQuY2hpbGROb2Rlc1tpXSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KTtcclxuLy8gfVxyXG4iLCJpbXBvcnQgeyBFbGVtZW50IH0gZnJvbSBcIi4vZWxlbWVudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEJ1YmJsZSBleHRlbmRzIEVsZW1lbnQge1xyXG5cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKGlkPzogc3RyaW5nLCB0YWJpbmRleD86IG51bWJlcikge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1aS1idWJibGUnKTtcclxuXHJcbiAgICBsZXQgcHVsc2VDaXJjbGU6IEhUTUxEaXZFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBwdWxzZUNpcmNsZS5jbGFzc0xpc3QuYWRkKCdwdWxzZScpO1xyXG4gICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKHB1bHNlQ2lyY2xlKTtcclxuXHJcbiAgICBsZXQgY2VudGVyQ2lyY2xlOiBIVE1MRGl2RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgY2VudGVyQ2lyY2xlLmNsYXNzTGlzdC5hZGQoJ2NlbnRlcicpO1xyXG4gICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGNlbnRlckNpcmNsZSk7XHJcblxyXG4gICAgdGhpcy5vbignY2xpY2snLCB0aGlzLl9vbkNsaWNrKTtcclxuXHJcbiAgICBpZiAoaWQgIT09IHVuZGVmaW5lZClcclxuICAgICAgdGhpcy5lbGVtZW50LmlkID0gaWQ7XHJcblxyXG4gICAgaWYgKHRhYmluZGV4ICE9PSB1bmRlZmluZWQpXHJcbiAgICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgdGFiaW5kZXgudG9TdHJpbmcoKSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbkNsaWNrKCk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuY2xhc3MhLmNvbnRhaW5zKCdhY3RpdmUnKSkge1xyXG4gICAgICB0aGlzLmRlYWN0aXZhdGUoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuYWN0aXZhdGUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBhY3RpdmF0ZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuY2xhc3MhLmFkZCgnYWN0aXZlJyk7XHJcbiAgICB0aGlzLmVtaXQoJ2FjdGl2YXRlJyk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZGVhY3RpdmF0ZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuY2xhc3MhLnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICB0aGlzLmVtaXQoJ2RlYWN0aXZhdGUnKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBwb3NpdGlvbih4OiBudW1iZXIsIHk6IG51bWJlcikge1xyXG4gICAgbGV0IHJlY3QgPSB0aGlzLmVsZW1lbnQhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgIGxldCBsZWZ0ID0geCB8fCAwO1xyXG4gICAgbGV0IHRvcCA9IHkgfHwgMDtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLmxlZnQgPSAodHlwZW9mIGxlZnQgPT09ICdudW1iZXInKSA/IGxlZnQgKyAncHgnIDogbGVmdDtcclxuICAgIHRoaXMuZWxlbWVudCEuc3R5bGUudG9wID0gKHR5cGVvZiB0b3AgPT09ICdudW1iZXInKSA/IHRvcCArICdweCcgOiB0b3A7XHJcbiAgfVxyXG5cclxufSIsImltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiLi9lbGVtZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQnV0dG9uIGV4dGVuZHMgRWxlbWVudCB7XHJcblxyXG5cclxuICBwcml2YXRlIF90ZXh0OiBzdHJpbmc7XHJcbiAgcHVibGljIGdldCB0ZXh0KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5fdGV4dDtcclxuICB9XHJcbiAgcHVibGljIHNldCB0ZXh0KHZhbDogc3RyaW5nKSB7XHJcbiAgICBpZiAodGhpcy5fdGV4dCA9PT0gdmFsKSByZXR1cm47XHJcbiAgICB0aGlzLl90ZXh0ID0gdmFsO1xyXG4gICAgdGhpcy5lbGVtZW50IS5pbm5lckhUTUwgPSB0aGlzLl90ZXh0O1xyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3Rvcih0ZXh0Pzogc3RyaW5nKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMuX3RleHQgPSB0ZXh0ID8gdGV4dCA6ICcnO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3VpLWJ1dHRvbicpO1xyXG4gICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9IHRoaXMuX3RleHQ7XHJcbiAgICB0aGlzLmVsZW1lbnQudWkgPSB0aGlzO1xyXG4gICAgdGhpcy5lbGVtZW50LnRhYkluZGV4ID0gMDtcclxuXHJcbiAgICAvLyBzcGFjZSA+IGNsaWNrXHJcbiAgICAvLyDpvKDmoIfmiqzotbfml7blrozmiJBrZXlkb3du77yM5omN5Lya6Kem5Y+R77ybXHJcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX29uS2V5RG93bi5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB0aGlzLm9uKCdjbGljaycsIHRoaXMuX29uQ2xpY2spO1xyXG4gICAgLy8gdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX29uQ2xpY2suYmluZCh0aGlzKSk7XHJcblxyXG4gIH1cclxuXHJcblxyXG4gIHByaXZhdGUgX29uS2V5RG93bihldnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdjJyk7XHJcbiAgICBpZiAoZXZ0LmtleUNvZGUgPT09IDI3KSAgLy8gMjc6IEVzY2FwZVxyXG4gICAgICByZXR1cm4gKDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0KS5ibHVyKCk7XHJcblxyXG4gICAgaWYgKGV2dC5rZXlDb2RlICE9PSAzMiB8fCB0aGlzLmRpc2FibGVkKSAgLy8gMzI6IFNwYWNlXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIHRoaXMuZW1pdCgnY2xpY2snKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uQ2xpY2soKTogdm9pZCB7XHJcbiAgICB0aGlzLmVsZW1lbnQhLmJsdXIoKTtcclxuICB9O1xyXG5cclxuICAvLyBUT0RPXHJcbiAgcHVibGljIF9vbkxpbmtDaGFuZ2UodmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgKDxIVE1MQnV0dG9uRWxlbWVudD50aGlzLmVsZW1lbnQpLnZhbHVlID0gdmFsdWU7XHJcbiAgfTtcclxuXHJcblxyXG5cclxufSIsImltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiLi9lbGVtZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQ2FudmFzIGV4dGVuZHMgRWxlbWVudCB7XHJcblxyXG4gIHB1YmxpYyBnZXQgd2lkdGgoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnQgPyAoPEhUTUxDYW52YXNFbGVtZW50PnRoaXMuZWxlbWVudCkud2lkdGggOiAwO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHdpZHRoKHZhbDogbnVtYmVyKSB7XHJcbiAgICBpZiAoIXRoaXMuZWxlbWVudCkgcmV0dXJuO1xyXG4gICAgaWYgKCg8SFRNTENhbnZhc0VsZW1lbnQ+dGhpcy5lbGVtZW50KS53aWR0aCA9PT0gdmFsKSByZXR1cm47XHJcblxyXG4gICAgKDxIVE1MQ2FudmFzRWxlbWVudD50aGlzLmVsZW1lbnQpLndpZHRoID0gdmFsO1xyXG4gICAgdGhpcy5lbWl0KFwicmVzaXplXCIsICg8SFRNTENhbnZhc0VsZW1lbnQ+dGhpcy5lbGVtZW50KS53aWR0aCwgKDxIVE1MQ2FudmFzRWxlbWVudD50aGlzLmVsZW1lbnQpLmhlaWdodCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGhlaWdodCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudCA/ICg8SFRNTENhbnZhc0VsZW1lbnQ+dGhpcy5lbGVtZW50KS5oZWlnaHQgOiAwO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGhlaWdodCh2YWw6IG51bWJlcikge1xyXG4gICAgaWYgKCF0aGlzLmVsZW1lbnQpIHJldHVybjtcclxuICAgIGlmICgoPEhUTUxDYW52YXNFbGVtZW50PnRoaXMuZWxlbWVudCkuaGVpZ2h0ID09PSB2YWwpIHJldHVybjtcclxuXHJcbiAgICAoPEhUTUxDYW52YXNFbGVtZW50PnRoaXMuZWxlbWVudCkuaGVpZ2h0ID0gdmFsO1xyXG4gICAgdGhpcy5lbWl0KFwicmVzaXplXCIsICg8SFRNTENhbnZhc0VsZW1lbnQ+dGhpcy5lbGVtZW50KS53aWR0aCwgKDxIVE1MQ2FudmFzRWxlbWVudD50aGlzLmVsZW1lbnQpLmhlaWdodCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoaWQ/OiBzdHJpbmcpIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndWktY2FudmFzJyk7XHJcblxyXG4gICAgaWYgKGlkICE9PSB1bmRlZmluZWQpIHRoaXMuZWxlbWVudC5pZCA9IGlkO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudC5vbnNlbGVjdHN0YXJ0ID0gdGhpcy5vbnNlbGVjdHN0YXJ0O1xyXG5cclxuICB9XHJcblxyXG4gIHByaXZhdGUgb25zZWxlY3RzdGFydCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9O1xyXG5cclxuICBwdWJsaWMgcmVzaXplKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICBpZiAoKDxIVE1MQ2FudmFzRWxlbWVudD50aGlzLmVsZW1lbnQpLndpZHRoID09PSB3aWR0aCAmJiAoPEhUTUxDYW52YXNFbGVtZW50PnRoaXMuZWxlbWVudCkuaGVpZ2h0ID09PSBoZWlnaHQpIHJldHVybjtcclxuXHJcbiAgICAoPEhUTUxDYW52YXNFbGVtZW50PnRoaXMuZWxlbWVudCkud2lkdGggPSB3aWR0aDtcclxuICAgICg8SFRNTENhbnZhc0VsZW1lbnQ+dGhpcy5lbGVtZW50KS5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICB0aGlzLmVtaXQoXCJyZXNpemVcIiwgKDxIVE1MQ2FudmFzRWxlbWVudD50aGlzLmVsZW1lbnQpLndpZHRoLCAoPEhUTUxDYW52YXNFbGVtZW50PnRoaXMuZWxlbWVudCkuaGVpZ2h0KTtcclxuICB9O1xyXG5cclxufSIsImltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiLi9lbGVtZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQ2hlY2tib3ggZXh0ZW5kcyBFbGVtZW50IHtcclxuXHJcblxyXG4gIHByaXZhdGUgX3RleHQ6IHN0cmluZztcclxuXHJcbiAgcHVibGljIGdldCB2YWx1ZSgpOiBib29sZWFuIHtcclxuICAgIGlmICh0aGlzLl9saW5rKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9saW5rLmdldCh0aGlzLnBhdGgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LmNvbnRhaW5zKCdjaGVja2VkJyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgdmFsdWUodmFsOiBib29sZWFuKSB7XHJcbiAgICBpZiAodGhpcy5fbGluaykge1xyXG4gICAgICB0aGlzLl9saW5rLnNldCh0aGlzLnBhdGgsIHZhbCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodGhpcy5lbGVtZW50IS5jbGFzc0xpc3QuY29udGFpbnMoJ2NoZWNrZWQnKSAhPT0gdmFsKVxyXG4gICAgICAgIHRoaXMuX29uTGlua0NoYW5nZSh2YWwpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKHRleHQ/OiBzdHJpbmcpIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgdGhpcy5fdGV4dCA9IHRleHQgfHwgJyc7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndWktY2hlY2tib3gnLCAnbm9TZWxlY3QnKTtcclxuICAgIHRoaXMuZWxlbWVudC50YWJJbmRleCA9IDA7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9vbktleURvd24uYmluZCh0aGlzKSwgZmFsc2UpO1xyXG5cclxuICAgIHRoaXMub24oJ2NsaWNrJywgdGhpcy5fb25DbGljayk7XHJcbiAgICB0aGlzLm9uKCdjaGFuZ2UnLCB0aGlzLl9vbkNoYW5nZSk7XHJcblxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25DbGljaygpOiB2b2lkIHtcclxuICAgIHRoaXMudmFsdWUgPSAhdGhpcy52YWx1ZTtcclxuICAgIHRoaXMuZWxlbWVudCEuYmx1cigpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25DaGFuZ2UoKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMucmVuZGVyQ2hhbmdlcylcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuZmxhc2goKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uS2V5RG93bihldnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkIHtcclxuICAgIGlmIChldnQua2V5Q29kZSA9PT0gMjcpICAvLyBFc2NhcGVcclxuICAgICAgcmV0dXJuICg8SFRNTEVsZW1lbnQ+ZXZ0LnRhcmdldCkuYmx1cigpO1xyXG5cclxuICAgIC8vIFNwYWNlXHJcbiAgICBpZiAoZXZ0LmtleUNvZGUgIT09IDMyIHx8IHRoaXMuZGlzYWJsZWQpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIHRoaXMudmFsdWUgPSAhdGhpcy52YWx1ZTtcclxuICB9XHJcblxyXG4gIC8vIFRPRE9cclxuICBwdWJsaWMgX29uTGlua0NoYW5nZSh2YWx1ZTogYm9vbGVhbikge1xyXG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LnJlbW92ZSgnY2hlY2tlZCcpO1xyXG4gICAgICB0aGlzLmVsZW1lbnQhLmNsYXNzTGlzdC5hZGQoJ251bGwnKTtcclxuICAgIH0gZWxzZSBpZiAodmFsdWUpIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5jbGFzc0xpc3QuYWRkKCdjaGVja2VkJyk7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LnJlbW92ZSgnbnVsbCcpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5jbGFzc0xpc3QucmVtb3ZlKCdjaGVja2VkJywgJ251bGwnKTtcclxuICAgIH1cclxuICAgIHRoaXMuZW1pdCgnY2hhbmdlJywgdmFsdWUpO1xyXG4gIH1cclxuXHJcblxyXG59IiwiaW1wb3J0IHsgQ29udGFpbmVyRWxlbWVudCB9IGZyb20gXCIuL2NvbnRhaW5lci1lbGVtZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQ29kZSBleHRlbmRzIENvbnRhaW5lckVsZW1lbnQge1xyXG5cclxuICBwdWJsaWMgZ2V0IHRleHQoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnQhLnRleHRDb250ZW50IHx8ICcnO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHRleHQodmFsOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuZWxlbWVudCEudGV4dENvbnRlbnQgPSB2YWw7XHJcbiAgfVxyXG5cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwcmUnKTtcclxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1aS1jb2RlJyk7XHJcblxyXG4gIH1cclxuXHJcbn0iLCJpbXBvcnQgeyBFbGVtZW50IH0gZnJvbSBcIi4vZWxlbWVudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIENvbG9yRmllbGQgZXh0ZW5kcyBFbGVtZW50IHtcclxuXHJcbiAgcHVibGljIGVsZW1lbnRDb2xvcjogSFRNTEVsZW1lbnQ7XHJcblxyXG4gIHByaXZhdGUgX3ZhbHVlczogbnVtYmVyW107XHJcblxyXG4gIHB1YmxpYyBldnRMaW5rQ2hhbm5lbHM6IEV2ZW50SGFuZGxlW107XHJcblxyXG4gIHByaXZhdGUgX2NoYW5uZWxzOiBudW1iZXI7XHJcbiAgcHVibGljIGdldCBjaGFubmVscygpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX2NoYW5uZWxzO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGNoYW5uZWxzKHZhbDogbnVtYmVyKSB7XHJcbiAgICBpZiAodGhpcy5fY2hhbm5lbHMgPT09IHZhbClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX2NoYW5uZWxzID0gdmFsO1xyXG4gICAgdGhpcy5lbWl0KCdjaGFubmVscycsIHRoaXMuX2NoYW5uZWxzKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgcigpOiBudW1iZXIge1xyXG4gICAgaWYgKHRoaXMuX2xpbmspIHtcclxuICAgICAgcmV0dXJuIE1hdGguZmxvb3IodGhpcy5fbGluay5nZXQodGhpcy5wYXRoICsgJy4wJykgKiAyNTUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlc1swXTtcclxuICAgIH1cclxuICB9XHJcbiAgcHVibGljIHNldCByKHZhbDogbnVtYmVyKSB7XHJcbiAgICB2YWwgPSBNYXRoLm1pbigwLCBNYXRoLm1heCgyNTUsIHZhbCkpO1xyXG5cclxuICAgIGlmICh0aGlzLl92YWx1ZXNbMF0gPT09IHZhbClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX3ZhbHVlc1swXSA9IHZhbDtcclxuICAgIHRoaXMuZW1pdCgncicsIHRoaXMuX3ZhbHVlc1swXSk7XHJcbiAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHRoaXMuX3ZhbHVlcy5zbGljZSgwLCB0aGlzLl9jaGFubmVscykpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBnKCk6IG51bWJlciB7XHJcbiAgICBpZiAodGhpcy5fbGluaykge1xyXG4gICAgICByZXR1cm4gTWF0aC5mbG9vcih0aGlzLl9saW5rLmdldCh0aGlzLnBhdGggKyAnLjEnKSAqIDI1NSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5fdmFsdWVzWzFdO1xyXG4gICAgfVxyXG4gIH1cclxuICBwdWJsaWMgc2V0IGcodmFsOiBudW1iZXIpIHtcclxuICAgIHZhbCA9IE1hdGgubWluKDAsIE1hdGgubWF4KDI1NSwgdmFsKSk7XHJcblxyXG4gICAgaWYgKHRoaXMuX3ZhbHVlc1sxXSA9PT0gdmFsKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5fdmFsdWVzWzFdID0gdmFsO1xyXG5cclxuICAgIGlmICh0aGlzLl9jaGFubmVscyA+PSAyKSB7XHJcbiAgICAgIHRoaXMuZW1pdCgnZycsIHRoaXMuX3ZhbHVlc1sxXSk7XHJcbiAgICAgIHRoaXMuZW1pdCgnY2hhbmdlJywgdGhpcy5fdmFsdWVzLnNsaWNlKDAsIHRoaXMuX2NoYW5uZWxzKSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGIoKTogbnVtYmVyIHtcclxuICAgIGlmICh0aGlzLl9saW5rKSB7XHJcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKHRoaXMuX2xpbmsuZ2V0KHRoaXMucGF0aCArICcuMicpICogMjU1KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl92YWx1ZXNbMl07XHJcbiAgICB9XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgYih2YWw6IG51bWJlcikge1xyXG4gICAgdmFsID0gTWF0aC5taW4oMCwgTWF0aC5tYXgoMjU1LCB2YWwpKTtcclxuXHJcbiAgICBpZiAodGhpcy5fdmFsdWVzWzJdID09PSB2YWwpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLl92YWx1ZXNbMl0gPSB2YWw7XHJcblxyXG4gICAgaWYgKHRoaXMuX2NoYW5uZWxzID49IDMpIHtcclxuICAgICAgdGhpcy5lbWl0KCdiJywgdGhpcy5fdmFsdWVzWzJdKTtcclxuICAgICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB0aGlzLl92YWx1ZXMuc2xpY2UoMCwgdGhpcy5fY2hhbm5lbHMpKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgYSgpOiBudW1iZXIge1xyXG4gICAgaWYgKHRoaXMuX2xpbmspIHtcclxuICAgICAgcmV0dXJuIE1hdGguZmxvb3IodGhpcy5fbGluay5nZXQodGhpcy5wYXRoICsgJy4zJykgKiAyNTUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlc1szXTtcclxuICAgIH1cclxuICB9XHJcbiAgcHVibGljIHNldCBhKHZhbDogbnVtYmVyKSB7XHJcbiAgICB2YWwgPSBNYXRoLm1pbigwLCBNYXRoLm1heCgyNTUsIHZhbCkpO1xyXG5cclxuICAgIGlmICh0aGlzLl92YWx1ZXNbM10gPT09IHZhbClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX3ZhbHVlc1szXSA9IHZhbDtcclxuXHJcbiAgICBpZiAodGhpcy5fY2hhbm5lbHMgPj0gNCkge1xyXG4gICAgICB0aGlzLmVtaXQoJ2EnLCB0aGlzLl92YWx1ZXNbM10pO1xyXG4gICAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHRoaXMuX3ZhbHVlcy5zbGljZSgwLCB0aGlzLl9jaGFubmVscykpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBoZXgoKTogc3RyaW5nIHtcclxuICAgIHZhciB2YWx1ZXMgPSB0aGlzLl92YWx1ZXM7XHJcblxyXG4gICAgaWYgKHRoaXMuX2xpbmspIHtcclxuICAgICAgdmFsdWVzID0gdGhpcy5fbGluay5nZXQodGhpcy5wYXRoKS5tYXAoZnVuY3Rpb24gKGNoYW5uZWw6IG51bWJlcikge1xyXG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKGNoYW5uZWwgKiAyNTUpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgaGV4ID0gJyc7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX2NoYW5uZWxzOyBpKyspIHtcclxuICAgICAgaGV4ICs9ICgnMDAnICsgdmFsdWVzW2ldLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTIpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGhleDtcclxuICB9XHJcbiAgcHVibGljIHNldCBoZXgodmFsOiBzdHJpbmcpIHtcclxuICAgIGNvbnNvbGUubG9nKCd0b2RvIGNvbG9yLWZpZWxkOiAnICsgdmFsKTtcclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50LnRhYkluZGV4ID0gMDtcclxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1aS1jb2xvci1maWVsZCcsICdyZ2InKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRDb2xvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgIHRoaXMuZWxlbWVudENvbG9yLmNsYXNzTGlzdC5hZGQoJ2NvbG9yJyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50Q29sb3IpO1xyXG5cclxuICAgIHRoaXMuX2NoYW5uZWxzID0gMztcclxuICAgIHRoaXMuX3ZhbHVlcyA9IFswLCAwLCAwLCAwXTtcclxuXHJcbiAgICAvLyBzcGFjZSA+IGNsaWNrXHJcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX29uS2V5RG93bi5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcblxyXG4gICAgLy8gcmVuZGVyIGNvbG9yIGJhY2tcclxuICAgIHRoaXMub24oJ2NoYW5nZScsIHRoaXMuX29uQ2hhbmdlKTtcclxuXHJcbiAgICAvLyBsaW5rIHRvIGNoYW5uZWxzXHJcbiAgICB0aGlzLmV2dExpbmtDaGFubmVscyA9IFtdO1xyXG4gICAgdGhpcy5vbignbGluaycsIHRoaXMuX29uTGluayk7XHJcbiAgICB0aGlzLm9uKCd1bmxpbmsnLCB0aGlzLl9vblVubGluayk7XHJcblxyXG4gIH1cclxuXHJcblxyXG4gIHByaXZhdGUgX29uS2V5RG93bihldnQ6IEtleWJvYXJkRXZlbnQpIHtcclxuICAgIGlmIChldnQua2V5Q29kZSA9PT0gMjcpIC8vIEVTQ+aMiemUrlxyXG4gICAgICByZXR1cm4gdGhpcy5lbGVtZW50IS5ibHVyKCk7XHJcblxyXG4gICAgaWYgKGV2dC5rZXlDb2RlICE9PSAxMyB8fCB0aGlzLmRpc2FibGVkKSAgLy8gRW50ZXLlm57ovabplK5cclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgdGhpcy5lbWl0KCdjbGljaycpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uQ2hhbmdlKGNvbG9yOiBhbnkpIHtcclxuICAgIGlmICh0aGlzLl9jaGFubmVscyA9PT0gMSkge1xyXG4gICAgICB0aGlzLmVsZW1lbnRDb2xvci5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiKCcgKyBbdGhpcy5yLCB0aGlzLnIsIHRoaXMucl0uam9pbignLCcpICsgJyknO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLl9jaGFubmVscyA9PT0gMykge1xyXG4gICAgICB0aGlzLmVsZW1lbnRDb2xvci5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmdiKCcgKyB0aGlzLl92YWx1ZXMuc2xpY2UoMCwgMykuam9pbignLCcpICsgJyknO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLl9jaGFubmVscyA9PT0gNCkge1xyXG4gICAgICB2YXIgcmdiYSA9IHRoaXMuX3ZhbHVlcy5zbGljZSgwLCA0KTtcclxuICAgICAgcmdiYVszXSAvPSAyNTU7XHJcbiAgICAgIHRoaXMuZWxlbWVudENvbG9yLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZ2JhKCcgKyByZ2JhLmpvaW4oJywnKSArICcpJztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCd1bmtub3duIGNoYW5uZWxzJywgY29sb3IpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uTGluaygpOiB2b2lkIHtcclxuICAgIGxldCB0aGF0ID0gdGhpcztcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7XHJcbiAgICAgIHRoaXMuZXZ0TGlua0NoYW5uZWxzW2ldID0gdGhpcy5fbGluayEub24odGhpcy5wYXRoICsgJy4nICsgaSArICc6c2V0JywgZnVuY3Rpb24gKHZhbHVlOiBhbnkpIHtcclxuICAgICAgICB0aGF0Ll9zZXRWYWx1ZSh0aGF0Ll9saW5rIS5nZXQodGhhdC5wYXRoKSk7XHJcbiAgICAgIH0uYmluZCh0aGF0KSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfb25VbmxpbmsoKTogdm9pZCB7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZXZ0TGlua0NoYW5uZWxzLmxlbmd0aDsgaSsrKVxyXG4gICAgICB0aGlzLmV2dExpbmtDaGFubmVsc1tpXS51bmJpbmQoKTtcclxuXHJcbiAgICB0aGlzLmV2dExpbmtDaGFubmVscyA9IFtdO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBfb25MaW5rQ2hhbmdlKHZhbHVlOiBudW1iZXJbXSkge1xyXG4gICAgaWYgKCF2YWx1ZSlcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX3NldFZhbHVlKHZhbHVlKTtcclxuICB9O1xyXG5cclxuXHJcbiAgcHJpdmF0ZSBfc2V0VmFsdWUodmFsdWU6IG51bWJlcltdKSB7XHJcbiAgICB2YXIgY2hhbmdlZCA9IGZhbHNlO1xyXG5cclxuICAgIGlmICghdmFsdWUpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBpZiAodmFsdWUubGVuZ3RoICE9PSB0aGlzLl9jaGFubmVscykge1xyXG4gICAgICBjaGFuZ2VkID0gdHJ1ZTtcclxuICAgICAgdGhpcy5jaGFubmVscyA9IHZhbHVlLmxlbmd0aDtcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuX2NoYW5uZWxzOyBpKyspIHtcclxuICAgICAgaWYgKHRoaXMuX3ZhbHVlc1tpXSA9PT0gTWF0aC5mbG9vcih2YWx1ZVtpXSkpXHJcbiAgICAgICAgY29udGludWU7XHJcblxyXG4gICAgICBjaGFuZ2VkID0gdHJ1ZTtcclxuICAgICAgdGhpcy5fdmFsdWVzW2ldID0gTWF0aC5mbG9vcih2YWx1ZVtpXSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNoYW5nZWQpXHJcbiAgICAgIHRoaXMuZW1pdCgnY2hhbmdlJywgdGhpcy5fdmFsdWVzLnNsaWNlKDAsIHRoaXMuX2NoYW5uZWxzKSk7XHJcbiAgfTtcclxuXHJcblxyXG59IiwiaW1wb3J0IHsgRWxlbWVudCB9IGZyb20gJy4vZWxlbWVudCc7XHJcblxyXG5leHBvcnQgY2xhc3MgQ29udGFpbmVyRWxlbWVudCBleHRlbmRzIEVsZW1lbnQge1xyXG5cclxuXHJcbiAgcHJpdmF0ZSBfaW5uZXJFbGVtZW50OiBOdWxsYWJsZTxIVE1MRWxlbWVudD4gPSBudWxsO1xyXG4gIHB1YmxpYyBnZXQgaW5uZXJFbGVtZW50KCk6IE51bGxhYmxlPEhUTUxFbGVtZW50PiB7XHJcbiAgICByZXR1cm4gdGhpcy5faW5uZXJFbGVtZW50O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGlubmVyRWxlbWVudCh2YWw6IE51bGxhYmxlPEhUTUxFbGVtZW50Pikge1xyXG4gICAgaWYgKHRoaXMuX2lubmVyRWxlbWVudCkge1xyXG4gICAgICB0aGlzLl9vYnNlcnZlci5kaXNjb25uZWN0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5faW5uZXJFbGVtZW50ID0gdmFsO1xyXG5cclxuICAgIHRoaXMuX29ic2VydmVyLm9ic2VydmUodGhpcy5faW5uZXJFbGVtZW50ISwgdGhpcy5fb2JzZXJ2ZXJPcHRpb25zKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29ic2VydmVyQ2hhbmdlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICBwcml2YXRlIF9vYnNlcnZlcjogTXV0YXRpb25PYnNlcnZlcjtcclxuXHJcbiAgcHJpdmF0ZSBfb2JzZXJ2ZXJPcHRpb25zOiB7fSA9IHtcclxuICAgIGNoaWxkTGlzdDogdHJ1ZSxcclxuICAgIGF0dHJpYnV0ZXM6IHRydWUsXHJcbiAgICBjaGFyYWN0ZXJEYXRhOiBmYWxzZSxcclxuICAgIHN1YnRyZWU6IHRydWUsXHJcbiAgICBhdHRyaWJ1dGVPbGRWYWx1ZTogZmFsc2UsXHJcbiAgICBjaGFyYWN0ZXJEYXRhT2xkVmFsdWU6IGZhbHNlXHJcbiAgfTtcclxuXHJcblxyXG4gIHB1YmxpYyBnZXQgZmxleGlibGUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50ID8gdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnZmxleGlibGUnKSA6IGZhbHNlO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGZsZXhpYmxlKHZhbDogYm9vbGVhbikge1xyXG4gICAgaWYgKCF0aGlzLmVsZW1lbnQgfHwgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnZmxleGlibGUnKSA9PT0gdmFsKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgaWYgKHZhbCkge1xyXG4gICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZmxleGlibGUnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdmbGV4aWJsZScpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBmbGV4KCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudCA/IHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2ZsZXgnKSA6IGZhbHNlO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGZsZXgodmFsOiBib29sZWFuKSB7XHJcbiAgICBpZiAoIXRoaXMuZWxlbWVudCB8fCB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdmbGV4JykgPT09IHZhbClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmICh2YWwpIHtcclxuICAgICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2ZsZXgnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdmbGV4Jyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGZsZXhEaXJlY3Rpb24oKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLl9pbm5lckVsZW1lbnQgPyAodGhpcy5faW5uZXJFbGVtZW50IS5zdHlsZS5mbGV4RGlyZWN0aW9uIHx8ICcnKSA6ICcnO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGZsZXhEaXJlY3Rpb24odmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICh0aGlzLl9pbm5lckVsZW1lbnQpIHtcclxuICAgICAgdGhpcy5faW5uZXJFbGVtZW50LnN0eWxlLmZsZXhEaXJlY3Rpb24gPSB2YWw7XHJcbiAgICAgIHRoaXMuX2lubmVyRWxlbWVudC5zdHlsZS53ZWJraXRGbGV4RGlyZWN0aW9uID0gdmFsITtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgZmxleFdyYXAoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLl9pbm5lckVsZW1lbnQgPyAodGhpcy5faW5uZXJFbGVtZW50IS5zdHlsZS5mbGV4V3JhcCB8fCAnJykgOiAnJztcclxuICB9XHJcbiAgcHVibGljIHNldCBmbGV4V3JhcCh2YWw6IHN0cmluZykge1xyXG4gICAgaWYgKHRoaXMuX2lubmVyRWxlbWVudCkge1xyXG4gICAgICB0aGlzLl9pbm5lckVsZW1lbnQuc3R5bGUuZmxleFdyYXAgPSB2YWw7XHJcbiAgICAgIHRoaXMuX2lubmVyRWxlbWVudC5zdHlsZS53ZWJraXRGbGV4V3JhcCA9IHZhbCE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGZsZXhHcm93KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50ID8gKHRoaXMuZWxlbWVudC5zdHlsZS5mbGV4R3JvdyB8fCAnJykgOiAnJztcclxuICB9XHJcbiAgcHVibGljIHNldCBmbGV4R3Jvdyh2YWw6IHN0cmluZykge1xyXG4gICAgaWYgKCEhdmFsKSB0aGlzLmZsZXggPSB0cnVlO1xyXG5cclxuICAgIGlmICh0aGlzLmVsZW1lbnQpIHtcclxuICAgICAgdGhpcy5lbGVtZW50LnN0eWxlLmZsZXhHcm93ID0gdmFsO1xyXG4gICAgICB0aGlzLmVsZW1lbnQuc3R5bGUud2Via2l0RmxleEdyb3cgPSB2YWwhO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLl9pbm5lckVsZW1lbnQpIHtcclxuICAgICAgdGhpcy5faW5uZXJFbGVtZW50LnN0eWxlLmZsZXhHcm93ID0gdmFsO1xyXG4gICAgICB0aGlzLl9pbm5lckVsZW1lbnQuc3R5bGUud2Via2l0RmxleEdyb3cgPSB2YWwhO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBmbGV4U2hyaW5rKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50ID8gKHRoaXMuZWxlbWVudC5zdHlsZS5mbGV4U2hyaW5rIHx8ICcnKSA6ICcnO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGZsZXhTaHJpbmsodmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICghIXZhbCkgdGhpcy5mbGV4ID0gdHJ1ZTtcclxuXHJcbiAgICBpZiAodGhpcy5lbGVtZW50KSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS5mbGV4U2hyaW5rID0gdmFsO1xyXG4gICAgICB0aGlzLmVsZW1lbnQuc3R5bGUud2Via2l0RmxleFNocmluayA9IHZhbCE7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMuX2lubmVyRWxlbWVudCkge1xyXG4gICAgICB0aGlzLl9pbm5lckVsZW1lbnQuc3R5bGUuZmxleFNocmluayA9IHZhbDtcclxuICAgICAgdGhpcy5faW5uZXJFbGVtZW50LnN0eWxlLndlYmtpdEZsZXhTaHJpbmsgPSB2YWwhO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBzY3JvbGwoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5jbGFzcyA/IHRoaXMuY2xhc3MuY29udGFpbnMoJ3Njcm9sbGFibGUnKSA6IGZhbHNlO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHNjcm9sbCh2YWw6IGJvb2xlYW4pIHtcclxuICAgIGlmICh0aGlzLmNsYXNzKSB0aGlzLmNsYXNzLmFkZCgnc2Nyb2xsYWJsZScpO1xyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIGxldCBvYnNlcnZlclRpbWVvdXQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgc2VsZi5fb2JzZXJ2ZXJDaGFuZ2VkID0gZmFsc2U7XHJcbiAgICAgIHNlbGYuZW1pdCgnbm9kZXNDaGFuZ2VkJyk7XHJcbiAgICAgIC8vIGNvbnNvbGUud2Fybignbm9kZXNDaGFuZ2VkJyk7XHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuX29ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24gKCkge1xyXG4gICAgICBpZiAoc2VsZi5fb2JzZXJ2ZXJDaGFuZ2VkKVxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgc2VsZi5fb2JzZXJ2ZXJDaGFuZ2VkID0gdHJ1ZTtcclxuICAgICAgc2V0VGltZW91dChvYnNlcnZlclRpbWVvdXQsIDApO1xyXG4gICAgfSk7XHJcblxyXG4gIH1cclxuXHJcbiAgcHVibGljIGFwcGVuZChlbGVtZW50OiBIVE1MRWxlbWVudCB8IEVsZW1lbnQpOiB2b2lkIHtcclxuICAgIGxldCBodG1sOiBib29sZWFuID0gZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50O1xyXG4gICAgbGV0IG5vZGU6IEhUTUxFbGVtZW50ID0gaHRtbCA/IDxIVE1MRWxlbWVudD5lbGVtZW50IDogKDxFbGVtZW50PmVsZW1lbnQpLmVsZW1lbnQhO1xyXG4gICAgdGhpcy5faW5uZXJFbGVtZW50IS5hcHBlbmRDaGlsZChub2RlKTtcclxuXHJcbiAgICBpZiAoIWh0bWwpIHtcclxuICAgICAgKDxFbGVtZW50PmVsZW1lbnQpLnBhcmVudCA9IHRoaXM7XHJcbiAgICAgIHRoaXMuZW1pdCgnYXBwZW5kJywgZWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbiAgcHVibGljIGFwcGVuZEJlZm9yZShlbGVtZW50OiBIVE1MRWxlbWVudCB8IEVsZW1lbnQsIHJlZmVyZW5jZTogSFRNTEVsZW1lbnQgfCBFbGVtZW50IHwgbnVsbCk6IHZvaWQge1xyXG4gICAgbGV0IGh0bWw6IGJvb2xlYW4gPSAoZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KTtcclxuICAgIGxldCBub2RlOiBIVE1MRWxlbWVudCA9IGh0bWwgPyA8SFRNTEVsZW1lbnQ+ZWxlbWVudCA6ICg8RWxlbWVudD5lbGVtZW50KS5lbGVtZW50ITtcclxuXHJcbiAgICBpZiAocmVmZXJlbmNlIGluc3RhbmNlb2YgRWxlbWVudCkgcmVmZXJlbmNlID0gcmVmZXJlbmNlLmVsZW1lbnQ7XHJcblxyXG4gICAgdGhpcy5faW5uZXJFbGVtZW50IS5pbnNlcnRCZWZvcmUobm9kZSwgcmVmZXJlbmNlKTtcclxuXHJcbiAgICBpZiAoIWh0bWwpIHtcclxuICAgICAgKDxFbGVtZW50PmVsZW1lbnQpLnBhcmVudCA9IHRoaXM7XHJcbiAgICAgIHRoaXMuZW1pdCgnYXBwZW5kJywgZWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGFwcGVuZEFmdGVyKGVsZW1lbnQ6IEhUTUxFbGVtZW50IHwgRWxlbWVudCwgcmVmZXJlbmNlOiBIVE1MRWxlbWVudCB8IEVsZW1lbnQgfCBudWxsKTogdm9pZCB7XHJcbiAgICBsZXQgaHRtbDogYm9vbGVhbiA9IChlbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpO1xyXG4gICAgbGV0IG5vZGU6IEhUTUxFbGVtZW50ID0gaHRtbCA/IDxIVE1MRWxlbWVudD5lbGVtZW50IDogKDxFbGVtZW50PmVsZW1lbnQpLmVsZW1lbnQhO1xyXG5cclxuICAgIGlmIChyZWZlcmVuY2UgaW5zdGFuY2VvZiBFbGVtZW50KSByZWZlcmVuY2UgPSByZWZlcmVuY2UuZWxlbWVudDtcclxuXHJcbiAgICBpZiAocmVmZXJlbmNlKSB7XHJcbiAgICAgIHRoaXMuX2lubmVyRWxlbWVudCEuaW5zZXJ0QmVmb3JlKG5vZGUsIHJlZmVyZW5jZS5uZXh0U2libGluZyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9pbm5lckVsZW1lbnQhLmFwcGVuZENoaWxkKG5vZGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghaHRtbCkge1xyXG4gICAgICAoPEVsZW1lbnQ+ZWxlbWVudCkucGFyZW50ID0gdGhpcztcclxuICAgICAgdGhpcy5lbWl0KCdhcHBlbmQnLCBlbGVtZW50KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuXHJcbiAgcHVibGljIHByZXBlbmQoZWxlbWVudDogSFRNTEVsZW1lbnQgfCBFbGVtZW50KTogdm9pZCB7XHJcbiAgICBsZXQgZmlyc3QgPSB0aGlzLl9pbm5lckVsZW1lbnQhLmZpcnN0Q2hpbGQ7XHJcbiAgICBsZXQgaHRtbDogYm9vbGVhbiA9IChlbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpO1xyXG4gICAgbGV0IG5vZGU6IEhUTUxFbGVtZW50ID0gaHRtbCA/IDxIVE1MRWxlbWVudD5lbGVtZW50IDogKDxFbGVtZW50PmVsZW1lbnQpLmVsZW1lbnQhO1xyXG5cclxuICAgIGlmIChmaXJzdCkge1xyXG4gICAgICB0aGlzLl9pbm5lckVsZW1lbnQhLmluc2VydEJlZm9yZShub2RlLCBmaXJzdCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9pbm5lckVsZW1lbnQhLmFwcGVuZENoaWxkKG5vZGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghaHRtbCkge1xyXG4gICAgICAoPEVsZW1lbnQ+ZWxlbWVudCkucGFyZW50ID0gdGhpcztcclxuICAgICAgdGhpcy5lbWl0KCdhcHBlbmQnLCBlbGVtZW50KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBwdWJsaWMgcmVtb3ZlKGVsZW1lbnQ6IEhUTUxFbGVtZW50IHwgRWxlbWVudCk6IHZvaWQge1xyXG4gICAgbGV0IGh0bWw6IGJvb2xlYW4gPSAoZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KTtcclxuICAgIGxldCBub2RlOiBIVE1MRWxlbWVudCA9IGh0bWwgPyA8SFRNTEVsZW1lbnQ+ZWxlbWVudCA6ICg8RWxlbWVudD5lbGVtZW50KS5lbGVtZW50ITtcclxuXHJcbiAgICBpZiAoIW5vZGUucGFyZW50RWxlbWVudCB8fCBub2RlLnBhcmVudEVsZW1lbnQgIT09IHRoaXMuX2lubmVyRWxlbWVudClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX2lubmVyRWxlbWVudC5yZW1vdmVDaGlsZChub2RlKTtcclxuXHJcbiAgICBpZiAoIWh0bWwpIHtcclxuICAgICAgKDxFbGVtZW50PmVsZW1lbnQpLnBhcmVudCA9IG51bGw7XHJcbiAgICAgIHRoaXMuZW1pdCgncmVtb3ZlJywgZWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8gVE9ET++8muaAleS4jeWvuVxyXG4gIHB1YmxpYyBjbGVhcigpOiB2b2lkIHtcclxuICAgIGNvbnNvbGUubG9nKCdjbGVhcicpO1xyXG4gICAgbGV0IG5vZGU6IEhUTUxFbGVtZW50O1xyXG4gICAgdGhpcy5fb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xyXG4gICAgLy8gY29uc29sZS5sb2codGhpcy5faW5uZXJFbGVtZW50KTtcclxuICAgIGxldCBpOiBudW1iZXIgPSB0aGlzLl9pbm5lckVsZW1lbnQhLmNoaWxkcmVuLmxlbmd0aDtcclxuICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgbm9kZSA9IDxIVE1MRWxlbWVudD4odGhpcy5faW5uZXJFbGVtZW50IS5jaGlsZHJlbltpXSk7XHJcblxyXG4gICAgICBpZiAoIW5vZGUudWkpXHJcbiAgICAgICAgY29udGludWU7XHJcblxyXG4gICAgICBub2RlLnVpLmRlc3Ryb3koKTtcclxuICAgIH1cclxuICAgIHRoaXMuX2lubmVyRWxlbWVudCEuaW5uZXJIVE1MID0gJyc7XHJcblxyXG4gICAgdGhpcy5fb2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLl9pbm5lckVsZW1lbnQhLCB0aGlzLl9vYnNlcnZlck9wdGlvbnMpO1xyXG4gIH07XHJcblxyXG5cclxufSIsImltcG9ydCB7IEV2ZW50cywgRXZlbnRIYW5kbGUgfSBmcm9tIFwiLi4vbGliXCI7XHJcbmltcG9ydCB7IExpbmsgfSBmcm9tIFwiLi9saW5rXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgRWxlbWVudCBleHRlbmRzIEV2ZW50cyB7XHJcblxyXG4gIHByaXZhdGUgX3BhcmVudDogTnVsbGFibGU8RWxlbWVudD4gPSBudWxsO1xyXG4gIHByaXZhdGUgX2Rlc3Ryb3llZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAvLyBUT0RPXHJcbiAgcHVibGljIF9saW5rOiBOdWxsYWJsZTxMaW5rPiA9IG51bGw7XHJcbiAgLypcclxuICAgIG9uIGdldCBzZXQgLnNjaGVtYS5oYXMgLnNjaGVtYS5nZXQgLmhpc3RvcnkgLmhpc3RvcnkuY29tYmluZSAuZW50aXR5XHJcbiAgKi9cclxuICBwcml2YXRlIF9saW5rT25TZXQ6IE51bGxhYmxlPEV2ZW50SGFuZGxlPiA9IG51bGw7XHJcbiAgcHJpdmF0ZSBfbGlua09uVW5zZXQ6IE51bGxhYmxlPEV2ZW50SGFuZGxlPiA9IG51bGw7XHJcbiAgcHVibGljIHBhdGg6IHN0cmluZyA9ICcnO1xyXG5cclxuICBwdWJsaWMgcmVuZGVyQ2hhbmdlcyA9IGZhbHNlO1xyXG4gIC8vIFRPRE9cclxuICAvLyAvLyByZW5kZXIgY2hhbmdlcyBvbmx5IGZyb20gbmV4dCB0aWNrc1xyXG4gIC8vIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgLy8gICBpZiAoc2VsZi5yZW5kZXJDaGFuZ2VzID09PSBudWxsKSBzZWxmLnJlbmRlckNoYW5nZXMgPSB0cnVlO1xyXG4gIC8vIH0sIDApO1xyXG5cclxuICBwdWJsaWMgZGlzYWJsZWRDbGljayA9IGZhbHNlO1xyXG4gIHByaXZhdGUgX2Rpc2FibGVkID0gZmFsc2U7XHJcbiAgcHJpdmF0ZSBfZGlzYWJsZWRQYXJlbnQgPSBmYWxzZTtcclxuXHJcbiAgcHJpdmF0ZSBfZXZ0UGFyZW50RGVzdHJveTogTnVsbGFibGU8RXZlbnRIYW5kbGU+ID0gbnVsbDtcclxuICBwcml2YXRlIF9ldnRQYXJlbnREaXNhYmxlOiBOdWxsYWJsZTxFdmVudEhhbmRsZT4gPSBudWxsO1xyXG4gIHByaXZhdGUgX2V2dFBhcmVudEVuYWJsZTogTnVsbGFibGU8RXZlbnRIYW5kbGU+ID0gbnVsbDtcclxuXHJcbiAgLy8gcHVibGljIGdldCBzZWxlY3RlZCgpOiBib29sZWFuIHtcclxuICAvLyAgIHJldHVybiB0aGlzLmNsYXNzIS5jb250YWlucygnc2VsZWN0ZWQnKTtcclxuICAvLyB9XHJcblxyXG4gIC8vIEhUTUxFbGVtZW50IFxyXG4gIHByaXZhdGUgX2VsZW1lbnQ6IE51bGxhYmxlPEhUTUxFbGVtZW50PiA9IG51bGw7XHJcbiAgLy8gcHVibGljIGlubmVyRWxlbWVudDogTnVsbGFibGU8SFRNTEVsZW1lbnQ+ID0gbnVsbDtcclxuICBwdWJsaWMgZ2V0IGVsZW1lbnQoKTogTnVsbGFibGU8SFRNTEVsZW1lbnQ+IHtcclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGVsZW1lbnQodmFsOiBOdWxsYWJsZTxIVE1MRWxlbWVudD4pIHtcclxuICAgIGlmICh0aGlzLl9lbGVtZW50KSByZXR1cm47XHJcblxyXG4gICAgdGhpcy5fZWxlbWVudCA9IHZhbDtcclxuICAgIHRoaXMuX2VsZW1lbnQhLnVpID0gdGhpcztcclxuXHJcbiAgICBpZiAoIXRoaXMuX2VsZW1lbnQpIHJldHVybjtcclxuXHJcbiAgICBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICAvLyBjbGljayDkuovku7ZcclxuICAgIHRoaXMuX2VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGlmIChzZWxmLmRpc2FibGVkICYmICFzZWxmLmRpc2FibGVkQ2xpY2spIHJldHVybjtcclxuICAgICAgc2VsZi5lbWl0KFwiY2xpY2tcIiwgZXZ0KTtcclxuICAgIH0sIGZhbHNlKTtcclxuICAgIC8vIGhvdmVyIOS6i+S7tlxyXG4gICAgdGhpcy5fZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCAoZXZ0KSA9PiB7XHJcbiAgICAgIHNlbGYuZW1pdCgnaG92ZXInLCBldnQpO1xyXG4gICAgfSwgZmFsc2UpO1xyXG4gICAgLy8gYmx1ciDkuovku7bvvIxtb3VzZSBvdXRcclxuICAgIHRoaXMuX2VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCAoZXZ0KSA9PiB7XHJcbiAgICAgIHNlbGYuZW1pdCgnYmx1cicsIGV2dCk7XHJcbiAgICB9LCBmYWxzZSk7XHJcblxyXG4gICAgLy8gaWYgKCF0aGlzLmlubmVyRWxlbWVudCkgdGhpcy5pbm5lckVsZW1lbnQgPSB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBwYXJlbnQoKTogTnVsbGFibGU8RWxlbWVudD4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX3BhcmVudDtcclxuICB9XHJcbiAgcHVibGljIHNldCBwYXJlbnQodmFsOiBOdWxsYWJsZTxFbGVtZW50Pikge1xyXG4gICAgaWYgKHRoaXMuX3BhcmVudCkge1xyXG4gICAgICB0aGlzLl9wYXJlbnQgPSBudWxsO1xyXG4gICAgICB0aGlzLl9ldnRQYXJlbnREZXN0cm95IS51bmJpbmQoKTtcclxuICAgICAgdGhpcy5fZXZ0UGFyZW50RGlzYWJsZSEudW5iaW5kKCk7XHJcbiAgICAgIHRoaXMuX2V2dFBhcmVudEVuYWJsZSEudW5iaW5kKCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHZhbCkge1xyXG4gICAgICB0aGlzLl9wYXJlbnQgPSB2YWw7XHJcbiAgICAgIHRoaXMuX2V2dFBhcmVudERlc3Ryb3kgPSB0aGlzLl9wYXJlbnQub25jZShcclxuICAgICAgICBcImRlc3Ryb3lcIixcclxuICAgICAgICB0aGlzLl9wYXJlbnREZXN0cm95XHJcbiAgICAgICk7XHJcbiAgICAgIHRoaXMuX2V2dFBhcmVudERpc2FibGUgPSB0aGlzLl9wYXJlbnQub24oXCJkaXNhYmxlXCIsIHRoaXMuX3BhcmVudERpc2FibGUpO1xyXG4gICAgICB0aGlzLl9ldnRQYXJlbnRFbmFibGUgPSB0aGlzLl9wYXJlbnQub24oXCJlbmFibGVcIiwgdGhpcy5fcGFyZW50RW5hYmxlKTtcclxuXHJcbiAgICAgIGlmICh0aGlzLl9kaXNhYmxlZFBhcmVudCAhPT0gdGhpcy5fcGFyZW50LmRpc2FibGVkKSB7XHJcbiAgICAgICAgdGhpcy5fZGlzYWJsZWRQYXJlbnQgPSB0aGlzLl9wYXJlbnQuZGlzYWJsZWQ7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9kaXNhYmxlZFBhcmVudCkge1xyXG4gICAgICAgICAgdGhpcy5jbGFzcyEuYWRkKFwiZGlzYWJsZWRcIik7XHJcbiAgICAgICAgICB0aGlzLmVtaXQoXCJkaXNhYmxlXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLmNsYXNzIS5yZW1vdmUoXCJkaXNhYmxlZFwiKTtcclxuICAgICAgICAgIHRoaXMuZW1pdChcImVuYWJsZVwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmVtaXQoXCJwYXJlbnRcIik7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGRpc2FibGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkIHx8IHRoaXMuX2Rpc2FibGVkUGFyZW50O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGRpc2FibGVkKHZhbDogYm9vbGVhbikge1xyXG4gICAgaWYgKHRoaXMuX2Rpc2FibGVkID09PSB2YWwpIHJldHVybjtcclxuXHJcbiAgICB0aGlzLl9kaXNhYmxlZCA9ICEhdmFsO1xyXG4gICAgdGhpcy5lbWl0KHRoaXMuX2Rpc2FibGVkIHx8IHRoaXMuX2Rpc2FibGVkUGFyZW50ID8gJ2Rpc2FibGUnIDogJ2VuYWJsZScpO1xyXG5cclxuICAgIGlmICh0aGlzLl9kaXNhYmxlZCB8fCB0aGlzLl9kaXNhYmxlZFBhcmVudCkge1xyXG4gICAgICBpZiAodGhpcy5jbGFzcykgdGhpcy5jbGFzcy5hZGQoJ2Rpc2FibGVkJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodGhpcy5jbGFzcykgdGhpcy5jbGFzcy5yZW1vdmUoJ2Rpc2FibGVkJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGRpc2FibGVkU2VsZigpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9kaXNhYmxlZDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgZW5hYmxlZCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiAhdGhpcy5fZGlzYWJsZWQ7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgZW5hYmxlZCh2YWw6IGJvb2xlYW4pIHtcclxuICAgIHRoaXMuZGlzYWJsZWQgPSAhdmFsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBoaWRkZW4oKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudCA/IHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdoaWRkZW4nKSA6IGZhbHNlO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGhpZGRlbih2YWw6IGJvb2xlYW4pIHtcclxuICAgIGlmICghdGhpcy5fZWxlbWVudCkgcmV0dXJuO1xyXG5cclxuICAgIGlmICh0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnaGlkZGVuJykgPT09ICEhdmFsKSByZXR1cm47XHJcblxyXG4gICAgaWYgKHZhbCkge1xyXG4gICAgICB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xyXG4gICAgICB0aGlzLmVtaXQoJ2hpZGUnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XHJcbiAgICAgIHRoaXMuZW1pdCgnc2hvdycpO1xyXG5cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIFRPRE9cclxuICBwdWJsaWMgZ2V0IHZhbHVlKCk6IGFueSB7XHJcbiAgICBpZiAoIXRoaXMuX2xpbmspIHJldHVybiBudWxsO1xyXG4gICAgcmV0dXJuIHRoaXMuX2xpbmsuZ2V0KHRoaXMucGF0aCk7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgdmFsdWUodmFsOiBhbnkpIHtcclxuICAgIGlmICghdGhpcy5fbGluaykgcmV0dXJuO1xyXG4gICAgdGhpcy5fbGluay5zZXQodGhpcy5wYXRoLCB2YWwpO1xyXG4gIH1cclxuXHJcbiAgLyogRE9NIEVsZW1lbnQgKi9cclxuXHJcbiAgcHVibGljIGdldCBjbGFzcygpOiBOdWxsYWJsZTxET01Ub2tlbkxpc3Q+IHtcclxuICAgIGlmICh0aGlzLl9lbGVtZW50KSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdDtcclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBzdHlsZSgpOiBOdWxsYWJsZTxDU1NTdHlsZURlY2xhcmF0aW9uPiB7XHJcbiAgICBpZiAodGhpcy5fZWxlbWVudCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5fZWxlbWVudC5zdHlsZTtcclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgLy8gZmxleC1ncm93IOWxnuaAp+eUqOS6juiuvue9ruaIluajgOe0ouW8ueaAp+ebkuWtkOeahOaJqeWxleavlOeOh++8jOeUqOS9nGNzc+WKqOeUu+aViOaenFxyXG4gIHB1YmxpYyBnZXQgZmxleEdyb3coKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50ID8gKHRoaXMuX2VsZW1lbnQuc3R5bGUuZmxleEdyb3cgfHwgJycpIDogJyc7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgZmxleEdyb3codmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICh0aGlzLl9lbGVtZW50KSB7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUuZmxleEdyb3cgPSB2YWw7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUud2Via2l0RmxleEdyb3cgPSB2YWw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBmbGV4LXNocmluayDlsZ7mgKfop4Tlrprpobnnm67lsIbnm7jlr7nkuo7lkIzkuIDlrrnlmajlhoXlhbbku5bngbXmtLvnmoTpobnnm67ov5vooYzmlLbnvKnnmoTph4/vvIznlKjkvZxjc3PliqjnlLvmlYjmnpxcclxuICBwdWJsaWMgZ2V0IGZsZXhTaHJpbmsoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50ID8gKHRoaXMuX2VsZW1lbnQuc3R5bGUuZmxleFNocmluayB8fCAnJykgOiAnJztcclxuICB9XHJcbiAgcHVibGljIHNldCBmbGV4U2hyaW5rKHZhbDogc3RyaW5nKSB7XHJcbiAgICBpZiAodGhpcy5fZWxlbWVudCkge1xyXG4gICAgICB0aGlzLl9lbGVtZW50LnN0eWxlLmZsZXhTaHJpbmsgPSB2YWw7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUud2Via2l0RmxleFNocmluayA9IHZhbCE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIC8vIHRoaXMuX2VsZW1lbnQhLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKVxyXG5cclxuICAgIHRoaXMuX3BhcmVudCA9IG51bGw7XHJcbiAgICAvLyBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICAvLyB0aGlzLl9wYXJlbnREZXN0cm95ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy8gICBzZWxmLmRlc3Ryb3koKTtcclxuICAgIC8vIH07XHJcbiAgfVxyXG5cclxuICAvLyDorr7nva7lhYPntKDpl6rng4HmlYjmnpxcclxuICBwdWJsaWMgZmxhc2goKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5jbGFzcykge1xyXG4gICAgICB0aGlzLmNsYXNzLmFkZCgnZmxhc2gnKTtcclxuICAgICAgc2V0VGltZW91dCh0aGlzLl9vbkZsYXNoRGVsYXksIDIwMCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbiAgcHJpdmF0ZSBfb25GbGFzaERlbGF5KCk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuY2xhc3MpIHtcclxuICAgICAgdGhpcy5jbGFzcy5yZW1vdmUoJ2ZsYXNoJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbGluayhsaW5rOiBMaW5rLCBwYXRoOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIGxldCBzZWxmID0gdGhpcztcclxuXHJcbiAgICBpZiAodGhpcy5fbGluaykgdGhpcy51bmxpbmsoKTtcclxuICAgIHRoaXMuX2xpbmsgPSBsaW5rO1xyXG4gICAgdGhpcy5wYXRoID0gcGF0aDtcclxuXHJcbiAgICB0aGlzLmVtaXQoXCJsaW5rXCIsIHBhdGgpO1xyXG5cclxuICAgIC8vIGFkZCA6c2V0IGxpbmtcclxuICAgIGlmICh0aGlzLl9vbkxpbmtDaGFuZ2UpIHtcclxuICAgICAgbGV0IHJlbmRlckNoYW5nZXMgPSB0aGlzLnJlbmRlckNoYW5nZXM7XHJcbiAgICAgIHRoaXMucmVuZGVyQ2hhbmdlcyA9IGZhbHNlO1xyXG4gICAgICB0aGlzLl9saW5rT25TZXQgPSB0aGlzLl9saW5rLm9uKHRoaXMucGF0aCArIFwiOnNldFwiLCBmdW5jdGlvbiAodmFsdWU6IGFueSkge1xyXG4gICAgICAgIHNlbGYuX29uTGlua0NoYW5nZSh2YWx1ZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLl9saW5rT25VbnNldCA9IHRoaXMuX2xpbmsub24odGhpcy5wYXRoICsgXCI6dW5zZXRcIiwgZnVuY3Rpb24gKHZhbHVlOiBhbnkpIHtcclxuICAgICAgICBzZWxmLl9vbkxpbmtDaGFuZ2UodmFsdWUpO1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5fb25MaW5rQ2hhbmdlKHRoaXMuX2xpbmsuZ2V0KHRoaXMucGF0aCkpO1xyXG4gICAgICB0aGlzLnJlbmRlckNoYW5nZXMgPSByZW5kZXJDaGFuZ2VzO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG5cclxuICBwdWJsaWMgdW5saW5rKCk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLl9saW5rKSByZXR1cm47XHJcblxyXG4gICAgdGhpcy5lbWl0KFwidW5saW5rXCIsIHRoaXMucGF0aCk7XHJcblxyXG4gICAgLy8gcmVtb3ZlIDpzZXQgbGlua1xyXG4gICAgaWYgKHRoaXMuX2xpbmtPblNldCkge1xyXG4gICAgICB0aGlzLl9saW5rT25TZXQudW5iaW5kKCk7XHJcbiAgICAgIHRoaXMuX2xpbmtPblNldCA9IG51bGw7XHJcblxyXG4gICAgICB0aGlzLl9saW5rT25VbnNldCEudW5iaW5kKCk7XHJcbiAgICAgIHRoaXMuX2xpbmtPblVuc2V0ID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9saW5rID0gbnVsbDtcclxuICAgIHRoaXMucGF0aCA9IFwiXCI7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIF9vbkxpbmtDaGFuZ2UodmFsdWU6IGFueSk6IHZvaWQge1xyXG5cclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgZGVzdHJveSgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLl9kZXN0cm95ZWQpIHJldHVybjtcclxuXHJcbiAgICB0aGlzLl9kZXN0cm95ZWQgPSB0cnVlO1xyXG5cclxuICAgIGlmICh0aGlzLl9wYXJlbnQpIHtcclxuICAgICAgdGhpcy5fZXZ0UGFyZW50RGVzdHJveSEudW5iaW5kKCk7XHJcbiAgICAgIHRoaXMuX2V2dFBhcmVudERpc2FibGUhLnVuYmluZCgpO1xyXG4gICAgICB0aGlzLl9ldnRQYXJlbnRFbmFibGUhLnVuYmluZCgpO1xyXG4gICAgICB0aGlzLl9wYXJlbnQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLl9lbGVtZW50ICYmIHRoaXMuX2VsZW1lbnQucGFyZW50Tm9kZSkge1xyXG4gICAgICB0aGlzLl9lbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5fZWxlbWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy51bmxpbmsoKTtcclxuXHJcbiAgICB0aGlzLmVtaXQoJ2Rlc3Ryb3knKTtcclxuXHJcbiAgICB0aGlzLnVuYmluZCgpO1xyXG5cclxuICAgIGNvbnNvbGUuZXJyb3IoJ2Rlc3Ryb3knKTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9wYXJlbnREZXN0cm95KCk6IHZvaWQge1xyXG4gICAgdGhpcy5kZXN0cm95KCk7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfcGFyZW50RGlzYWJsZSgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLl9kaXNhYmxlZFBhcmVudCkgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX2Rpc2FibGVkUGFyZW50ID0gdHJ1ZTtcclxuXHJcbiAgICBpZiAoIXRoaXMuX2Rpc2FibGVkKSB7XHJcbiAgICAgIHRoaXMuZW1pdChcImRpc2FibGVcIik7XHJcbiAgICAgIHRoaXMuY2xhc3MhLmFkZChcImRpc2FibGVkXCIpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX3BhcmVudEVuYWJsZSgpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5fZGlzYWJsZWRQYXJlbnQpIHJldHVybjtcclxuXHJcbiAgICB0aGlzLl9kaXNhYmxlZFBhcmVudCA9IGZhbHNlO1xyXG5cclxuICAgIGlmICghdGhpcy5fZGlzYWJsZWQpIHtcclxuICAgICAgdGhpcy5lbWl0KFwiZW5hYmxlXCIpO1xyXG4gICAgICB0aGlzLmNsYXNzIS5yZW1vdmUoXCJkaXNhYmxlZFwiKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuXHJcbn0iLCJpbXBvcnQgeyBFbGVtZW50IH0gZnJvbSBcIi4vZWxlbWVudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdyaWRJdGVtIGV4dGVuZHMgRWxlbWVudCB7XHJcblxyXG4gIHByaXZhdGUgX2NsaWNrZWQ6IGJvb2xlYW47XHJcbiAgcHVibGljIF9zZWxlY3RQZW5kaW5nOiBib29sZWFuO1xyXG4gIHByaXZhdGUgX3RvZ2dsZVNlbGVjdE9uQ2xpY2s6IGJvb2xlYW47XHJcblxyXG4gIHByaXZhdGUgX3RleHQ6IHN0cmluZztcclxuICBwdWJsaWMgZ2V0IHRleHQoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLl90ZXh0O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHRleHQodmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICh0aGlzLl90ZXh0ID09PSB2YWwpIHJldHVybjtcclxuICAgIHRoaXMuX3RleHQgPSB2YWw7XHJcbiAgICB0aGlzLmVsZW1lbnQhLmlubmVySFRNTCA9IHRoaXMuX3RleHQ7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9zZWxlY3RlZDogYm9vbGVhbjtcclxuICBwdWJsaWMgZ2V0IHNlbGVjdGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX3NlbGVjdGVkO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHNlbGVjdGVkKHZhbDogYm9vbGVhbikge1xyXG4gICAgaWYgKHRoaXMuX3NlbGVjdGVkID09PSB2YWwpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLl9zZWxlY3RQZW5kaW5nID0gdmFsO1xyXG5cclxuICAgIGlmICh0aGlzLnBhcmVudCAmJiB0aGlzLl9jbGlja2VkKVxyXG4gICAgICB0aGlzLnBhcmVudC5lbWl0KCdiZWZvcmUnICsgKHZhbCA/ICdTZWxlY3QnIDogJ0Rlc2VsZWN0JyksIHRoaXMsIHRoaXMuX2NsaWNrZWQpO1xyXG5cclxuICAgIGlmICh0aGlzLl9zZWxlY3RlZCA9PT0gdGhpcy5fc2VsZWN0UGVuZGluZylcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX3NlbGVjdGVkID0gdGhpcy5fc2VsZWN0UGVuZGluZztcclxuXHJcbiAgICBpZiAodGhpcy5fc2VsZWN0ZWQpIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5jbGFzc0xpc3QuYWRkKCdzZWxlY3RlZCcpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZW1pdCh0aGlzLnNlbGVjdGVkID8gJ3NlbGVjdCcgOiAnZGVzZWxlY3QnKTtcclxuICAgIHRoaXMuZW1pdCgnY2hhbmdlJywgdGhpcy5zZWxlY3RlZCk7XHJcblxyXG4gICAgaWYgKHRoaXMucGFyZW50KVxyXG4gICAgICB0aGlzLnBhcmVudC5lbWl0KHRoaXMuc2VsZWN0ZWQgPyAnc2VsZWN0JyA6ICdkZXNlbGVjdCcsIHRoaXMsIHRoaXMuX2NsaWNrZWQpO1xyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihhcmdzPzogR3JpZEl0ZW1BcmdzKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgYXJncyA9IGFyZ3MgfHwge307XHJcblxyXG4gICAgdGhpcy5fdGV4dCA9IGFyZ3MudGV4dCB8fCAnJztcclxuICAgIHRoaXMuX3NlbGVjdFBlbmRpbmcgPSBmYWxzZTtcclxuICAgIHRoaXMuX3NlbGVjdGVkID0gYXJncy5zZWxlY3RlZCB8fCBmYWxzZTtcclxuICAgIHRoaXMuX3RvZ2dsZVNlbGVjdE9uQ2xpY2sgPSBhcmdzICYmIGFyZ3MudG9nZ2xlU2VsZWN0T25DbGljayAhPT0gdW5kZWZpbmVkID8gYXJncy50b2dnbGVTZWxlY3RPbkNsaWNrIDogdHJ1ZTtcclxuICAgIHRoaXMuX2NsaWNrZWQgPSBmYWxzZTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG4gICAgdGhpcy5lbGVtZW50LnVpID0gdGhpcztcclxuICAgIHRoaXMuZWxlbWVudC50YWJJbmRleCA9IDA7XHJcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndWktZ3JpZC1pdGVtJyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuaW5uZXJIVE1MID0gdGhpcy5fdGV4dDtcclxuXHJcbiAgICAvLyB0aGlzLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9ldnRDbGljayk7XHJcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9vbkNsaWNrLmJpbmQodGhpcyksIGZhbHNlKTtcclxuXHJcbiAgICB0aGlzLm9uKCdzZWxlY3QnLCB0aGlzLl9vblNlbGVjdCk7XHJcbiAgICB0aGlzLm9uKCdkZXNlbGVjdCcsIHRoaXMuX29uRGVzZWxlY3QpO1xyXG5cclxuICB9XHJcblxyXG5cclxuICBwcml2YXRlIF9vbkNsaWNrKCkge1xyXG4gICAgdGhpcy5lbWl0KCdjbGljaycpO1xyXG4gICAgdGhpcy5fY2xpY2tlZCA9IHRydWU7XHJcbiAgICBpZiAodGhpcy5fdG9nZ2xlU2VsZWN0T25DbGljaykge1xyXG4gICAgICB0aGlzLnNlbGVjdGVkID0gIXRoaXMuc2VsZWN0ZWQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnNlbGVjdGVkID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIHRoaXMuX2NsaWNrZWQgPSBmYWxzZTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vblNlbGVjdCgpIHtcclxuICAgIHRoaXMuZWxlbWVudCEuZm9jdXMoKTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbkRlc2VsZWN0KCkge1xyXG4gICAgdGhpcy5lbGVtZW50IS5ibHVyKCk7XHJcbiAgfTtcclxuXHJcbn1cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgR3JpZEl0ZW1BcmdzIHtcclxuICB0ZXh0Pzogc3RyaW5nO1xyXG4gIHNlbGVjdGVkPzogYm9vbGVhbjtcclxuICB0b2dnbGVTZWxlY3RPbkNsaWNrPzogYm9vbGVhbjtcclxufSIsImltcG9ydCB7IENvbnRhaW5lckVsZW1lbnQgfSBmcm9tIFwiLi9jb250YWluZXItZWxlbWVudFwiO1xyXG5pbXBvcnQgeyBHcmlkSXRlbSB9IGZyb20gXCIuL2dyaWQtaXRlbVwiO1xyXG5pbXBvcnQgeyBIb3RrZXlzIH0gZnJvbSBcIi4uL2VkaXRvclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdyaWQgZXh0ZW5kcyBDb250YWluZXJFbGVtZW50IHtcclxuXHJcblxyXG4gIHByaXZhdGUgX2xhc3RTZWxlY3Q6IE51bGxhYmxlPEdyaWRJdGVtPjtcclxuXHJcbiAgcHJpdmF0ZSBfc2VsZWN0aW5nOiBib29sZWFuO1xyXG4gIHByaXZhdGUgX211bHRpU2VsZWN0OiBib29sZWFuO1xyXG5cclxuXHJcbiAgcHVibGljIGdldCBzZWxlY3RlZCgpOiBHcmlkSXRlbVtdIHtcclxuICAgIHZhciBpdGVtczogR3JpZEl0ZW1bXSA9IFtdO1xyXG4gICAgdmFyIGVsZW1lbnRzID0gdGhpcy5lbGVtZW50IS5xdWVyeVNlbGVjdG9yQWxsKCcudWktZ3JpZC1pdGVtLnNlbGVjdGVkJyk7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50cy5sZW5ndGg7IGkrKylcclxuICAgICAgaXRlbXMucHVzaCg8R3JpZEl0ZW0+KCg8SFRNTEVsZW1lbnQ+ZWxlbWVudHNbaV0pLnVpKSk7XHJcblxyXG4gICAgcmV0dXJuIGl0ZW1zO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKG11bHRpU2VsZWN0PzogYm9vbGVhbikge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xyXG4gICAgdGhpcy5lbGVtZW50LnRhYkluZGV4ID0gMDtcclxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1aS1ncmlkJyk7XHJcblxyXG4gICAgdGhpcy5fbGFzdFNlbGVjdCA9IG51bGw7XHJcbiAgICB0aGlzLl9zZWxlY3RpbmcgPSBmYWxzZTtcclxuICAgIHRoaXMuX211bHRpU2VsZWN0ID0gbXVsdGlTZWxlY3QgIT09IHVuZGVmaW5lZCA/IG11bHRpU2VsZWN0IDogdHJ1ZTtcclxuXHJcbiAgICB0aGlzLm9uKCdzZWxlY3QnLCB0aGlzLl9vblNlbGVjdCk7XHJcbiAgICB0aGlzLm9uKCdiZWZvcmVEZXNlbGVjdCcsIHRoaXMuX29uQmVmb3JlRGVzZWxlY3QpO1xyXG5cclxuICAgIHRoaXMub24oJ2FwcGVuZCcsIHRoaXMuX29uQXBwZW5kKTtcclxuICAgIHRoaXMub24oJ3JlbW92ZScsIHRoaXMuX29uUmVtb3ZlKTtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3RhdGljIF9jdHJsKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIEhvdGtleXMuY3RybDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgX3NoaWZ0KCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIEhvdGtleXMuc2hpZnQ7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbkFwcGVuZCgpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vblJlbW92ZSgpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vblNlbGVjdChpdGVtOiBHcmlkSXRlbSkge1xyXG4gICAgaWYgKHRoaXMuX3NlbGVjdGluZylcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmICh0aGlzLl9tdWx0aVNlbGVjdCAmJiBHcmlkLl9zaGlmdCAmJiBHcmlkLl9zaGlmdCgpKSB7XHJcbiAgICAgIHZhciBjaGlsZHJlbiA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuZWxlbWVudCEuY2hpbGROb2RlcywgMCk7XHJcblxyXG4gICAgICAvLyBtdWx0aSBzZWxlY3QgZnJvbS10b1xyXG4gICAgICBpZiAodGhpcy5fbGFzdFNlbGVjdCkge1xyXG4gICAgICAgIHRoaXMuX3NlbGVjdGluZyA9IHRydWU7XHJcblxyXG4gICAgICAgIHZhciBzdGFydEluZCA9IGNoaWxkcmVuLmluZGV4T2YodGhpcy5fbGFzdFNlbGVjdC5lbGVtZW50KTtcclxuICAgICAgICB2YXIgZW5kSW5kID0gY2hpbGRyZW4uaW5kZXhPZihpdGVtLmVsZW1lbnQpO1xyXG5cclxuICAgICAgICAvLyBzd2FwIGlmIGJhY2t3YXJkc1xyXG4gICAgICAgIGlmIChzdGFydEluZCA+IGVuZEluZCkge1xyXG4gICAgICAgICAgdmFyIHQgPSBzdGFydEluZDtcclxuICAgICAgICAgIHN0YXJ0SW5kID0gZW5kSW5kO1xyXG4gICAgICAgICAgZW5kSW5kID0gdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvciAodmFyIGkgPSBzdGFydEluZDsgaSA8IGVuZEluZDsgaSsrKSB7XHJcbiAgICAgICAgICBpZiAoIWNoaWxkcmVuW2ldIHx8ICFjaGlsZHJlbltpXS51aSB8fCBjaGlsZHJlbltpXS51aS5oaWRkZW4pXHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICAgIGNoaWxkcmVuW2ldLnVpLnNlbGVjdGVkID0gdHJ1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuX3NlbGVjdGluZyA9IGZhbHNlO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuX2xhc3RTZWxlY3QgPSBpdGVtO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuX211bHRpU2VsZWN0ICYmIEdyaWQuX2N0cmwgJiYgR3JpZC5fY3RybCgpKSB7XHJcbiAgICAgIC8vIG11bHRpIHNlbGVjdFxyXG4gICAgICB0aGlzLl9sYXN0U2VsZWN0ID0gaXRlbTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIHNpbmdsZSBzZWxlY3RcclxuICAgICAgdmFyIGl0ZW1zID0gdGhpcy5lbGVtZW50IS5xdWVyeVNlbGVjdG9yQWxsKCcudWktZ3JpZC1pdGVtLnNlbGVjdGVkJyk7XHJcblxyXG4gICAgICBpZiAoaXRlbXMubGVuZ3RoID4gMSkge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGlmICgoPEhUTUxFbGVtZW50Pml0ZW1zW2ldKS51aSA9PT0gaXRlbSlcclxuICAgICAgICAgICAgY29udGludWU7XHJcblxyXG4gICAgICAgICAgKDxHcmlkSXRlbT4oPEhUTUxFbGVtZW50Pml0ZW1zW2ldKS51aSkuc2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuX2xhc3RTZWxlY3QgPSBpdGVtO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uQmVmb3JlRGVzZWxlY3QoaXRlbTogR3JpZEl0ZW0pIHtcclxuICAgIGlmICh0aGlzLl9zZWxlY3RpbmcpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLl9zZWxlY3RpbmcgPSB0cnVlO1xyXG5cclxuICAgIGlmICh0aGlzLl9tdWx0aVNlbGVjdCAmJiBHcmlkLl9zaGlmdCAmJiBHcmlkLl9zaGlmdCgpKSB7XHJcbiAgICAgIHRoaXMuX2xhc3RTZWxlY3QgPSBudWxsO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLl9tdWx0aVNlbGVjdCAmJiBHcmlkLl9jdHJsICYmIEdyaWQuX2N0cmwoKSkge1xyXG4gICAgICB0aGlzLl9sYXN0U2VsZWN0ID0gbnVsbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHZhciBpdGVtcyA9IHRoaXMuZWxlbWVudCEucXVlcnlTZWxlY3RvckFsbCgnLnVpLWdyaWQtaXRlbS5zZWxlY3RlZCcpO1xyXG4gICAgICBpZiAoaXRlbXMubGVuZ3RoID4gMSkge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGlmICgoPEhUTUxFbGVtZW50Pml0ZW1zW2ldKS51aSA9PT0gaXRlbSlcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAoPEdyaWRJdGVtPig8SFRNTEVsZW1lbnQ+aXRlbXNbaV0pLnVpKS5zZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpdGVtLl9zZWxlY3RQZW5kaW5nID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLl9sYXN0U2VsZWN0ID0gaXRlbTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX3NlbGVjdGluZyA9IGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBmaWx0ZXIoZm46IEZ1bmN0aW9uKSB7XHJcbiAgICB0aGlzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW06IEhUTUxFbGVtZW50KSB7XHJcbiAgICAgIGl0ZW0uaGlkZGVuID0gIWZuKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGZvckVhY2goZm46IEZ1bmN0aW9uKSB7XHJcbiAgICB2YXIgY2hpbGQgPSB0aGlzLmVsZW1lbnQhLmZpcnN0Q2hpbGQ7XHJcbiAgICB3aGlsZSAoY2hpbGQpIHtcclxuICAgICAgaWYgKCg8SFRNTEVsZW1lbnQ+Y2hpbGQpLnVpKVxyXG4gICAgICAgIGZuKCg8SFRNTEVsZW1lbnQ+Y2hpbGQpLnVpKTtcclxuXHJcbiAgICAgIGNoaWxkID0gY2hpbGQubmV4dFNpYmxpbmc7XHJcbiAgICB9O1xyXG4gIH07XHJcblxyXG5cclxufSIsImltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiLi9lbGVtZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgSW1hZ2VGaWVsZCBleHRlbmRzIEVsZW1lbnQge1xyXG5cclxuICBwcml2YXRlIF92YWx1ZTogYW55O1xyXG5cclxuICBwdWJsaWMgZWxlbWVudEltYWdlOiBIVE1MSW1hZ2VFbGVtZW50IHwgSFRNTENhbnZhc0VsZW1lbnQ7XHJcblxyXG5cclxuICBwdWJsaWMgZ2V0IGltYWdlKCk6IHN0cmluZyB7XHJcbiAgICBpZiAodGhpcy5lbGVtZW50SW1hZ2UgaW5zdGFuY2VvZiBIVE1MQ2FudmFzRWxlbWVudCkge1xyXG4gICAgICByZXR1cm4gJyc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gKDxIVE1MSW1hZ2VFbGVtZW50PnRoaXMuZWxlbWVudEltYWdlKS5zcmM7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgaW1hZ2UodmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICh0aGlzLmVsZW1lbnRJbWFnZSBpbnN0YW5jZW9mIEhUTUxJbWFnZUVsZW1lbnQpIHtcclxuICAgICAgdGhpcy5lbGVtZW50SW1hZ2Uuc3JjID0gdmFsO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBlbXB0eSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLmNsYXNzIS5jb250YWlucygnZW1wdHknKTtcclxuICB9XHJcbiAgcHVibGljIHNldCBlbXB0eSh2YWw6IGJvb2xlYW4pIHtcclxuICAgIGlmICh0aGlzLmNsYXNzIS5jb250YWlucygnZW1wdHknKSA9PT0gISF2YWwpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBpZiAodmFsKSB7XHJcbiAgICAgIHRoaXMuY2xhc3MhLmFkZCgnZW1wdHknKTtcclxuICAgICAgdGhpcy5pbWFnZSA9ICcnO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5jbGFzcyEucmVtb3ZlKCdlbXB0eScpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCB2YWx1ZSgpOiBhbnkge1xyXG4gICAgaWYgKHRoaXMuX2xpbmspIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2xpbmsuZ2V0KHRoaXMucGF0aCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5fdmFsdWU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgdmFsdWUodmFsOiBhbnkpIHtcclxuICAgIHZhbCA9IHZhbCAmJiBwYXJzZUludCh2YWwpIHx8IG51bGw7XHJcblxyXG4gICAgaWYgKHRoaXMuX2xpbmspIHtcclxuICAgICAgaWYgKCF0aGlzLl9saW5rLnNldCh0aGlzLnBhdGgsIHZhbCkpXHJcbiAgICAgICAgdGhpcy5fdmFsdWUgPSB0aGlzLl9saW5rLmdldCh0aGlzLnBhdGgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKHRoaXMuX3ZhbHVlID09PSB2YWwgJiYgIXRoaXMuY2xhc3MhLmNvbnRhaW5zKCdudWxsJykpXHJcbiAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgdGhpcy5fdmFsdWUgPSB2YWw7XHJcbiAgICAgIHRoaXMuZW1pdCgnY2hhbmdlJywgdmFsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoY2FudmFzPzogYm9vbGVhbikge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1aS1pbWFnZS1maWVsZCcsICdlbXB0eScpO1xyXG5cclxuICAgIGlmIChjYW52YXMpIHtcclxuICAgICAgdGhpcy5lbGVtZW50SW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcclxuICAgICAgdGhpcy5lbGVtZW50SW1hZ2Uud2lkdGggPSA2NDtcclxuICAgICAgdGhpcy5lbGVtZW50SW1hZ2UuaGVpZ2h0ID0gNjQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmVsZW1lbnRJbWFnZSA9IG5ldyBJbWFnZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZWxlbWVudEltYWdlLmNsYXNzTGlzdC5hZGQoJ3ByZXZpZXcnKTtcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnRJbWFnZSk7XHJcblxyXG4gICAgdGhpcy5fdmFsdWUgPSBudWxsO1xyXG5cclxuICAgIC8vIHRoaXMuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2V2dENsaWNrKTtcclxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX29uQ2xpY2suYmluZCh0aGlzKSwgZmFsc2UpO1xyXG4gICAgdGhpcy5vbignY2hhbmdlJywgdGhpcy5fb25DaGFuZ2UuYmluZCh0aGlzKSk7XHJcblxyXG4gICAgLy8gc3BhY2UgPiBjbGlja1xyXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9vbktleURvd24uYmluZCh0aGlzKSwgZmFsc2UpO1xyXG5cclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uQ2xpY2soZXZ0OiBNb3VzZUV2ZW50KSB7XHJcbiAgICB0aGlzLmVtaXQoJ2NsaWNrJywgZXZ0KTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbkNoYW5nZSgpIHtcclxuICAgIGlmICghdGhpcy5yZW5kZXJDaGFuZ2VzKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5mbGFzaCgpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uS2V5RG93bihldnQ6IEtleWJvYXJkRXZlbnQpIHtcclxuICAgIGlmIChldnQua2V5Q29kZSA9PT0gMjcpXHJcbiAgICAgIHJldHVybiB0aGlzLmVsZW1lbnQhLmJsdXIoKTtcclxuXHJcbiAgICBpZiAoZXZ0LmtleUNvZGUgIT09IDMyIHx8IHRoaXMuZGlzYWJsZWQpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIHRoaXMuZW1pdCgncGljaycpO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBfb25MaW5rQ2hhbmdlKHZhbHVlOiBhbnkpIHtcclxuICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XHJcbiAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHZhbHVlKTtcclxuICB9O1xyXG5cclxufSIsImV4cG9ydCAqIGZyb20gJy4vbGluayc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZWxlbWVudCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vY29udGFpbmVyLWVsZW1lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL3BhbmVsJztcclxuZXhwb3J0ICogZnJvbSAnLi9jYW52YXMnO1xyXG5leHBvcnQgKiBmcm9tICcuL2J1dHRvbic7XHJcbmV4cG9ydCAqIGZyb20gJy4vbGFiZWwnO1xyXG5leHBvcnQgKiBmcm9tICcuL3RleHQtZmllbGQnO1xyXG5leHBvcnQgKiBmcm9tICcuL3RleHRhcmVhLWZpZWxkJztcclxuZXhwb3J0ICogZnJvbSAnLi90cmVlJztcclxuZXhwb3J0ICogZnJvbSAnLi90cmVlLWl0ZW0nO1xyXG5leHBvcnQgKiBmcm9tICcuL2xpc3QnO1xyXG5leHBvcnQgKiBmcm9tICcuL2xpc3QtaXRlbSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vY2hlY2tib3gnO1xyXG5leHBvcnQgKiBmcm9tICcuL2J1YmJsZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vb3ZlcmxheSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vdG9vbHRpcCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vcHJvZ3Jlc3MnO1xyXG5leHBvcnQgKiBmcm9tICcuL21lbnUtaXRlbSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vbWVudSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vY29kZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vY29sb3ItZmllbGQnO1xyXG5leHBvcnQgKiBmcm9tICcuL2dyaWQtaXRlbSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vZ3JpZCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vaW1hZ2UtZmllbGQnO1xyXG5leHBvcnQgKiBmcm9tICcuL251bWJlci1maWVsZCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vc2xpZGVyJztcclxuZXhwb3J0ICogZnJvbSAnLi9zZWxlY3QtZmllbGQnOyIsImltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiLi9lbGVtZW50XCI7XHJcbmltcG9ydCB7IFRvb2x0aXAgfSBmcm9tIFwiLi90b29sdGlwXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTGFiZWwgZXh0ZW5kcyBFbGVtZW50IHtcclxuXHJcbiAgcHJpdmF0ZSBfdGV4dDogc3RyaW5nO1xyXG4gIHB1YmxpYyBnZXQgdGV4dCgpOiBzdHJpbmcge1xyXG4gICAgaWYgKHRoaXMuX2xpbmspIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2xpbmsuZ2V0KHRoaXMucGF0aCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5fdGV4dDtcclxuICAgIH1cclxuICB9XHJcbiAgcHVibGljIHNldCB0ZXh0KHZhbDogc3RyaW5nKSB7XHJcbiAgICBpZiAodGhpcy5fbGluaykge1xyXG4gICAgICAvLyBUT0RPIFxyXG4gICAgICB0aGlzLl9saW5rLnNldCh0aGlzLnBhdGgsIHZhbClcclxuICAgICAgdmFsID0gdGhpcy5fbGluay5nZXQodGhpcy5wYXRoKTtcclxuICAgICAgdGhpcy5fc2V0VGV4dCh2YWwpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKHRoaXMuX3RleHQgPT09IHZhbCkgcmV0dXJuO1xyXG5cclxuICAgICAgaWYgKHZhbCA9PT0gdW5kZWZpbmVkIHx8IHZhbCA9PT0gbnVsbCkge1xyXG4gICAgICAgIHRoaXMuX3RleHQgPSAnJztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLl90ZXh0ID0gdmFsO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLl9zZXRUZXh0KHRoaXMuX3RleHQpO1xyXG4gICAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHZhbCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBpZiB1bnNhZmUgaXMgdHJ1ZSB0aGVuIHVzZSBpbm5lckhUTUwgZm9yIHRoZVxyXG4gIC8vIGNvbnRlbnRzXHJcbiAgcHJpdmF0ZSBfdW5zYWZlOiBib29sZWFuO1xyXG5cclxuICBwdWJsaWMgZ2V0IHBsYWNlaG9sZGVyKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50IS5nZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJykgfHwgJyc7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgcGxhY2Vob2xkZXIodmFsOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuZWxlbWVudCEuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsIHZhbCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHZhbHVlKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy50ZXh0O1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHZhbHVlKHZhbDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLnRleHQgPSB2YWw7XHJcbiAgfVxyXG5cclxuXHJcbiAgcHVibGljIHRvb2x0aXAhOiBUb29sdGlwO1xyXG5cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKHRleHQ/OiBzdHJpbmcsIHBsYWNlaG9sZGVyPzogc3RyaW5nLCB1bnNhZmU/OiBib29sZWFuKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMuX3RleHQgPSB0ZXh0ID8gdGV4dCA6ICcnO1xyXG4gICAgdGhpcy5fdW5zYWZlID0gdW5zYWZlID8gdW5zYWZlIDogZmFsc2U7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3VpLWxhYmVsJyk7XHJcblxyXG4gICAgaWYgKHRoaXMuX3RleHQpXHJcbiAgICAgIHRoaXMuX3NldFRleHQodGhpcy5fdGV4dCk7XHJcblxyXG4gICAgdGhpcy5vbignY2hhbmdlJywgdGhpcy5fb25DaGFuZ2UpO1xyXG5cclxuICAgIGlmIChwbGFjZWhvbGRlcikge1xyXG4gICAgICB0aGlzLnBsYWNlaG9sZGVyID0gcGxhY2Vob2xkZXI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9zZXRUZXh0KHRleHQ6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX3Vuc2FmZSkge1xyXG4gICAgICB0aGlzLmVsZW1lbnQhLmlubmVySFRNTCA9IHRleHQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmVsZW1lbnQhLnRleHRDb250ZW50ID0gdGV4dDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uQ2hhbmdlKCk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLnJlbmRlckNoYW5nZXMpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLmZsYXNoKCk7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIF9vbkxpbmtDaGFuZ2UodmFsdWU6IGFueSkge1xyXG4gICAgdGhpcy50ZXh0ID0gdmFsdWU7XHJcbiAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHZhbHVlKTtcclxuICB9O1xyXG5cclxuXHJcblxyXG59IiwiaW1wb3J0IHsgRWxlbWVudCB9IGZyb20gJy4uL3VpJztcclxuaW1wb3J0IHsgRXZlbnRIYW5kbGUgfSBmcm9tICcuLi9saWInO1xyXG5cclxuLy8gVE9ET1xyXG5leHBvcnQgY2xhc3MgTGluayB7XHJcblxyXG4gIHByaXZhdGUgX2VsZW1lbnQ6IEVsZW1lbnQ7XHJcblxyXG4gIHByaXZhdGUgX3ZhbHVlOiB7IFtrZXk6IHN0cmluZ106IGFueSB9ID0ge307XHJcblxyXG4gIHB1YmxpYyBoaXN0b3J5OiBhbnk7XHJcblxyXG4gIHB1YmxpYyBzY2hlbWEhOiBMaW5rU2NoZW1hO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoZWxlOiBFbGVtZW50KSB7XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gZWxlO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldChwYXRoOiBzdHJpbmcpOiBhbnkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlW3BhdGhdO1xyXG4gIH1cclxuXHJcbiAgLy8gVE9ET1xyXG4gIHB1YmxpYyBzZXQocGF0aDogc3RyaW5nLCB2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICB0aGlzLl92YWx1ZVtwYXRoXSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb24obmFtZTogc3RyaW5nLCBmbjogRnVuY3Rpb24pOiBFdmVudEhhbmRsZSB7XHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudC5vbihuYW1lLCBmbik7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIExpbmtTY2hlbWEge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gIH1cclxuXHJcbiAgcHVibGljIGhhcyhwYXRoOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldChwYXRoOiBzdHJpbmcpOiBhbnkge1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxufSIsImltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiLi9lbGVtZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTGlzdEl0ZW0gZXh0ZW5kcyBFbGVtZW50IHtcclxuXHJcbiAgcHJpdmF0ZSBfdGV4dDogc3RyaW5nO1xyXG4gIHB1YmxpYyBnZXQgdGV4dCgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuX3RleHQ7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgdGV4dCh2YWw6IHN0cmluZykge1xyXG4gICAgaWYgKHRoaXMuX3RleHQgPT09IHZhbCkgcmV0dXJuO1xyXG4gICAgdGhpcy5fdGV4dCA9IHZhbDtcclxuICAgIHRoaXMuZWxlbWVudFRleHQudGV4dENvbnRlbnQgPSB0aGlzLl90ZXh0O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfc2VsZWN0ZWQ6IGJvb2xlYW47XHJcbiAgcHVibGljIGdldCBzZWxlY3RlZCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZDtcclxuICB9XHJcbiAgcHVibGljIHNldCBzZWxlY3RlZCh2YWw6IGJvb2xlYW4pIHtcclxuICAgIGlmICh0aGlzLl9zZWxlY3RlZCA9PT0gdmFsKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5fc2VsZWN0ZWQgPSB2YWw7XHJcblxyXG4gICAgaWYgKHRoaXMuX3NlbGVjdGVkKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LmFkZCgnc2VsZWN0ZWQnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQnKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmVtaXQodGhpcy5zZWxlY3RlZCA/ICdzZWxlY3QnIDogJ2Rlc2VsZWN0Jyk7XHJcblxyXG4gICAgaWYgKHRoaXMucGFyZW50KVxyXG4gICAgICB0aGlzLnBhcmVudC5lbWl0KHRoaXMuc2VsZWN0ZWQgPyAnc2VsZWN0JyA6ICdkZXNlbGVjdCcsIHRoaXMpO1xyXG5cclxuICAgIHRoaXMuZW1pdCgnY2hhbmdlJywgdGhpcy5zZWxlY3RlZCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9hbGxvd0Rlc2VsZWN0OiBib29sZWFuO1xyXG5cclxuICBwdWJsaWMgZWxlbWVudFRleHQ6IEhUTUxFbGVtZW50O1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IodGV4dD86IHN0cmluZywgc2VsZWN0ZWQ/OiBib29sZWFuLCBhbGxvd0Rlc2VsZWN0PzogYm9vbGVhbikge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLl90ZXh0ID0gdGV4dCB8fCAnJztcclxuICAgIHRoaXMuX3NlbGVjdGVkID0gc2VsZWN0ZWQgfHwgZmFsc2U7XHJcbiAgICB0aGlzLl9hbGxvd0Rlc2VsZWN0ID0gYWxsb3dEZXNlbGVjdCB8fCBmYWxzZTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3VpLWxpc3QtaXRlbScpO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudFRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICB0aGlzLmVsZW1lbnRUZXh0LnRleHRDb250ZW50ID0gdGhpcy5fdGV4dDtcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnRUZXh0KTtcclxuXHJcbiAgICB0aGlzLm9uKCdjbGljaycsIHRoaXMuX29uQ2xpY2spO1xyXG4gIH1cclxuXHJcblxyXG4gIHByaXZhdGUgX29uQ2xpY2soKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuc2VsZWN0ZWQpIHtcclxuICAgICAgdGhpcy5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2FsbG93RGVzZWxlY3QpIHtcclxuICAgICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG5cclxufSIsImltcG9ydCB7IENvbnRhaW5lckVsZW1lbnQgfSBmcm9tIFwiLi9jb250YWluZXItZWxlbWVudFwiO1xyXG5pbXBvcnQgeyBMaXN0SXRlbSB9IGZyb20gXCIuL2xpc3QtaXRlbVwiO1xyXG5pbXBvcnQgeyBIb3RrZXlzIH0gZnJvbSBcIi4uL2VkaXRvclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIExpc3QgZXh0ZW5kcyBDb250YWluZXJFbGVtZW50IHtcclxuXHJcblxyXG4gIHByaXZhdGUgX3NlbGVjdGFibGU6IGJvb2xlYW47XHJcbiAgcHVibGljIGdldCBzZWxlY3RhYmxlKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX3NlbGVjdGFibGU7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgc2VsZWN0YWJsZSh2YWw6IGJvb2xlYW4pIHtcclxuICAgIGlmICh0aGlzLl9zZWxlY3RhYmxlID09PSAhIXZhbClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX3NlbGVjdGFibGUgPSB2YWw7XHJcblxyXG4gICAgaWYgKHRoaXMuX3NlbGVjdGFibGUpIHtcclxuICAgICAgdGhpcy5jbGFzcyEuYWRkKCdzZWxlY3RhYmxlJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmNsYXNzIS5yZW1vdmUoJ3NlbGVjdGFibGUnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBfY2hhbmdpbmc6IGJvb2xlYW47XHJcblxyXG4gIHByaXZhdGUgX3NlbGVjdGVkOiBMaXN0SXRlbVtdO1xyXG4gIHB1YmxpYyBnZXQgc2VsZWN0ZWQoKTogTGlzdEl0ZW1bXSB7XHJcbiAgICByZXR1cm4gdGhpcy5fc2VsZWN0ZWQuc2xpY2UoMCk7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgc2VsZWN0ZWQodmFsOiBMaXN0SXRlbVtdKSB7XHJcbiAgICB0aGlzLl9jaGFuZ2luZyA9IHRydWU7XHJcblxyXG4gICAgLy8gZGVzZWxlY3RpbmdcclxuICAgIGxldCBpdGVtczogTGlzdEl0ZW1bXSA9IHRoaXMuc2VsZWN0ZWQ7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGlmICh2YWwuaW5kZXhPZihpdGVtc1tpXSkgIT09IC0xKVxyXG4gICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgaXRlbXNbaV0uc2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBzZWxlY3RpbmdcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHZhbFtpXS5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fY2hhbmdpbmcgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihzZWxlY3RhYmxlPzogYm9vbGVhbikge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xyXG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3VpLWxpc3QnKTtcclxuXHJcbiAgICB0aGlzLl9zZWxlY3RhYmxlID0gc2VsZWN0YWJsZSB8fCB0cnVlO1xyXG5cclxuICAgIHRoaXMuX2NoYW5naW5nID0gZmFsc2U7XHJcbiAgICB0aGlzLl9zZWxlY3RlZCA9IFtdO1xyXG5cclxuICAgIHRoaXMub24oJ3NlbGVjdCcsIHRoaXMuX29uU2VsZWN0KTtcclxuICAgIHRoaXMub24oJ2Rlc2VsZWN0JywgdGhpcy5fb25EZXNlbGVjdCk7XHJcbiAgICB0aGlzLm9uKCdhcHBlbmQnLCB0aGlzLl9vbkFwcGVuZCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vblNlbGVjdChpdGVtOiBMaXN0SXRlbSk6IHZvaWQge1xyXG4gICAgbGV0IGluZDogbnVtYmVyID0gdGhpcy5fc2VsZWN0ZWQuaW5kZXhPZihpdGVtKTtcclxuICAgIGlmIChpbmQgPT09IC0xKVxyXG4gICAgICB0aGlzLl9zZWxlY3RlZC5wdXNoKGl0ZW0pO1xyXG5cclxuICAgIGlmICh0aGlzLl9jaGFuZ2luZylcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmIChMaXN0Ll9jdHJsICYmIExpc3QuX2N0cmwoKSkge1xyXG5cclxuICAgIH0gZWxzZSBpZiAoTGlzdC5fc2hpZnQgJiYgTGlzdC5fc2hpZnQoKSAmJiB0aGlzLnNlbGVjdGVkLmxlbmd0aCkge1xyXG5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2NoYW5naW5nID0gdHJ1ZTtcclxuXHJcbiAgICAgIGxldCBpdGVtczogTGlzdEl0ZW1bXSA9IHRoaXMuc2VsZWN0ZWQ7XHJcblxyXG4gICAgICBpZiAoaXRlbXMubGVuZ3RoID4gMSkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGlmIChpdGVtc1tpXSA9PT0gaXRlbSlcclxuICAgICAgICAgICAgY29udGludWU7XHJcblxyXG4gICAgICAgICAgaXRlbXNbaV0uc2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuX2NoYW5naW5nID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5lbWl0KCdjaGFuZ2UnKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBfb25EZXNlbGVjdChpdGVtOiBMaXN0SXRlbSk6IHZvaWQge1xyXG4gICAgbGV0IGluZDogbnVtYmVyID0gdGhpcy5fc2VsZWN0ZWQuaW5kZXhPZihpdGVtKTtcclxuICAgIGlmIChpbmQgIT09IC0xKSB0aGlzLl9zZWxlY3RlZC5zcGxpY2UoaW5kLCAxKTtcclxuXHJcbiAgICBpZiAodGhpcy5fY2hhbmdpbmcpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBpZiAoTGlzdC5fY3RybCAmJiBMaXN0Ll9jdHJsKCkpIHtcclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9jaGFuZ2luZyA9IHRydWU7XHJcblxyXG4gICAgICBsZXQgaXRlbXM6IExpc3RJdGVtW10gPSB0aGlzLnNlbGVjdGVkO1xyXG5cclxuICAgICAgaWYgKGl0ZW1zLmxlbmd0aCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgICBpdGVtc1tpXS5zZWxlY3RlZCA9IGZhbHNlO1xyXG5cclxuICAgICAgICBpdGVtLnNlbGVjdGVkID0gdHJ1ZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5fY2hhbmdpbmcgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmVtaXQoJ2NoYW5nZScpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25BcHBlbmQoaXRlbTogTGlzdEl0ZW0pOiB2b2lkIHtcclxuICAgIGlmICghaXRlbS5zZWxlY3RlZClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGxldCBpbmQgPSB0aGlzLl9zZWxlY3RlZC5pbmRleE9mKGl0ZW0pO1xyXG4gICAgaWYgKGluZCA9PT0gLTEpIHRoaXMuX3NlbGVjdGVkLnB1c2goaXRlbSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY2xlYXIoKTogdm9pZCB7XHJcbiAgICB0aGlzLl9zZWxlY3RlZCA9IFtdO1xyXG4gICAgQ29udGFpbmVyRWxlbWVudC5wcm90b3R5cGUuY2xlYXIuY2FsbCh0aGlzKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgX2N0cmwoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gSG90a2V5cy5jdHJsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHN0YXRpYyBfc2hpZnQoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gSG90a2V5cy5zaGlmdDtcclxuICB9XHJcblxyXG59IiwiaW1wb3J0IHsgQ29udGFpbmVyRWxlbWVudCB9IGZyb20gJy4vY29udGFpbmVyLWVsZW1lbnQnO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1lbnVJdGVtIGV4dGVuZHMgQ29udGFpbmVyRWxlbWVudCB7XHJcblxyXG5cclxuICBwcml2YXRlIF9oYXNDaGlsZHJlbjogYm9vbGVhbjtcclxuICBwcml2YXRlIF9jbGlja2FibGVTdWJtZW51czogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIHByaXZhdGUgX2NvbnRhaW5lcjogYm9vbGVhbjtcclxuXHJcbiAgcHVibGljIF9pbmRleDogeyBba2V5OiBzdHJpbmddOiBNZW51SXRlbSB9ID0ge307XHJcblxyXG4gIHB1YmxpYyBlbGVtZW50VGl0bGU6IEhUTUxFbGVtZW50O1xyXG4gIHB1YmxpYyBlbGVtZW50SWNvbjogTnVsbGFibGU8SFRNTEVsZW1lbnQ+O1xyXG4gIHB1YmxpYyBlbGVtZW50VGV4dDogSFRNTEVsZW1lbnQ7XHJcblxyXG4gIHByaXZhdGUgX3ZhbHVlOiBzdHJpbmc7XHJcbiAgcHVibGljIGdldCB2YWx1ZSgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHZhbHVlKHZhbDogc3RyaW5nKSB7XHJcbiAgICBpZiAodGhpcy5fdmFsdWUgPT09IHZhbClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGxldCB2YWx1ZU9sZCA9IHRoaXMuX3ZhbHVlO1xyXG4gICAgdGhpcy5fdmFsdWUgPSB2YWw7XHJcbiAgICB0aGlzLmVtaXQoJ3ZhbHVlJywgdmFsLCB2YWx1ZU9sZCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHRleHQoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnRUZXh0LnRleHRDb250ZW50IHx8ICcnO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHRleHQodmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICh0aGlzLmVsZW1lbnRUZXh0LnRleHRDb250ZW50ID09PSB2YWwpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRUZXh0LnRleHRDb250ZW50ID0gdmFsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBpY29uKCk6IHN0cmluZyB7XHJcbiAgICBpZiAodGhpcy5lbGVtZW50SWNvbiAhPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5lbGVtZW50SWNvbi50ZXh0Q29udGVudCB8fCAnJztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICB9XHJcbiAgcHVibGljIHNldCBpY29uKHZhbDogc3RyaW5nKSB7XHJcbiAgICBpZiAoKCF2YWwgJiYgIXRoaXMuZWxlbWVudEljb24pIHx8ICh0aGlzLmVsZW1lbnRJY29uICYmIHRoaXMuZWxlbWVudEljb24udGV4dENvbnRlbnQgPT09IHZhbCkpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBpZiAoIXZhbCkge1xyXG4gICAgICBpZiAodGhpcy5lbGVtZW50SWNvbiAmJiB0aGlzLmVsZW1lbnRJY29uLnBhcmVudE5vZGUpXHJcbiAgICAgICAgdGhpcy5lbGVtZW50SWNvbi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuZWxlbWVudEljb24pO1xyXG4gICAgICB0aGlzLmVsZW1lbnRJY29uID0gbnVsbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmICghdGhpcy5lbGVtZW50SWNvbikge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudEljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50SWNvbi5jbGFzc0xpc3QuYWRkKCdpY29uJyk7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50VGl0bGUuaW5zZXJ0QmVmb3JlKHRoaXMuZWxlbWVudEljb24sIHRoaXMuZWxlbWVudFRleHQpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLmVsZW1lbnRJY29uLmlubmVySFRNTCA9IHZhbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihhcmdzPzogTWVudUl0ZW1BcmdzKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIGFyZ3MgPSBhcmdzIHx8IHt9O1xyXG4gICAgdGhpcy5fdmFsdWUgPSBhcmdzLnZhbHVlIHx8ICcnO1xyXG4gICAgdGhpcy5faGFzQ2hpbGRyZW4gPSBhcmdzLmhhc0NoaWxkcmVuIHx8IGZhbHNlO1xyXG4gICAgdGhpcy5fY2xpY2thYmxlU3VibWVudXMgPSBhcmdzLmNsaWNrYWJsZVN1Ym1lbnVzIHx8IGZhbHNlO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3VpLW1lbnUtaXRlbScpO1xyXG5cclxuICAgIGlmIChhcmdzLmNsYXNzTmFtZSkge1xyXG4gICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZChhcmdzLmNsYXNzTmFtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5lbGVtZW50VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLmNsYXNzTGlzdC5hZGQoJ3RpdGxlJyk7XHJcbiAgICB0aGlzLmVsZW1lbnRUaXRsZS51aSA9IHRoaXM7XHJcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50VGl0bGUpO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudEljb24gPSBudWxsO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudFRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICB0aGlzLmVsZW1lbnRUZXh0LmNsYXNzTGlzdC5hZGQoJ3RleHQnKTtcclxuICAgIHRoaXMuZWxlbWVudFRleHQudGV4dENvbnRlbnQgPSBhcmdzLnRleHQgfHwgJ1VudGl0bGVkJztcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudFRleHQpO1xyXG5cclxuICAgIHRoaXMuaW5uZXJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmlubmVyRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdjb250ZW50Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5pbm5lckVsZW1lbnQpO1xyXG5cclxuICAgIHRoaXMuX2luZGV4ID0ge307XHJcblxyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZmFsc2U7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50VGl0bGUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsIHRoaXMuX29uTW91c2VFbnRlci5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB0aGlzLmVsZW1lbnRUaXRsZS5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy5fb25Ub3VjaFN0YXJ0LCBmYWxzZSk7XHJcbiAgICB0aGlzLmVsZW1lbnRUaXRsZS5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuX29uVG91Y2hFbmQsIGZhbHNlKTtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fb25DbGljay5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcblxyXG4gICAgdGhpcy5vbignb3ZlcicsIHRoaXMuX29uT3Zlci5iaW5kKHRoaXMpKTtcclxuICAgIHRoaXMub24oJ3NlbGVjdC1wcm9wYWdhdGUnLCB0aGlzLl9vblNlbGVjdFByb3BhZ2F0ZS5iaW5kKHRoaXMpKTtcclxuICAgIHRoaXMub24oJ2FwcGVuZCcsIHRoaXMuX29uQXBwZW5kLmJpbmQodGhpcykpO1xyXG5cclxuICAgIGlmIChhcmdzLmljb24pXHJcbiAgICAgIHRoaXMuaWNvbiA9IGFyZ3MuaWNvbjtcclxuXHJcbiAgfVxyXG5cclxuXHJcbiAgcHJpdmF0ZSBfb25Nb3VzZUVudGVyKGV2dDogTW91c2VFdmVudCk6IHZvaWQge1xyXG4gICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgbGV0IGh0bWxFbGU6IEhUTUxFbGVtZW50ID0gPEhUTUxFbGVtZW50PmV2dC50YXJnZXQ7XHJcbiAgICAoPE1lbnVJdGVtPihodG1sRWxlLnVpKSkucGFyZW50IS5lbWl0KCdvdmVyJywgW3RoaXMuX3ZhbHVlXSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vblRvdWNoU3RhcnQoZXZ0OiBUb3VjaEV2ZW50KTogdm9pZCB7XHJcbiAgICBsZXQgaXRlbTogTWVudUl0ZW0gPSAoPE1lbnVJdGVtPig8SFRNTEVsZW1lbnQ+ZXZ0LnRhcmdldCkudWkpO1xyXG5cclxuICAgIGlmICghaXRlbS5wYXJlbnQgfHwgaXRlbS5kaXNhYmxlZClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmICghaXRlbS5fY29udGFpbmVyIHx8IGl0ZW0uY2xhc3MhLmNvbnRhaW5zKCdob3ZlcicpKSB7XHJcbiAgICAgIGl0ZW0uZW1pdCgnc2VsZWN0JywgaXRlbS5fdmFsdWUsIGl0ZW0uX2hhc0NoaWxkcmVuKTtcclxuICAgICAgaXRlbS5wYXJlbnQuZW1pdCgnc2VsZWN0LXByb3BhZ2F0ZScsIFtpdGVtLl92YWx1ZV0sIGl0ZW0uX2hhc0NoaWxkcmVuKTtcclxuICAgICAgaXRlbS5jbGFzcyEucmVtb3ZlKCdob3ZlcicpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaXRlbS5wYXJlbnQuZW1pdCgnb3ZlcicsIFtpdGVtLl92YWx1ZV0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25Ub3VjaEVuZChldnQ6IFRvdWNoRXZlbnQpOiB2b2lkIHtcclxuICAgIGxldCBpdGVtOiBNZW51SXRlbSA9ICg8TWVudUl0ZW0+KDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0KS51aSk7XHJcblxyXG4gICAgaWYgKCFpdGVtLnBhcmVudCB8fCBpdGVtLmRpc2FibGVkKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbkNsaWNrKCk6IHZvaWQge1xyXG5cclxuICAgIGlmICghdGhpcy5wYXJlbnQgfHwgdGhpcy5kaXNhYmxlZClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuZW1pdCgnc2VsZWN0JywgdGhpcy5fdmFsdWUsIHRoaXMuX2hhc0NoaWxkcmVuKTtcclxuICAgIHRoaXMucGFyZW50LmVtaXQoJ3NlbGVjdC1wcm9wYWdhdGUnLCBbdGhpcy5fdmFsdWVdLCB0aGlzLl9oYXNDaGlsZHJlbik7XHJcblxyXG4gICAgaWYgKCF0aGlzLl9jbGlja2FibGVTdWJtZW51cyB8fCAhdGhpcy5faGFzQ2hpbGRyZW4pIHtcclxuICAgICAgdGhpcy5jbGFzcyEucmVtb3ZlKCdob3ZlcicpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25PdmVyKHBhdGg6IHN0cmluZ1tdKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMucGFyZW50KVxyXG4gICAgICByZXR1cm47XHJcbiAgICBwYXRoLnNwbGljZSgwLCAwLCB0aGlzLl92YWx1ZSk7XHJcbiAgICB0aGlzLnBhcmVudC5lbWl0KCdvdmVyJywgcGF0aCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vblNlbGVjdFByb3BhZ2F0ZShwYXRoOiBzdHJpbmdbXSwgc2VsZWN0ZWRJdGVtSGFzQ2hpbGRyZW46IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5wYXJlbnQpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBwYXRoLnNwbGljZSgwLCAwLCB0aGlzLl92YWx1ZSk7XHJcbiAgICB0aGlzLnBhcmVudC5lbWl0KCdzZWxlY3QtcHJvcGFnYXRlJywgcGF0aCwgc2VsZWN0ZWRJdGVtSGFzQ2hpbGRyZW4pO1xyXG5cclxuICAgIGlmICghdGhpcy5fY2xpY2thYmxlU3VibWVudXMgfHwgIXNlbGVjdGVkSXRlbUhhc0NoaWxkcmVuKSB7XHJcbiAgICAgIHRoaXMuY2xhc3MhLnJlbW92ZSgnaG92ZXInKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uQXBwZW5kKGl0ZW06IE1lbnVJdGVtKSB7XHJcbiAgICBsZXQgc2VsZiA9IHRoaXM7XHJcblxyXG4gICAgdGhpcy5fY29udGFpbmVyID0gdHJ1ZTtcclxuICAgIHRoaXMuY2xhc3MhLmFkZCgnY29udGFpbmVyJyk7XHJcblxyXG4gICAgdGhpcy5faW5kZXhbaXRlbS52YWx1ZV0gPSBpdGVtO1xyXG5cclxuICAgIGl0ZW0ub24oJ3ZhbHVlJywgZnVuY3Rpb24gKHZhbHVlOiBzdHJpbmcsIHZhbHVlT2xkOiBzdHJpbmcpIHtcclxuICAgICAgZGVsZXRlIHNlbGYuX2luZGV4W3ZhbHVlT2xkXTtcclxuICAgICAgc2VsZi5faW5kZXhbdmFsdWVdID0gaXRlbTtcclxuICAgIH0pO1xyXG4gICAgaXRlbS5vbmNlKCdkZXN0cm95JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICBkZWxldGUgc2VsZi5faW5kZXhbaXRlbS52YWx1ZV07XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBNZW51SXRlbUFyZ3Mge1xyXG4gIHRleHQ/OiBzdHJpbmc7XHJcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xyXG4gIHZhbHVlPzogc3RyaW5nO1xyXG4gIGljb24/OiBzdHJpbmc7XHJcbiAgaGFzQ2hpbGRyZW4/OiBib29sZWFuO1xyXG4gIGNsaWNrYWJsZVN1Ym1lbnVzPzogYm9vbGVhbjtcclxufSIsImltcG9ydCB7IENvbnRhaW5lckVsZW1lbnQgfSBmcm9tIFwiLi9jb250YWluZXItZWxlbWVudFwiO1xyXG5pbXBvcnQgeyBNZW51SXRlbSB9IGZyb20gXCIuL21lbnUtaXRlbVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1lbnUgZXh0ZW5kcyBDb250YWluZXJFbGVtZW50IHtcclxuXHJcblxyXG4gIHB1YmxpYyBlbGVtZW50T3ZlcmxheTogSFRNTEVsZW1lbnQ7XHJcbiAgcHJpdmF0ZSBfY2xpY2thYmxlU3VibWVudXM6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBwcml2YXRlIF9ob3ZlcmVkOiBNZW51SXRlbVtdID0gW107XHJcbiAgcHVibGljIF9pbmRleDogeyBba2V5OiBzdHJpbmddOiBNZW51SXRlbSB9ID0ge307XHJcblxyXG5cclxuICBwdWJsaWMgZ2V0IG9wZW4oKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5jbGFzcyEuY29udGFpbnMoJ29wZW4nKTtcclxuICB9XHJcbiAgcHVibGljIHNldCBvcGVuKHZhbDogYm9vbGVhbikge1xyXG4gICAgaWYgKHRoaXMuY2xhc3MhLmNvbnRhaW5zKCdvcGVuJykgPT09ICEhdmFsKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgaWYgKHZhbCkge1xyXG4gICAgICB0aGlzLmNsYXNzIS5hZGQoJ29wZW4nKTtcclxuICAgICAgdGhpcy5lbGVtZW50IS5mb2N1cygpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5jbGFzcyEucmVtb3ZlKCdvcGVuJyk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5lbWl0KCdvcGVuJywgISF2YWwpO1xyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihhcmdzPzogYW55KSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIGFyZ3MgPSBhcmdzIHx8IHt9O1xyXG5cclxuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50LnRhYkluZGV4ID0gMTtcclxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1aS1tZW51Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX29uS2V5RG93bi5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50T3ZlcmxheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50T3ZlcmxheS51aSA9IHRoaXM7XHJcbiAgICB0aGlzLmVsZW1lbnRPdmVybGF5LmNsYXNzTGlzdC5hZGQoJ292ZXJsYXknKTtcclxuICAgIHRoaXMuZWxlbWVudE92ZXJsYXkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9vbkNsaWNrLmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgIHRoaXMuZWxlbWVudE92ZXJsYXkuYWRkRXZlbnRMaXN0ZW5lcignY29udGV4dG1lbnUnLCB0aGlzLl9vbkNvbnRleHRNZW51LmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnRPdmVybGF5KTtcclxuXHJcbiAgICB0aGlzLmlubmVyRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5pbm5lckVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnaW5uZXInKTtcclxuICAgIHRoaXMuZWxlbWVudE92ZXJsYXkuYXBwZW5kQ2hpbGQodGhpcy5pbm5lckVsZW1lbnQpO1xyXG5cclxuICAgIC8vIHRoaXMuX2luZGV4ID0geyB9O1xyXG4gICAgLy8gdGhpcy5faG92ZXJlZCA9IFsgXTtcclxuICAgIHRoaXMuX2NsaWNrYWJsZVN1Ym1lbnVzID0gYXJncy5jbGlja2FibGVTdWJtZW51cztcclxuXHJcbiAgICB0aGlzLm9uKCdzZWxlY3QtcHJvcGFnYXRlJywgdGhpcy5fb25TZWxlY3RQcm9wYWdhdGUuYmluZCh0aGlzKSk7XHJcbiAgICB0aGlzLm9uKCdhcHBlbmQnLCB0aGlzLl9vbkFwcGVuZC5iaW5kKHRoaXMpKTtcclxuICAgIHRoaXMub24oJ292ZXInLCB0aGlzLl9vbk92ZXIuYmluZCh0aGlzKSk7XHJcbiAgICB0aGlzLm9uKCdvcGVuJywgdGhpcy5fb25PcGVuLmJpbmQodGhpcykpO1xyXG5cclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uQ2xpY2soKTogdm9pZCB7XHJcbiAgICB0aGlzLm9wZW4gPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uQ29udGV4dE1lbnUoKTogdm9pZCB7XHJcbiAgICB0aGlzLm9wZW4gPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uS2V5RG93bihldnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLm9wZW4gJiYgZXZ0LmtleUNvZGUgPT09IDI3KVxyXG4gICAgICB0aGlzLm9wZW4gPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uQXBwZW5kKGl0ZW06IE1lbnVJdGVtKSB7XHJcbiAgICBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICB0aGlzLl9pbmRleFtpdGVtLnZhbHVlXSA9IGl0ZW07XHJcblxyXG4gICAgaXRlbS5vbigndmFsdWUnLCBmdW5jdGlvbiAodmFsdWU6IHN0cmluZywgdmFsdWVPbGQ6IHN0cmluZykge1xyXG4gICAgICBkZWxldGUgc2VsZi5faW5kZXhbdmFsdWVPbGRdO1xyXG4gICAgICBzZWxmLl9pbmRleFt2YWx1ZV0gPSBpdGVtO1xyXG4gICAgfSk7XHJcbiAgICBpdGVtLm9uY2UoJ2Rlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGRlbGV0ZSBzZWxmLl9pbmRleFtpdGVtLnZhbHVlXTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25PdmVyKHBhdGg6IHN0cmluZ1tdKTogdm9pZCB7XHJcbiAgICB0aGlzLl91cGRhdGVQYXRoKHBhdGgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25PcGVuKHN0YXRlOiBib29sZWFuKTogdm9pZCB7XHJcbiAgICBpZiAoc3RhdGUpIHJldHVybjtcclxuICAgIHRoaXMuX3VwZGF0ZVBhdGgoW10pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25TZWxlY3RQcm9wYWdhdGUocGF0aDogc3RyaW5nW10sIHNlbGVjdGVkSXRlbUhhc0NoaWxkcmVuOiBib29sZWFuKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5fY2xpY2thYmxlU3VibWVudXMgJiYgc2VsZWN0ZWRJdGVtSGFzQ2hpbGRyZW4pIHtcclxuICAgICAgdGhpcy5fdXBkYXRlUGF0aChwYXRoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMub3BlbiA9IGZhbHNlO1xyXG4gICAgICB0aGlzLmVtaXQocGF0aC5qb2luKCcuJykgKyAnOnNlbGVjdCcsIHBhdGgpO1xyXG4gICAgICB0aGlzLmVtaXQoJ3NlbGVjdCcsIHBhdGgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGZpbmRCeVBhdGgocGF0aDogc3RyaW5nW10gfCBzdHJpbmcpOiBOdWxsYWJsZTxNZW51SXRlbT4ge1xyXG4gICAgaWYgKCEocGF0aCBpbnN0YW5jZW9mIEFycmF5KSlcclxuICAgICAgcGF0aCA9IHBhdGguc3BsaXQoJy4nKTtcclxuXHJcbiAgICBsZXQgaXRlbTogTnVsbGFibGU8TWVudUl0ZW0+ID0gbnVsbDtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcclxuICAgICAgaWYgKGkgPT09IDApIHtcclxuICAgICAgICBpdGVtID0gdGhpcy5faW5kZXhbcGF0aFtpXV07XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaXRlbSA9IGl0ZW0hLl9pbmRleFtwYXRoW2ldXTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoIWl0ZW0pXHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGl0ZW07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF91cGRhdGVQYXRoKHBhdGg6IHN0cmluZ1tdKTogdm9pZCB7XHJcbiAgICBsZXQgbm9kZTogTnVsbGFibGU8TWVudUl0ZW0+O1xyXG5cclxuICAgIC8vIOaKiuS5i+WJjWhvdmVy55qE5Y+W5raIXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2hvdmVyZWQubGVuZ3RoOyBpKyspIHtcclxuICAgICAgbm9kZSA9IHRoaXMuX2hvdmVyZWRbaV07XHJcbiAgICAgIGlmICghbm9kZSkgY29udGludWU7XHJcbiAgICAgIC8vIGlmIChwYXRoLmxlbmd0aCA8PSBpIHx8IHBhdGhbaV0gIT09IHRoaXMuX2hvdmVyZWRbaV0pIHtcclxuICAgICAgbm9kZS5jbGFzcyEucmVtb3ZlKCdob3ZlcicpO1xyXG4gICAgICBub2RlLmlubmVyRWxlbWVudCEuc3R5bGUudG9wID0gJyc7XHJcbiAgICAgIG5vZGUuaW5uZXJFbGVtZW50IS5zdHlsZS5sZWZ0ID0gJyc7XHJcbiAgICAgIG5vZGUuaW5uZXJFbGVtZW50IS5zdHlsZS5yaWdodCA9ICcnO1xyXG4gICAgICAvLyB9XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5faG92ZXJlZCA9IFtdO1xyXG4gICAgLy8gbm9kZSA9IHRoaXM7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIG5vZGUgPSB0aGlzLmZpbmRCeVBhdGgocGF0aC5zbGljZSgwLCBpICsgMSkpO1xyXG5cclxuICAgICAgaWYgKCFub2RlKVxyXG4gICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgdGhpcy5faG92ZXJlZC5wdXNoKG5vZGUpO1xyXG5cclxuICAgICAgbm9kZS5jbGFzcyEuYWRkKCdob3ZlcicpO1xyXG4gICAgICBub2RlLmlubmVyRWxlbWVudCEuc3R5bGUudG9wID0gJyc7XHJcbiAgICAgIG5vZGUuaW5uZXJFbGVtZW50IS5zdHlsZS5sZWZ0ID0gJyc7XHJcbiAgICAgIG5vZGUuaW5uZXJFbGVtZW50IS5zdHlsZS5yaWdodCA9ICcnO1xyXG5cclxuICAgICAgbGV0IHJlY3QgPSBub2RlLmlubmVyRWxlbWVudCEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblxyXG4gICAgICAvLyBsaW1pdCB0byBib3R0b20gLyB0b3Agb2Ygc2NyZWVuXHJcbiAgICAgIGlmIChyZWN0LmJvdHRvbSA+IHdpbmRvdy5pbm5lckhlaWdodCkge1xyXG4gICAgICAgIG5vZGUuaW5uZXJFbGVtZW50IS5zdHlsZS50b3AgPSAtKHJlY3QuYm90dG9tIC0gd2luZG93LmlubmVySGVpZ2h0KSArICdweCc7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHJlY3QucmlnaHQgPiB3aW5kb3cuaW5uZXJXaWR0aCkge1xyXG4gICAgICAgIG5vZGUuaW5uZXJFbGVtZW50IS5zdHlsZS5sZWZ0ID0gJ2F1dG8nO1xyXG4gICAgICAgIC8vIFRPRE9cclxuICAgICAgICBub2RlLmlubmVyRWxlbWVudCEuc3R5bGUucmlnaHQgPSAobm9kZS5wYXJlbnQhLmVsZW1lbnQhLmNsaWVudFdpZHRoKSArICdweCc7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgcG9zaXRpb24oeDogbnVtYmVyLCB5OiBudW1iZXIpOiB2b2lkIHtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgdGhpcy5pbm5lckVsZW1lbnQhLnN0eWxlLndpZHRoID0gJzE1OHB4JztcclxuICAgIGxldCByZWN0ID0gdGhpcy5pbm5lckVsZW1lbnQhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgbGV0IGxlZnQgPSAoeCB8fCAwKTtcclxuICAgIGxldCB0b3AgPSAoeSB8fCAwKTtcclxuXHJcbiAgICAvLyBsaW1pdCB0byBib3R0b20gLyB0b3Agb2Ygc2NyZWVuXHJcbiAgICBpZiAodG9wICsgcmVjdC5oZWlnaHQgPiB3aW5kb3cuaW5uZXJIZWlnaHQpIHtcclxuICAgICAgdG9wID0gd2luZG93LmlubmVySGVpZ2h0IC0gcmVjdC5oZWlnaHQ7XHJcbiAgICB9IGVsc2UgaWYgKHRvcCA8IDApIHtcclxuICAgICAgdG9wID0gMDtcclxuICAgIH1cclxuICAgIGlmIChsZWZ0ICsgcmVjdC53aWR0aCA+IHdpbmRvdy5pbm5lcldpZHRoKSB7XHJcbiAgICAgIGxlZnQgPSB3aW5kb3cuaW5uZXJXaWR0aCAtIHJlY3Qud2lkdGg7XHJcbiAgICB9IGVsc2UgaWYgKGxlZnQgPCAwKSB7XHJcbiAgICAgIGxlZnQgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuaW5uZXJFbGVtZW50IS5zdHlsZS5sZWZ0ID0gbGVmdCArICdweCc7XHJcbiAgICB0aGlzLmlubmVyRWxlbWVudCEuc3R5bGUudG9wID0gdG9wICsgJ3B4JztcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLmRpc3BsYXkgPSAnJztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjcmVhdGVJdGVtKGtleTogc3RyaW5nLCBkYXRhOiBhbnkpOiBNZW51SXRlbSB7XHJcbiAgICBsZXQgaXRlbSA9IG5ldyBNZW51SXRlbSh7XHJcbiAgICAgIHRleHQ6IGRhdGEudGl0bGUgfHwga2V5LFxyXG4gICAgICBjbGFzc05hbWU6IGRhdGEuY2xhc3NOYW1lIHx8IG51bGwsXHJcbiAgICAgIHZhbHVlOiBrZXksXHJcbiAgICAgIGljb246IGRhdGEuaWNvbixcclxuICAgICAgaGFzQ2hpbGRyZW46ICEhKGRhdGEuaXRlbXMgJiYgT2JqZWN0LmtleXMoZGF0YS5pdGVtcykubGVuZ3RoID4gMCksXHJcbiAgICAgIGNsaWNrYWJsZVN1Ym1lbnVzOiB0aGlzLl9jbGlja2FibGVTdWJtZW51c1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKGRhdGEuc2VsZWN0KSB7XHJcbiAgICAgIGl0ZW0ub24oJ3NlbGVjdCcsIGRhdGEuc2VsZWN0KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGF0YS5maWx0ZXIpIHtcclxuICAgICAgdGhpcy5vbignb3BlbicsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpdGVtLmVuYWJsZWQgPSBkYXRhLmZpbHRlcigpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGF0YS5oaWRlKSB7XHJcbiAgICAgIHRoaXMub24oJ29wZW4nLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaXRlbS5oaWRkZW4gPSBkYXRhLmhpZGUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGl0ZW07XHJcbiAgfVxyXG5cclxuXHJcbiAgcHVibGljIHN0YXRpYyBmcm9tRGF0YShkYXRhOiBhbnksIGFyZ3M6IGFueSkge1xyXG4gICAgbGV0IG1lbnUgPSBuZXcgTWVudShhcmdzKTtcclxuXHJcbiAgICBsZXQgbGlzdEl0ZW1zID0gZnVuY3Rpb24gKGRhdGE6IGFueSwgcGFyZW50OiBDb250YWluZXJFbGVtZW50KTogdm9pZCB7XHJcbiAgICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7XHJcbiAgICAgICAgbGV0IGl0ZW0gPSBtZW51LmNyZWF0ZUl0ZW0oa2V5LCBkYXRhW2tleV0pO1xyXG4gICAgICAgIHBhcmVudC5hcHBlbmQoaXRlbSk7XHJcbiAgICAgICAgLy8gY29uc29sZS53YXJuKGl0ZW0ucGFyZW50KTtcclxuICAgICAgICBpZiAoZGF0YVtrZXldLml0ZW1zKVxyXG4gICAgICAgICAgbGlzdEl0ZW1zKGRhdGFba2V5XS5pdGVtcywgaXRlbSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgbGlzdEl0ZW1zKGRhdGEsIG1lbnUpO1xyXG5cclxuICAgIHJldHVybiBtZW51O1xyXG4gIH1cclxuXHJcbn0iLCJpbXBvcnQgeyBFbGVtZW50IH0gZnJvbSBcIi4vZWxlbWVudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE51bWJlckZpZWxkIGV4dGVuZHMgRWxlbWVudCB7XHJcblxyXG4gIHB1YmxpYyBwcmVjaXNpb246IE51bGxhYmxlPG51bWJlcj47XHJcbiAgcHVibGljIHN0ZXA6IE51bGxhYmxlPG51bWJlcj47XHJcbiAgcHVibGljIG1heDogTnVsbGFibGU8bnVtYmVyPjtcclxuICBwdWJsaWMgbWluOiBOdWxsYWJsZTxudW1iZXI+O1xyXG5cclxuICBwdWJsaWMgYWxsb3dOdWxsOiBib29sZWFuO1xyXG5cclxuICBwdWJsaWMgZWxlbWVudElucHV0OiBIVE1MSW5wdXRFbGVtZW50O1xyXG5cclxuICBwcml2YXRlIF9sYXN0VmFsdWU6IG51bWJlciA9IC0xO1xyXG5cclxuICBwdWJsaWMgYmx1ck9uRW50ZXI6IGJvb2xlYW47XHJcbiAgcHVibGljIHJlZm9jdXNhYmxlOiBib29sZWFuO1xyXG4gIHB1YmxpYyBfZHJhZ2dpbmc6IGJvb2xlYW47XHJcblxyXG4gIHByaXZhdGUgX2RyYWdEaWZmOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfZHJhZ1N0YXJ0OiBudW1iZXI7XHJcblxyXG4gIHB1YmxpYyBnZXQgdmFsdWUoKTogbnVtYmVyIHtcclxuICAgIGlmICh0aGlzLl9saW5rKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9saW5rLmdldCh0aGlzLnBhdGgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudElucHV0LnZhbHVlICE9PSAnJyA/IHBhcnNlRmxvYXQodGhpcy5lbGVtZW50SW5wdXQudmFsdWUpIDogLTE7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgdmFsdWUodmFsOiBudW1iZXIpIHtcclxuICAgIGlmICh0aGlzLl9saW5rKSB7XHJcbiAgICAgIGlmICghdGhpcy5fbGluay5zZXQodGhpcy5wYXRoLCB2YWwpKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50SW5wdXQudmFsdWUgPSB0aGlzLl9saW5rLmdldCh0aGlzLnBhdGgpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodmFsICE9PSBudWxsKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubWF4ICE9PSBudWxsICYmIHRoaXMubWF4IDwgdmFsKVxyXG4gICAgICAgICAgdmFsID0gdGhpcy5tYXg7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLm1pbiAhPT0gbnVsbCAmJiB0aGlzLm1pbiA+IHZhbClcclxuICAgICAgICAgIHZhbCA9IHRoaXMubWluO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YWwgPSAodmFsICE9PSBudWxsICYmIHZhbCAhPT0gdW5kZWZpbmVkICYmICh0aGlzLnByZWNpc2lvbiAhPT0gbnVsbCkgPyBwYXJzZUZsb2F0KHZhbC50b0ZpeGVkKHRoaXMucHJlY2lzaW9uKSkgOiB2YWwpO1xyXG4gICAgICBpZiAodmFsID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgdmFsID0gLTE7XHJcblxyXG4gICAgICBsZXQgZGlmZmVyZW50ID0gdGhpcy5fbGFzdFZhbHVlICE9PSB2YWw7XHJcblxyXG4gICAgICB0aGlzLl9sYXN0VmFsdWUgPSB2YWw7XHJcbiAgICAgIHRoaXMuZWxlbWVudElucHV0LnZhbHVlID0gdmFsLnRvU3RyaW5nKCk7XHJcblxyXG4gICAgICBpZiAoZGlmZmVyZW50KSB7XHJcbiAgICAgICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB2YWwpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHBsYWNlaG9sZGVyKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50IS5nZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJykgfHwgJyc7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgcGxhY2Vob2xkZXIodmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICghdmFsKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEucmVtb3ZlQXR0cmlidXRlKCdwbGFjZWhvbGRlcicpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgdmFsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgcHJveHkoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnQhLmdldEF0dHJpYnV0ZSgncHJveHknKSB8fCAnJztcclxuICB9XHJcbiAgcHVibGljIHNldCBwcm94eSh2YWw6IHN0cmluZykge1xyXG4gICAgaWYgKCF2YWwpIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5yZW1vdmVBdHRyaWJ1dGUoJ3Byb3h5Jyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmVsZW1lbnQhLnNldEF0dHJpYnV0ZSgncHJveHknLCB2YWwpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihhcmdzPzogTnVtYmVyRmllbGRBcmdzKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIGFyZ3MgPSBhcmdzIHx8IHt9O1xyXG5cclxuICAgIHRoaXMucHJlY2lzaW9uID0gKGFyZ3MucHJlY2lzaW9uICE9PSB1bmRlZmluZWQpID8gYXJncy5wcmVjaXNpb24gOiBudWxsO1xyXG4gICAgdGhpcy5zdGVwID0gKGFyZ3Muc3RlcCAhPSB1bmRlZmluZWQpID8gYXJncy5zdGVwIDogKChhcmdzLnByZWNpc2lvbiAhPSBudWxsKSA/IDEgLyBNYXRoLnBvdygxMCwgYXJncy5wcmVjaXNpb24pIDogMSk7XHJcblxyXG4gICAgdGhpcy5tYXggPSAoYXJncy5tYXggIT09IHVuZGVmaW5lZCkgPyBhcmdzLm1heCA6IG51bGw7XHJcbiAgICB0aGlzLm1pbiA9IChhcmdzLm1pbiAhPT0gdW5kZWZpbmVkKSA/IGFyZ3MubWluIDogbnVsbDtcclxuXHJcbiAgICB0aGlzLmFsbG93TnVsbCA9ICEhYXJncy5hbGxvd051bGw7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndWktbnVtYmVyLWZpZWxkJyk7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQudWkgPSB0aGlzO1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQudGFiSW5kZXggPSAwO1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQuY2xhc3NMaXN0LmFkZCgnZmllbGQnKTtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LnR5cGUgPSAndGV4dCc7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIHRoaXMuX29uSW5wdXRGb2N1cy5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgdGhpcy5fb25JbnB1dEJsdXIuYmluZCh0aGlzKSwgZmFsc2UpO1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX29uS2V5RG93bi5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdkYmxjbGljaycsIHRoaXMuX29uRnVsbFNlbGVjdC5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjb250ZXh0bWVudScsIHRoaXMuX29uRnVsbFNlbGVjdC5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50SW5wdXQpO1xyXG5cclxuICAgIGlmIChhcmdzLmRlZmF1bHQgIT09IHVuZGVmaW5lZClcclxuICAgICAgdGhpcy52YWx1ZSA9IGFyZ3MuZGVmYXVsdDtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLl9vbkNoYW5nZS5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICAvLyB0aGlzLl9lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX29uTW91c2VEb3duLmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgIC8vIHRoaXMuX2VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V3aGVlbCcsIHRoaXMuX29uTW91c2VEb3duLmJpbmQodGhpcyksIGZhbHNlKTtcclxuXHJcbiAgICB0aGlzLmJsdXJPbkVudGVyID0gdHJ1ZTtcclxuICAgIHRoaXMucmVmb2N1c2FibGUgPSB0cnVlO1xyXG5cclxuICAgIHRoaXMuX2xhc3RWYWx1ZSA9IHRoaXMudmFsdWU7XHJcbiAgICAvLyB0aGlzLl9tb3VzZU1vdmUgPSBudWxsO1xyXG4gICAgdGhpcy5fZHJhZ2dpbmcgPSBmYWxzZTtcclxuICAgIHRoaXMuX2RyYWdEaWZmID0gMDtcclxuICAgIHRoaXMuX2RyYWdTdGFydCA9IDA7XHJcblxyXG4gICAgdGhpcy5vbignZGlzYWJsZScsIHRoaXMuX29uRGlzYWJsZSk7XHJcbiAgICB0aGlzLm9uKCdlbmFibGUnLCB0aGlzLl9vbkVuYWJsZSk7XHJcbiAgICB0aGlzLm9uKCdjaGFuZ2UnLCB0aGlzLl9vbkNoYW5nZUZpZWxkKTtcclxuXHJcbiAgICBpZiAoYXJncy5wbGFjZWhvbGRlcilcclxuICAgICAgdGhpcy5wbGFjZWhvbGRlciA9IGFyZ3MucGxhY2Vob2xkZXI7XHJcblxyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBfb25MaW5rQ2hhbmdlKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LnZhbHVlID0gdmFsdWUgfHwgJzAnO1xyXG4gICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB2YWx1ZSB8fCAnMCcpO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBfb25DaGFuZ2UoKTogdm9pZCB7XHJcbiAgICBsZXQgdmFsdWUgPSBwYXJzZUZsb2F0KHRoaXMuZWxlbWVudElucHV0LnZhbHVlKTtcclxuICAgIGlmIChpc05hTih2YWx1ZSkpIHtcclxuICAgICAgaWYgKHRoaXMuYWxsb3dOdWxsKSB7XHJcbiAgICAgICAgdGhpcy52YWx1ZSA9IC0xO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudElucHV0LnZhbHVlID0gJzAnO1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSAwO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyB0aGlzLmVsZW1lbnRJbnB1dC52YWx1ZSA9IHZhbHVlO1xyXG4gICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcblxyXG4gIHB1YmxpYyBmb2N1cyhzZWxlY3Q/OiBib29sZWFuKSB7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5mb2N1cygpO1xyXG4gICAgaWYgKHNlbGVjdCkgdGhpcy5lbGVtZW50SW5wdXQuc2VsZWN0KCk7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfb25JbnB1dEZvY3VzKCkge1xyXG4gICAgdGhpcy5jbGFzcyEuYWRkKCdmb2N1cycpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uSW5wdXRCbHVyKCkge1xyXG4gICAgdGhpcy5jbGFzcyEucmVtb3ZlKCdmb2N1cycpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uS2V5RG93bihldnQ6IEtleWJvYXJkRXZlbnQpIHtcclxuICAgIGlmIChldnQua2V5Q29kZSA9PT0gMjcpXHJcbiAgICAgIHJldHVybiB0aGlzLmVsZW1lbnRJbnB1dC5ibHVyKCk7XHJcblxyXG4gICAgaWYgKHRoaXMuYmx1ck9uRW50ZXIgJiYgZXZ0LmtleUNvZGUgPT09IDEzKSB7XHJcbiAgICAgIGxldCBmb2N1c2VkID0gZmFsc2U7XHJcblxyXG4gICAgICBsZXQgcGFyZW50ID0gdGhpcy5wYXJlbnQ7XHJcbiAgICAgIHdoaWxlIChwYXJlbnQpIHtcclxuICAgICAgICBpZiAocGFyZW50LmVsZW1lbnQgJiYgcGFyZW50LmVsZW1lbnQuZm9jdXMpIHtcclxuICAgICAgICAgIHBhcmVudC5lbGVtZW50LmZvY3VzKCk7XHJcbiAgICAgICAgICBmb2N1c2VkID0gdHJ1ZTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudDtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCFmb2N1c2VkKVxyXG4gICAgICAgIHRoaXMuZWxlbWVudElucHV0LmJsdXIoKTtcclxuXHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5kaXNhYmxlZCB8fCBbMzgsIDQwXS5pbmRleE9mKGV2dC5rZXlDb2RlKSA9PT0gLTEpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBsZXQgaW5jID0gZXZ0LmtleUNvZGUgPT09IDQwID8gLTEgOiAxO1xyXG5cclxuICAgIGlmIChldnQuc2hpZnRLZXkpXHJcbiAgICAgIGluYyAqPSAxMDtcclxuXHJcbiAgICBsZXQgdmFsdWUgPSB0aGlzLnZhbHVlICsgKHRoaXMuc3RlcCB8fCAxKSAqIGluYztcclxuXHJcbiAgICBpZiAodGhpcy5tYXggIT0gbnVsbClcclxuICAgICAgdmFsdWUgPSBNYXRoLm1pbih0aGlzLm1heCwgdmFsdWUpO1xyXG5cclxuICAgIGlmICh0aGlzLm1pbiAhPSBudWxsKVxyXG4gICAgICB2YWx1ZSA9IE1hdGgubWF4KHRoaXMubWluLCB2YWx1ZSk7XHJcblxyXG4gICAgaWYgKHRoaXMucHJlY2lzaW9uICE9IG51bGwpXHJcbiAgICAgIHZhbHVlID0gcGFyc2VGbG9hdCh2YWx1ZS50b0ZpeGVkKHRoaXMucHJlY2lzaW9uKSk7XHJcblxyXG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xyXG4gICAgLy8gdGhpcy51aS52YWx1ZSA9IHZhbHVlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uRnVsbFNlbGVjdCgpIHtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LnNlbGVjdCgpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uRGlzYWJsZSgpIHtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LnJlYWRPbmx5ID0gdHJ1ZTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbkVuYWJsZSgpIHtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LnJlYWRPbmx5ID0gZmFsc2U7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfb25DaGFuZ2VGaWVsZCgpIHtcclxuICAgIGlmICghdGhpcy5yZW5kZXJDaGFuZ2VzKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5mbGFzaCgpO1xyXG4gIH07XHJcblxyXG5cclxuXHJcblxyXG59XHJcblxyXG5cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTnVtYmVyRmllbGRBcmdzIHtcclxuICBkZWZhdWx0PzogbnVtYmVyO1xyXG4gIHBsYWNlaG9sZGVyPzogc3RyaW5nO1xyXG4gIHByZWNpc2lvbj86IG51bWJlcjtcclxuICBzdGVwPzogbnVtYmVyO1xyXG4gIG1pbj86IG51bWJlcjtcclxuICBtYXg/OiBudW1iZXI7XHJcbiAgYWxsb3dOdWxsPzogYm9vbGVhbjtcclxufSIsImltcG9ydCB7IENvbnRhaW5lckVsZW1lbnQgfSBmcm9tIFwiLi9jb250YWluZXItZWxlbWVudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE92ZXJsYXkgZXh0ZW5kcyBDb250YWluZXJFbGVtZW50IHtcclxuXHJcblxyXG4gIHB1YmxpYyBlbGVtZW50T3ZlcmxheTogSFRNTEVsZW1lbnQ7XHJcblxyXG5cclxuICBwdWJsaWMgZ2V0IGNsaWNrYWJsZSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnRPdmVybGF5LmNsYXNzTGlzdC5jb250YWlucygnY2xpY2thYmxlJyk7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgY2xpY2thYmxlKHZhbDogYm9vbGVhbikge1xyXG4gICAgaWYgKHZhbCkge1xyXG4gICAgICB0aGlzLmVsZW1lbnRPdmVybGF5LmNsYXNzTGlzdC5hZGQoJ2NsaWNrYWJsZScpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5lbGVtZW50T3ZlcmxheS5jbGFzc0xpc3QucmVtb3ZlKCdjbGlja2FibGUnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgcmVjdCgpOiBDbGllbnRSZWN0IHwgRE9NUmVjdCB7XHJcbiAgICByZXR1cm4gdGhpcy5pbm5lckVsZW1lbnQhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBjZW50ZXIoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50IS5jbGFzc0xpc3QuY29udGFpbnMoJ2NlbnRlcicpO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGNlbnRlcih2YWw6IGJvb2xlYW4pIHtcclxuICAgIGlmICh2YWwpIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5jbGFzc0xpc3QuYWRkKCdjZW50ZXInKTtcclxuICAgICAgdGhpcy5pbm5lckVsZW1lbnQhLnN0eWxlLmxlZnQgPSAnJztcclxuICAgICAgdGhpcy5pbm5lckVsZW1lbnQhLnN0eWxlLnRvcCA9ICcnO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5jbGFzc0xpc3QucmVtb3ZlKCdjZW50ZXInKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgdHJhbnNwYXJlbnQoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50IS5jbGFzc0xpc3QuY29udGFpbnMoJ3RyYW5zcGFyZW50Jyk7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgdHJhbnNwYXJlbnQodmFsOiBib29sZWFuKSB7XHJcbiAgICBpZiAodmFsKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LmFkZCgndHJhbnNwYXJlbnQnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LnJlbW92ZSgndHJhbnNwYXJlbnQnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndWktb3ZlcmxheScsICdjZW50ZXInKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRPdmVybGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnRPdmVybGF5LnVpID0gdGhpcztcclxuICAgIHRoaXMuZWxlbWVudE92ZXJsYXkuY2xhc3NMaXN0LmFkZCgnb3ZlcmxheScsICdjbGlja2FibGUnKTtcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnRPdmVybGF5KTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRPdmVybGF5LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX29uTW91c2VEb3duLmJpbmQodGhpcyksIGZhbHNlKTtcclxuXHJcbiAgICB0aGlzLmlubmVyRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5pbm5lckVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnY29udGVudCcpO1xyXG4gICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuaW5uZXJFbGVtZW50KTtcclxuXHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbk1vdXNlRG93bihldnQ6IE1vdXNlRXZlbnQpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5jbGlja2FibGUpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBsZXQgc2VsZiA9IHRoaXM7XHJcblxyXG4gICAgLy8gc29tZSBmaWVsZCBtaWdodCBiZSBpbiBmb2N1c1xyXG4gICAgZG9jdW1lbnQuYm9keS5ibHVyKCk7XHJcblxyXG4gICAgLy8gd2FpdCB0aWxsIGJsdXIgdGFrZXMgaW4gYWNjb3VudFxyXG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcclxuICAgICAgLy8gaGlkZSBvdmVybGF5XHJcbiAgICAgIHNlbGYuaGlkZGVuID0gdHJ1ZTtcclxuICAgIH0pO1xyXG5cclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHBvc2l0aW9uKHg6IG51bWJlciwgeTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICBsZXQgYXJlYSA9IHRoaXMuZWxlbWVudE92ZXJsYXkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICBsZXQgcmVjdCA9IHRoaXMuaW5uZXJFbGVtZW50IS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuXHJcbiAgICB4ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oYXJlYS53aWR0aCAtIHJlY3Qud2lkdGgsIHgpKTtcclxuICAgIHkgPSBNYXRoLm1heCgwLCBNYXRoLm1pbihhcmVhLmhlaWdodCAtIHJlY3QuaGVpZ2h0LCB5KSk7XHJcblxyXG4gICAgdGhpcy5pbm5lckVsZW1lbnQhLnN0eWxlLmxlZnQgPSB4ICsgJ3B4JztcclxuICAgIHRoaXMuaW5uZXJFbGVtZW50IS5zdHlsZS50b3AgPSB5ICsgJ3B4JztcclxuICB9XHJcblxyXG5cclxufSIsImltcG9ydCB7IENvbnRhaW5lckVsZW1lbnQgfSBmcm9tICcuL2NvbnRhaW5lci1lbGVtZW50JztcclxuaW1wb3J0IHsgRWxlbWVudCB9IGZyb20gJy4vZWxlbWVudCc7XHJcblxyXG5leHBvcnQgY2xhc3MgUGFuZWwgZXh0ZW5kcyBDb250YWluZXJFbGVtZW50IHtcclxuXHJcbiAgcHJpdmF0ZSBoZWFkZXJFbGVtZW50OiBOdWxsYWJsZTxIVE1MRWxlbWVudD4gPSBudWxsO1xyXG4gIHByaXZhdGUgaGVhZGVyRWxlbWVudFRpdGxlOiBOdWxsYWJsZTxIVE1MRWxlbWVudD4gPSBudWxsO1xyXG4gIHByaXZhdGUgX2hhbmRsZUVsZW1lbnQ6IE51bGxhYmxlPEhUTUxFbGVtZW50PiA9IG51bGw7XHJcblxyXG4gIHByaXZhdGUgX3Jlc2l6ZUV2dE1vdmU6IGFueTtcclxuICBwcml2YXRlIF9yZXNpemVFdnRFbmQ6IGFueTtcclxuICBwcml2YXRlIF9yZXNpemVFdnRUb3VjaE1vdmU6IGFueTtcclxuICBwcml2YXRlIF9yZXNpemVFdnRUb3VjaEVuZDogYW55O1xyXG5cclxuICBwcml2YXRlIF9yZXNpemVEYXRhOiB7IFtrZXk6IHN0cmluZ106IG51bWJlciB9ID0geyBlbmQ6IDAgfTtcclxuICBwcml2YXRlIF9yZXNpemVMaW1pdHM6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB7XHJcbiAgICBtaW46IDAsXHJcbiAgICBtYXg6IEluZmluaXR5XHJcbiAgfTtcclxuICBwcml2YXRlIF9oYW5kbGU6IHN0cmluZyA9ICcnO1xyXG4gIHB1YmxpYyBoZWFkZXJTaXplOiBudW1iZXIgPSAwO1xyXG4gIHByaXZhdGUgX3Jlc2l6ZVRvdWNoSWQ6IG51bWJlciA9IC0xMDA7XHJcblxyXG4gIHB1YmxpYyB0aXRsZTogc3RyaW5nID0gJyc7XHJcblxyXG4gIHB1YmxpYyBnZXQgZm9sZGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuY2xhc3MgPyB0aGlzLmNsYXNzLmNvbnRhaW5zKCdmb2xkYWJsZScpICYmIHRoaXMuY2xhc3MuY29udGFpbnMoJ2ZvbGRlZCcpIDogZmFsc2U7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgZm9sZGVkKHZhbDogYm9vbGVhbikge1xyXG4gICAgaWYgKHRoaXMuaGlkZGVuKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgaWYgKHRoaXMuY2xhc3MhLmNvbnRhaW5zKCdmb2xkZWQnKSA9PT0gISF2YWwpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBpZiAodGhpcy5oZWFkZXJFbGVtZW50ICYmIHRoaXMuaGVhZGVyU2l6ZSA9PT0gMClcclxuICAgICAgdGhpcy5oZWFkZXJTaXplID0gdGhpcy5oZWFkZXJFbGVtZW50LmNsaWVudEhlaWdodDtcclxuXHJcbiAgICBpZiAodmFsKSB7XHJcbiAgICAgIHRoaXMuY2xhc3MhLmFkZCgnZm9sZGVkJyk7XHJcblxyXG4gICAgICBpZiAodGhpcy5jbGFzcyEuY29udGFpbnMoJ2ZvbGRhYmxlJykpXHJcbiAgICAgICAgdGhpcy5lbWl0KCdmb2xkJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmNsYXNzIS5yZW1vdmUoJ2ZvbGRlZCcpO1xyXG5cclxuICAgICAgaWYgKHRoaXMuY2xhc3MhLmNvbnRhaW5zKCdmb2xkYWJsZScpKVxyXG4gICAgICAgIHRoaXMuZW1pdCgndW5mb2xkJyk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fcmVmbG93KCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGhvcml6b250YWwoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5jbGFzcyA/IHRoaXMuY2xhc3MuY29udGFpbnMoJ2hvcml6b250YWwnKSA6IGZhbHNlO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGhvcml6b250YWwodmFsOiBib29sZWFuKSB7XHJcbiAgICBpZiAodmFsKSB7XHJcbiAgICAgIHRoaXMuY2xhc3MhLmFkZCgnaG9yaXpvbnRhbCcpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5jbGFzcyEucmVtb3ZlKCdob3Jpem9udGFsJyk7XHJcbiAgICB9XHJcbiAgICB0aGlzLl9yZWZsb3coKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgcmVzaXphYmxlKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5faGFuZGxlO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHJlc2l6YWJsZSh2YWw6IHN0cmluZykge1xyXG4gICAgaWYgKHRoaXMuX2hhbmRsZSA9PT0gdmFsKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdmFyIG9sZEhhbmRsZSA9IHRoaXMuX2hhbmRsZTtcclxuICAgIHRoaXMuX2hhbmRsZSA9IHZhbDtcclxuXHJcbiAgICBpZiAodGhpcy5faGFuZGxlICE9PSAnJykge1xyXG4gICAgICBpZiAoIXRoaXMuX2hhbmRsZUVsZW1lbnQpIHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRWxlbWVudC51aSA9IHRoaXM7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdoYW5kbGUnKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX3Jlc2l6ZVN0YXJ0LmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLl9yZXNpemVTdGFydC5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh0aGlzLl9oYW5kbGVFbGVtZW50LnBhcmVudE5vZGUpXHJcbiAgICAgICAgdGhpcy5lbGVtZW50IS5yZW1vdmVDaGlsZCh0aGlzLl9oYW5kbGVFbGVtZW50KTtcclxuICAgICAgLy8gVE9ET1xyXG4gICAgICAvLyBhcHBlbmQgaW4gcmlnaHQgcGxhY2VcclxuICAgICAgdGhpcy5lbGVtZW50IS5hcHBlbmRDaGlsZCh0aGlzLl9oYW5kbGVFbGVtZW50KTtcclxuICAgICAgdGhpcy5jbGFzcyEuYWRkKCdyZXNpemFibGUnLCAncmVzaXphYmxlLScgKyB0aGlzLl9oYW5kbGUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKHRoaXMuX2hhbmRsZUVsZW1lbnQpIHRoaXMuZWxlbWVudCEucmVtb3ZlQ2hpbGQodGhpcy5faGFuZGxlRWxlbWVudCk7XHJcblxyXG4gICAgICB0aGlzLmNsYXNzIS5yZW1vdmUoJ3Jlc2l6YWJsZScsICdyZXNpemFibGUtJyArIG9sZEhhbmRsZSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fcmVmbG93KCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHJlc2l6ZU1pbigpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX3Jlc2l6ZUxpbWl0cy5taW47XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgcmVzaXplTWluKHZhbDogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl9yZXNpemVMaW1pdHMubWluID0gTWF0aC5tYXgoMCwgTWF0aC5taW4odGhpcy5fcmVzaXplTGltaXRzLm1heCwgdmFsKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHJlc2l6ZU1heCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX3Jlc2l6ZUxpbWl0cy5tYXg7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgcmVzaXplTWF4KHZhbDogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl9yZXNpemVMaW1pdHMubWF4ID0gTWF0aC5tYXgodGhpcy5fcmVzaXplTGltaXRzLm1pbiwgdmFsKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgZm9sZGFibGUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5jbGFzcyA/IHRoaXMuY2xhc3MuY29udGFpbnMoJ2ZvbGRhYmxlJykgOiBmYWxzZTtcclxuICB9XHJcbiAgcHVibGljIHNldCBmb2xkYWJsZSh2YWw6IGJvb2xlYW4pIHtcclxuICAgIGlmICh2YWwpIHtcclxuICAgICAgdGhpcy5jbGFzcyEuYWRkKCdmb2xkYWJsZScpO1xyXG5cclxuICAgICAgaWYgKHRoaXMuY2xhc3MhLmNvbnRhaW5zKCdmb2xkZWQnKSlcclxuICAgICAgICB0aGlzLmVtaXQoJ2ZvbGQnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuY2xhc3MhLnJlbW92ZSgnZm9sZGFibGUnKTtcclxuXHJcbiAgICAgIGlmICh0aGlzLmNsYXNzIS5jb250YWlucygnZm9sZGVkJykpXHJcbiAgICAgICAgdGhpcy5lbWl0KCd1bmZvbGQnKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9yZWZsb3coKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgaGVhZGVyKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5oZWFkZXJFbGVtZW50VGl0bGUgPyAodGhpcy5oZWFkZXJFbGVtZW50VGl0bGUudGV4dENvbnRlbnQgfHwgJycpIDogJyc7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgaGVhZGVyKHZhbDogc3RyaW5nKSB7XHJcbiAgICBpZiAoIXRoaXMuaGVhZGVyRWxlbWVudCAmJiB2YWwpIHtcclxuICAgICAgdGhpcy5oZWFkZXJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaGVhZGVyJyk7XHJcbiAgICAgIHRoaXMuaGVhZGVyRWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1aS1oZWFkZXInKTtcclxuXHJcbiAgICAgIHRoaXMuaGVhZGVyRWxlbWVudFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgICB0aGlzLmhlYWRlckVsZW1lbnRUaXRsZS5jbGFzc0xpc3QuYWRkKCd0aXRsZScpO1xyXG4gICAgICB0aGlzLmhlYWRlckVsZW1lbnRUaXRsZS50ZXh0Q29udGVudCA9IHZhbDtcclxuICAgICAgdGhpcy5oZWFkZXJFbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuaGVhZGVyRWxlbWVudFRpdGxlKTtcclxuXHJcbiAgICAgIGxldCBmaXJzdCA9IHRoaXMuZWxlbWVudCEuZmlyc3RDaGlsZDtcclxuICAgICAgaWYgKGZpcnN0KSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50IS5pbnNlcnRCZWZvcmUodGhpcy5oZWFkZXJFbGVtZW50LCBmaXJzdCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50IS5hcHBlbmRDaGlsZCh0aGlzLmhlYWRlckVsZW1lbnQpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLmNsYXNzIS5yZW1vdmUoJ25vSGVhZGVyJyk7XHJcblxyXG4gICAgICBsZXQgc2VsZiA9IHRoaXM7XHJcblxyXG4gICAgICAvLyBmb2xkaW5nXHJcbiAgICAgIHRoaXMuaGVhZGVyRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldnQpIHtcclxuICAgICAgICBpZiAoIXNlbGYuZm9sZGFibGUgfHwgKGV2dC50YXJnZXQgIT09IHNlbGYuaGVhZGVyRWxlbWVudCAmJiBldnQudGFyZ2V0ICE9PSBzZWxmLmhlYWRlckVsZW1lbnRUaXRsZSkpXHJcbiAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIHNlbGYuZm9sZGVkID0gIXNlbGYuZm9sZGVkO1xyXG4gICAgICB9LCBmYWxzZSk7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuaGVhZGVyRWxlbWVudCAmJiAhdmFsKSB7XHJcbiAgICAgIGlmICh0aGlzLmhlYWRlckVsZW1lbnQucGFyZW50Tm9kZSkge1xyXG4gICAgICAgIHRoaXMuaGVhZGVyRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuaGVhZGVyRWxlbWVudCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5oZWFkZXJFbGVtZW50ID0gbnVsbDtcclxuICAgICAgdGhpcy5oZWFkZXJFbGVtZW50VGl0bGUgPSBudWxsO1xyXG4gICAgICB0aGlzLmNsYXNzIS5hZGQoJ25vSGVhZGVyJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmhlYWRlckVsZW1lbnRUaXRsZSEudGV4dENvbnRlbnQgPSB2YWwgfHwgJyc7XHJcbiAgICAgIHRoaXMuY2xhc3MhLnJlbW92ZSgnbm9IZWFkZXInKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3Rvcih0aXRsZT86IHN0cmluZykge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1aS1wYW5lbCcsICdub0hlYWRlcicsICdub0FuaW1hdGlvbicpO1xyXG5cclxuICAgIC8vIHRoaXMub24oJ25vZGVzQ2hhbmdlZCcsIHRoaXMuX29uTm9kZXNDaGFuZ2VkKTtcclxuXHJcbiAgICAvLyBjb250ZW50XHJcbiAgICB0aGlzLmlubmVyRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5pbm5lckVsZW1lbnQudWkgPSB0aGlzO1xyXG4gICAgdGhpcy5pbm5lckVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnY29udGVudCcpO1xyXG4gICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuaW5uZXJFbGVtZW50KTtcclxuXHJcbiAgICBpZiAodGl0bGUpIHtcclxuICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gICAgICB0aGlzLmhlYWRlciA9IHRpdGxlO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHRoaXMuaW5uZXJFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuX29uU2Nyb2xsLCBmYWxzZSk7XHJcblxyXG4gICAgdGhpcy5fcmVzaXplRXZ0TW92ZSA9IGZ1bmN0aW9uIChldnQ6IE1vdXNlRXZlbnQpIHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgc2VsZi5fcmVzaXplTW92ZShldnQuY2xpZW50WCwgZXZ0LmNsaWVudFkpO1xyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLl9yZXNpemVFdnRFbmQgPSBmdW5jdGlvbiAoZXZ0OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgIHNlbGYuX3Jlc2l6ZUVuZCgpO1xyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLl9yZXNpemVFdnRUb3VjaE1vdmUgPSBmdW5jdGlvbiAoZXZ0OiBUb3VjaEV2ZW50KSB7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZXZ0LmNoYW5nZWRUb3VjaGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IHRvdWNoID0gZXZ0LmNoYW5nZWRUb3VjaGVzW2ldO1xyXG5cclxuICAgICAgICBpZiAodG91Y2guaWRlbnRpZmllciAhPT0gc2VsZi5fcmVzaXplVG91Y2hJZClcclxuICAgICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgc2VsZi5fcmVzaXplTW92ZSh0b3VjaC5jbGllbnRYLCB0b3VjaC5jbGllbnRZKTtcclxuXHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuX3Jlc2l6ZUV2dFRvdWNoRW5kID0gZnVuY3Rpb24gKGV2dDogVG91Y2hFdmVudCkge1xyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGV2dC5jaGFuZ2VkVG91Y2hlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGxldCB0b3VjaCA9IGV2dC5jaGFuZ2VkVG91Y2hlc1tpXTtcclxuXHJcbiAgICAgICAgaWYgKHRvdWNoLmlkZW50aWZpZXIgIT09IHNlbGYuX3Jlc2l6ZVRvdWNoSWQpXHJcbiAgICAgICAgICBjb250aW51ZTtcclxuXHJcbiAgICAgICAgc2VsZi5fcmVzaXplVG91Y2hJZCA9IC0xMDA7XHJcblxyXG4gICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICBzZWxmLl9yZXNpemVFbmQoKTtcclxuXHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIEhBQ0tcclxuICAgIC8vIHNraXAgMiBmcmFtZXMgYmVmb3JlIGVuYWJsaW5nIHRyYW5zaXRpb25zXHJcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xyXG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuY2xhc3MhLnJlbW92ZSgnbm9BbmltYXRpb24nKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBvbiBwYXJlbnQgY2hhbmdlXHJcbiAgICB0aGlzLm9uKCdwYXJlbnQnLCB0aGlzLl9vblBhcmVudCk7XHJcblxyXG5cclxuXHJcbiAgfVxyXG5cclxuXHJcblxyXG5cclxuICBwcml2YXRlIF9yZXNpemVNb3ZlKHg6IG51bWJlciwgeTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5fcmVzaXplRGF0YS5lbmQgPT09IDApIHtcclxuICAgICAgdGhpcy5fcmVzaXplRGF0YSA9IHtcclxuICAgICAgICB4OiB4LFxyXG4gICAgICAgIHk6IHksXHJcbiAgICAgICAgd2lkdGg6IHRoaXMuaW5uZXJFbGVtZW50IS5jbGllbnRXaWR0aCxcclxuICAgICAgICBoZWlnaHQ6IHRoaXMuaW5uZXJFbGVtZW50IS5jbGllbnRIZWlnaHQsXHJcbiAgICAgICAgZW5kOiAxXHJcbiAgICAgIH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodGhpcy5faGFuZGxlID09PSAnbGVmdCcgfHwgdGhpcy5faGFuZGxlID09PSAncmlnaHQnKSB7XHJcbiAgICAgICAgLy8gaG9yaXpvbnRhbFxyXG4gICAgICAgIGxldCBvZmZzZXRYID0gdGhpcy5fcmVzaXplRGF0YS54IC0geDtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX2hhbmRsZSA9PT0gJ3JpZ2h0JylcclxuICAgICAgICAgIG9mZnNldFggPSAtb2Zmc2V0WDtcclxuXHJcbiAgICAgICAgbGV0IHdpZHRoID0gTWF0aC5tYXgodGhpcy5fcmVzaXplTGltaXRzLm1pbiwgTWF0aC5taW4odGhpcy5fcmVzaXplTGltaXRzLm1heCwgKHRoaXMuX3Jlc2l6ZURhdGEud2lkdGggKyBvZmZzZXRYKSkpO1xyXG5cclxuICAgICAgICB0aGlzLnN0eWxlIS53aWR0aCA9ICh3aWR0aCArIDQpICsgJ3B4JztcclxuICAgICAgICB0aGlzLmlubmVyRWxlbWVudCEuc3R5bGUud2lkdGggPSAod2lkdGggKyA0KSArICdweCc7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gdmVydGljYWxcclxuICAgICAgICBsZXQgb2Zmc2V0WSA9IHRoaXMuX3Jlc2l6ZURhdGEueSAtIHk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9oYW5kbGUgPT09ICdib3R0b20nKVxyXG4gICAgICAgICAgb2Zmc2V0WSA9IC1vZmZzZXRZO1xyXG5cclxuICAgICAgICBsZXQgaGVpZ2h0ID0gTWF0aC5tYXgodGhpcy5fcmVzaXplTGltaXRzLm1pbiwgTWF0aC5taW4odGhpcy5fcmVzaXplTGltaXRzLm1heCwgKHRoaXMuX3Jlc2l6ZURhdGEuaGVpZ2h0ICsgb2Zmc2V0WSkpKTtcclxuXHJcbiAgICAgICAgdGhpcy5zdHlsZSEuaGVpZ2h0ID0gKGhlaWdodCArICh0aGlzLmhlYWRlclNpemUgPT09IC0xID8gMCA6IHRoaXMuaGVhZGVyU2l6ZSB8fCAzMikpICsgJ3B4JztcclxuICAgICAgICB0aGlzLmlubmVyRWxlbWVudCEuc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0ICsgJ3B4JztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZW1pdCgncmVzaXplJyk7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfcmVzaXplRW5kKCk6IHZvaWQge1xyXG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMuX3Jlc2l6ZUV2dE1vdmUsIGZhbHNlKTtcclxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5fcmVzaXplRXZ0RW5kLCBmYWxzZSk7XHJcblxyXG4gICAgLy8gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMuX3Jlc2l6ZUV2dFRvdWNoTW92ZSwgZmFsc2UpO1xyXG4gICAgLy8gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5fcmVzaXplRXZ0VG91Y2hFbmQsIGZhbHNlKTtcclxuXHJcbiAgICB0aGlzLmNsYXNzIS5yZW1vdmUoJ25vQW5pbWF0aW9uJywgJ3Jlc2l6aW5nJyk7XHJcbiAgICB0aGlzLl9yZXNpemVEYXRhLmVuZCA9IDA7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfcmVzaXplU3RhcnQoZXZ0OiBFdmVudCk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX2hhbmRsZSA9PT0gJycpXHJcbiAgICAgIHJldHVybjtcclxuICAgIGlmICgoPFRvdWNoRXZlbnQ+ZXZ0KS5jaGFuZ2VkVG91Y2hlcykge1xyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8ICg8VG91Y2hFdmVudD5ldnQpLmNoYW5nZWRUb3VjaGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IHRvdWNoID0gKDxUb3VjaEV2ZW50PmV2dCkuY2hhbmdlZFRvdWNoZXNbaV07XHJcbiAgICAgICAgaWYgKDxIVE1MRWxlbWVudD50b3VjaC50YXJnZXQgIT09IHRoaXMuZWxlbWVudClcclxuICAgICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICB0aGlzLl9yZXNpemVUb3VjaElkID0gdG91Y2guaWRlbnRpZmllcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuY2xhc3MhLmFkZCgnbm9BbmltYXRpb24nLCAncmVzaXppbmcnKTtcclxuICAgIHRoaXMuX3Jlc2l6ZURhdGEuZW5kID0gMDtcclxuXHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5fcmVzaXplRXZ0TW92ZSwgZmFsc2UpO1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLl9yZXNpemVFdnRFbmQsIGZhbHNlKTtcclxuXHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcy5fcmVzaXplRXZ0VG91Y2hNb3ZlLCBmYWxzZSk7XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLl9yZXNpemVFdnRUb3VjaEVuZCwgZmFsc2UpO1xyXG5cclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uUGFyZW50KCk6IHZvaWQge1xyXG4gICAgLy8gSEFDS1xyXG4gICAgLy8gd2FpdCB0aWxsIERPTSBwYXJzZXMsIHRoZW4gcmVmbG93XHJcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5fcmVmbG93LmJpbmQodGhpcykpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX3JlZmxvdygpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLmhpZGRlbilcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmICh0aGlzLmZvbGRlZCkge1xyXG4gICAgICBpZiAodGhpcy5ob3Jpem9udGFsKSB7XHJcbiAgICAgICAgdGhpcy5zdHlsZSEuaGVpZ2h0ID0gJyc7XHJcbiAgICAgICAgdGhpcy5zdHlsZSEud2lkdGggPSAodGhpcy5oZWFkZXJTaXplIHx8IDMyKSArICdweCc7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5zdHlsZSEuaGVpZ2h0ID0gKHRoaXMuaGVhZGVyU2l6ZSB8fCAzMikgKyAncHgnO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuZm9sZGFibGUpIHtcclxuICAgICAgaWYgKHRoaXMuaG9yaXpvbnRhbCkge1xyXG4gICAgICAgIHRoaXMuc3R5bGUhLmhlaWdodCA9ICcnO1xyXG4gICAgICAgIHRoaXMuc3R5bGUhLndpZHRoID0gdGhpcy5pbm5lckVsZW1lbnQhLmNsaWVudFdpZHRoICsgJ3B4JztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLnN0eWxlIS5oZWlnaHQgPSAoKHRoaXMuaGVhZGVyU2l6ZSB8fCAzMikgKyB0aGlzLmlubmVyRWxlbWVudCEuY2xpZW50SGVpZ2h0KSArICdweCc7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbk5vZGVzQ2hhbmdlZCgpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5mb2xkYWJsZSB8fCB0aGlzLmZvbGRlZCB8fCB0aGlzLmhvcml6b250YWwgfHwgdGhpcy5oaWRkZW4pXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLnN0eWxlIS5oZWlnaHQgPSAoTWF0aC5tYXgoMCwgKHRoaXMuaGVhZGVyU2l6ZSB8fCAzMikpICsgdGhpcy5pbm5lckVsZW1lbnQhLmNsaWVudEhlaWdodCkgKyAncHgnO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBoZWFkZXJBcHBlbmQoZWxlbWVudDogSFRNTEVsZW1lbnQgfCBFbGVtZW50KTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuaGVhZGVyRWxlbWVudClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGxldCBodG1sOiBib29sZWFuID0gKGVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCk7XHJcbiAgICBsZXQgbm9kZTogSFRNTEVsZW1lbnQgPSBodG1sID8gPEhUTUxFbGVtZW50PmVsZW1lbnQgOiAoPEVsZW1lbnQ+ZWxlbWVudCkuZWxlbWVudCE7XHJcblxyXG4gICAgdGhpcy5oZWFkZXJFbGVtZW50Lmluc2VydEJlZm9yZShub2RlLCB0aGlzLmhlYWRlckVsZW1lbnRUaXRsZSk7XHJcblxyXG4gICAgaWYgKCFodG1sKVxyXG4gICAgICAoPEVsZW1lbnQ+ZWxlbWVudCkucGFyZW50ID0gdGhpcztcclxuICB9O1xyXG5cclxuICAvLyBUT0RPXHJcbiAgcHJpdmF0ZSBfb25TY3JvbGwoZXZ0OiBhbnkpIHtcclxuICAgIHRoaXMuZW1pdCgnc2Nyb2xsJywgZXZ0KTtcclxuICB9O1xyXG5cclxufSIsImltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiLi9lbGVtZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUHJvZ3Jlc3MgZXh0ZW5kcyBFbGVtZW50IHtcclxuXHJcblxyXG4gIHByaXZhdGUgX3Byb2dyZXNzOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfdGFyZ2V0UHJvZ3Jlc3M6IG51bWJlcjtcclxuICBwcml2YXRlIF9sYXN0UHJvZ3Jlc3M6IG51bWJlcjtcclxuICBwcml2YXRlIF9zcGVlZDogbnVtYmVyO1xyXG5cclxuICBwcml2YXRlIF9pbm5lcjogSFRNTEVsZW1lbnQ7XHJcblxyXG4gIHByaXZhdGUgX25vdzogbnVtYmVyO1xyXG4gIHByaXZhdGUgX2FuaW1hdGluZzogYm9vbGVhbjtcclxuICBwcml2YXRlIF9mYWlsZWQ6IGJvb2xlYW47XHJcblxyXG4gIHB1YmxpYyBnZXQgcHJvZ3Jlc3MoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9wcm9ncmVzcztcclxuICB9XHJcbiAgcHVibGljIHNldCBwcm9ncmVzcyh2YWw6IG51bWJlcikge1xyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIHZhbCA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHZhbCkpO1xyXG5cclxuICAgIGlmICh0aGlzLl90YXJnZXRQcm9ncmVzcyA9PT0gdmFsKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5fdGFyZ2V0UHJvZ3Jlc3MgPSB2YWw7XHJcblxyXG4gICAgaWYgKHRoaXMuX3NwZWVkID09PSAwIHx8IHRoaXMuX3NwZWVkID09PSAxKSB7XHJcbiAgICAgIHRoaXMuX3Byb2dyZXNzID0gdGhpcy5fdGFyZ2V0UHJvZ3Jlc3M7XHJcbiAgICAgIHRoaXMuX2lubmVyLnN0eWxlLndpZHRoID0gKHRoaXMuX3Byb2dyZXNzICogMTAwKSArICclJztcclxuXHJcbiAgICAgIGxldCBwcm9ncmVzczogbnVtYmVyID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMTAwLCBNYXRoLnJvdW5kKHRoaXMuX3Byb2dyZXNzICogMTAwKSkpO1xyXG4gICAgICBpZiAocHJvZ3Jlc3MgIT09IHRoaXMuX2xhc3RQcm9ncmVzcykge1xyXG4gICAgICAgIHRoaXMuX2xhc3RQcm9ncmVzcyA9IHByb2dyZXNzO1xyXG4gICAgICAgIHRoaXMuZW1pdCgncHJvZ3Jlc3M6JyArIHByb2dyZXNzKTtcclxuICAgICAgICB0aGlzLmVtaXQoJ3Byb2dyZXNzJywgcHJvZ3Jlc3MpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKCF0aGlzLl9hbmltYXRpbmcpIHtcclxuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLl9hbmltYXRlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBnZXQgc3BlZWQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9zcGVlZDtcclxuICB9XHJcbiAgcHVibGljIHNldCBzcGVlZCh2YWw6IG51bWJlcikge1xyXG4gICAgdGhpcy5fc3BlZWQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB2YWwpKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgZmFpbGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX2ZhaWxlZDtcclxuICB9XHJcbiAgcHVibGljIHNldCBmYWlsZWQodmFsOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLl9mYWlsZWQgPSB2YWw7XHJcbiAgICBpZiAodGhpcy5fZmFpbGVkKSB7XHJcbiAgICAgIHRoaXMuY2xhc3MhLmFkZCgnZmFpbGVkJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmNsYXNzIS5yZW1vdmUoJ2ZhaWxlZCcpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3Rvcihwcm9ncmVzcz86IG51bWJlciwgc3BlZWQ/OiBudW1iZXIpIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgdGhpcy5fcHJvZ3Jlc3MgPSBwcm9ncmVzcyA/IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHByb2dyZXNzKSkgOiAwO1xyXG4gICAgdGhpcy5fdGFyZ2V0UHJvZ3Jlc3MgPSB0aGlzLl9wcm9ncmVzcztcclxuICAgIHRoaXMuX2xhc3RQcm9ncmVzcyA9IE1hdGguZmxvb3IodGhpcy5fcHJvZ3Jlc3MgKiAxMDApO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3VpLXByb2dyZXNzJyk7XHJcblxyXG4gICAgdGhpcy5faW5uZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHRoaXMuX2lubmVyLmNsYXNzTGlzdC5hZGQoJ2lubmVyJyk7XHJcbiAgICB0aGlzLl9pbm5lci5zdHlsZS53aWR0aCA9ICh0aGlzLl9wcm9ncmVzcyAqIDEwMCkgKyAnJSc7XHJcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5faW5uZXIpO1xyXG5cclxuICAgIHRoaXMuX3NwZWVkID0gc3BlZWQgfHwgMTtcclxuXHJcbiAgICB0aGlzLl9ub3cgPSBEYXRlLm5vdygpO1xyXG4gICAgdGhpcy5fYW5pbWF0aW5nID0gZmFsc2U7XHJcbiBcclxuICAgIHRoaXMuX2ZhaWxlZCA9IGZhbHNlO1xyXG5cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqICB3ZWJzb2NrZXQgbGluayAtPiBiZXN0IHdheTtcclxuICAgKiAgaW5mb3JtYXRpb24gZm9ybWF0IC0+IG1hbnkga2luZHMgb2YgaW5mb3JtYXRpb24gdG8gYmUgdHJhbnNmb3JtZWQ7XHJcbiAgICogXHJcbiAgICogIHRoaW5rIGFib3V0IHRoZSBwcm9jZXNzOlxyXG4gICAqICAgICAxLiBhY2Nlc3MgcGVybWlzc2lvbiBjaGVjaztcclxuICAgKiAgICAgMi4gYSBkYXRhIHN0cnVjdHVyZSBvZiBzY2VuZSBkZXRhaWw7XHJcbiAgICogICAgIDMuIGEgZGF0YSBzdHJ1Y3R1cmUgZm9yIGFzc2V0cyBkZXRhaWw7XHJcbiAgICogICAgIDQuIGtlZXAgdGhlIG9yaWdpbmFsIGZpbGUgbm8gY2hhbmdlIHNvIHRoZXJlIHdpbGwgYmUgb25seSBvbmUgc291cmNlIGZpbGU7XHJcbiAgICogICAgIDUuIGxpbmsgdG8gYW55IGluZm9ybWF0aW9uO1xyXG4gICAqIFxyXG4gICAqIFxyXG4gICAqIFxyXG5cclxuICAgKiAgXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBfYW5pbWF0ZSgpOiB2b2lkIHtcclxuICAgIGxldCBzZWxmID0gdGhpcztcclxuXHJcbiAgICBpZiAoTWF0aC5hYnModGhpcy5fdGFyZ2V0UHJvZ3Jlc3MgLSB0aGlzLl9wcm9ncmVzcykgPCAwLjAxKSB7XHJcbiAgICAgIHRoaXMuX3Byb2dyZXNzID0gdGhpcy5fdGFyZ2V0UHJvZ3Jlc3M7XHJcbiAgICAgIHRoaXMuX2FuaW1hdGluZyA9IGZhbHNlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKCF0aGlzLl9hbmltYXRpbmcpIHtcclxuICAgICAgICB0aGlzLl9ub3cgPSBEYXRlLm5vdygpIC0gKDEwMDAgLyA2MCk7XHJcbiAgICAgICAgdGhpcy5fYW5pbWF0aW5nID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuX2FuaW1hdGUoKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBsZXQgZHQ6IG51bWJlciA9IE1hdGgubWF4KDAuMSwgTWF0aC5taW4oMywgKERhdGUubm93KCkgLSB0aGlzLl9ub3cpIC8gKDEwMDAgLyA2MCkpKTtcclxuICAgICAgdGhpcy5fbm93ID0gRGF0ZS5ub3coKTtcclxuICAgICAgdGhpcy5fcHJvZ3Jlc3MgPSB0aGlzLl9wcm9ncmVzcyArICh0aGlzLl90YXJnZXRQcm9ncmVzcyAtIHRoaXMuX3Byb2dyZXNzKSAqICh0aGlzLl9zcGVlZCAqIGR0KTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgcHJvZ3Jlc3M6IG51bWJlciA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEwMCwgTWF0aC5yb3VuZCh0aGlzLl9wcm9ncmVzcyAqIDEwMCkpKTtcclxuICAgIGlmIChwcm9ncmVzcyAhPT0gdGhpcy5fbGFzdFByb2dyZXNzKSB7XHJcbiAgICAgIHRoaXMuX2xhc3RQcm9ncmVzcyA9IHByb2dyZXNzO1xyXG4gICAgICB0aGlzLmVtaXQoJ3Byb2dyZXNzOicgKyBwcm9ncmVzcyk7XHJcbiAgICAgIHRoaXMuZW1pdCgncHJvZ3Jlc3MnLCBwcm9ncmVzcyk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5faW5uZXIuc3R5bGUud2lkdGggPSAodGhpcy5fcHJvZ3Jlc3MgKiAxMDApICsgJyUnO1xyXG4gIH1cclxuXHJcblxyXG59IiwiaW1wb3J0IHsgRWxlbWVudCB9IGZyb20gXCIuL2VsZW1lbnRcIlxyXG5cclxuLy8g5LiL5ouJ6YCJ5oup5YiX6KGoXHJcbmV4cG9ydCBjbGFzcyBTZWxlY3RGaWVsZCBleHRlbmRzIEVsZW1lbnQge1xyXG5cclxuXHJcbiAgcHVibGljIGVsZW1lbnRWYWx1ZTogSFRNTEVsZW1lbnQ7XHJcbiAgcHVibGljIGVsZW1lbnRPcHRpb25zOiBIVE1MRWxlbWVudDtcclxuXHJcbiAgcHVibGljIG9wdGlvbnM6IGFueTtcclxuICBwdWJsaWMgb3B0aW9uc0tleXM6IHN0cmluZ1tdO1xyXG5cclxuICBwcml2YXRlIF9vbGRWYWx1ZTogYW55O1xyXG4gIHByaXZhdGUgX3ZhbHVlOiBhbnk7XHJcbiAgcHJpdmF0ZSBfdHlwZTogc3RyaW5nO1xyXG4gIHByaXZhdGUgX29wdGlvbkNsYXNzTmFtZVByZWZpeDogc3RyaW5nO1xyXG4gIHByaXZhdGUgdGltZXJDbGlja0F3YXk6IGFueTtcclxuICBwcml2YXRlIGV2dFRvdWNoSWQ6IG51bWJlcjtcclxuICBwcml2YXRlIGV2dFRvdWNoU2Vjb25kOiBib29sZWFuO1xyXG4gIHByaXZhdGUgZXZ0TW91c2VEaXN0OiBudW1iZXJbXSA9IFswLCAwXTtcclxuXHJcbiAgcHJpdmF0ZSBvcHRpb25FbGVtZW50czogeyBba2V5OiBzdHJpbmddOiBIVE1MRWxlbWVudCB9O1xyXG5cclxuXHJcbiAgcHVibGljIGdldCB2YWx1ZSgpOiBhbnkge1xyXG4gICAgaWYgKHRoaXMuX2xpbmspIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2xpbmsuZ2V0KHRoaXMucGF0aCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5fdmFsdWU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgdmFsdWUocmF3OiBhbnkpIHtcclxuICAgIHZhciB2YWx1ZSA9IHRoaXMudmFsdWVUb1R5cGUocmF3KTtcclxuXHJcbiAgICBpZiAodGhpcy5fbGluaykge1xyXG4gICAgICB0aGlzLl9vbGRWYWx1ZSA9IHRoaXMuX3ZhbHVlO1xyXG4gICAgICB0aGlzLmVtaXQoJ2NoYW5nZTpiZWZvcmUnLCB2YWx1ZSk7XHJcbiAgICAgIHRoaXMuX2xpbmsuc2V0KHRoaXMucGF0aCwgdmFsdWUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKCh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHJhdyA9PT0gJycpICYmIHRoaXMub3B0aW9uRWxlbWVudHNbJyddKVxyXG4gICAgICAgIHZhbHVlID0gJyc7XHJcblxyXG4gICAgICBpZiAodGhpcy5fb2xkVmFsdWUgPT09IHZhbHVlKSByZXR1cm47XHJcbiAgICAgIGlmICh2YWx1ZSAhPT0gbnVsbCAmJiB0aGlzLm9wdGlvbnNbdmFsdWVdID09PSB1bmRlZmluZWQpIHJldHVybjtcclxuXHJcbiAgICAgIC8vIGRlc2VsZWN0IG9sZCBvbmVcclxuICAgICAgaWYgKHRoaXMub3B0aW9uRWxlbWVudHNbdGhpcy5fb2xkVmFsdWVdKVxyXG4gICAgICAgIHRoaXMub3B0aW9uRWxlbWVudHNbdGhpcy5fb2xkVmFsdWVdLmNsYXNzTGlzdC5yZW1vdmUoJ3NlbGVjdGVkJyk7XHJcblxyXG4gICAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xyXG4gICAgICBpZiAodmFsdWUgIT09ICcnKVxyXG4gICAgICAgIHRoaXMuX3ZhbHVlID0gdGhpcy52YWx1ZVRvVHlwZSh0aGlzLl92YWx1ZSk7XHJcblxyXG4gICAgICB0aGlzLmVtaXQoJ2NoYW5nZTpiZWZvcmUnLCB0aGlzLl92YWx1ZSk7XHJcbiAgICAgIHRoaXMuX29sZFZhbHVlID0gdGhpcy5fdmFsdWU7XHJcbiAgICAgIGlmICh0aGlzLm9wdGlvbnNbdGhpcy5fdmFsdWVdKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50VmFsdWUudGV4dENvbnRlbnQgPSB0aGlzLm9wdGlvbnNbdGhpcy5fdmFsdWVdO1xyXG4gICAgICAgIHRoaXMub3B0aW9uRWxlbWVudHNbdGhpcy5fdmFsdWVdLmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50VmFsdWUudGV4dENvbnRlbnQgPSAnJztcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHRoaXMuX3ZhbHVlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgcGxhY2Vob2xkZXIoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnRWYWx1ZS5nZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJykgfHwgJyc7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgcGxhY2Vob2xkZXIodmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICghdmFsKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudFZhbHVlLnJlbW92ZUF0dHJpYnV0ZSgncGxhY2Vob2xkZXInKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudFZhbHVlLnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCB2YWwpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKGFyZ3M6IGFueSkge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICAvLyBsZXQgc2VsZiA9IHRoaXM7XHJcblxyXG4gICAgYXJncyA9IGFyZ3MgfHwge307XHJcbiAgICB0aGlzLm9wdGlvbnMgPSBhcmdzLm9wdGlvbnMgfHwge307XHJcbiAgICB0aGlzLm9wdGlvbnNLZXlzID0gW107XHJcblxyXG4gICAgaWYgKHRoaXMub3B0aW9ucyBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgIHZhciBvcHRpb25zOiBhbnkgPSB7fTtcclxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm9wdGlvbnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICB0aGlzLm9wdGlvbnNLZXlzLnB1c2godGhpcy5vcHRpb25zW2ldLnYpO1xyXG4gICAgICAgIG9wdGlvbnNbdGhpcy5vcHRpb25zW2ldLnZdID0gdGhpcy5vcHRpb25zW2ldLnQ7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMub3B0aW9uc0tleXMgPSBPYmplY3Qua2V5cyh0aGlzLm9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50LnRhYkluZGV4ID0gMDtcclxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1aS1zZWxlY3QtZmllbGQnLCAnbm9TZWxlY3QnKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRWYWx1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50VmFsdWUudWkgPSB0aGlzO1xyXG4gICAgdGhpcy5lbGVtZW50VmFsdWUuY2xhc3NMaXN0LmFkZCgndmFsdWUnKTtcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnRWYWx1ZSk7XHJcblxyXG4gICAgdGhpcy5fb2xkVmFsdWUgPSBudWxsO1xyXG4gICAgdGhpcy5fdmFsdWUgPSBudWxsO1xyXG4gICAgdGhpcy5fdHlwZSA9IGFyZ3MudHlwZSB8fCAnc3RyaW5nJztcclxuXHJcbiAgICB0aGlzLl9vcHRpb25DbGFzc05hbWVQcmVmaXggPSBhcmdzLm9wdGlvbkNsYXNzTmFtZVByZWZpeCB8fCAnJztcclxuXHJcbiAgICB0aGlzLnRpbWVyQ2xpY2tBd2F5ID0gbnVsbDtcclxuICAgIHRoaXMuZXZ0VG91Y2hJZCA9IC05O1xyXG4gICAgdGhpcy5ldnRUb3VjaFNlY29uZCA9IGZhbHNlO1xyXG4gICAgdGhpcy5ldnRNb3VzZURpc3QgPSBbMCwgMF07XHJcblxyXG4gICAgdGhpcy5lbGVtZW50VmFsdWUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5fb25Nb3VzZURvd24uYmluZCh0aGlzKSwgZmFsc2UpO1xyXG4gICAgdGhpcy5lbGVtZW50VmFsdWUuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMuX29uVG91Y2hTdGFydC5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50T3B0aW9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50T3B0aW9ucyk7XHJcblxyXG4gICAgdGhpcy5vcHRpb25FbGVtZW50cyA9IHt9O1xyXG5cclxuICAgIGlmIChhcmdzLmRlZmF1bHQgIT09IHVuZGVmaW5lZCAmJiB0aGlzLm9wdGlvbnNbYXJncy5kZWZhdWx0XSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHRoaXMuX3ZhbHVlID0gdGhpcy52YWx1ZVRvVHlwZShhcmdzLmRlZmF1bHQpO1xyXG4gICAgICB0aGlzLl9vbGRWYWx1ZSA9IHRoaXMuX3ZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMub24oJ2xpbmsnLCB0aGlzLl9vbkxpbmspO1xyXG4gICAgdGhpcy5fdXBkYXRlT3B0aW9ucygpO1xyXG5cclxuICAgIHRoaXMub24oJ2NoYW5nZScsIHRoaXMuX29uQ2hhbmdlLmJpbmQodGhpcykpO1xyXG5cclxuICAgIC8vIGFycm93cyAtIGNoYW5nZVxyXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9vbktleURvd24uYmluZCh0aGlzKSwgZmFsc2UpO1xyXG5cclxuICAgIGlmIChhcmdzLnBsYWNlaG9sZGVyKVxyXG4gICAgICB0aGlzLnBsYWNlaG9sZGVyID0gYXJncy5wbGFjZWhvbGRlcjtcclxuICB9XHJcblxyXG5cclxuICBwcml2YXRlIF9vbkhvbGRTZWxlY3QodGFyZ2V0OiBIVE1MRWxlbWVudCwgeDogbnVtYmVyLCB5OiBudW1iZXIsIGV2dD86IFRvdWNoRXZlbnQpIHtcclxuICAgIGlmICh0YXJnZXQgJiYgdGFyZ2V0LnVpRWxlbWVudCAmJiB0YXJnZXQudWlFbGVtZW50ID09PSB0aGlzICYmIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3NlbGVjdGVkJykpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBpZiAoKE1hdGguYWJzKHggLSB0aGlzLmV2dE1vdXNlRGlzdFswXSkgKyBNYXRoLmFicyh5IC0gdGhpcy5ldnRNb3VzZURpc3RbMV0pKSA8IDgpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBpZiAodGFyZ2V0ICYmIHRhcmdldC51aUVsZW1lbnQgJiYgdGFyZ2V0LnVpRWxlbWVudCA9PT0gdGhpcyAmJiBldnQgIT09IHVuZGVmaW5lZClcclxuICAgICAgdGhpcy5fb25PcHRpb25TZWxlY3QuY2FsbCh0YXJnZXQsIGV2dCk7XHJcblxyXG4gICAgdGhpcy5jbG9zZSgpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uTW91c2VEb3duKGV2dDogTW91c2VFdmVudCk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuZGlzYWJsZWQgJiYgIXRoaXMuZGlzYWJsZWRDbGljaylcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmICh0aGlzLmVsZW1lbnQhLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgdGhpcy5ldnRNb3VzZURpc3RbMF0gPSBldnQucGFnZVg7XHJcbiAgICAgIHRoaXMuZXZ0TW91c2VEaXN0WzFdID0gZXZ0LnBhZ2VZO1xyXG4gICAgICB0aGlzLmVsZW1lbnQhLmZvY3VzKCk7XHJcbiAgICAgIHRoaXMub3BlbigpO1xyXG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuZXZ0TW91c2VVcC5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vblRvdWNoU3RhcnQoZXZ0OiBUb3VjaEV2ZW50KTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5kaXNhYmxlZCAmJiAhdGhpcy5kaXNhYmxlZENsaWNrKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgaWYgKHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICAgICAgdmFyIHRvdWNoO1xyXG5cclxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBldnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAoKDxIVE1MRWxlbWVudD4oZXZ0LmNoYW5nZWRUb3VjaGVzW2ldLnRhcmdldCkpLnVpRWxlbWVudCAhPT0gdGhpcylcclxuICAgICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICB0b3VjaCA9IGV2dC5jaGFuZ2VkVG91Y2hlc1tpXTtcclxuXHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICghdG91Y2gpIHJldHVybjtcclxuXHJcbiAgICAgIHRoaXMuZXZ0VG91Y2hJZCA9IHRvdWNoLmlkZW50aWZpZXI7XHJcbiAgICAgIHRoaXMuZXZ0TW91c2VEaXN0WzBdID0gdG91Y2gucGFnZVg7XHJcbiAgICAgIHRoaXMuZXZ0TW91c2VEaXN0WzFdID0gdG91Y2gucGFnZVk7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuZm9jdXMoKTtcclxuICAgICAgdGhpcy5vcGVuKCk7XHJcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuZXZ0VG91Y2hFbmQuYmluZCh0aGlzKSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfb25MaW5rKHBhdGg6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX2xpbmshLnNjaGVtYSAmJiB0aGlzLl9saW5rIS5zY2hlbWEuaGFzKHBhdGgpKSB7XHJcbiAgICAgIHZhciBmaWVsZCA9IHRoaXMuX2xpbmshLnNjaGVtYS5nZXQocGF0aCk7XHJcbiAgICAgIHZhciBvcHRpb25zID0gZmllbGQub3B0aW9ucyB8fCB7fTtcclxuICAgICAgdGhpcy5fdXBkYXRlT3B0aW9ucyhvcHRpb25zKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbkNoYW5nZSgpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5yZW5kZXJDaGFuZ2VzKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5mbGFzaCgpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uS2V5RG93bihldnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkIHtcclxuICAgIGlmIChldnQua2V5Q29kZSA9PT0gMjcpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAoPEhUTUxFbGVtZW50PmV2dC50YXJnZXQpLmJsdXIoKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICgodGhpcy5kaXNhYmxlZCAmJiAhdGhpcy5kaXNhYmxlZENsaWNrKSB8fCBbMzgsIDQwXS5pbmRleE9mKGV2dC5rZXlDb2RlKSA9PT0gLTEpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMub3B0aW9ucyk7XHJcbiAgICB2YXIgaW5kID0ga2V5cy5pbmRleE9mKHRoaXMudmFsdWUgIT09IHVuZGVmaW5lZCA/IHRoaXMudmFsdWUudG9TdHJpbmcoKSA6IG51bGwpO1xyXG5cclxuICAgIHZhciB5ID0gZXZ0LmtleUNvZGUgPT09IDM4ID8gLTEgOiAxO1xyXG5cclxuICAgIC8vIGFscmVhZHkgZmlyc3QgaXRlbVxyXG4gICAgaWYgKHkgPT09IC0xICYmIGluZCA8PSAwKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgLy8gYWxyZWFkeSBsYXN0IGl0ZW1cclxuICAgIGlmICh5ID09PSAxICYmIGluZCA9PT0gKGtleXMubGVuZ3RoIC0gMSkpXHJcbiAgICAgIHJldHVyblxyXG5cclxuICAgIC8vIHNldCBuZXcgaXRlbVxyXG4gICAgdGhpcy52YWx1ZSA9IGtleXNbaW5kICsgeV07XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSB2YWx1ZVRvVHlwZSh2YWx1ZTogYW55KTogYW55IHtcclxuICAgIHN3aXRjaCAodGhpcy5fdHlwZSkge1xyXG4gICAgICBjYXNlICdib29sZWFuJzpcclxuICAgICAgICByZXR1cm4gISF2YWx1ZTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnbnVtYmVyJzpcclxuICAgICAgICByZXR1cm4gcGFyc2VJbnQodmFsdWUsIDEwKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnc3RyaW5nJzpcclxuICAgICAgICByZXR1cm4gJycgKyB2YWx1ZTtcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuICB9O1xyXG5cclxuXHJcblxyXG5cclxuICBwcml2YXRlIGV2dE1vdXNlVXAoZXZ0OiBNb3VzZUV2ZW50KTogdm9pZCB7XHJcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIHRoaXMuX29uSG9sZFNlbGVjdCg8SFRNTEVsZW1lbnQ+ZXZ0LnRhcmdldCwgZXZ0LnBhZ2VYLCBldnQucGFnZVkpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgZXZ0VG91Y2hFbmQoZXZ0OiBUb3VjaEV2ZW50KTogdm9pZCB7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGV2dC5jaGFuZ2VkVG91Y2hlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICB2YXIgdG91Y2ggPSBldnQuY2hhbmdlZFRvdWNoZXNbaV07XHJcbiAgICAgIGlmICh0b3VjaC5pZGVudGlmaWVyICE9PSB0aGlzLmV2dFRvdWNoSWQpXHJcbiAgICAgICAgY29udGludWU7XHJcblxyXG4gICAgICB0aGlzLmV2dFRvdWNoSWQgPSAtOTtcclxuXHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblxyXG4gICAgICB2YXIgdGFyZ2V0ID0gZG9jdW1lbnQuZWxlbWVudEZyb21Qb2ludCh0b3VjaC5wYWdlWCwgdG91Y2gucGFnZVkpO1xyXG5cclxuICAgICAgdGhpcy5fb25Ib2xkU2VsZWN0KDxIVE1MRWxlbWVudD50YXJnZXQsIHRvdWNoLnBhZ2VYLCB0b3VjaC5wYWdlWSwgZXZ0KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5ldnRUb3VjaFNlY29uZCkge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICBzZWxmLmNsb3NlKCk7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkge1xyXG4gICAgICB0aGlzLmV2dFRvdWNoU2Vjb25kID0gdHJ1ZTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuXHJcbiAgcHJpdmF0ZSBvcGVuKCk6IHZvaWQge1xyXG4gICAgaWYgKCh0aGlzLmRpc2FibGVkICYmICF0aGlzLmRpc2FibGVkQ2xpY2spIHx8IHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSlcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcblxyXG4gICAgdmFyIHJlY3QgPSB0aGlzLmVsZW1lbnQhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgIC8vIGxlZnRcclxuICAgIHZhciBsZWZ0ID0gTWF0aC5yb3VuZChyZWN0LmxlZnQpICsgKChNYXRoLnJvdW5kKHJlY3Qud2lkdGgpIC0gdGhpcy5lbGVtZW50IS5jbGllbnRXaWR0aCkgLyAyKTtcclxuXHJcbiAgICAvLyB0b3BcclxuICAgIHZhciB0b3AgPSByZWN0LnRvcDtcclxuICAgIGlmICh0aGlzLm9wdGlvbkVsZW1lbnRzW3RoaXMuX3ZhbHVlXSkge1xyXG4gICAgICB0b3AgLT0gdGhpcy5vcHRpb25FbGVtZW50c1t0aGlzLl92YWx1ZV0ub2Zmc2V0VG9wO1xyXG4gICAgICB0b3AgKz0gKE1hdGgucm91bmQocmVjdC5oZWlnaHQpIC0gdGhpcy5vcHRpb25FbGVtZW50c1t0aGlzLl92YWx1ZV0uY2xpZW50SGVpZ2h0KSAvIDI7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gbGltaXQgdG8gYm90dG9tIC8gdG9wIG9mIHNjcmVlblxyXG4gICAgaWYgKHRvcCArIHRoaXMuZWxlbWVudE9wdGlvbnMuY2xpZW50SGVpZ2h0ID4gd2luZG93LmlubmVySGVpZ2h0KSB7XHJcbiAgICAgIHRvcCA9IHdpbmRvdy5pbm5lckhlaWdodCAtIHRoaXMuZWxlbWVudE9wdGlvbnMuY2xpZW50SGVpZ2h0ICsgMTtcclxuICAgIH0gZWxzZSBpZiAodG9wIDwgMCkge1xyXG4gICAgICB0b3AgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHRvcFxyXG4gICAgdGhpcy5lbGVtZW50T3B0aW9ucy5zdHlsZS50b3AgPSBNYXRoLm1heCgwLCB0b3ApICsgJ3B4JztcclxuICAgIC8vIGxlZnRcclxuICAgIHRoaXMuZWxlbWVudE9wdGlvbnMuc3R5bGUubGVmdCA9IGxlZnQgKyAncHgnO1xyXG4gICAgLy8gcmlnaHRcclxuICAgIHRoaXMuZWxlbWVudE9wdGlvbnMuc3R5bGUud2lkdGggPSBNYXRoLnJvdW5kKHRoaXMuZWxlbWVudCEuY2xpZW50V2lkdGgpICsgJ3B4JztcclxuICAgIC8vIGJvdHRvbVxyXG4gICAgaWYgKHRvcCA8PSAwICYmIHRoaXMuZWxlbWVudE9wdGlvbnMub2Zmc2V0SGVpZ2h0ID49IHdpbmRvdy5pbm5lckhlaWdodCkge1xyXG4gICAgICB0aGlzLmVsZW1lbnRPcHRpb25zLnN0eWxlLmJvdHRvbSA9ICcwJztcclxuICAgICAgdGhpcy5lbGVtZW50T3B0aW9ucy5zdHlsZS5oZWlnaHQgPSAnYXV0byc7XHJcblxyXG4gICAgICAvLyBzY3JvbGwgdG8gaXRlbVxyXG4gICAgICBpZiAodGhpcy5vcHRpb25FbGVtZW50c1t0aGlzLl92YWx1ZV0pIHtcclxuICAgICAgICB2YXIgb2ZmID0gdGhpcy5vcHRpb25FbGVtZW50c1t0aGlzLl92YWx1ZV0ub2Zmc2V0VG9wIC0gcmVjdC50b3A7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50T3B0aW9ucy5zY3JvbGxUb3AgPSBvZmY7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudE9wdGlvbnMuc3R5bGUuYm90dG9tID0gJyc7XHJcbiAgICAgIHRoaXMuZWxlbWVudE9wdGlvbnMuc3R5bGUuaGVpZ2h0ID0gJyc7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdGhpcy50aW1lckNsaWNrQXdheSA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICB2YXIgbG9vc2VBY3RpdmUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5lbGVtZW50IS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICBzZWxmLmVsZW1lbnQhLmJsdXIoKTtcclxuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBsb29zZUFjdGl2ZSk7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBsb29zZUFjdGl2ZSk7XHJcbiAgICB9LCAzMDApO1xyXG5cclxuICAgIHRoaXMuZW1pdCgnb3BlbicpO1xyXG4gIH07XHJcblxyXG5cclxuICBwcml2YXRlIGNsb3NlKCk6IHZvaWQge1xyXG4gICAgaWYgKCh0aGlzLmRpc2FibGVkICYmICF0aGlzLmRpc2FibGVkQ2xpY2spIHx8ICF0aGlzLmVsZW1lbnQhLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuZXZ0TW91c2VVcC5iaW5kKHRoaXMpKTtcclxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuZXZ0VG91Y2hFbmQuYmluZCh0aGlzKSk7XHJcblxyXG4gICAgaWYgKHRoaXMudGltZXJDbGlja0F3YXkpIHtcclxuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXJDbGlja0F3YXkpO1xyXG4gICAgICB0aGlzLnRpbWVyQ2xpY2tBd2F5ID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmVsZW1lbnQhLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudE9wdGlvbnMuc3R5bGUudG9wID0gJyc7XHJcbiAgICB0aGlzLmVsZW1lbnRPcHRpb25zLnN0eWxlLnJpZ2h0ID0gJyc7XHJcbiAgICB0aGlzLmVsZW1lbnRPcHRpb25zLnN0eWxlLmJvdHRvbSA9ICcnO1xyXG4gICAgdGhpcy5lbGVtZW50T3B0aW9ucy5zdHlsZS5sZWZ0ID0gJyc7XHJcbiAgICB0aGlzLmVsZW1lbnRPcHRpb25zLnN0eWxlLndpZHRoID0gJyc7XHJcbiAgICB0aGlzLmVsZW1lbnRPcHRpb25zLnN0eWxlLmhlaWdodCA9ICcnO1xyXG5cclxuICAgIHRoaXMuZW1pdCgnY2xvc2UnKTtcclxuXHJcbiAgICB0aGlzLmV2dFRvdWNoU2Vjb25kID0gZmFsc2U7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSB0b2dnbGUoKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5lbGVtZW50IS5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMub3BlbigpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX3VwZGF0ZU9wdGlvbnMob3B0aW9ucz86IGFueSkge1xyXG4gICAgaWYgKG9wdGlvbnMgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBpZiAob3B0aW9ucyBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0ge307XHJcbiAgICAgICAgdGhpcy5vcHRpb25zS2V5cyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3B0aW9ucy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgdGhpcy5vcHRpb25zS2V5cy5wdXNoKG9wdGlvbnNbaV0udik7XHJcbiAgICAgICAgICB0aGlzLm9wdGlvbnNbb3B0aW9uc1tpXS52XSA9IG9wdGlvbnNbaV0udDtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcclxuICAgICAgICB0aGlzLm9wdGlvbnNLZXlzID0gT2JqZWN0LmtleXMob3B0aW9ucyk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0aGlzLm9wdGlvbkVsZW1lbnRzID0ge307XHJcbiAgICB0aGlzLmVsZW1lbnRPcHRpb25zLmlubmVySFRNTCA9ICcnO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5vcHRpb25zS2V5cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAoIXRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSh0aGlzLm9wdGlvbnNLZXlzW2ldKSlcclxuICAgICAgICBjb250aW51ZTtcclxuXHJcbiAgICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcclxuICAgICAgZWxlbWVudC50ZXh0Q29udGVudCA9IHRoaXMub3B0aW9uc1t0aGlzLm9wdGlvbnNLZXlzW2ldXTtcclxuICAgICAgZWxlbWVudC51aUVsZW1lbnQgPSB0aGlzO1xyXG4gICAgICBlbGVtZW50LnVpVmFsdWUgPSB0aGlzLm9wdGlvbnNLZXlzW2ldO1xyXG4gICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLl9vbk9wdGlvblNlbGVjdC5iaW5kKHRoaXMpKTtcclxuICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCB0aGlzLl9vbk9wdGlvbkhvdmVyLmJpbmQodGhpcykpO1xyXG4gICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgdGhpcy5fb25PcHRpb25PdXQuYmluZCh0aGlzKSk7XHJcblxyXG4gICAgICBpZiAodGhpcy5fb3B0aW9uQ2xhc3NOYW1lUHJlZml4KSB7XHJcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX29wdGlvbkNsYXNzTmFtZVByZWZpeCArICctJyArIGVsZW1lbnQudGV4dENvbnRlbnQhLnRvTG93ZXJDYXNlKCkpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLmVsZW1lbnRPcHRpb25zLmFwcGVuZENoaWxkKGVsZW1lbnQpO1xyXG4gICAgICB0aGlzLm9wdGlvbkVsZW1lbnRzW3RoaXMub3B0aW9uc0tleXNbaV1dID0gZWxlbWVudDtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbk9wdGlvblNlbGVjdChldnQ6IFRvdWNoRXZlbnQpOiB2b2lkIHtcclxuICAgIHRoaXMudmFsdWUgPSAoPEhUTUxFbGVtZW50PmV2dC50YXJnZXQpLnVpVmFsdWU7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfb25PcHRpb25Ib3ZlcigpOiB2b2lkIHtcclxuICAgIHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LmFkZCgnaG92ZXInKTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbk9wdGlvbk91dCgpOiB2b2lkIHtcclxuICAgIHRoaXMuZWxlbWVudCEuY2xhc3NMaXN0LnJlbW92ZSgnaG92ZXInKTtcclxuICB9O1xyXG5cclxuICBwdWJsaWMgX29uTGlua0NoYW5nZSh2YWx1ZTogYW55KSB7XHJcbiAgICBpZiAodGhpcy5vcHRpb25FbGVtZW50c1t2YWx1ZV0gPT09IHVuZGVmaW5lZClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmICh0aGlzLm9wdGlvbkVsZW1lbnRzW3RoaXMuX29sZFZhbHVlXSkge1xyXG4gICAgICB0aGlzLm9wdGlvbkVsZW1lbnRzW3RoaXMuX29sZFZhbHVlXS5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX3ZhbHVlID0gdGhpcy52YWx1ZVRvVHlwZSh2YWx1ZSk7XHJcbiAgICB0aGlzLmVsZW1lbnRWYWx1ZS50ZXh0Q29udGVudCA9IHRoaXMub3B0aW9uc1t2YWx1ZV07XHJcbiAgICB0aGlzLm9wdGlvbkVsZW1lbnRzW3ZhbHVlXS5jbGFzc0xpc3QuYWRkKCdzZWxlY3RlZCcpO1xyXG4gICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB2YWx1ZSk7XHJcbiAgfTtcclxuXHJcblxyXG59IiwiaW1wb3J0IHsgRWxlbWVudCB9IGZyb20gXCIuL2VsZW1lbnRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBTbGlkZXIgZXh0ZW5kcyBFbGVtZW50IHtcclxuXHJcbiAgcHJpdmF0ZSBfdmFsdWU6IG51bWJlcjtcclxuICBwcml2YXRlIF9sYXN0VmFsdWU6IG51bWJlcjtcclxuICBwdWJsaWMgcHJlY2lzaW9uOiBudW1iZXI7XHJcblxyXG4gIHB1YmxpYyBlbGVtZW50QmFyOiBIVE1MRWxlbWVudDtcclxuICBwdWJsaWMgZWxlbWVudEhhbmRsZTogSFRNTEVsZW1lbnQ7XHJcbiAgcHVibGljIGV2dFRvdWNoSWQ6IGFueTtcclxuXHJcbiAgcHJpdmF0ZSBfbWluOiBudW1iZXI7XHJcbiAgcHVibGljIGdldCBtaW4oKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9taW47XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgbWluKHZhbDogbnVtYmVyKSB7XHJcbiAgICBpZiAodGhpcy5fbWluID09PSB2YWwpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLl9taW4gPSB2YWw7XHJcbiAgICB0aGlzLl91cGRhdGVIYW5kbGUodGhpcy5fdmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfbWF4OiBudW1iZXI7XHJcbiAgcHVibGljIGdldCBtYXgoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9tYXg7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgbWF4KHZhbDogbnVtYmVyKSB7XHJcbiAgICBpZiAodGhpcy5fbWF4ID09PSB2YWwpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLl9tYXggPSB2YWw7XHJcbiAgICB0aGlzLl91cGRhdGVIYW5kbGUodGhpcy5fdmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCB2YWx1ZSgpOiBudW1iZXIge1xyXG4gICAgaWYgKHRoaXMuX2xpbmspIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2xpbmsuZ2V0KHRoaXMucGF0aCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5fdmFsdWU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgdmFsdWUodmFsOiBudW1iZXIpIHtcclxuICAgIGlmICh0aGlzLl9saW5rKSB7XHJcbiAgICAgIGlmICghdGhpcy5fbGluay5zZXQodGhpcy5wYXRoLCB2YWwpKVxyXG4gICAgICAgIHRoaXMuX3VwZGF0ZUhhbmRsZSh0aGlzLl9saW5rLmdldCh0aGlzLnBhdGgpKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmICh0aGlzLl9tYXggIT09IG51bGwgJiYgdGhpcy5fbWF4IDwgdmFsKVxyXG4gICAgICAgIHZhbCA9IHRoaXMuX21heDtcclxuXHJcbiAgICAgIGlmICh0aGlzLl9taW4gIT09IG51bGwgJiYgdGhpcy5fbWluID4gdmFsKVxyXG4gICAgICAgIHZhbCA9IHRoaXMuX21pbjtcclxuXHJcbiAgICAgIC8vIFRPRE9cclxuICAgICAgaWYgKHZhbCA9PT0gbnVsbCkge1xyXG4gICAgICAgIHRoaXMuY2xhc3MhLmFkZCgnbnVsbCcpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlmICh0eXBlb2YgdmFsICE9PSAnbnVtYmVyJylcclxuICAgICAgICAgIHZhbCA9IDA7XHJcblxyXG4gICAgICAgIHZhbCA9ICh2YWwgIT09IHVuZGVmaW5lZCAmJiB0aGlzLnByZWNpc2lvbiAhPT0gbnVsbCkgPyBwYXJzZUZsb2F0KHZhbC50b0ZpeGVkKHRoaXMucHJlY2lzaW9uKSkgOiB2YWw7XHJcbiAgICAgICAgdGhpcy5jbGFzcyEucmVtb3ZlKCdudWxsJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuX3VwZGF0ZUhhbmRsZSh2YWwpO1xyXG4gICAgICB0aGlzLl92YWx1ZSA9IHZhbDtcclxuXHJcbiAgICAgIGlmICh0aGlzLl9sYXN0VmFsdWUgIT09IHZhbCkge1xyXG4gICAgICAgIHRoaXMuX2xhc3RWYWx1ZSA9IHZhbDtcclxuICAgICAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHZhbCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoYXJncz86IFNsaWRlckFyZ3MpIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgYXJncyA9IGFyZ3MgfHwge307XHJcbiAgICB0aGlzLl92YWx1ZSA9IDA7XHJcbiAgICB0aGlzLl9sYXN0VmFsdWUgPSAwO1xyXG5cclxuICAgIHRoaXMucHJlY2lzaW9uID0gKGFyZ3MucHJlY2lzaW9uID09PSB1bmRlZmluZWQpID8gMiA6IGFyZ3MucHJlY2lzaW9uO1xyXG4gICAgdGhpcy5fbWluID0gKGFyZ3MubWluID09PSB1bmRlZmluZWQpID8gMCA6IGFyZ3MubWluO1xyXG4gICAgdGhpcy5fbWF4ID0gKGFyZ3MubWF4ID09PSB1bmRlZmluZWQpID8gMSA6IGFyZ3MubWF4O1xyXG5cclxuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3VpLXNsaWRlcicpO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudEJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50QmFyLnVpID0gdGhpcztcclxuICAgIHRoaXMuZWxlbWVudEJhci5jbGFzc0xpc3QuYWRkKCdiYXInKTtcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnRCYXIpO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudEhhbmRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50SGFuZGxlLnVpID0gdGhpcztcclxuICAgIHRoaXMuZWxlbWVudEhhbmRsZS50YWJJbmRleCA9IDA7XHJcbiAgICB0aGlzLmVsZW1lbnRIYW5kbGUuY2xhc3NMaXN0LmFkZCgnaGFuZGxlJyk7XHJcbiAgICB0aGlzLmVsZW1lbnRCYXIuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50SGFuZGxlKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5fb25Nb3VzZURvd24uYmluZCh0aGlzKSwgZmFsc2UpO1xyXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLl9vblRvdWNoU3RhcnQuYmluZCh0aGlzKSwgZmFsc2UpO1xyXG5cclxuICAgIHRoaXMuZXZ0VG91Y2hJZCA9IG51bGw7XHJcblxyXG4gICAgdGhpcy5vbignY2hhbmdlJywgdGhpcy5fb25DaGFuZ2UpO1xyXG5cclxuICAgIC8vIGFycm93cyAtIGNoYW5nZVxyXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9vbktleURvd24uYmluZCh0aGlzKSwgZmFsc2UpO1xyXG5cclxuICB9XHJcblxyXG5cclxuICBwcml2YXRlIGV2dE1vdXNlTW92ZShldnQ6IE1vdXNlRXZlbnQpIHtcclxuICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgIHRoaXMuX29uU2xpZGVNb3ZlKGV2dC5wYWdlWCk7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBldnRNb3VzZVVwKGV2dDogTW91c2VFdmVudCkge1xyXG4gICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgdGhpcy5fb25TbGlkZUVuZChldnQucGFnZVgpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgZXZ0VG91Y2hNb3ZlKGV2dDogVG91Y2hFdmVudCkge1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBldnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgbGV0IHRvdWNoID0gZXZ0LmNoYW5nZWRUb3VjaGVzW2ldO1xyXG5cclxuICAgICAgaWYgKHRvdWNoLmlkZW50aWZpZXIgIT09IHRoaXMuZXZ0VG91Y2hJZClcclxuICAgICAgICBjb250aW51ZTtcclxuXHJcbiAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICB0aGlzLl9vblNsaWRlTW92ZSh0b3VjaC5wYWdlWCk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgZXZ0VG91Y2hFbmQoZXZ0OiBUb3VjaEV2ZW50KSB7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGV2dC5jaGFuZ2VkVG91Y2hlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBsZXQgdG91Y2ggPSBldnQuY2hhbmdlZFRvdWNoZXNbaV07XHJcblxyXG4gICAgICBpZiAodG91Y2guaWRlbnRpZmllciAhPT0gdGhpcy5ldnRUb3VjaElkKVxyXG4gICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgIHRoaXMuX29uU2xpZGVFbmQodG91Y2gucGFnZVgpO1xyXG4gICAgICB0aGlzLmV2dFRvdWNoSWQgPSBudWxsO1xyXG4gICAgICBicmVhaztcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbkNoYW5nZSgpIHtcclxuICAgIGlmICghdGhpcy5yZW5kZXJDaGFuZ2VzKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5mbGFzaCgpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uS2V5RG93bihldnQ6IEtleWJvYXJkRXZlbnQpIHtcclxuICAgIGlmIChldnQua2V5Q29kZSA9PT0gMjcpXHJcbiAgICAgIHJldHVybiB0aGlzLmVsZW1lbnRIYW5kbGUuYmx1cigpO1xyXG5cclxuICAgIGlmICh0aGlzLmRpc2FibGVkIHx8IFszNywgMzldLmluZGV4T2YoZXZ0LmtleUNvZGUpID09PSAtMSlcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgIGxldCB4ID0gZXZ0LmtleUNvZGUgPT09IDM3ID8gLTEgOiAxO1xyXG5cclxuICAgIGlmIChldnQuc2hpZnRLZXkpXHJcbiAgICAgIHggKj0gMTA7XHJcblxyXG4gICAgbGV0IHJlY3QgPSB0aGlzLmVsZW1lbnQhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgbGV0IHN0ZXAgPSAodGhpcy5fbWF4IC0gdGhpcy5fbWluKSAvIHJlY3Qud2lkdGg7XHJcbiAgICBsZXQgdmFsdWUgPSBNYXRoLm1heCh0aGlzLl9taW4sIE1hdGgubWluKHRoaXMuX21heCwgdGhpcy52YWx1ZSArIHggKiBzdGVwKSk7XHJcbiAgICB2YWx1ZSA9IHBhcnNlRmxvYXQodmFsdWUudG9GaXhlZCh0aGlzLnByZWNpc2lvbikpO1xyXG5cclxuICAgIHRoaXMucmVuZGVyQ2hhbmdlcyA9IGZhbHNlO1xyXG4gICAgdGhpcy5fdXBkYXRlSGFuZGxlKHZhbHVlKTtcclxuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcclxuICAgIHRoaXMucmVuZGVyQ2hhbmdlcyA9IHRydWU7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIF9vbkxpbmtDaGFuZ2UodmFsdWU6IG51bWJlcikge1xyXG4gICAgdGhpcy5fdXBkYXRlSGFuZGxlKHZhbHVlKTtcclxuICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XHJcbiAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHZhbHVlIHx8IDApO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX3VwZGF0ZUhhbmRsZSh2YWx1ZTogbnVtYmVyKSB7XHJcbiAgICB0aGlzLmVsZW1lbnRIYW5kbGUuc3R5bGUubGVmdCA9IChNYXRoLm1heCgwLCBNYXRoLm1pbigxLCAoKHZhbHVlIHx8IDApIC0gdGhpcy5fbWluKSAvICh0aGlzLl9tYXggLSB0aGlzLl9taW4pKSkgKiAxMDApICsgJyUnO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uTW91c2VEb3duKGV2dDogTW91c2VFdmVudCkge1xyXG4gICAgaWYgKGV2dC5idXR0b24gIT09IDAgfHwgdGhpcy5kaXNhYmxlZClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX29uU2xpZGVTdGFydChldnQucGFnZVgpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uVG91Y2hTdGFydChldnQ6IFRvdWNoRXZlbnQpIHtcclxuICAgIGlmICh0aGlzLmRpc2FibGVkKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBldnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgbGV0IHRvdWNoID0gZXZ0LmNoYW5nZWRUb3VjaGVzW2ldO1xyXG4gICAgICBpZiAoISg8SFRNTEVsZW1lbnQ+KHRvdWNoLnRhcmdldCkpLnVpIHx8ICg8SFRNTEVsZW1lbnQ+KHRvdWNoLnRhcmdldCkpLnVpICE9PSB0aGlzKVxyXG4gICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgdGhpcy5ldnRUb3VjaElkID0gdG91Y2guaWRlbnRpZmllcjtcclxuICAgICAgdGhpcy5fb25TbGlkZVN0YXJ0KHRvdWNoLnBhZ2VYKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfb25TbGlkZVN0YXJ0KHBhZ2VYOiBudW1iZXIpIHtcclxuICAgIHRoaXMuZWxlbWVudEhhbmRsZS5mb2N1cygpO1xyXG5cclxuICAgIHRoaXMucmVuZGVyQ2hhbmdlcyA9IGZhbHNlO1xyXG5cclxuICAgIGlmICh0aGlzLmV2dFRvdWNoSWQgPT09IG51bGwpIHtcclxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMuZXZ0TW91c2VNb3ZlLmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLmV2dE1vdXNlVXAuYmluZCh0aGlzKSwgZmFsc2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMuZXZ0VG91Y2hNb3ZlLmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5ldnRUb3VjaEVuZC5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5jbGFzcyEuYWRkKCdhY3RpdmUnKTtcclxuXHJcbiAgICB0aGlzLmVtaXQoJ3N0YXJ0JywgdGhpcy52YWx1ZSk7XHJcblxyXG4gICAgdGhpcy5fb25TbGlkZU1vdmUocGFnZVgpO1xyXG5cclxuICAgIGlmICh0aGlzLl9saW5rICYmIHRoaXMuX2xpbmsuaGlzdG9yeSlcclxuICAgICAgdGhpcy5fbGluay5oaXN0b3J5LmNvbWJpbmUgPSB0cnVlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uU2xpZGVNb3ZlKHBhZ2VYOiBudW1iZXIpIHtcclxuICAgIGxldCByZWN0ID0gdGhpcy5lbGVtZW50IS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIGxldCB4ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgKHBhZ2VYIC0gcmVjdC5sZWZ0KSAvIHJlY3Qud2lkdGgpKTtcclxuXHJcbiAgICBsZXQgcmFuZ2UgPSB0aGlzLl9tYXggLSB0aGlzLl9taW47XHJcbiAgICBsZXQgdmFsdWUgPSAoeCAqIHJhbmdlKSArIHRoaXMuX21pbjtcclxuICAgIHZhbHVlID0gcGFyc2VGbG9hdCh2YWx1ZS50b0ZpeGVkKHRoaXMucHJlY2lzaW9uKSk7XHJcblxyXG4gICAgdGhpcy5fdXBkYXRlSGFuZGxlKHZhbHVlKTtcclxuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vblNsaWRlRW5kKHBhZ2VYOiBudW1iZXIpIHtcclxuICAgIHRoaXMuX29uU2xpZGVNb3ZlKHBhZ2VYKTtcclxuXHJcbiAgICB0aGlzLnJlbmRlckNoYW5nZXMgPSB0cnVlO1xyXG5cclxuICAgIHRoaXMuY2xhc3MhLnJlbW92ZSgnYWN0aXZlJyk7XHJcblxyXG4gICAgaWYgKHRoaXMuZXZ0VG91Y2hJZCA9PT0gbnVsbCkge1xyXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5ldnRNb3VzZU1vdmUuYmluZCh0aGlzKSk7XHJcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5ldnRNb3VzZVVwLmJpbmQodGhpcykpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMuZXZ0VG91Y2hNb3ZlLmJpbmQodGhpcykpO1xyXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLmV2dFRvdWNoRW5kLmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLl9saW5rICYmIHRoaXMuX2xpbmsuaGlzdG9yeSlcclxuICAgICAgdGhpcy5fbGluay5oaXN0b3J5LmNvbWJpbmUgPSBmYWxzZTtcclxuXHJcbiAgICB0aGlzLmVtaXQoJ2VuZCcsIHRoaXMudmFsdWUpO1xyXG4gIH07XHJcblxyXG5cclxuXHJcblxyXG59XHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTbGlkZXJBcmdzIHtcclxuICBwcmVjaXNpb24/OiBudW1iZXI7XHJcbiAgbWluPzogbnVtYmVyO1xyXG4gIG1heD86IG51bWJlcjtcclxufSIsImltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiLi9lbGVtZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVGV4dEZpZWxkIGV4dGVuZHMgRWxlbWVudCB7XHJcblxyXG4gIHB1YmxpYyBlbGVtZW50SW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQ7XHJcblxyXG4gIHB1YmxpYyBldnRLZXlDaGFuZ2U6IGJvb2xlYW47XHJcbiAgcHVibGljIGlnbm9yZUNoYW5nZTogYm9vbGVhbjtcclxuICBwdWJsaWMgYmx1ck9uRW50ZXI6IGJvb2xlYW47XHJcbiAgcHVibGljIHJlZm9jdXNhYmxlOiBib29sZWFuO1xyXG5cclxuXHJcbiAgcHVibGljIGdldCB2YWx1ZSgpOiBzdHJpbmcge1xyXG4gICAgaWYgKHRoaXMuX2xpbmspIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2xpbmsuZ2V0KHRoaXMucGF0aCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5lbGVtZW50SW5wdXQudmFsdWU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgdmFsdWUodmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICh0aGlzLl9saW5rKSB7XHJcbiAgICAgIC8vIFRPRE9cclxuICAgICAgLy8gaWYgKCF0aGlzLl9saW5rLnNldCh0aGlzLnBhdGgsIHZhbHVlKSkge1xyXG4gICAgICAvLyAgIHRoaXMuZWxlbWVudElucHV0LnZhbHVlID0gdGhpcy5fbGluay5nZXQodGhpcy5wYXRoKTtcclxuICAgICAgLy8gfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKHRoaXMuZWxlbWVudElucHV0LnZhbHVlID09PSB2YWwpXHJcbiAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgdGhpcy5lbGVtZW50SW5wdXQudmFsdWUgPSB2YWwgfHwgJyc7XHJcbiAgICAgIHRoaXMuZW1pdCgnY2hhbmdlJywgdmFsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgZ2V0IHBsYWNlaG9sZGVyKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50IS5nZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJykgfHwgJyc7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgcGxhY2Vob2xkZXIodmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICghdmFsKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEucmVtb3ZlQXR0cmlidXRlKCdwbGFjZWhvbGRlcicpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgdmFsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgcHJveHkoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnQhLmdldEF0dHJpYnV0ZSgncHJveHknKSB8fCAnJztcclxuICB9XHJcbiAgcHVibGljIHNldCBwcm94eSh2YWw6IHN0cmluZykge1xyXG4gICAgaWYgKCF2YWwpIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5yZW1vdmVBdHRyaWJ1dGUoJ3Byb3h5Jyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmVsZW1lbnQhLnNldEF0dHJpYnV0ZSgncHJveHknLCB2YWwpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBrZXlDaGFuZ2UoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5ldnRLZXlDaGFuZ2U7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQga2V5Q2hhbmdlKHZhbDogYm9vbGVhbikge1xyXG4gICAgaWYgKHRoaXMuZXZ0S2V5Q2hhbmdlID09PSAhIXZhbClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmICh2YWwpIHtcclxuICAgICAgdGhpcy5lbGVtZW50SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9vbkNoYW5nZS5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmVsZW1lbnRJbnB1dC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXl1cCcsIHRoaXMuX29uQ2hhbmdlLmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihwbGFjZWhvbGRlcj86IHN0cmluZywgdmFsdWU/OiBzdHJpbmcpIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndWktdGV4dC1maWVsZCcpO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudElucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LnVpID0gdGhpcztcclxuICAgIHRoaXMuZWxlbWVudElucHV0LmNsYXNzTGlzdC5hZGQoJ2ZpZWxkJyk7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC50eXBlID0gJ3RleHQnO1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQudGFiSW5kZXggPSAwO1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCB0aGlzLl9vbklucHV0Rm9jdXMuYmluZCh0aGlzKSwgZmFsc2UpO1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIHRoaXMuX29uSW5wdXRCbHVyLmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnRJbnB1dCk7XHJcblxyXG4gICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpXHJcbiAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLl9vbkNoYW5nZS5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5fb25LZXlEb3duLmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51JywgdGhpcy5fb25GdWxsU2VsZWN0LmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgIHRoaXMuZXZ0S2V5Q2hhbmdlID0gZmFsc2U7XHJcbiAgICB0aGlzLmlnbm9yZUNoYW5nZSA9IGZhbHNlO1xyXG5cclxuICAgIHRoaXMuYmx1ck9uRW50ZXIgPSB0cnVlO1xyXG4gICAgdGhpcy5yZWZvY3VzYWJsZSA9IHRydWU7XHJcblxyXG4gICAgdGhpcy5vbignZGlzYWJsZScsIHRoaXMuX29uRGlzYWJsZSk7XHJcbiAgICB0aGlzLm9uKCdlbmFibGUnLCB0aGlzLl9vbkVuYWJsZSk7XHJcbiAgICB0aGlzLm9uKCdjaGFuZ2UnLCB0aGlzLl9vbkNoYW5nZUZpZWxkKTtcclxuXHJcbiAgICBpZiAocGxhY2Vob2xkZXIpXHJcbiAgICAgIHRoaXMucGxhY2Vob2xkZXIgPSBwbGFjZWhvbGRlcjtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgX29uTGlua0NoYW5nZSh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC52YWx1ZSA9IHZhbHVlO1xyXG4gICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbkNoYW5nZSgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLmlnbm9yZUNoYW5nZSkgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMudmFsdWUgPSB0aGlzLnZhbHVlIHx8ICcnO1xyXG5cclxuICAgIGlmICghdGhpcy5fbGluaylcclxuICAgICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB0aGlzLnZhbHVlKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uS2V5RG93bihldnQ6IEtleWJvYXJkRXZlbnQpIHtcclxuICAgIGlmIChldnQua2V5Q29kZSA9PT0gMjcpIHtcclxuICAgICAgKDxIVE1MSW5wdXRFbGVtZW50PmV2dC50YXJnZXQpLmJsdXIoKTtcclxuICAgIH0gZWxzZSBpZiAodGhpcy5ibHVyT25FbnRlciAmJiBldnQua2V5Q29kZSA9PT0gMTMpIHtcclxuICAgICAgbGV0IGZvY3VzZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgICAgIGxldCBwYXJlbnQ6IE51bGxhYmxlPEVsZW1lbnQ+ID0gdGhpcy5wYXJlbnQ7XHJcbiAgICAgIHdoaWxlIChwYXJlbnQpIHtcclxuICAgICAgICBpZiAocGFyZW50LmVsZW1lbnQgJiYgcGFyZW50LmVsZW1lbnQuZm9jdXMpIHtcclxuICAgICAgICAgIHBhcmVudC5lbGVtZW50LmZvY3VzKCk7XHJcbiAgICAgICAgICBmb2N1c2VkID0gdHJ1ZTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50O1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoIWZvY3VzZWQpXHJcbiAgICAgICAgKDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0KS5ibHVyKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbkZ1bGxTZWxlY3QoKTogdm9pZCB7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5zZWxlY3QoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBmb2N1cyhzZWxlY3Q6IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LmZvY3VzKCk7XHJcbiAgICBpZiAoc2VsZWN0KSB0aGlzLmVsZW1lbnRJbnB1dC5zZWxlY3QoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uSW5wdXRGb2N1cygpOiB2b2lkIHtcclxuICAgIHRoaXMuY2xhc3MhLmFkZCgnZm9jdXMnKTtcclxuICAgIHRoaXMuZW1pdCgnaW5wdXQ6Zm9jdXMnKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uSW5wdXRCbHVyKCk6IHZvaWQge1xyXG4gICAgdGhpcy5jbGFzcyEucmVtb3ZlKCdmb2N1cycpO1xyXG4gICAgdGhpcy5lbWl0KCdpbnB1dDpibHVyJyk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5yZWFkT25seSA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LnJlYWRPbmx5ID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbkNoYW5nZUZpZWxkKCk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLnJlbmRlckNoYW5nZXMpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLmZsYXNoKCk7XHJcbiAgfVxyXG5cclxufSIsImltcG9ydCB7IEVsZW1lbnQgfSBmcm9tIFwiLi9lbGVtZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVGV4dEFyZWFGaWVsZCBleHRlbmRzIEVsZW1lbnQge1xyXG5cclxuICBwdWJsaWMgZWxlbWVudElucHV0OiBIVE1MVGV4dEFyZWFFbGVtZW50O1xyXG4gIHB1YmxpYyBldnRLZXlDaGFuZ2U6IGJvb2xlYW47XHJcbiAgcHVibGljIGlnbm9yZUNoYW5nZTogYm9vbGVhbjtcclxuICBwdWJsaWMgYmx1ck9uRW50ZXI6IGJvb2xlYW47XHJcbiAgcHVibGljIHJlZm9jdXNhYmxlOiBib29sZWFuO1xyXG5cclxuICBwdWJsaWMgZ2V0IHZhbHVlKCk6IHN0cmluZyB7XHJcbiAgICBpZiAodGhpcy5fbGluaykge1xyXG4gICAgICByZXR1cm4gdGhpcy5fbGluay5nZXQodGhpcy5wYXRoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmVsZW1lbnRJbnB1dC52YWx1ZTtcclxuICAgIH1cclxuICB9XHJcbiAgcHVibGljIHNldCB2YWx1ZSh2YWw6IHN0cmluZykge1xyXG4gICAgaWYgKHRoaXMuX2xpbmspIHtcclxuICAgICAgLy8gVE9ET1xyXG4gICAgICAvLyBpZiAoIXRoaXMuX2xpbmsuc2V0KHRoaXMucGF0aCwgdmFsdWUpKSB7XHJcbiAgICAgIC8vICAgdGhpcy5lbGVtZW50SW5wdXQudmFsdWUgPSB0aGlzLl9saW5rLmdldCh0aGlzLnBhdGgpO1xyXG4gICAgICAvLyB9XHJcblxyXG4gICAgICB0aGlzLl9saW5rLnNldCh0aGlzLnBhdGgsIHZhbCk7XHJcbiAgICAgIHRoaXMuZWxlbWVudElucHV0LnZhbHVlID0gdGhpcy5fbGluay5nZXQodGhpcy5wYXRoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmICh0aGlzLmVsZW1lbnRJbnB1dC52YWx1ZSA9PT0gdmFsKVxyXG4gICAgICAgIHJldHVybjtcclxuXHJcbiAgICAgIHRoaXMuZWxlbWVudElucHV0LnZhbHVlID0gdmFsIHx8ICcnO1xyXG4gICAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHZhbCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHBsYWNlaG9sZGVyKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50IS5nZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJykgfHwgJyc7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgcGxhY2Vob2xkZXIodmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICghdmFsKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEucmVtb3ZlQXR0cmlidXRlKCdwbGFjZWhvbGRlcicpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgdmFsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQga2V5Q2hhbmdlKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZXZ0S2V5Q2hhbmdlO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGtleUNoYW5nZSh2YWw6IGJvb2xlYW4pIHtcclxuICAgIGlmICh0aGlzLmV2dEtleUNoYW5nZSA9PT0gISF2YWwpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBpZiAodmFsKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5fb25DaGFuZ2UuYmluZCh0aGlzKSwgZmFsc2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5lbGVtZW50SW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9vbkNoYW5nZS5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgcHJveHkoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnQhLmdldEF0dHJpYnV0ZSgncHJveHknKSB8fCAnJztcclxuICB9XHJcbiAgcHVibGljIHNldCBwcm94eSh2YWw6IHN0cmluZykge1xyXG4gICAgaWYgKCF2YWwpIHtcclxuICAgICAgdGhpcy5lbGVtZW50IS5yZW1vdmVBdHRyaWJ1dGUoJ3Byb3h5Jyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmVsZW1lbnQhLnNldEF0dHJpYnV0ZSgncHJveHknLCB2YWwpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKHBsYWNlaG9sZGVyPzogc3RyaW5nLCB2YWx1ZT86IHN0cmluZywgYmx1ck9uRW50ZXI/OiBib29sZWFuKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3VpLXRleHRhcmVhLWZpZWxkJyk7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQudWkgPSB0aGlzO1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQuY2xhc3NMaXN0LmFkZCgnZmllbGQnKTtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LnRhYkluZGV4ID0gMDtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgdGhpcy5fb25JbnB1dEZvY3VzLmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCB0aGlzLl9vbklucHV0Qmx1ci5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50SW5wdXQpO1xyXG5cclxuICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKVxyXG4gICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdGhpcy5fb25DaGFuZ2UuYmluZCh0aGlzKSwgZmFsc2UpO1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX29uS2V5RG93bi5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjb250ZXh0bWVudScsIHRoaXMuX29uRnVsbFNlbGVjdC5iaW5kKHRoaXMpLCBmYWxzZSk7XHJcbiAgICB0aGlzLmV2dEtleUNoYW5nZSA9IGZhbHNlO1xyXG4gICAgdGhpcy5pZ25vcmVDaGFuZ2UgPSBmYWxzZTtcclxuXHJcbiAgICB0aGlzLmJsdXJPbkVudGVyID0gYmx1ck9uRW50ZXIgIT09IHVuZGVmaW5lZCA/IGJsdXJPbkVudGVyIDogdHJ1ZTtcclxuICAgIHRoaXMucmVmb2N1c2FibGUgPSB0cnVlO1xyXG5cclxuICAgIHRoaXMub24oJ2Rpc2FibGUnLCB0aGlzLl9vbkRpc2FibGUpO1xyXG4gICAgdGhpcy5vbignZW5hYmxlJywgdGhpcy5fb25FbmFibGUpO1xyXG4gICAgdGhpcy5vbignY2hhbmdlJywgdGhpcy5fb25DaGFuZ2VGaWVsZCk7XHJcblxyXG4gICAgaWYgKHBsYWNlaG9sZGVyKVxyXG4gICAgICB0aGlzLnBsYWNlaG9sZGVyID0gcGxhY2Vob2xkZXI7XHJcblxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25DaGFuZ2UoKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5pZ25vcmVDaGFuZ2UpIHJldHVybjtcclxuXHJcbiAgICB0aGlzLnZhbHVlID0gdGhpcy52YWx1ZSB8fCAnJztcclxuXHJcbiAgICBpZiAoIXRoaXMuX2xpbmspXHJcbiAgICAgIHRoaXMuZW1pdCgnY2hhbmdlJywgdGhpcy52YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbktleURvd24oZXZ0OiBLZXlib2FyZEV2ZW50KTogdm9pZCB7XHJcbiAgICBpZiAoZXZ0LmtleUNvZGUgPT09IDI3KSB7XHJcbiAgICAgICg8SFRNTEVsZW1lbnQ+ZXZ0LnRhcmdldCkuYmx1cigpO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLmJsdXJPbkVudGVyICYmIGV2dC5rZXlDb2RlID09PSAxMyAmJiAhZXZ0LnNoaWZ0S2V5KSB7XHJcbiAgICAgIGxldCBmb2N1c2VkOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gICAgICBsZXQgcGFyZW50OiBOdWxsYWJsZTxFbGVtZW50PiA9IHRoaXMucGFyZW50O1xyXG4gICAgICB3aGlsZSAocGFyZW50KSB7XHJcbiAgICAgICAgaWYgKHBhcmVudC5lbGVtZW50ICYmIHBhcmVudC5lbGVtZW50LmZvY3VzKSB7XHJcbiAgICAgICAgICBwYXJlbnQuZWxlbWVudC5mb2N1cygpO1xyXG4gICAgICAgICAgZm9jdXNlZCA9IHRydWU7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudDtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCFmb2N1c2VkKVxyXG4gICAgICAgICg8SFRNTEVsZW1lbnQ+ZXZ0LnRhcmdldCkuYmx1cigpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25GdWxsU2VsZWN0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQuc2VsZWN0KCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbklucHV0Rm9jdXMoKTogdm9pZCB7XHJcbiAgICB0aGlzLmNsYXNzIS5hZGQoJ2ZvY3VzJyk7XHJcbiAgICB0aGlzLmVtaXQoJ2lucHV0OmZvY3VzJyk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbklucHV0Qmx1cigpOiB2b2lkIHtcclxuICAgIHRoaXMuY2xhc3MhLnJlbW92ZSgnZm9jdXMnKTtcclxuICAgIHRoaXMuZW1pdCgnaW5wdXQ6Ymx1cicpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgdGhpcy5lbGVtZW50SW5wdXQucmVhZE9ubHkgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25FbmFibGUoKSB7XHJcbiAgICB0aGlzLmVsZW1lbnRJbnB1dC5yZWFkT25seSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25DaGFuZ2VGaWVsZCgpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5yZW5kZXJDaGFuZ2VzKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5mbGFzaCgpO1xyXG4gIH07XHJcblxyXG4gIHB1YmxpYyBmb2N1cyhzZWxlY3Q6IGJvb2xlYW4pIHtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LmZvY3VzKCk7XHJcbiAgICBpZiAoc2VsZWN0KSB0aGlzLmVsZW1lbnRJbnB1dC5zZWxlY3QoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBfb25MaW5rQ2hhbmdlKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuZWxlbWVudElucHV0LnZhbHVlID0gdmFsdWU7XHJcbiAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHZhbHVlKTtcclxuICB9XHJcblxyXG5cclxuXHJcbn0iLCJpbXBvcnQgeyBDb250YWluZXJFbGVtZW50IH0gZnJvbSBcIi4vY29udGFpbmVyLWVsZW1lbnRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBUb29sdGlwIGV4dGVuZHMgQ29udGFpbmVyRWxlbWVudCB7XHJcblxyXG4gIHB1YmxpYyBhcnJvdzogSFRNTEVsZW1lbnQ7XHJcbiAgcHVibGljIGhvdmVyYWJsZTogYm9vbGVhbjtcclxuICBwdWJsaWMgeDogbnVtYmVyO1xyXG4gIHB1YmxpYyB5OiBudW1iZXI7XHJcblxyXG4gIHByaXZhdGUgX2FsaWduOiBzdHJpbmc7XHJcbiAgcHVibGljIGdldCBhbGlnbigpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuX2FsaWduO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGFsaWduKHZhbDogc3RyaW5nKSB7XHJcbiAgICBpZiAodGhpcy5fYWxpZ24gPT09IHZhbClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuY2xhc3MhLnJlbW92ZSgnYWxpZ24tJyArIHRoaXMuX2FsaWduKTtcclxuICAgIHRoaXMuX2FsaWduID0gdmFsO1xyXG4gICAgdGhpcy5jbGFzcyEuYWRkKCdhbGlnbi0nICsgdGhpcy5fYWxpZ24pO1xyXG5cclxuICAgIHRoaXMuX3JlZmxvdygpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBodG1sKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5pbm5lckVsZW1lbnQhLmlubmVySFRNTDtcclxuICB9XHJcbiAgcHVibGljIHNldCBodG1sKHZhbDogc3RyaW5nKSB7XHJcbiAgICBpZiAodGhpcy5pbm5lckVsZW1lbnQhLmlubmVySFRNTCA9PT0gdmFsKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5pbm5lckVsZW1lbnQhLmlubmVySFRNTCA9IHZhbDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgdGV4dCgpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuaW5uZXJFbGVtZW50IS50ZXh0Q29udGVudCB8fCAnJztcclxuICB9XHJcbiAgcHVibGljIHNldCB0ZXh0KHZhbDogc3RyaW5nKSB7XHJcbiAgICBpZiAodGhpcy5pbm5lckVsZW1lbnQhLnRleHRDb250ZW50ID09PSB2YWwpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLmlubmVyRWxlbWVudCEudGV4dENvbnRlbnQgPSB2YWw7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGZsaXAoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5jbGFzcyEuY29udGFpbnMoJ2ZsaXAnKTtcclxuICB9XHJcbiAgcHVibGljIHNldCBmbGlwKHZhbDogYm9vbGVhbikge1xyXG4gICAgaWYgKHRoaXMuY2xhc3MhLmNvbnRhaW5zKCdmbGlwJykgPT09IHZhbClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmICh2YWwpIHtcclxuICAgICAgdGhpcy5jbGFzcyEuYWRkKCdmbGlwJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmNsYXNzIS5yZW1vdmUoJ2ZsaXAnKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9yZWZsb3coKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihhcmdzPzogVG9vbHRpcEFyZ3MpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICBhcmdzID0gYXJncyB8fCB7fTtcclxuICAgIGxldCBzZWxmID0gdGhpcztcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1aS10b29sdGlwJywgJ2FsaWduLWxlZnQnKTtcclxuXHJcbiAgICB0aGlzLmlubmVyRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5pbm5lckVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnaW5uZXInKTtcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmlubmVyRWxlbWVudCk7XHJcblxyXG4gICAgdGhpcy5hcnJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5hcnJvdy5jbGFzc0xpc3QuYWRkKCdhcnJvdycpO1xyXG4gICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuYXJyb3cpO1xyXG5cclxuICAgIHRoaXMuaG92ZXJhYmxlID0gYXJncy5ob3ZlcmFibGUgfHwgZmFsc2U7XHJcbiAgICB0aGlzLnggPSBhcmdzLnggfHwgMDtcclxuICAgIHRoaXMueSA9IGFyZ3MueSB8fCAwO1xyXG4gICAgdGhpcy5fYWxpZ24gPSAnbGVmdCc7XHJcbiAgICB0aGlzLmFsaWduID0gYXJncy5hbGlnbiB8fCAnbGVmdCc7XHJcblxyXG4gICAgdGhpcy5vbignc2hvdycsIHRoaXMuX3JlZmxvdyk7XHJcbiAgICB0aGlzLmhpZGRlbiA9IGFyZ3MuaGlkZGVuICE9PSB1bmRlZmluZWQgPyBhcmdzLmhpZGRlbiA6IHRydWU7XHJcbiAgICBpZiAoYXJncy5odG1sKSB7XHJcbiAgICAgIHRoaXMuaHRtbCA9IGFyZ3MuaHRtbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMudGV4dCA9IGFyZ3MudGV4dCB8fCAnJztcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgdGhpcy5fb25Nb3VzZU92ZXIuYmluZCh0aGlzKSwgZmFsc2UpO1xyXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCB0aGlzLl9vbk1vdXNlTGVhdmUuYmluZCh0aGlzKSwgZmFsc2UpO1xyXG5cclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uTW91c2VPdmVyKGV2dDogTW91c2VFdmVudCk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLmhvdmVyYWJsZSlcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuaGlkZGVuID0gZmFsc2U7XHJcbiAgICB0aGlzLmVtaXQoJ2hvdmVyJywgZXZ0KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uTW91c2VMZWF2ZSgpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5ob3ZlcmFibGUpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLmhpZGRlbiA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgcG9zaXRpb24oeDogbnVtYmVyLCB5OiBudW1iZXIpOiB2b2lkIHtcclxuICAgIHggPSBNYXRoLmZsb29yKHgpO1xyXG4gICAgeSA9IE1hdGguZmxvb3IoeSk7XHJcblxyXG4gICAgaWYgKHRoaXMueCA9PT0geCAmJiB0aGlzLnkgPT09IHkpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLnggPSB4O1xyXG4gICAgdGhpcy55ID0geTtcclxuXHJcbiAgICB0aGlzLl9yZWZsb3coKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX3JlZmxvdygpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLmhpZGRlbilcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudCEuc3R5bGUudG9wID0gJyc7XHJcbiAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLnJpZ2h0ID0gJyc7XHJcbiAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLmJvdHRvbSA9ICcnO1xyXG4gICAgdGhpcy5lbGVtZW50IS5zdHlsZS5sZWZ0ID0gJyc7XHJcblxyXG4gICAgdGhpcy5hcnJvdy5zdHlsZS50b3AgPSAnJztcclxuICAgIHRoaXMuYXJyb3cuc3R5bGUucmlnaHQgPSAnJztcclxuICAgIHRoaXMuYXJyb3cuc3R5bGUuYm90dG9tID0gJyc7XHJcbiAgICB0aGlzLmFycm93LnN0eWxlLmxlZnQgPSAnJztcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cclxuICAgIC8vIGFsaWdubWVudFxyXG4gICAgc3dpdGNoICh0aGlzLl9hbGlnbikge1xyXG4gICAgICBjYXNlICd0b3AnOlxyXG4gICAgICAgIHRoaXMuZWxlbWVudCEuc3R5bGUudG9wID0gdGhpcy55ICsgJ3B4JztcclxuICAgICAgICBpZiAodGhpcy5mbGlwKSB7XHJcbiAgICAgICAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLnJpZ2h0ID0gJ2NhbGMoMTAwJSAtICcgKyB0aGlzLnggKyAncHgpJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5lbGVtZW50IS5zdHlsZS5sZWZ0ID0gdGhpcy54ICsgJ3B4JztcclxuICAgICAgICB9XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ3JpZ2h0JzpcclxuICAgICAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLnRvcCA9IHRoaXMueSArICdweCc7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50IS5zdHlsZS5yaWdodCA9ICdjYWxjKDEwMCUgLSAnICsgdGhpcy54ICsgJ3B4KSc7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ2JvdHRvbSc6XHJcbiAgICAgICAgdGhpcy5lbGVtZW50IS5zdHlsZS5ib3R0b20gPSAnY2FsYygxMDAlIC0gJyArIHRoaXMueSArICdweCknO1xyXG4gICAgICAgIGlmICh0aGlzLmZsaXApIHtcclxuICAgICAgICAgIHRoaXMuZWxlbWVudCEuc3R5bGUucmlnaHQgPSAnY2FsYygxMDAlIC0gJyArIHRoaXMueCArICdweCknO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLmxlZnQgPSB0aGlzLnggKyAncHgnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnbGVmdCc6XHJcbiAgICAgICAgdGhpcy5lbGVtZW50IS5zdHlsZS50b3AgPSB0aGlzLnkgKyAncHgnO1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCEuc3R5bGUubGVmdCA9IHRoaXMueCArICdweCc7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gbGltaXQgdG8gc2NyZWVuIGJvdW5kc1xyXG4gICAgbGV0IHJlY3QgPSB0aGlzLmVsZW1lbnQhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgIGlmIChyZWN0LmxlZnQgPCAwKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuc3R5bGUubGVmdCA9ICcwcHgnO1xyXG4gICAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLnJpZ2h0ID0gJyc7XHJcbiAgICB9XHJcbiAgICBpZiAocmVjdC50b3AgPCAwKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuc3R5bGUudG9wID0gJzBweCc7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuc3R5bGUuYm90dG9tID0gJyc7XHJcbiAgICB9XHJcbiAgICBpZiAocmVjdC5yaWdodCA+IHdpbmRvdy5pbm5lcldpZHRoKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuc3R5bGUucmlnaHQgPSAnMHB4JztcclxuICAgICAgdGhpcy5lbGVtZW50IS5zdHlsZS5sZWZ0ID0gJyc7XHJcbiAgICAgIHRoaXMuYXJyb3cuc3R5bGUubGVmdCA9IE1hdGguZmxvb3IocmVjdC5yaWdodCAtIHdpbmRvdy5pbm5lcldpZHRoICsgOCkgKyAncHgnO1xyXG4gICAgfVxyXG4gICAgaWYgKHJlY3QuYm90dG9tID4gd2luZG93LmlubmVySGVpZ2h0KSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuc3R5bGUuYm90dG9tID0gJzBweCc7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuc3R5bGUudG9wID0gJyc7XHJcbiAgICAgIHRoaXMuYXJyb3cuc3R5bGUudG9wID0gTWF0aC5mbG9vcihyZWN0LmJvdHRvbSAtIHdpbmRvdy5pbm5lckhlaWdodCArIDgpICsgJ3B4JztcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmVsZW1lbnQhLnN0eWxlLmRpc3BsYXkgPSAnJztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBldnRIb3ZlcigpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZXZ0Qmx1cigpOiB2b2lkIHtcclxuXHJcbiAgfVxyXG5cclxuXHJcbiAgcHVibGljIHN0YXRpYyBhdHRhY2goYXJnczogVG9vbHRpcEFyZ3MpOiBUb29sdGlwIHtcclxuICAgIGxldCBkYXRhOiBUb29sdGlwQXJncyA9IHtcclxuICAgICAgYWxpZ246IGFyZ3MuYWxpZ24sXHJcbiAgICAgIGhvdmVyYWJsZTogYXJncy5ob3ZlcmFibGVcclxuICAgIH1cclxuXHJcbiAgICBpZiAoYXJncy5odG1sKSB7XHJcbiAgICAgIGRhdGEuaHRtbCA9IGFyZ3MuaHRtbDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGRhdGEudGV4dCA9IGFyZ3MudGV4dCB8fCAnJztcclxuICAgIH1cclxuXHJcbiAgICBsZXQgaXRlbTogVG9vbHRpcCA9IG5ldyBUb29sdGlwKGRhdGEpO1xyXG5cclxuICAgIGl0ZW0uZXZ0SG92ZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGxldCByZWN0ID0gYXJncy50YXJnZXQhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICBsZXQgb2ZmID0gMTY7XHJcblxyXG4gICAgICBzd2l0Y2ggKGl0ZW0uYWxpZ24pIHtcclxuICAgICAgICBjYXNlICd0b3AnOlxyXG4gICAgICAgICAgaWYgKHJlY3Qud2lkdGggPCA2NCkgb2ZmID0gcmVjdC53aWR0aCAvIDI7XHJcbiAgICAgICAgICBpdGVtLmZsaXAgPSByZWN0LmxlZnQgKyBvZmYgPiB3aW5kb3cuaW5uZXJXaWR0aCAvIDI7XHJcbiAgICAgICAgICBpZiAoaXRlbS5mbGlwKSB7XHJcbiAgICAgICAgICAgIGl0ZW0ucG9zaXRpb24ocmVjdC5yaWdodCAtIG9mZiwgcmVjdC5ib3R0b20pO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaXRlbS5wb3NpdGlvbihyZWN0LmxlZnQgKyBvZmYsIHJlY3QuYm90dG9tKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ3JpZ2h0JzpcclxuICAgICAgICAgIGlmIChyZWN0LmhlaWdodCA8IDY0KSBvZmYgPSByZWN0LmhlaWdodCAvIDI7XHJcbiAgICAgICAgICBpdGVtLmZsaXAgPSBmYWxzZTtcclxuICAgICAgICAgIGl0ZW0ucG9zaXRpb24ocmVjdC5sZWZ0LCByZWN0LnRvcCArIG9mZik7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlICdib3R0b20nOlxyXG4gICAgICAgICAgaWYgKHJlY3Qud2lkdGggPCA2NCkgb2ZmID0gcmVjdC53aWR0aCAvIDI7XHJcbiAgICAgICAgICBpdGVtLmZsaXAgPSByZWN0LmxlZnQgKyBvZmYgPiB3aW5kb3cuaW5uZXJXaWR0aCAvIDI7XHJcbiAgICAgICAgICBpZiAoaXRlbS5mbGlwKSB7XHJcbiAgICAgICAgICAgIGl0ZW0ucG9zaXRpb24ocmVjdC5yaWdodCAtIG9mZiwgcmVjdC50b3ApO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaXRlbS5wb3NpdGlvbihyZWN0LmxlZnQgKyBvZmYsIHJlY3QudG9wKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ2xlZnQnOlxyXG4gICAgICAgICAgaWYgKHJlY3QuaGVpZ2h0IDwgNjQpIG9mZiA9IHJlY3QuaGVpZ2h0IC8gMjtcclxuICAgICAgICAgIGl0ZW0uZmxpcCA9IGZhbHNlO1xyXG4gICAgICAgICAgaXRlbS5wb3NpdGlvbihyZWN0LnJpZ2h0LCByZWN0LnRvcCArIG9mZik7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG5cclxuICAgICAgaXRlbS5oaWRkZW4gPSBmYWxzZTtcclxuICAgIH07XHJcblxyXG4gICAgaXRlbS5ldnRCbHVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICBpdGVtLmhpZGRlbiA9IHRydWU7XHJcbiAgICB9O1xyXG5cclxuICAgIGFyZ3MudGFyZ2V0IS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCBpdGVtLmV2dEhvdmVyLCBmYWxzZSk7XHJcbiAgICBhcmdzLnRhcmdldCEuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCBpdGVtLmV2dEJsdXIsIGZhbHNlKTtcclxuXHJcbiAgICBpdGVtLm9uKCdkZXN0cm95JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICBhcmdzLnRhcmdldCEucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgaXRlbS5ldnRIb3Zlcik7XHJcbiAgICAgIGFyZ3MudGFyZ2V0IS5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW91dCcsIGl0ZW0uZXZ0Qmx1cik7XHJcbiAgICB9KTtcclxuXHJcbiAgICBhcmdzLnJvb3QhLmFwcGVuZChpdGVtKTtcclxuXHJcbiAgICByZXR1cm4gaXRlbTtcclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgYXR0YWNoUmVmZXJlbmNlKGFyZ3M6IGFueSk6IHZvaWQge1xyXG5cclxuICB9XHJcblxyXG5cclxufVxyXG5cclxuXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRvb2x0aXBBcmdzIHtcclxuXHJcbiAgdGFyZ2V0PzogSFRNTEVsZW1lbnQ7XHJcbiAgdGV4dD86IHN0cmluZztcclxuICBhbGlnbj86IHN0cmluZztcclxuICByb290PzogQ29udGFpbmVyRWxlbWVudDtcclxuICBob3ZlcmFibGU/OiBib29sZWFuO1xyXG4gIGh0bWw/OiBzdHJpbmc7XHJcbiAgeD86IG51bWJlcjtcclxuICB5PzogbnVtYmVyO1xyXG4gIGhpZGRlbj86IGJvb2xlYW47XHJcblxyXG59IiwiaW1wb3J0IHsgRWxlbWVudCB9IGZyb20gXCIuL2VsZW1lbnRcIjtcclxuaW1wb3J0IHsgVHJlZSB9IGZyb20gXCIuL3RyZWVcIjtcclxuaW1wb3J0IHsgVGV4dEZpZWxkIH0gZnJvbSBcIi4vdGV4dC1maWVsZFwiO1xyXG5pbXBvcnQgeyBPYnNlcnZlciB9IGZyb20gXCIuLi9saWJcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBUcmVlSXRlbSBleHRlbmRzIEVsZW1lbnQge1xyXG5cclxuICBwdWJsaWMgdHJlZTogTnVsbGFibGU8VHJlZT47XHJcblxyXG4gIHB1YmxpYyBlbGVtZW50VGl0bGU6IEhUTUxFbGVtZW50O1xyXG4gIHB1YmxpYyBlbGVtZW50SWNvbjogSFRNTEVsZW1lbnQ7XHJcbiAgcHVibGljIGVsZW1lbnRUZXh0OiBIVE1MRWxlbWVudDtcclxuXHJcbiAgcHVibGljIF9jaGlsZHJlbjogbnVtYmVyO1xyXG4gIHB1YmxpYyBzZWxlY3RhYmxlOiBib29sZWFuO1xyXG5cclxuICBwdWJsaWMgX29uTW91c2VVcDogYW55O1xyXG4gIHByaXZhdGUgX2RyYWdSZWxlYXNlOiBhbnk7XHJcblxyXG4gIHByaXZhdGUgX2RyYWdnaW5nOiBib29sZWFuO1xyXG4gIHByaXZhdGUgX2FsbG93RHJvcDogYm9vbGVhbjtcclxuXHJcbiAgcHVibGljIF9kcmFnSWQ6IG51bWJlciA9IC0xO1xyXG5cclxuICBwdWJsaWMgZW50aXR5ITogT2JzZXJ2ZXI7XHJcblxyXG4gIHB1YmxpYyBnZXQgc2VsZWN0ZWQoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5jbGFzcyEuY29udGFpbnMoJ3NlbGVjdGVkJyk7XHJcbiAgfVxyXG4gIHB1YmxpYyBzZXQgc2VsZWN0ZWQodmFsOiBib29sZWFuKSB7XHJcbiAgICBpZiAodGhpcy5jbGFzcyEuY29udGFpbnMoJ3NlbGVjdGVkJykgPT09ICEhdmFsKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgaWYgKHZhbCkge1xyXG4gICAgICB0aGlzLmNsYXNzIS5hZGQoJ3NlbGVjdGVkJyk7XHJcblxyXG4gICAgICB0aGlzLmVtaXQoJ3NlbGVjdCcpO1xyXG4gICAgICBpZiAodGhpcy50cmVlKVxyXG4gICAgICAgIHRoaXMudHJlZS5lbWl0KCdzZWxlY3QnLCB0aGlzKTtcclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmNsYXNzIS5yZW1vdmUoJ3NlbGVjdGVkJyk7XHJcblxyXG4gICAgICB0aGlzLmVtaXQoJ2Rlc2VsZWN0Jyk7XHJcbiAgICAgIGlmICh0aGlzLnRyZWUpXHJcbiAgICAgICAgdGhpcy50cmVlLmVtaXQoJ2Rlc2VsZWN0JywgdGhpcyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IHRleHQoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnRUZXh0LnRleHRDb250ZW50IHx8ICcnO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IHRleHQodmFsOiBzdHJpbmcpIHtcclxuICAgIGlmICh0aGlzLmVsZW1lbnRUZXh0LnRleHRDb250ZW50ID09PSB2YWwpXHJcbiAgICAgIHJldHVybjtcclxuICAgIHRoaXMuZWxlbWVudFRleHQudGV4dENvbnRlbnQgPSB2YWw7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IG9wZW4oKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5jbGFzcyEuY29udGFpbnMoJ29wZW4nKTtcclxuICB9XHJcbiAgcHVibGljIHNldCBvcGVuKHZhbDogYm9vbGVhbikge1xyXG4gICAgaWYgKHRoaXMuY2xhc3MhLmNvbnRhaW5zKCdvcGVuJykgPT09ICEhdmFsKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgaWYgKHZhbCkge1xyXG4gICAgICB0aGlzLmNsYXNzIS5hZGQoJ29wZW4nKTtcclxuICAgICAgdGhpcy5lbWl0KCdvcGVuJyk7XHJcbiAgICAgIHRoaXMudHJlZSEuZW1pdCgnb3BlbicsIHRoaXMpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5jbGFzcyEucmVtb3ZlKCdvcGVuJyk7XHJcbiAgICAgIHRoaXMuZW1pdCgnY2xvc2UnKTtcclxuICAgICAgdGhpcy50cmVlIS5lbWl0KCdjbG9zZScsIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKHRoaXMuZWxlbWVudCkge1xyXG4gICAgICBcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgcHJldigpOiBOdWxsYWJsZTxUcmVlSXRlbT4ge1xyXG4gICAgaWYgKCg8SFRNTEVsZW1lbnQ+dGhpcy5lbGVtZW50KS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nICYmICg8SFRNTEVsZW1lbnQ+KDxIVE1MRWxlbWVudD50aGlzLmVsZW1lbnQpLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpLnVpICYmICg8SFRNTEVsZW1lbnQ+KDxIVE1MRWxlbWVudD50aGlzLmVsZW1lbnQpLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpLnVpIGluc3RhbmNlb2YgVHJlZUl0ZW0pIHtcclxuICAgICAgcmV0dXJuICg8VHJlZUl0ZW0+KDxIVE1MRWxlbWVudD4oPEhUTUxFbGVtZW50PnRoaXMuZWxlbWVudCkucHJldmlvdXNFbGVtZW50U2libGluZykudWkpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IG5leHQoKTogTnVsbGFibGU8VHJlZUl0ZW0+IHtcclxuICAgIGlmICgoPEhUTUxFbGVtZW50PnRoaXMuZWxlbWVudCkubmV4dEVsZW1lbnRTaWJsaW5nICYmICg8SFRNTEVsZW1lbnQ+KDxIVE1MRWxlbWVudD50aGlzLmVsZW1lbnQpLm5leHRFbGVtZW50U2libGluZykudWkgJiYgKDxIVE1MRWxlbWVudD4oPEhUTUxFbGVtZW50PnRoaXMuZWxlbWVudCkubmV4dEVsZW1lbnRTaWJsaW5nKS51aSBpbnN0YW5jZW9mIFRyZWVJdGVtKSB7XHJcbiAgICAgIHJldHVybiAoPFRyZWVJdGVtPig8SFRNTEVsZW1lbnQ+KDxIVE1MRWxlbWVudD50aGlzLmVsZW1lbnQpLm5leHRFbGVtZW50U2libGluZykudWkpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbiAgcHVibGljIGdldCBhbGxvd0Ryb3AoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5fYWxsb3dEcm9wO1xyXG4gIH1cclxuICBwdWJsaWMgc2V0IGFsbG93RHJvcCh2YWw6IGJvb2xlYW4pIHtcclxuICAgIHRoaXMuX2FsbG93RHJvcCA9IHZhbDtcclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoYXJnczogVHJlZUl0ZW1BcmdzKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgIGFyZ3MgPSBhcmdzIHx8IHt9O1xyXG5cclxuICAgIHRoaXMudHJlZSA9IG51bGw7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndWktdHJlZS1pdGVtJyk7XHJcblxyXG4gICAgaWYgKGFyZ3MuY2xhc3NMaXN0KSB7XHJcbiAgICAgIGFyZ3MuY2xhc3NMaXN0LmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZTogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgc2VsZi5lbGVtZW50IS5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XHJcbiAgICAgIH0sIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZWxlbWVudFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnRUaXRsZS5jbGFzc0xpc3QuYWRkKCd0aXRsZScpO1xyXG4gICAgdGhpcy5lbGVtZW50VGl0bGUuZHJhZ2dhYmxlID0gdHJ1ZTtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLnRhYkluZGV4ID0gMDtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLnVpID0gdGhpcztcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnRUaXRsZSk7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50SWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgIHRoaXMuZWxlbWVudEljb24uY2xhc3NMaXN0LmFkZCgnaWNvbicpO1xyXG4gICAgdGhpcy5lbGVtZW50VGl0bGUuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50SWNvbik7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50VGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgIHRoaXMuZWxlbWVudFRleHQudGV4dENvbnRlbnQgPSBhcmdzLnRleHQgfHwgJyc7XHJcbiAgICB0aGlzLmVsZW1lbnRUZXh0LmNsYXNzTGlzdC5hZGQoJ3RleHQnKTtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudFRleHQpO1xyXG5cclxuICAgIHRoaXMuX2NoaWxkcmVuID0gMDtcclxuICAgIHRoaXMuc2VsZWN0YWJsZSA9IHRydWU7XHJcblxyXG4gICAgdGhpcy5fb25Nb3VzZVVwID0gZnVuY3Rpb24gKGV2dDogTW91c2VFdmVudCkge1xyXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHNlbGYuX2RyYWdSZWxlYXNlKTtcclxuICAgICAgc2VsZi5fZHJhZ1JlbGVhc2UgPSBudWxsO1xyXG5cclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcbiAgICAgIHNlbGYuX2RyYWdnaW5nID0gZmFsc2U7XHJcbiAgICAgIHNlbGYuZW1pdCgnZHJhZ2VuZCcpO1xyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRUaXRsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX29uQ2xpY2ssIGZhbHNlKTtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLmFkZEV2ZW50TGlzdGVuZXIoJ2RibGNsaWNrJywgdGhpcy5fb25EYmxDbGljaywgZmFsc2UpO1xyXG5cclxuICAgIHRoaXMuX2RyYWdSZWxlYXNlID0gbnVsbDtcclxuICAgIHRoaXMuX2RyYWdnaW5nID0gZmFsc2U7XHJcbiAgICB0aGlzLl9hbGxvd0Ryb3AgPSAoYXJncy5hbGxvd0Ryb3AgIT09IHVuZGVmaW5lZCA/ICEhYXJncy5hbGxvd0Ryb3AgOiB0cnVlKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRUaXRsZS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLl9vbk1vdXNlRG93biwgZmFsc2UpO1xyXG4gICAgdGhpcy5lbGVtZW50VGl0bGUuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ3N0YXJ0JywgdGhpcy5fb25EcmFnU3RhcnQsIGZhbHNlKTtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIHRoaXMuX29uTW91c2VPdmVyLCBmYWxzZSk7XHJcblxyXG4gICAgdGhpcy5vbignZGVzdHJveScsIHRoaXMuX29uRGVzdHJveSk7XHJcbiAgICB0aGlzLm9uKCdhcHBlbmQnLCB0aGlzLl9vbkFwcGVuZCk7XHJcbiAgICB0aGlzLm9uKCdyZW1vdmUnLCB0aGlzLl9vblJlbW92ZSk7XHJcbiAgICB0aGlzLm9uKCdzZWxlY3QnLCB0aGlzLl9vblNlbGVjdCk7XHJcbiAgICB0aGlzLm9uKCdkZXNlbGVjdCcsIHRoaXMuX29uRGVzZWxlY3QpO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9vbktleURvd24sIGZhbHNlKTtcclxuXHJcblxyXG4gIH1cclxuXHJcbiAgLy8gVE9ET1xyXG4gIHB1YmxpYyBjaGlsZChpbmRleDogbnVtYmVyKTogSFRNTEVsZW1lbnQge1xyXG4gICAgcmV0dXJuIDxIVE1MRWxlbWVudD50aGlzLmVsZW1lbnQhLmNoaWxkcmVuW2luZGV4ICsgMV07XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfb25DbGljayhldnQ6IE1vdXNlRXZlbnQpOiB2b2lkIHtcclxuICAgIGxldCBodG1sRWxlOiBIVE1MRWxlbWVudCA9IDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0O1xyXG5cclxuICAgIC8vIOWPr+iDveeCueWHu3RpdGxl5oiW6ICFdGl0bGXlrZDpoblcclxuICAgIGlmICghKDxUcmVlSXRlbT5odG1sRWxlLnVpKSkge1xyXG4gICAgICBpZiAoaHRtbEVsZS5wYXJlbnRFbGVtZW50ICYmIDxUcmVlSXRlbT4oaHRtbEVsZS5wYXJlbnRFbGVtZW50KS51aSkge1xyXG4gICAgICAgIGh0bWxFbGUgPSBodG1sRWxlLnBhcmVudEVsZW1lbnQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGV2dC5idXR0b24gIT09IDAgfHwgISg8VHJlZUl0ZW0+aHRtbEVsZS51aSkuc2VsZWN0YWJsZSlcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGxldCByZWN0ID0gaHRtbEVsZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuXHJcbiAgICBpZiAoKDxUcmVlSXRlbT5odG1sRWxlLnVpKS5fY2hpbGRyZW4gJiYgKGV2dC5jbGllbnRYIC0gcmVjdC5sZWZ0KSA8IDApIHtcclxuICAgICAgKDxUcmVlSXRlbT5odG1sRWxlLnVpKS5vcGVuID0gISg8VHJlZUl0ZW0+aHRtbEVsZS51aSkub3BlbjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICg8VHJlZUl0ZW0+aHRtbEVsZS51aSkudHJlZSEuX29uSXRlbUNsaWNrKCg8VHJlZUl0ZW0+aHRtbEVsZS51aSkpO1xyXG4gICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfb25EYmxDbGljayhldnQ6IE1vdXNlRXZlbnQpOiB2b2lkIHtcclxuICAgIGxldCBodG1sRWxlOiBIVE1MRWxlbWVudCA9IDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0O1xyXG5cclxuICAgIC8vIOWPr+iDveeCueWHu3RpdGxl5oiW6ICFdGl0bGXlrZDpoblcclxuICAgIGlmICghKDxUcmVlSXRlbT5odG1sRWxlLnVpKSkge1xyXG4gICAgICBpZiAoaHRtbEVsZS5wYXJlbnRFbGVtZW50ICYmIDxUcmVlSXRlbT4oaHRtbEVsZS5wYXJlbnRFbGVtZW50KS51aSkge1xyXG4gICAgICAgIGh0bWxFbGUgPSBodG1sRWxlLnBhcmVudEVsZW1lbnQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCEoPFRyZWVJdGVtPmh0bWxFbGUudWkpLnRyZWUhLmFsbG93UmVuYW1pbmcgfHwgZXZ0LmJ1dHRvbiAhPT0gMClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGxldCByZWN0ID0gaHRtbEVsZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuXHJcbiAgICBpZiAoKDxUcmVlSXRlbT5odG1sRWxlLnVpKS5fY2hpbGRyZW4gJiYgKGV2dC5jbGllbnRYIC0gcmVjdC5sZWZ0KSA8IDApIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgKDxUcmVlSXRlbT5odG1sRWxlLnVpKS5fb25SZW5hbWUodHJ1ZSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBfb25Nb3VzZURvd24oZXZ0OiBNb3VzZUV2ZW50KTogdm9pZCB7XHJcbiAgICBsZXQgaHRtbEVsZTogSFRNTEVsZW1lbnQgPSA8SFRNTEVsZW1lbnQ+ZXZ0LnRhcmdldDtcclxuXHJcbiAgICAvLyDlj6/og73ngrnlh7t0aXRsZeaIluiAhXRpdGxl5a2Q6aG5XHJcbiAgICBpZiAoISg8VHJlZUl0ZW0+aHRtbEVsZS51aSkpIHtcclxuICAgICAgaWYgKGh0bWxFbGUucGFyZW50RWxlbWVudCAmJiA8VHJlZUl0ZW0+KGh0bWxFbGUucGFyZW50RWxlbWVudCkudWkpIHtcclxuICAgICAgICBodG1sRWxlID0gaHRtbEVsZS5wYXJlbnRFbGVtZW50O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmICgoPFRyZWVJdGVtPmh0bWxFbGUudWkpLnRyZWUgJiYgISg8VHJlZUl0ZW0+aHRtbEVsZS51aSkudHJlZSEuZHJhZ2dhYmxlKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbkRyYWdTdGFydCA9IGZ1bmN0aW9uIChldnQ6IE1vdXNlRXZlbnQpOiB2b2lkIHtcclxuICAgIGxldCBodG1sRWxlOiBIVE1MRWxlbWVudCA9IDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0O1xyXG4gICAgXHJcbiAgICAvLyDlj6/og73ngrnlh7t0aXRsZeaIluiAhXRpdGxl5a2Q6aG5XHJcbiAgICBpZiAoISg8VHJlZUl0ZW0+aHRtbEVsZS51aSkpIHtcclxuICAgICAgaWYgKGh0bWxFbGUucGFyZW50RWxlbWVudCAmJiA8VHJlZUl0ZW0+KGh0bWxFbGUucGFyZW50RWxlbWVudCkudWkpIHtcclxuICAgICAgICBodG1sRWxlID0gaHRtbEVsZS5wYXJlbnRFbGVtZW50O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmICghKDxUcmVlSXRlbT5odG1sRWxlLnVpKS50cmVlIS5kcmFnZ2FibGUpIHtcclxuICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgICg8VHJlZUl0ZW0+aHRtbEVsZS51aSkuX2RyYWdnaW5nID0gdHJ1ZTtcclxuXHJcbiAgICBpZiAoKDxUcmVlSXRlbT5odG1sRWxlLnVpKS5fZHJhZ1JlbGVhc2UpXHJcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgKDxUcmVlSXRlbT5odG1sRWxlLnVpKS5fZHJhZ1JlbGVhc2UpO1xyXG5cclxuICAgICg8VHJlZUl0ZW0+aHRtbEVsZS51aSkuX2RyYWdSZWxlYXNlID0gKDxUcmVlSXRlbT5odG1sRWxlLnVpKS5fb25Nb3VzZVVwO1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCAoPFRyZWVJdGVtPmh0bWxFbGUudWkpLl9kcmFnUmVsZWFzZSwgZmFsc2UpO1xyXG5cclxuICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCdkcmFnIHN0YXJ0Jyk7XHJcblxyXG4gICAgKDxUcmVlSXRlbT5odG1sRWxlLnVpKS5lbWl0KCdkcmFnc3RhcnQnKTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIF9vbk1vdXNlT3ZlcihldnQ6IE1vdXNlRXZlbnQpOiB2b2lkIHtcclxuICAgIGxldCBodG1sRWxlOiBIVE1MRWxlbWVudCA9IDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0O1xyXG5cclxuICAgIC8vIOWPr+iDveeCueWHu3RpdGxl5oiW6ICFdGl0bGXlrZDpoblcclxuICAgIGlmICghKDxUcmVlSXRlbT5odG1sRWxlLnVpKSkge1xyXG4gICAgICBpZiAoaHRtbEVsZS5wYXJlbnRFbGVtZW50ICYmIDxUcmVlSXRlbT4oaHRtbEVsZS5wYXJlbnRFbGVtZW50KS51aSkge1xyXG4gICAgICAgIGh0bWxFbGUgPSBodG1sRWxlLnBhcmVudEVsZW1lbnQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgKDxUcmVlSXRlbT5odG1sRWxlLnVpKS5lbWl0KCdtb3VzZW92ZXInLCBldnQpO1xyXG5cclxuICB9O1xyXG5cclxuXHJcbiAgcHJpdmF0ZSBfb25TZWxlY3QoKTogdm9pZCB7XHJcbiAgICB0aGlzLmVsZW1lbnRUaXRsZS5mb2N1cygpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgX29uRGVzZWxlY3QoKTogdm9pZCB7XHJcbiAgICB0aGlzLmVsZW1lbnRUaXRsZS5ibHVyKCk7XHJcbiAgfTtcclxuXHJcblxyXG4gIHByaXZhdGUgX29uS2V5RG93bihldnQ6IEtleWJvYXJkRXZlbnQpIHtcclxuICAgIGxldCBodG1sRWxlOiBIVE1MRWxlbWVudCA9IDxIVE1MRWxlbWVudD5ldnQudGFyZ2V0O1xyXG5cclxuICAgIGlmICghKDxUcmVlSXRlbT5odG1sRWxlLnVpKSkgcmV0dXJuO1xyXG5cclxuICAgIGxldCBjdXJyZW50SXRlbTogVHJlZUl0ZW0gPSA8VHJlZUl0ZW0+aHRtbEVsZS51aTtcclxuXHJcbiAgICBpZiAoZXZ0LnRhcmdldCAmJiBodG1sRWxlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2lucHV0JylcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmIChbOSwgMzgsIDQwLCAzNywgMzldLmluZGV4T2YoZXZ0LmtleUNvZGUpID09PSAtMSlcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICAgIGxldCBzZWxlY3RlZEl0ZW06IE51bGxhYmxlPFRyZWVJdGVtPiA9IG51bGw7XHJcbiAgICBsZXQgaXRlbTogTnVsbGFibGU8VHJlZUl0ZW0+ID0gbnVsbDtcclxuICAgIHN3aXRjaCAoZXZ0LmtleUNvZGUpIHtcclxuICAgICAgY2FzZSA5OiAvLyB0YWJcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSA0MDogLy8gZG93blxyXG4gICAgICAgIGxldCBkb3duSXRlbSA9IGN1cnJlbnRJdGVtLmVsZW1lbnQhLm5leHRFbGVtZW50U2libGluZztcclxuICAgICAgICBpZiAoZG93bkl0ZW0pXHJcbiAgICAgICAgICBpdGVtID0gPFRyZWVJdGVtPig8SFRNTEVsZW1lbnQ+ZG93bkl0ZW0pLnVpO1xyXG5cclxuICAgICAgICBpZiAoY3VycmVudEl0ZW0uX2NoaWxkcmVuICYmIGN1cnJlbnRJdGVtLm9wZW4pIHtcclxuICAgICAgICAgIGxldCBmaXJzdCA9IGN1cnJlbnRJdGVtLmVsZW1lbnQhLmZpcnN0RWxlbWVudENoaWxkIS5uZXh0RWxlbWVudFNpYmxpbmc7XHJcbiAgICAgICAgICBpZiAoZmlyc3QgJiYgKDxIVE1MRWxlbWVudD5maXJzdCkudWkpIHtcclxuICAgICAgICAgICAgc2VsZWN0ZWRJdGVtID0gPFRyZWVJdGVtPig8SFRNTEVsZW1lbnQ+Zmlyc3QpLnVpO1xyXG4gICAgICAgICAgICAvLyBmaXJzdC51aS5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKGl0ZW0pIHtcclxuICAgICAgICAgICAgc2VsZWN0ZWRJdGVtID0gaXRlbTtcclxuICAgICAgICAgICAgLy8gaXRlbS5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmIChpdGVtKSB7XHJcbiAgICAgICAgICBzZWxlY3RlZEl0ZW0gPSBpdGVtO1xyXG4gICAgICAgICAgLy8gaXRlbS5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgfSBlbHNlIGlmIChjdXJyZW50SXRlbS5wYXJlbnQgJiYgY3VycmVudEl0ZW0ucGFyZW50IGluc3RhbmNlb2YgVHJlZUl0ZW0pIHtcclxuICAgICAgICAgIGxldCBwYXJlbnQ6IE51bGxhYmxlPFRyZWVJdGVtPiA9IGN1cnJlbnRJdGVtLnBhcmVudDtcclxuXHJcbiAgICAgICAgICBsZXQgZmluZE5leHQgPSBmdW5jdGlvbiAoZnJvbTogVHJlZUl0ZW0pOiBOdWxsYWJsZTxUcmVlSXRlbT4ge1xyXG4gICAgICAgICAgICBsZXQgbmV4dCA9IGZyb20ubmV4dDtcclxuICAgICAgICAgICAgaWYgKG5leHQpIHtcclxuICAgICAgICAgICAgICBzZWxlY3RlZEl0ZW0gPSBuZXh0O1xyXG4gICAgICAgICAgICAgIC8vIG5leHQuc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGZyb20ucGFyZW50IGluc3RhbmNlb2YgVHJlZUl0ZW0pIHtcclxuICAgICAgICAgICAgICByZXR1cm4gZnJvbS5wYXJlbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgICAgcGFyZW50ID0gZmluZE5leHQocGFyZW50KTtcclxuICAgICAgICAgIHdoaWxlIChwYXJlbnQpIHtcclxuICAgICAgICAgICAgcGFyZW50ID0gZmluZE5leHQocGFyZW50KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgMzg6IC8vIHVwXHJcbiAgICAgICAgbGV0IGl0ZW1VcCA9IGN1cnJlbnRJdGVtLmVsZW1lbnQhLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XHJcbiAgICAgICAgaWYgKGl0ZW1VcClcclxuICAgICAgICAgIGl0ZW0gPSA8VHJlZUl0ZW0+KDxIVE1MRWxlbWVudD5pdGVtVXApLnVpO1xyXG5cclxuICAgICAgICBpZiAoaXRlbSkge1xyXG4gICAgICAgICAgaWYgKGl0ZW0uX2NoaWxkcmVuICYmIGl0ZW0ub3BlbiAmJiBpdGVtICE9PSBjdXJyZW50SXRlbS5wYXJlbnQpIHtcclxuICAgICAgICAgICAgbGV0IGxhc3RJdGVtID0gaXRlbS5lbGVtZW50IS5sYXN0RWxlbWVudENoaWxkO1xyXG4gICAgICAgICAgICBsZXQgbGFzdDogTnVsbGFibGU8VHJlZUl0ZW0+ID0gbnVsbDtcclxuICAgICAgICAgICAgaWYgKGxhc3RJdGVtICYmICg8SFRNTEVsZW1lbnQ+bGFzdEl0ZW0pLnVpKVxyXG4gICAgICAgICAgICAgIGxhc3QgPSA8VHJlZUl0ZW0+KDxIVE1MRWxlbWVudD5sYXN0SXRlbSkudWk7XHJcblxyXG4gICAgICAgICAgICBpZiAobGFzdCkge1xyXG4gICAgICAgICAgICAgIGxldCBmaW5kTGFzdCA9IGZ1bmN0aW9uIChpbnNpZGU6IFRyZWVJdGVtKTogTnVsbGFibGU8VHJlZUl0ZW0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChpbnNpZGUuX2NoaWxkcmVuICYmIGluc2lkZS5vcGVuKSB7XHJcbiAgICAgICAgICAgICAgICAgIGlmIChpbnNpZGUuZWxlbWVudCEubGFzdEVsZW1lbnRDaGlsZCAmJiAoPEhUTUxFbGVtZW50Pmluc2lkZS5lbGVtZW50IS5sYXN0RWxlbWVudENoaWxkKS51aSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA8VHJlZUl0ZW0+KDxIVE1MRWxlbWVudD5pbnNpZGUuZWxlbWVudCEubGFzdEVsZW1lbnRDaGlsZCkudWk7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIGxldCBmb3VuZDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIHdoaWxlICghZm91bmQpIHtcclxuICAgICAgICAgICAgICAgIGxldCBkZWVwZXI6IE51bGxhYmxlPFRyZWVJdGVtPiA9IGZpbmRMYXN0KGxhc3QpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRlZXBlcikge1xyXG4gICAgICAgICAgICAgICAgICBsYXN0ID0gZGVlcGVyXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBzZWxlY3RlZEl0ZW0gPSBsYXN0O1xyXG4gICAgICAgICAgICAgIC8vIGxhc3Quc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHNlbGVjdGVkSXRlbSA9IGl0ZW07XHJcbiAgICAgICAgICAgICAgLy8gaXRlbS5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHNlbGVjdGVkSXRlbSA9IGl0ZW07XHJcbiAgICAgICAgICAgIC8vIGl0ZW0uc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAoY3VycmVudEl0ZW0ucGFyZW50ICYmIGN1cnJlbnRJdGVtLnBhcmVudCBpbnN0YW5jZW9mIFRyZWVJdGVtKSB7XHJcbiAgICAgICAgICBzZWxlY3RlZEl0ZW0gPSBjdXJyZW50SXRlbS5wYXJlbnQ7XHJcbiAgICAgICAgICAvLyB0aGlzLnVpLnBhcmVudC5zZWxlY3RlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAzNzogLy8gbGVmdCAoY2xvc2UpXHJcbiAgICAgICAgaWYgKGN1cnJlbnRJdGVtLnBhcmVudCAhPT0gY3VycmVudEl0ZW0udHJlZSAmJiBjdXJyZW50SXRlbS5vcGVuKVxyXG4gICAgICAgICAgY3VycmVudEl0ZW0ub3BlbiA9IGZhbHNlO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIDM5OiAvLyByaWdodCAob3BlbilcclxuICAgICAgICBpZiAoY3VycmVudEl0ZW0uX2NoaWxkcmVuICYmICFjdXJyZW50SXRlbS5vcGVuKVxyXG4gICAgICAgICAgY3VycmVudEl0ZW0ub3BlbiA9IHRydWU7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHNlbGVjdGVkSXRlbSkge1xyXG4gICAgICBpZiAoIShUcmVlLl9jdHJsICYmIFRyZWUuX2N0cmwoKSkgJiYgIShUcmVlLl9zaGlmdCAmJiBUcmVlLl9zaGlmdCgpKSlcclxuICAgICAgICBjdXJyZW50SXRlbS50cmVlIS5jbGVhcigpO1xyXG4gICAgICBzZWxlY3RlZEl0ZW0uc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gVE9ETyzlhbPogZRFblxyXG4gIHByaXZhdGUgX29uUmVuYW1lKHNlbGVjdDogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgaWYgKHNlbGVjdCkge1xyXG4gICAgICB0aGlzLnRyZWUhLmNsZWFyKCk7XHJcbiAgICAgIHRoaXMudHJlZSEuX29uSXRlbUNsaWNrKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHRoaXMuY2xhc3MhLmFkZCgncmVuYW1lJyk7XHJcbiAgICBjb25zb2xlLmxvZygncmVuYW1lJyk7XHJcbiAgICAvLyBhZGQgcmVtYW5pbmcgZmllbGRcclxuICAgIHZhciBmaWVsZCA9IG5ldyBUZXh0RmllbGQoKTtcclxuICAgIGZpZWxkLnBhcmVudCA9IHRoaXM7XHJcbiAgICBmaWVsZC5yZW5kZXJDaGFuZ2VzID0gZmFsc2U7XHJcbiAgICBmaWVsZC52YWx1ZSA9IHRoaXMudGV4dDtcclxuICAgIGZpZWxkLmVsZW1lbnRJbnB1dC5yZWFkT25seSA9ICF0aGlzLnRyZWUhLmFsbG93UmVuYW1pbmc7XHJcbiAgICBmaWVsZC5lbGVtZW50SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgZmllbGQuZGVzdHJveSgpO1xyXG4gICAgICBzZWxmLmNsYXNzIS5yZW1vdmUoJ3JlbmFtZScpO1xyXG4gICAgfSwgZmFsc2UpO1xyXG4gICAgZmllbGQub24oJ2NsaWNrJywgZnVuY3Rpb24gKGV2dDogTW91c2VFdmVudCkge1xyXG4gICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICB9KTtcclxuICAgIGZpZWxkLmVsZW1lbnQhLmFkZEV2ZW50TGlzdGVuZXIoJ2RibGNsaWNrJywgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICB9KTtcclxuICAgIGZpZWxkLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAodmFsdWU6IHN0cmluZykge1xyXG4gICAgICB2YWx1ZSA9IHZhbHVlLnRyaW0oKTtcclxuICAgICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgICAgLy8gVE9ET1xyXG4gICAgICAgIC8vIGlmIChzZWxmLmVudGl0eSkge1xyXG4gICAgICAgIC8vICAgc2VsZi5lbnRpdHkuc2V0KCduYW1lJywgdmFsdWUpO1xyXG4gICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgc2VsZi5lbWl0KCdyZW5hbWUnLCB2YWx1ZSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGZpZWxkLmRlc3Ryb3koKTtcclxuICAgICAgc2VsZi5jbGFzcyEucmVtb3ZlKCdyZW5hbWUnKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5lbGVtZW50VGl0bGUuYXBwZW5kQ2hpbGQoZmllbGQuZWxlbWVudCEpO1xyXG4gICAgZmllbGQuZWxlbWVudElucHV0LmZvY3VzKCk7XHJcbiAgICBmaWVsZC5lbGVtZW50SW5wdXQuc2VsZWN0KCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICB0aGlzLmVsZW1lbnRUaXRsZS5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX29uQ2xpY2spO1xyXG4gICAgdGhpcy5lbGVtZW50VGl0bGUucmVtb3ZlRXZlbnRMaXN0ZW5lcignZGJsY2xpY2snLCB0aGlzLl9vbkRibENsaWNrKTtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX29uTW91c2VEb3duKTtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIHRoaXMuX29uRHJhZ1N0YXJ0KTtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIHRoaXMuX29uTW91c2VPdmVyKTtcclxuICAgIHRoaXMuZWxlbWVudFRpdGxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9vbktleURvd24pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25BcHBlbmQoaXRlbTogVHJlZUl0ZW0pOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLnBhcmVudClcclxuICAgICAgdGhpcy5wYXJlbnQuZW1pdCgnYXBwZW5kJywgaXRlbSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vblJlbW92ZShpdGVtOiBUcmVlSXRlbSk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMucGFyZW50KVxyXG4gICAgICB0aGlzLnBhcmVudC5lbWl0KCdyZW1vdmUnLCBpdGVtKTtcclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgZm9jdXMoKTogdm9pZCB7XHJcbiAgICB0aGlzLmVsZW1lbnRUaXRsZS5mb2N1cygpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGFwcGVuZChpdGVtOiBUcmVlSXRlbSk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX2NoaWxkcmVuID09PSAxKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuY2hpbGRyZW5bMV0uY2xhc3NMaXN0LnJlbW92ZSgnc2luZ2xlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgaXRlbS5wYXJlbnQgPSB0aGlzO1xyXG4gICAgdGhpcy5lbGVtZW50IS5hcHBlbmRDaGlsZChpdGVtLmVsZW1lbnQhKTtcclxuICAgIHRoaXMuX2NoaWxkcmVuKys7XHJcblxyXG4gICAgaWYgKHRoaXMuX2NoaWxkcmVuID09PSAxKSB7XHJcbiAgICAgIGl0ZW0uY2xhc3MhLmFkZCgnc2luZ2xlJyk7XHJcbiAgICAgIHRoaXMuY2xhc3MhLmFkZCgnY29udGFpbmVyJyk7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2NoaWxkcmVuID4gMSkge1xyXG4gICAgICBpdGVtLmNsYXNzIS5yZW1vdmUoJ3NpbmdsZScpO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBhcHBlbmRDaGlsZHJlbiA9IGZ1bmN0aW9uICh0cmVlSXRlbTogVHJlZUl0ZW0pOiB2b2lkIHtcclxuICAgICAgdHJlZUl0ZW0uZW1pdCgnYXBwZW5kJywgdHJlZUl0ZW0pO1xyXG5cclxuICAgICAgaWYgKHRyZWVJdGVtLl9jaGlsZHJlbikge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgdHJlZUl0ZW0uZWxlbWVudCEuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGFwcGVuZENoaWxkcmVuKDxUcmVlSXRlbT4oPEhUTUxFbGVtZW50PnRyZWVJdGVtLmVsZW1lbnQhLmNoaWxkcmVuW2ldKS51aSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgYXBwZW5kQ2hpbGRyZW4oaXRlbSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYXBwZW5kQmVmb3JlKGl0ZW06IFRyZWVJdGVtLCByZWZlcmVuY2VJdGVtOiBUcmVlSXRlbSk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX2NoaWxkcmVuID09PSAxKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudCEuY2hpbGRyZW5bMV0uY2xhc3NMaXN0LnJlbW92ZSgnc2luZ2xlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgaXRlbS5wYXJlbnQgPSB0aGlzO1xyXG4gICAgdGhpcy5lbGVtZW50IS5pbnNlcnRCZWZvcmUoaXRlbS5lbGVtZW50ISwgcmVmZXJlbmNlSXRlbS5lbGVtZW50KTtcclxuICAgIHRoaXMuX2NoaWxkcmVuKys7XHJcblxyXG4gICAgaWYgKHRoaXMuX2NoaWxkcmVuID09PSAxKSB7XHJcbiAgICAgIGl0ZW0uY2xhc3MhLmFkZCgnc2luZ2xlJyk7XHJcbiAgICAgIHRoaXMuY2xhc3MhLmFkZCgnY29udGFpbmVyJyk7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2NoaWxkcmVuID4gMSkge1xyXG4gICAgICBpdGVtLmNsYXNzIS5yZW1vdmUoJ3NpbmdsZScpO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBhcHBlbmRDaGlsZHJlbiA9IGZ1bmN0aW9uICh0cmVlSXRlbTogVHJlZUl0ZW0pOiB2b2lkIHtcclxuICAgICAgdHJlZUl0ZW0uZW1pdCgnYXBwZW5kJywgdHJlZUl0ZW0pO1xyXG5cclxuICAgICAgaWYgKHRyZWVJdGVtLl9jaGlsZHJlbikge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgdHJlZUl0ZW0uZWxlbWVudCEuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGFwcGVuZENoaWxkcmVuKDxUcmVlSXRlbT4oPEhUTUxFbGVtZW50PnRyZWVJdGVtLmVsZW1lbnQhLmNoaWxkcmVuW2ldKS51aSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgYXBwZW5kQ2hpbGRyZW4oaXRlbSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYXBwZW5kQWZ0ZXIoaXRlbTogVHJlZUl0ZW0sIHJlZmVyZW5jZUl0ZW06IFRyZWVJdGVtKTogdm9pZCB7XHJcbiAgICBpdGVtLnBhcmVudCA9IHRoaXM7XHJcblxyXG4gICAgLy8gbWlnaHQgYmUgbGFzdFxyXG4gICAgaWYgKCFyZWZlcmVuY2VJdGVtKVxyXG4gICAgICB0aGlzLmFwcGVuZChpdGVtKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQhLmluc2VydEJlZm9yZShpdGVtLmVsZW1lbnQhLCByZWZlcmVuY2VJdGVtLmVsZW1lbnQhLm5leHRFbGVtZW50U2libGluZyk7XHJcbiAgICB0aGlzLl9jaGlsZHJlbisrO1xyXG5cclxuICAgIGlmICh0aGlzLl9jaGlsZHJlbiA9PT0gMSkge1xyXG4gICAgICBpdGVtLmNsYXNzIS5hZGQoJ3NpbmdsZScpO1xyXG4gICAgICB0aGlzLmNsYXNzIS5hZGQoJ2NvbnRhaW5lcicpO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLl9jaGlsZHJlbiA9PT0gMikge1xyXG4gICAgICB0aGlzLmVsZW1lbnQhLmNoaWxkcmVuWzFdLmNsYXNzTGlzdC5yZW1vdmUoJ3NpbmdsZScpO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBhcHBlbmRDaGlsZHJlbiA9IGZ1bmN0aW9uICh0cmVlSXRlbTogVHJlZUl0ZW0pOiB2b2lkIHtcclxuICAgICAgdHJlZUl0ZW0uZW1pdCgnYXBwZW5kJywgdHJlZUl0ZW0pO1xyXG5cclxuICAgICAgaWYgKHRyZWVJdGVtLl9jaGlsZHJlbikge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgdHJlZUl0ZW0uZWxlbWVudCEuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGFwcGVuZENoaWxkcmVuKDxUcmVlSXRlbT4oPEhUTUxFbGVtZW50PnRyZWVJdGVtLmVsZW1lbnQhLmNoaWxkcmVuW2ldKS51aSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgYXBwZW5kQ2hpbGRyZW4oaXRlbSk7XHJcbiAgfVxyXG5cclxuXHJcbiAgcHVibGljIHJlbW92ZShpdGVtOiBUcmVlSXRlbSk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLl9jaGlsZHJlbiB8fCAhdGhpcy5lbGVtZW50IS5jb250YWlucyhpdGVtLmVsZW1lbnQpKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5lbGVtZW50IS5yZW1vdmVDaGlsZChpdGVtLmVsZW1lbnQhKTtcclxuICAgIHRoaXMuX2NoaWxkcmVuLS07XHJcblxyXG4gICAgaWYgKHRoaXMuX2NoaWxkcmVuID09PSAwKSB7XHJcbiAgICAgIHRoaXMuY2xhc3MhLnJlbW92ZSgnY29udGFpbmVyJyk7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2NoaWxkcmVuID09PSAxICYmIHRoaXMuZWxlbWVudCEuY2hpbGRyZW4ubGVuZ3RoID4gMikge1xyXG4gICAgICB0aGlzLmVsZW1lbnQhLmNoaWxkcmVuWzFdLmNsYXNzTGlzdC5hZGQoJ3NpbmdsZScpO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCByZW1vdmVDaGlsZHJlbiA9IGZ1bmN0aW9uICh0cmVlSXRlbTogVHJlZUl0ZW0pOiB2b2lkIHtcclxuICAgICAgdHJlZUl0ZW0uZW1pdCgncmVtb3ZlJywgdHJlZUl0ZW0pO1xyXG5cclxuICAgICAgaWYgKHRyZWVJdGVtLl9jaGlsZHJlbikge1xyXG4gICAgICAgIGZvciAobGV0IGk6IG51bWJlciA9IDE7IGkgPCB0cmVlSXRlbS5lbGVtZW50IS5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgaWYgKCg8SFRNTEVsZW1lbnQ+dHJlZUl0ZW0uZWxlbWVudCEuY2hpbGRyZW5baV0pLnVpICYmICg8SFRNTEVsZW1lbnQ+dHJlZUl0ZW0uZWxlbWVudCEuY2hpbGRyZW5baV0pLnVpIGluc3RhbmNlb2YgVHJlZUl0ZW0pIHtcclxuICAgICAgICAgICAgcmVtb3ZlQ2hpbGRyZW4oPFRyZWVJdGVtPig8SFRNTEVsZW1lbnQ+dHJlZUl0ZW0uZWxlbWVudCEuY2hpbGRyZW5baV0pLnVpKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICByZW1vdmVDaGlsZHJlbihpdGVtKTtcclxuICB9XHJcbn0iLCJpbXBvcnQgeyBDb250YWluZXJFbGVtZW50IH0gZnJvbSBcIi4vY29udGFpbmVyLWVsZW1lbnRcIjtcclxuaW1wb3J0IHsgVHJlZUl0ZW0gfSBmcm9tIFwiLi90cmVlLWl0ZW1cIjtcclxuaW1wb3J0IHsgSG90a2V5cyB9IGZyb20gXCIuLi9lZGl0b3JcIjtcclxuaW1wb3J0IHsgRWxlbWVudCB9IGZyb20gXCIuL2VsZW1lbnRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBUcmVlIGV4dGVuZHMgQ29udGFpbmVyRWxlbWVudCB7XHJcblxyXG4gIHByaXZhdGUgZWxlbWVudERyYWc6IEhUTUxFbGVtZW50O1xyXG4gIHB1YmxpYyBkcmFnZ2FibGU6IGJvb2xlYW47XHJcbiAgcHVibGljIF9kcmFnZ2luZzogYm9vbGVhbjtcclxuICBwdWJsaWMgX2RyYWdJdGVtczogVHJlZUl0ZW1bXSA9IFtdO1xyXG4gIHB1YmxpYyBfZHJhZ092ZXI6IE51bGxhYmxlPFRyZWVJdGVtPjtcclxuICBwcml2YXRlIF9kcmFnQXJlYTogc3RyaW5nO1xyXG4gIHByaXZhdGUgX2V2dERyYWdNb3ZlOiBhbnk7XHJcbiAgcHVibGljIHJlb3JkZXJpbmc6IGJvb2xlYW47XHJcbiAgcHVibGljIGRyYWdJbnN0YW50OiBib29sZWFuO1xyXG4gIHByaXZhdGUgX3NlbGVjdGVkOiBUcmVlSXRlbVtdID0gW107XHJcblxyXG4gIHB1YmxpYyBhbGxvd1JlbmFtaW5nOiBib29sZWFuID0gdHJ1ZTtcclxuXHJcbiAgcHVibGljIGdldCBzZWxlY3RlZCgpOiBUcmVlSXRlbVtdIHtcclxuICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZC5zbGljZSgwKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndWktdHJlZScpO1xyXG5cclxuXHJcbiAgICB0aGlzLmVsZW1lbnREcmFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmVsZW1lbnREcmFnLmNsYXNzTGlzdC5hZGQoJ2RyYWctaGFuZGxlJyk7XHJcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50RHJhZyk7XHJcblxyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgdGhpcy5lbGVtZW50RHJhZy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBmdW5jdGlvbiAoZXZ0OiBNb3VzZUV2ZW50KTogdm9pZCB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblxyXG4gICAgICBzZWxmLl9vbkRyYWdNb3ZlKGV2dCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24gKGV2dDogTW91c2VFdmVudCk6IHZvaWQge1xyXG4gICAgICBzZWxmLl9vbkRyYWdPdXQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMub24oJ3NlbGVjdCcsIHRoaXMuX29uU2VsZWN0KTtcclxuICAgIHRoaXMub24oJ2Rlc2VsZWN0JywgdGhpcy5fb25EZXNlbGVjdCk7XHJcbiAgICB0aGlzLm9uKCdhcHBlbmQnLCB0aGlzLl9vbkFwcGVuZCk7XHJcbiAgICB0aGlzLm9uKCdyZW1vdmUnLCB0aGlzLl9vblJlbW92ZSk7XHJcblxyXG4gICAgdGhpcy5kcmFnZ2FibGUgPSB0cnVlO1xyXG4gICAgdGhpcy5fZHJhZ2dpbmcgPSBmYWxzZTtcclxuICAgIHRoaXMuX2RyYWdJdGVtcyA9IFtdO1xyXG4gICAgdGhpcy5fZHJhZ092ZXIgPSBudWxsO1xyXG4gICAgdGhpcy5fZHJhZ0FyZWEgPSAnaW5zaWRlJztcclxuICAgIHRoaXMuX2V2dERyYWdNb3ZlID0gbnVsbDtcclxuICAgIHRoaXMucmVvcmRlcmluZyA9IHRydWU7XHJcbiAgICB0aGlzLmRyYWdJbnN0YW50ID0gdHJ1ZTtcclxuXHJcbiAgICB0aGlzLl9zZWxlY3RlZCA9IFtdO1xyXG5cclxuICB9XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgX2N0cmwoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gSG90a2V5cy5jdHJsO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHN0YXRpYyBfc2hpZnQoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gSG90a2V5cy5zaGlmdDtcclxuICB9XHJcblxyXG5cclxuICBwcml2YXRlIF9vbkRyYWdNb3ZlKGV2dDogTW91c2VFdmVudCk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLmRyYWdnYWJsZSlcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX2hvdmVyQ2FsY3VsYXRlKGV2dCk7XHJcbiAgICB0aGlzLmVtaXQoJ2RyYWdtb3ZlJywgZXZ0KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX2hvdmVyQ2FsY3VsYXRlKGV2dDogTW91c2VFdmVudCk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLmRyYWdnYWJsZSB8fCAhdGhpcy5fZHJhZ092ZXIpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBsZXQgcmVjdCA9IHRoaXMuZWxlbWVudERyYWcuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICBsZXQgYXJlYTogbnVtYmVyID0gTWF0aC5mbG9vcigoZXZ0LmNsaWVudFkgLSByZWN0LnRvcCkgLyByZWN0LmhlaWdodCAqIDUpO1xyXG5cclxuICAgIGxldCBvbGRBcmVhID0gdGhpcy5fZHJhZ0FyZWE7XHJcbiAgICBsZXQgb2xkRHJhZ092ZXIgPSB0aGlzLl9kcmFnT3ZlcjtcclxuXHJcbiAgICBpZiAodGhpcy5fZHJhZ092ZXIucGFyZW50ID09PSB0aGlzKSB7XHJcbiAgICAgIGxldCBwYXJlbnQgPSBmYWxzZTtcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9kcmFnSXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAodGhpcy5fZHJhZ0l0ZW1zW2ldLnBhcmVudCA9PT0gdGhpcy5fZHJhZ092ZXIpIHtcclxuICAgICAgICAgIHBhcmVudCA9IHRydWU7XHJcbiAgICAgICAgICB0aGlzLl9kcmFnT3ZlciA9IG51bGw7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKCFwYXJlbnQpXHJcbiAgICAgICAgdGhpcy5fZHJhZ0FyZWEgPSAnaW5zaWRlJztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIGNoZWNrIGlmIHdlIGFyZSB0cnlpbmcgdG8gZHJhZyBpdGVtIGluc2lkZSBhbnkgb2YgaXRzIGNoaWxkcmVuXHJcbiAgICAgIGxldCBpbnZhbGlkID0gZmFsc2U7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fZHJhZ0l0ZW1zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IHBhcmVudCA9IHRoaXMuX2RyYWdPdmVyLnBhcmVudDtcclxuICAgICAgICB3aGlsZSAocGFyZW50KSB7XHJcbiAgICAgICAgICBpZiAocGFyZW50ID09PSB0aGlzLl9kcmFnSXRlbXNbaV0pIHtcclxuICAgICAgICAgICAgaW52YWxpZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoaW52YWxpZCkge1xyXG4gICAgICAgIHRoaXMuX2RyYWdPdmVyID0gbnVsbDtcclxuICAgICAgfSBlbHNlIGlmICh0aGlzLnJlb3JkZXJpbmcgJiYgYXJlYSA8PSAxICYmIHRoaXMuX2RyYWdJdGVtcy5pbmRleE9mKHRoaXMuX2RyYWdPdmVyLnByZXYhKSA9PT0gLTEpIHtcclxuICAgICAgICB0aGlzLl9kcmFnQXJlYSA9ICdiZWZvcmUnO1xyXG4gICAgICB9IGVsc2UgaWYgKHRoaXMucmVvcmRlcmluZyAmJiBhcmVhID49IDQgJiYgdGhpcy5fZHJhZ0l0ZW1zLmluZGV4T2YodGhpcy5fZHJhZ092ZXIubmV4dCEpID09PSAtMSAmJiAodGhpcy5fZHJhZ092ZXIuX2NoaWxkcmVuID09PSAwIHx8ICF0aGlzLl9kcmFnT3Zlci5vcGVuKSkge1xyXG4gICAgICAgIHRoaXMuX2RyYWdBcmVhID0gJ2FmdGVyJztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBsZXQgcGFyZW50ID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKHRoaXMucmVvcmRlcmluZyAmJiB0aGlzLl9kcmFnT3Zlci5vcGVuKSB7XHJcbiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2RyYWdJdGVtcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fZHJhZ0l0ZW1zW2ldLnBhcmVudCA9PT0gdGhpcy5fZHJhZ092ZXIpIHtcclxuICAgICAgICAgICAgICBwYXJlbnQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIHRoaXMuX2RyYWdBcmVhID0gJ2JlZm9yZSc7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFwYXJlbnQpXHJcbiAgICAgICAgICB0aGlzLl9kcmFnQXJlYSA9ICdpbnNpZGUnO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG9sZEFyZWEgIT09IHRoaXMuX2RyYWdBcmVhIHx8IG9sZERyYWdPdmVyICE9PSB0aGlzLl9kcmFnT3ZlcilcclxuICAgICAgdGhpcy5fdXBkYXRlRHJhZ0hhbmRsZSgpO1xyXG4gIH1cclxuXHJcblxyXG4gIHB1YmxpYyBfb25JdGVtQ2xpY2soaXRlbTogVHJlZUl0ZW0pOiB2b2lkIHtcclxuICAgIGlmIChUcmVlLl9jdHJsICYmIFRyZWUuX2N0cmwoKSkge1xyXG4gICAgICAvLyDmjInkvY9jdHJs6ZSu77yM6ZKI5a+55p+Q5LiqaXRlbe+8jOaMieesrDHmrKHpgInkuK3vvIzmjInnrKwy5qyh5Y+W5raI6YCJ5LitXHJcbiAgICAgIGl0ZW0uc2VsZWN0ZWQgPSAhaXRlbS5zZWxlY3RlZDtcclxuICAgIH0gZWxzZSBpZiAoVHJlZS5fc2hpZnQgJiYgVHJlZS5fc2hpZnQoKSAmJiB0aGlzLl9zZWxlY3RlZC5sZW5ndGgpIHtcclxuICAgICAgLy8gc2hpZnTmjInkvY/ku6XlkI7vvIzlvoDkuIrlvoDkuIvpg73lj6/ov5vooYzpgInmi6nvvIzkuI3mlq3mt7vliqDpgInmi6npobnvvIzkuI3lh4/lsJFcclxuICAgICAgY29uc29sZS5sb2coJ3NoaWZ05oyJ6ZKuJylcclxuICAgICAgbGV0IGZyb206IFRyZWVJdGVtID0gdGhpcy5fc2VsZWN0ZWRbdGhpcy5fc2VsZWN0ZWQubGVuZ3RoIC0gMV07XHJcbiAgICAgIGxldCB0bzogVHJlZUl0ZW0gPSBpdGVtO1xyXG5cclxuICAgICAgbGV0IHVwOiBUcmVlSXRlbVtdID0gW107XHJcbiAgICAgIGxldCBkb3duOiBUcmVlSXRlbVtdID0gW107XHJcblxyXG4gICAgICBsZXQgcHJldiA9IGZ1bmN0aW9uIChyZWZJdGVtOiBUcmVlSXRlbSk6IE51bGxhYmxlPFRyZWVJdGVtPiB7XHJcbiAgICAgICAgaWYgKCFyZWZJdGVtKSByZXR1cm4gbnVsbDtcclxuICAgICAgICBsZXQgcmVzdWx0OiBOdWxsYWJsZTxUcmVlSXRlbT4gPSBudWxsO1xyXG4gICAgICAgIGxldCBwcmV2SXRlbSA9IHJlZkl0ZW0uZWxlbWVudCEucHJldmlvdXNFbGVtZW50U2libGluZztcclxuICAgICAgICBsZXQgaXRlbTogTnVsbGFibGU8VHJlZUl0ZW0+ID0gbnVsbDtcclxuICAgICAgICBpZiAocHJldkl0ZW0pIGl0ZW0gPSA8VHJlZUl0ZW0+KDxIVE1MRWxlbWVudD5wcmV2SXRlbSkudWk7XHJcblxyXG4gICAgICAgIGlmIChpdGVtKSB7XHJcbiAgICAgICAgICBpZiAocmVmSXRlbS5wYXJlbnQgJiYgcmVmSXRlbS5wYXJlbnQgPT09IGl0ZW0gJiYgcmVmSXRlbS5wYXJlbnQgaW5zdGFuY2VvZiBUcmVlSXRlbSkge1xyXG4gICAgICAgICAgICByZXN1bHQgPSByZWZJdGVtLnBhcmVudDtcclxuICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5vcGVuICYmIGl0ZW0uX2NoaWxkcmVuKSB7ICAvLyDmsqHmnIlvcGVu6LKM5Ly85bCx5rKh5pyJ6YCJ5LitXHJcbiAgICAgICAgICAgIC8vIGVsZW1lbnQgYWJvdmUgaXMgb3BlbiwgZmluZCBsYXN0IGF2YWlsYWJsZSBlbGVtZW50XHJcbiAgICAgICAgICAgIGxldCBsYXN0SXRlbSA9IGl0ZW0uZWxlbWVudCEubGFzdEVsZW1lbnRDaGlsZDtcclxuICAgICAgICAgICAgbGV0IGxhc3Q6IE51bGxhYmxlPFRyZWVJdGVtPiA9IG51bGw7XHJcbiAgICAgICAgICAgIGlmIChsYXN0SXRlbSAmJiAoPEhUTUxFbGVtZW50Pmxhc3RJdGVtKS51aSlcclxuICAgICAgICAgICAgICBsYXN0ID0gPFRyZWVJdGVtPig8SFRNTEVsZW1lbnQ+bGFzdEl0ZW0pLnVpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGxhc3QpIHtcclxuICAgICAgICAgICAgICBsZXQgZmluZExhc3QgPSBmdW5jdGlvbiAoaW5zaWRlOiBOdWxsYWJsZTxUcmVlSXRlbT4pIHtcclxuICAgICAgICAgICAgICAgIGlmIChpbnNpZGUgJiYgaW5zaWRlLm9wZW4gJiYgaW5zaWRlLl9jaGlsZHJlbikge1xyXG4gICAgICAgICAgICAgICAgICBpZiAoaW5zaWRlLmVsZW1lbnQhLmxhc3RFbGVtZW50Q2hpbGQgJiYgKDxIVE1MRWxlbWVudD5pbnNpZGUuZWxlbWVudCEubGFzdENoaWxkKS51aSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA8VHJlZUl0ZW0+KDxIVE1MRWxlbWVudD5pbnNpZGUuZWxlbWVudCEubGFzdENoaWxkKS51aTtcclxuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBsZXQgZm91bmQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgICAgICAgICAgICB3aGlsZSAoIWZvdW5kKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZGVlcGVyOiBOdWxsYWJsZTxUcmVlSXRlbT4gPSBmaW5kTGFzdChsYXN0KTtcclxuICAgICAgICAgICAgICAgIGlmIChkZWVwZXIpIHtcclxuICAgICAgICAgICAgICAgICAgbGFzdCA9IGRlZXBlcjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIHJlc3VsdCA9IGxhc3Q7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgcmVzdWx0ID0gaXRlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzdWx0ID0gaXRlbTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBsZXQgbmV4dCA9IGZ1bmN0aW9uIChyZWZJdGVtOiBUcmVlSXRlbSk6IE51bGxhYmxlPFRyZWVJdGVtPiB7XHJcbiAgICAgICAgbGV0IHJlc3VsdDogTnVsbGFibGU8VHJlZUl0ZW0+ID0gbnVsbDtcclxuICAgICAgICBsZXQgbmV4dEl0ZW0gPSByZWZJdGVtLmVsZW1lbnQhLm5leHRFbGVtZW50U2libGluZztcclxuICAgICAgICBsZXQgaXRlbTogTnVsbGFibGU8VHJlZUl0ZW0+ID0gbnVsbDtcclxuICAgICAgICBpZiAobmV4dEl0ZW0pIGl0ZW0gPSA8VHJlZUl0ZW0+KDxIVE1MRWxlbWVudD5uZXh0SXRlbSkudWk7XHJcblxyXG4gICAgICAgIGlmIChyZWZJdGVtLm9wZW4gJiYgcmVmSXRlbS5fY2hpbGRyZW4pIHtcclxuICAgICAgICAgIC8vIHNlbGVjdCBhIGNoaWxkXHJcbiAgICAgICAgICBsZXQgZmlyc3QgPSByZWZJdGVtLmVsZW1lbnQhLmZpcnN0RWxlbWVudENoaWxkIS5uZXh0RWxlbWVudFNpYmxpbmc7XHJcbiAgICAgICAgICBpZiAoZmlyc3QgJiYgKDxIVE1MRWxlbWVudD5maXJzdCkudWkpIHtcclxuICAgICAgICAgICAgcmVzdWx0ID0gPFRyZWVJdGVtPig8SFRNTEVsZW1lbnQ+Zmlyc3QpLnVpO1xyXG4gICAgICAgICAgfSBlbHNlIGlmIChpdGVtKSB7XHJcbiAgICAgICAgICAgIHJlc3VsdCA9IGl0ZW07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmIChpdGVtKSB7XHJcbiAgICAgICAgICAvLyBzZWxlY3QgbmV4dCBpdGVtXHJcbiAgICAgICAgICByZXN1bHQgPSBpdGVtO1xyXG4gICAgICAgIH0gZWxzZSBpZiAocmVmSXRlbS5wYXJlbnQgJiYgcmVmSXRlbS5wYXJlbnQgaW5zdGFuY2VvZiBUcmVlSXRlbSkge1xyXG4gICAgICAgICAgLy8gbm8gbmV4dCBlbGVtZW50LCBnbyB0byBwYXJlbnRcclxuICAgICAgICAgIGxldCBwYXJlbnQ6IE51bGxhYmxlPFRyZWVJdGVtPiA9IHJlZkl0ZW0ucGFyZW50O1xyXG5cclxuICAgICAgICAgIGxldCBmaW5kTmV4dCA9IGZ1bmN0aW9uIChmcm9tOiBUcmVlSXRlbSk6IE51bGxhYmxlPFRyZWVJdGVtPiB7XHJcbiAgICAgICAgICAgIGxldCBuZXh0OiBOdWxsYWJsZTxUcmVlSXRlbT4gPSBmcm9tLm5leHQ7XHJcbiAgICAgICAgICAgIGlmIChuZXh0KSB7XHJcbiAgICAgICAgICAgICAgcmVzdWx0ID0gbmV4dDtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChmcm9tLnBhcmVudCBpbnN0YW5jZW9mIFRyZWVJdGVtKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGZyb20ucGFyZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgcGFyZW50ID0gZmluZE5leHQocGFyZW50KTtcclxuICAgICAgICAgIHdoaWxlIChwYXJlbnQpIHtcclxuICAgICAgICAgICAgcGFyZW50ID0gZmluZE5leHQocGFyZW50KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBsZXQgZG9uZTogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgICBsZXQgcGF0aDogVHJlZUl0ZW1bXSA9IFtdO1xyXG4gICAgICBsZXQgbG9va1VwOiBib29sZWFuID0gdHJ1ZTtcclxuICAgICAgbGV0IGxvb2tEb3duOiBib29sZWFuID0gdHJ1ZTtcclxuICAgICAgbGV0IGxvb2tpbmdVcDogYm9vbGVhbiA9IHRydWU7XHJcbiAgICAgIC8vIFRPRE9cclxuICAgICAgd2hpbGUgKCFkb25lKSB7XHJcbiAgICAgICAgbG9va2luZ1VwID0gIWxvb2tpbmdVcDtcclxuXHJcbiAgICAgICAgbGV0IGl0ZW06IE51bGxhYmxlPFRyZWVJdGVtPiA9IG51bGw7XHJcbiAgICAgICAgbGV0IGxvb2tGcm9tOiBUcmVlSXRlbSA9IGZyb207XHJcbiAgICAgICAgaWYgKCghbG9va0Rvd24gfHwgbG9va2luZ1VwKSAmJiBsb29rVXApIHtcclxuICAgICAgICAgIC8vIHVwXHJcbiAgICAgICAgICBpZiAodXAubGVuZ3RoKVxyXG4gICAgICAgICAgICBsb29rRnJvbSA9IHVwW3VwLmxlbmd0aCAtIDFdO1xyXG5cclxuICAgICAgICAgIGl0ZW0gPSBwcmV2KGxvb2tGcm9tKTtcclxuICAgICAgICAgIGlmIChpdGVtKSB7XHJcbiAgICAgICAgICAgIHVwLnB1c2goaXRlbSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXRlbSA9PT0gdG8pIHtcclxuICAgICAgICAgICAgICBkb25lID0gdHJ1ZTtcclxuICAgICAgICAgICAgICBwYXRoID0gdXA7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxvb2tVcCA9IGZhbHNlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAobG9va0Rvd24pIHtcclxuICAgICAgICAgIC8vIGRvd25cclxuICAgICAgICAgIGlmIChkb3duLmxlbmd0aClcclxuICAgICAgICAgICAgbG9va0Zyb20gPSBkb3duW2Rvd24ubGVuZ3RoIC0gMV07XHJcblxyXG4gICAgICAgICAgaXRlbSA9IG5leHQobG9va0Zyb20pO1xyXG4gICAgICAgICAgaWYgKGl0ZW0pIHtcclxuICAgICAgICAgICAgZG93bi5wdXNoKGl0ZW0pO1xyXG5cclxuICAgICAgICAgICAgaWYgKGl0ZW0gPT09IHRvKSB7XHJcbiAgICAgICAgICAgICAgZG9uZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgcGF0aCA9IGRvd247XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxvb2tEb3duID0gZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGRvbmUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHBhdGgpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIHBhdGhbaV0uc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBsZXQgc2VsZWN0ZWQ6IGJvb2xlYW4gPSBpdGVtLnNlbGVjdGVkICYmICgodGhpcy5fc2VsZWN0ZWQuaW5kZXhPZihpdGVtKSA9PT0gLTEpIHx8ICh0aGlzLl9zZWxlY3RlZC5sZW5ndGggPT09IDEgJiYgdGhpcy5fc2VsZWN0ZWRbMF0gPT09IGl0ZW0pKTtcclxuICAgICAgdGhpcy5jbGVhcigpO1xyXG5cclxuICAgICAgaWYgKCFzZWxlY3RlZClcclxuICAgICAgICBpdGVtLnNlbGVjdGVkID0gdHJ1ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uU2VsZWN0KGl0ZW06IFRyZWVJdGVtKTogdm9pZCB7XHJcbiAgICB0aGlzLl9zZWxlY3RlZC5wdXNoKGl0ZW0pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25EZXNlbGVjdChpdGVtOiBUcmVlSXRlbSk6IHZvaWQge1xyXG4gICAgbGV0IGluZGV4OiBudW1iZXIgPSB0aGlzLl9zZWxlY3RlZC5pbmRleE9mKGl0ZW0pO1xyXG4gICAgaWYgKGluZGV4ID09PSAtMSlcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMuX3NlbGVjdGVkLnNwbGljZShpbmRleCwgMSk7XHJcbiAgfVxyXG5cclxuXHJcbiAgcHJpdmF0ZSBfb25EcmFnU3RhcnQoaXRlbTogVHJlZUl0ZW0pOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5kcmFnZ2FibGUgfHwgdGhpcy5fZHJhZ2dpbmcpXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICB0aGlzLl9kcmFnSXRlbXMgPSBbXTtcclxuXHJcbiAgICBpZiAodGhpcy5fc2VsZWN0ZWQgJiYgdGhpcy5fc2VsZWN0ZWQubGVuZ3RoID4gMSAmJiB0aGlzLl9zZWxlY3RlZC5pbmRleE9mKGl0ZW0pICE9PSAtMSkge1xyXG4gICAgICBsZXQgaXRlbXM6IFRyZWVJdGVtW10gPSBbXTtcclxuICAgICAgbGV0IGluZGV4OiB7IFtrZXk6IG51bWJlcl06IFRyZWVJdGVtIH0gPSB7fTtcclxuICAgICAgbGV0IGRlZmF1bHRMZXZlbCA9IC0xO1xyXG5cclxuICAgICAgLy8gYnVpbGQgaW5kZXhcclxuICAgICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IHRoaXMuX3NlbGVjdGVkLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgLy8gY2FudCBkcmFnIHBhcmVudFxyXG4gICAgICAgIGlmICh0aGlzLl9zZWxlY3RlZFtpXS5wYXJlbnQgPT09IHRoaXMpXHJcbiAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIHRoaXMuX3NlbGVjdGVkW2ldLl9kcmFnSWQgPSBpICsgMTtcclxuICAgICAgICBpbmRleFt0aGlzLl9zZWxlY3RlZFtpXS5fZHJhZ0lkXSA9IHRoaXMuX3NlbGVjdGVkW2ldO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgdGhpcy5fc2VsZWN0ZWQubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBsZXQgczogVHJlZUl0ZW0gPSB0aGlzLl9zZWxlY3RlZFtpXTtcclxuICAgICAgICBsZXQgbGV2ZWw6IG51bWJlciA9IDA7XHJcbiAgICAgICAgbGV0IGNoaWxkOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICAgICAgbGV0IHBhcmVudDogTnVsbGFibGU8RWxlbWVudD4gPSB0aGlzLl9zZWxlY3RlZFtpXS5wYXJlbnQ7XHJcbiAgICAgICAgaWYgKCFwYXJlbnQgfHwgIShwYXJlbnQgaW5zdGFuY2VvZiBUcmVlSXRlbSkpXHJcbiAgICAgICAgICBwYXJlbnQgPSBudWxsO1xyXG5cclxuICAgICAgICB3aGlsZSAocGFyZW50KSB7XHJcbiAgICAgICAgICBpZiAocGFyZW50Ll9kcmFnSWQgJiYgaW5kZXhbcGFyZW50Ll9kcmFnSWRdKSB7XHJcbiAgICAgICAgICAgIC8vIGNoaWxkLCB0byBiZSBpZ25vcmVkXHJcbiAgICAgICAgICAgIGNoaWxkID0gdHJ1ZTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudDtcclxuICAgICAgICAgIGlmICghKHBhcmVudCBpbnN0YW5jZW9mIFRyZWVJdGVtKSkge1xyXG4gICAgICAgICAgICBwYXJlbnQgPSBudWxsO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBsZXZlbCsrO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCFjaGlsZCkge1xyXG4gICAgICAgICAgaWYgKGRlZmF1bHRMZXZlbCA9PT0gLTEpIHtcclxuICAgICAgICAgICAgZGVmYXVsdExldmVsID0gbGV2ZWw7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKGRlZmF1bHRMZXZlbCAhPT0gbGV2ZWwpIHtcclxuICAgICAgICAgICAgLy8gbXVsdGktbGV2ZWwgZHJhZyBubyBhbGxvd2VkXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBpdGVtcy5wdXNoKHRoaXMuX3NlbGVjdGVkW2ldKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIGNsZWFuIGlkc1xyXG4gICAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgdGhpcy5fc2VsZWN0ZWQubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgdGhpcy5fc2VsZWN0ZWRbaV0uX2RyYWdJZCA9IC0xO1xyXG5cclxuICAgICAgdGhpcy5fZHJhZ0l0ZW1zID0gaXRlbXM7XHJcblxyXG4gICAgICAvLyBzb3J0IGl0ZW1zIGJ5IHRoZWlyIG51bWJlciBvZiBhcHBlcmFuY2UgaW4gaGllcmFyY2h5XHJcbiAgICAgIGlmIChpdGVtcy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgbGV0IGNvbW1vblBhcmVudDogTnVsbGFibGU8VHJlZUl0ZW0+ID0gbnVsbDtcclxuXHJcbiAgICAgICAgLy8gZmluZCBjb21tb24gcGFyZW50XHJcbiAgICAgICAgbGV0IGZpbmRDb21tb25QYXJlbnQgPSBmdW5jdGlvbiAoaXRlbXM6IFRyZWVJdGVtW10pOiBUcmVlSXRlbVtdIHtcclxuICAgICAgICAgIGxldCBwYXJlbnRzOiBUcmVlSXRlbVtdID0gW107XHJcbiAgICAgICAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGl0ZW1zW2ldLnBhcmVudCAmJiBpdGVtc1tpXS5wYXJlbnQgaW5zdGFuY2VvZiBUcmVlSXRlbSkge1xyXG4gICAgICAgICAgICAgIGlmIChwYXJlbnRzLmluZGV4T2YoPFRyZWVJdGVtPml0ZW1zW2ldLnBhcmVudCkgPT09IC0xKVxyXG4gICAgICAgICAgICAgICAgcGFyZW50cy5wdXNoKDxUcmVlSXRlbT5pdGVtc1tpXS5wYXJlbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZiAocGFyZW50cy5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICAgICAgY29tbW9uUGFyZW50ID0gcGFyZW50c1swXTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHJldHVybiBwYXJlbnRzO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgbGV0IHBhcmVudHM6IFRyZWVJdGVtW10gPSBpdGVtcztcclxuICAgICAgICB3aGlsZSAoIWNvbW1vblBhcmVudCAmJiBwYXJlbnRzKVxyXG4gICAgICAgICAgcGFyZW50cyA9IGZpbmRDb21tb25QYXJlbnQocGFyZW50cyk7XHJcblxyXG4gICAgICAgIC8vIGNhbGN1bGF0ZSBpbmQgbnVtYmVyXHJcbiAgICAgICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICBsZXQgaW5kOiBudW1iZXIgPSAwO1xyXG5cclxuICAgICAgICAgIGxldCBjb3VudENoaWxkcmVuID0gZnVuY3Rpb24gKGl0ZW06IFRyZWVJdGVtKTogbnVtYmVyIHtcclxuICAgICAgICAgICAgaWYgKCFpdGVtLl9jaGlsZHJlbikge1xyXG4gICAgICAgICAgICAgIHJldHVybiAwO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIGxldCBjb3VudDogbnVtYmVyID0gMDtcclxuICAgICAgICAgICAgICBsZXQgY2hpbGRyZW4gPSBpdGVtLmVsZW1lbnQhLmNoaWxkcmVuO1xyXG4gICAgICAgICAgICAgIGZvciAobGV0IGk6IG51bWJlciA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKCg8SFRNTEVsZW1lbnQ+Y2hpbGRyZW5baV0pLnVpICYmICg8SFRNTEVsZW1lbnQ+Y2hpbGRyZW5baV0pLnVpIGluc3RhbmNlb2YgVHJlZUl0ZW0pXHJcbiAgICAgICAgICAgICAgICAgIGNvdW50ICs9IGNvdW50Q2hpbGRyZW4oPFRyZWVJdGVtPig8SFRNTEVsZW1lbnQ+Y2hpbGRyZW5baV0pLnVpKSArIDE7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIHJldHVybiBjb3VudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICBsZXQgc2NhblVwRm9ySW5kZXggPSBmdW5jdGlvbiAoaXRlbTogVHJlZUl0ZW0pOiBOdWxsYWJsZTxUcmVlSXRlbT4ge1xyXG4gICAgICAgICAgICBpbmQrKztcclxuICAgICAgICAgICAgbGV0IHNpYmxpbmcgPSBpdGVtLmVsZW1lbnQhLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XHJcbiAgICAgICAgICAgIGxldCBzaWJsaW5nSXRlbTogTnVsbGFibGU8VHJlZUl0ZW0+ID0gbnVsbDtcclxuICAgICAgICAgICAgaWYgKHNpYmxpbmcgJiYgKDxIVE1MRWxlbWVudD5zaWJsaW5nKS51aSAmJiAoPEhUTUxFbGVtZW50PnNpYmxpbmcpLnVpIGluc3RhbmNlb2YgVHJlZUl0ZW0pIHtcclxuICAgICAgICAgICAgICBzaWJsaW5nSXRlbSA9IDxUcmVlSXRlbT4oPEhUTUxFbGVtZW50PnNpYmxpbmcpLnVpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoc2libGluZ0l0ZW0pIHtcclxuICAgICAgICAgICAgICBpbmQgKz0gY291bnRDaGlsZHJlbihzaWJsaW5nSXRlbSk7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHNpYmxpbmdJdGVtO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGl0ZW0ucGFyZW50ID09PSBjb21tb25QYXJlbnQpIHtcclxuICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBpZiAoaXRlbS5wYXJlbnQgaW5zdGFuY2VvZiBUcmVlSXRlbSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDxUcmVlSXRlbT5pdGVtLnBhcmVudDtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIGxldCBwcmV2OiBOdWxsYWJsZTxUcmVlSXRlbT4gPSBzY2FuVXBGb3JJbmRleChpdGVtc1tpXSk7XHJcbiAgICAgICAgICB3aGlsZSAocHJldilcclxuICAgICAgICAgICAgcHJldiA9IHNjYW5VcEZvckluZGV4KHByZXYpO1xyXG5cclxuICAgICAgICAgIGl0ZW1zW2ldLl9kcmFnSWQgPSBpbmQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpdGVtcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XHJcbiAgICAgICAgICByZXR1cm4gYS5fZHJhZ0lkIC0gYi5fZHJhZ0lkO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBzaW5nbGUgZHJhZ1xyXG4gICAgICB0aGlzLl9kcmFnSXRlbXMgPSBbaXRlbV07XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMuX2RyYWdJdGVtcy5sZW5ndGgpIHtcclxuICAgICAgdGhpcy5fZHJhZ2dpbmcgPSB0cnVlO1xyXG5cclxuICAgICAgdGhpcy5jbGFzcyEuYWRkKCdkcmFnZ2luZycpO1xyXG4gICAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwOyBpIDwgdGhpcy5fZHJhZ0l0ZW1zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdGhpcy5fZHJhZ0l0ZW1zW2ldLmNsYXNzIS5hZGQoJ2RyYWdnZWQnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5fdXBkYXRlRHJhZ0hhbmRsZSgpO1xyXG4gICAgICB0aGlzLmVtaXQoJ2RyYWdzdGFydCcpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25EcmFnT3ZlcihpdGVtOiBUcmVlSXRlbSwgZXZ0OiBNb3VzZUV2ZW50KTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuZHJhZ2dhYmxlIHx8ICF0aGlzLl9kcmFnZ2luZyB8fCAodGhpcy5fZHJhZ0l0ZW1zLmluZGV4T2YoaXRlbSkgIT09IC0xICYmICF0aGlzLl9kcmFnT3ZlcikgfHwgdGhpcy5fZHJhZ092ZXIgPT09IGl0ZW0pXHJcbiAgICAgIHJldHVybjtcclxuXHJcbiAgICBsZXQgZHJhZ092ZXIgPSBudWxsO1xyXG5cclxuICAgIGlmIChpdGVtLmFsbG93RHJvcCkge1xyXG4gICAgICBpZiAodGhpcy5fZHJhZ0l0ZW1zLmluZGV4T2YoaXRlbSkgPT09IC0xKVxyXG4gICAgICAgIGRyYWdPdmVyID0gaXRlbTtcclxuXHJcbiAgICAgIGlmICh0aGlzLl9kcmFnT3ZlciA9PT0gbnVsbCAmJiBkcmFnT3ZlcilcclxuICAgICAgICB0aGlzLmVtaXQoJ2RyYWdpbicpO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgdGhpcy5fZHJhZ092ZXIgPSBkcmFnT3ZlcjtcclxuXHJcbiAgICB0aGlzLl91cGRhdGVEcmFnSGFuZGxlKCk7XHJcbiAgICB0aGlzLl9vbkRyYWdNb3ZlKGV2dCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIF9vbkRyYWdFbmQoKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuZHJhZ2dhYmxlIHx8ICF0aGlzLl9kcmFnZ2luZylcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIC8vIFRPRE9cclxuICAgIGxldCByZXBhcmVudGVkSXRlbXM6IFJlcGFyZW50RHJhZ0l0ZW1zW10gPSBbXTtcclxuICAgIHRoaXMuX2RyYWdnaW5nID0gZmFsc2U7XHJcbiAgICB0aGlzLmNsYXNzIS5yZW1vdmUoJ2RyYWdnaW5nJyk7XHJcblxyXG4gICAgbGV0IGxhc3REcmFnZ2VkSXRlbTogTnVsbGFibGU8VHJlZUl0ZW0+ID0gdGhpcy5fZHJhZ092ZXI7XHJcblxyXG4gICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IHRoaXMuX2RyYWdJdGVtcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICB0aGlzLl9kcmFnSXRlbXNbaV0uY2xhc3MhLnJlbW92ZSgnZHJhZ2dlZCcpO1xyXG5cclxuICAgICAgaWYgKHRoaXMuX2RyYWdPdmVyICYmIHRoaXMuX2RyYWdPdmVyICE9PSB0aGlzLl9kcmFnSXRlbXNbaV0pIHtcclxuXHJcbiAgICAgICAgbGV0IG9sZFBhcmVudDogTnVsbGFibGU8RWxlbWVudD4gPSB0aGlzLl9kcmFnSXRlbXNbaV0ucGFyZW50O1xyXG5cclxuICAgICAgICBpZiAob2xkUGFyZW50ICE9PSB0aGlzLl9kcmFnT3ZlciB8fCB0aGlzLl9kcmFnQXJlYSAhPT0gJ2luc2lkZScpIHtcclxuICAgICAgICAgIGxldCBuZXdQYXJlbnQ6IE51bGxhYmxlPEVsZW1lbnQ+ID0gbnVsbDtcclxuXHJcbiAgICAgICAgICBpZiAodGhpcy5kcmFnSW5zdGFudCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fZHJhZ0l0ZW1zW2ldLnBhcmVudClcclxuICAgICAgICAgICAgICAoPFRyZWVJdGVtPih0aGlzLl9kcmFnSXRlbXNbaV0ucGFyZW50ISkpLnJlbW92ZSh0aGlzLl9kcmFnSXRlbXNbaV0pO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGlmICh0aGlzLl9kcmFnQXJlYSA9PT0gJ2JlZm9yZScpIHtcclxuICAgICAgICAgICAgbmV3UGFyZW50ID0gdGhpcy5fZHJhZ092ZXIucGFyZW50O1xyXG4gICAgICAgICAgICBpZiAodGhpcy5kcmFnSW5zdGFudClcclxuICAgICAgICAgICAgICAoPFRyZWVJdGVtPnRoaXMuX2RyYWdPdmVyLnBhcmVudCkuYXBwZW5kQmVmb3JlKHRoaXMuX2RyYWdJdGVtc1tpXSwgdGhpcy5fZHJhZ092ZXIpO1xyXG4gICAgICAgICAgfSBlbHNlIGlmICh0aGlzLl9kcmFnQXJlYSA9PT0gJ2luc2lkZScpIHtcclxuICAgICAgICAgICAgbmV3UGFyZW50ID0gdGhpcy5fZHJhZ092ZXI7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmRyYWdJbnN0YW50KSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5fZHJhZ092ZXIub3BlbiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgdGhpcy5fZHJhZ092ZXIuYXBwZW5kKHRoaXMuX2RyYWdJdGVtc1tpXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5fZHJhZ0FyZWEgPT09ICdhZnRlcicpIHtcclxuICAgICAgICAgICAgbmV3UGFyZW50ID0gdGhpcy5fZHJhZ092ZXIucGFyZW50O1xyXG4gICAgICAgICAgICBpZiAodGhpcy5kcmFnSW5zdGFudCkge1xyXG4gICAgICAgICAgICAgICg8VHJlZUl0ZW0+dGhpcy5fZHJhZ092ZXIucGFyZW50KS5hcHBlbmRBZnRlcih0aGlzLl9kcmFnSXRlbXNbaV0sIGxhc3REcmFnZ2VkSXRlbSEpO1xyXG4gICAgICAgICAgICAgIGxhc3REcmFnZ2VkSXRlbSA9IHRoaXMuX2RyYWdJdGVtc1tpXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIHJlcGFyZW50ZWRJdGVtcy5wdXNoKHtcclxuICAgICAgICAgICAgaXRlbTogdGhpcy5fZHJhZ0l0ZW1zW2ldLFxyXG4gICAgICAgICAgICBvbGQ6IG9sZFBhcmVudCxcclxuICAgICAgICAgICAgbmV3OiBuZXdQYXJlbnRcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZW1pdCgncmVwYXJlbnQnLCByZXBhcmVudGVkSXRlbXMpO1xyXG5cclxuICAgIHRoaXMuX2RyYWdJdGVtcyA9IFtdO1xyXG5cclxuICAgIGlmICh0aGlzLl9kcmFnT3ZlcilcclxuICAgICAgdGhpcy5fZHJhZ092ZXIgPSBudWxsO1xyXG5cclxuICAgIHRoaXMuZW1pdCgnZHJhZ2VuZCcpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25EcmFnT3V0KCk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLmRyYWdnYWJsZSB8fCAhdGhpcy5fZHJhZ2dpbmcgfHwgIXRoaXMuX2RyYWdPdmVyKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgdGhpcy5fZHJhZ092ZXIgPSBudWxsO1xyXG4gICAgdGhpcy5fdXBkYXRlRHJhZ0hhbmRsZSgpO1xyXG4gICAgdGhpcy5lbWl0KCdkcmFnb3V0Jyk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgX3VwZGF0ZURyYWdIYW5kbGUoKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuZHJhZ2dhYmxlIHx8ICF0aGlzLl9kcmFnZ2luZylcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGlmICghdGhpcy5fZHJhZ092ZXIpIHtcclxuICAgICAgdGhpcy5lbGVtZW50RHJhZy5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxldCByZWN0ID0gdGhpcy5fZHJhZ092ZXIuZWxlbWVudFRpdGxlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgICAgdGhpcy5lbGVtZW50RHJhZy5jbGFzc0xpc3QucmVtb3ZlKCdiZWZvcmUnLCAnaW5zaWRlJywgJ2FmdGVyJywgJ2hpZGRlbicpXHJcbiAgICAgIHRoaXMuZWxlbWVudERyYWcuY2xhc3NMaXN0LmFkZCh0aGlzLl9kcmFnQXJlYSk7XHJcblxyXG4gICAgICB0aGlzLmVsZW1lbnREcmFnLnN0eWxlLnRvcCA9IHJlY3QudG9wICsgJ3B4JztcclxuICAgICAgdGhpcy5lbGVtZW50RHJhZy5zdHlsZS5sZWZ0ID0gcmVjdC5sZWZ0ICsgJ3B4JztcclxuICAgICAgdGhpcy5lbGVtZW50RHJhZy5zdHlsZS53aWR0aCA9IChyZWN0LndpZHRoIC0gNCkgKyAncHgnO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfb25BcHBlbmQoaXRlbTogVHJlZUl0ZW0pOiB2b2lkIHtcclxuICAgIGl0ZW0udHJlZSA9IHRoaXM7XHJcblxyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIGl0ZW0ub24oJ2RyYWdzdGFydCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgLy8gY2FuJ3QgZHJhZyByb290ICBUT0RPXHJcbiAgICAgIGlmIChpdGVtLnBhcmVudCA9PT0gc2VsZilcclxuICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICBzZWxmLl9vbkRyYWdTdGFydChpdGVtKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGl0ZW0ub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uIChldnQ6IE1vdXNlRXZlbnQpIHtcclxuICAgICAgc2VsZi5fb25EcmFnT3ZlcihpdGVtLCBldnQpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaXRlbS5vbignZHJhZ2VuZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgc2VsZi5fb25EcmFnRW5kKCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX29uUmVtb3ZlKGl0ZW06IFRyZWVJdGVtKTogdm9pZCB7XHJcbiAgICBpdGVtLnRyZWUgPSBudWxsO1xyXG4gICAgaXRlbS51bmJpbmQoJ2RyYWdzdGFydCcpO1xyXG4gICAgaXRlbS51bmJpbmQoJ21vdXNlb3ZlcicpO1xyXG4gICAgaXRlbS51bmJpbmQoJ2RyYWdlbmQnKTtcclxuICB9XHJcblxyXG5cclxuICBwdWJsaWMgY2xlYXIoKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuX3NlbGVjdGVkLmxlbmd0aClcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGxldCBpOiBudW1iZXIgPSB0aGlzLl9zZWxlY3RlZC5sZW5ndGg7XHJcbiAgICB3aGlsZSAoaS0tKSB7XHJcbiAgICAgIHRoaXMuX3NlbGVjdGVkW2ldLnNlbGVjdGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICB0aGlzLl9zZWxlY3RlZCA9IFtdO1xyXG4gIH1cclxuXHJcblxyXG59XHJcblxyXG5cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVwYXJlbnREcmFnSXRlbXMge1xyXG4gIGl0ZW06IFRyZWVJdGVtO1xyXG4gIG9sZDogTnVsbGFibGU8RWxlbWVudD47XHJcbiAgbmV3OiBOdWxsYWJsZTxFbGVtZW50PjtcclxufSJdfQ=="}